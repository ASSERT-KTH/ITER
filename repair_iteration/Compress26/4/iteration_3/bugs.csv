bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  numToSkip  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  numToSkip  =  input.readInt();	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	14	None	replace
2	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  int  numToSkip  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  /  numToSkip;  int  numToSkip  =  input.readInt();	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	14	None	replace
3	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  int  numToSkip  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  1;  int  numToSkip  =  input.readInt();	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	14	None	replace
4	[BUG]  [BUGGY]  long  skipped  =  numToSkip  *  available;  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  *  available;  int  numToSkip  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  *  available;  int  numToSkip  =  input.readInt();	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	14	None	replace
5	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  long  skipped  =  available  +  numToSkip  +  1;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  long  skipped  =  available  +  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    1;    long  skipped  =  available  +  numToSkip  +  1;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	73	None	add
6	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  Long  skipped  =  available  +  numToSkip  +  1;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  Long  skipped  =  available  +  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    1;    Long  skipped  =  available  +  numToSkip  +  1;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	73	None	add
7	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  long  numToSkip  =  available  +  numToSkip  +  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  long  numToSkip  =  available  +  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    1;    long  numToSkip  =  available  +  numToSkip  +  1;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	73	None	add
8	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  int  numToSkip  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    1;    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	73	None	add
9	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  int  numToSkip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    1;    int  numToSkip  =  input.read();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	73	None	add
10	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  long  available  =  available  +  numToSkip  +  1;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  long  available  =  available  +  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    1;    long  available  =  available  +  numToSkip  +  1;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	73	None	add
11	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  long  skipd  =  available  +  numToSkip  +  1;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  long  skipd  =  available  +  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    1;    long  skipd  =  available  +  numToSkip  +  1;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	73	None	add
12	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  int  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  int  numToSkip  =  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    1;    int  numToSkip  =  input.readLine();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	73	None	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	Long  skipped  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    Long    skipped    =    input.skip(available    -    numToSkip);    	compilable	  [FE]  AssertionError  	2	3	replace
14	[BUG]  [BUGGY]  Long  skipped  =  input.skip(available  -  numToSkip);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    Long    skipped    =    input.skip(available    -    numToSkip);    	compilable	  [FE]  AssertionError  	2	3	replace
15	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available  -  numToSkip);  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    Long    skipped    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  incompatible  types	2	None	replace
16	[BUG]  [BUGGY]  long  skipped  =  numToSkip  +  input.availableToSkip;  [CE]  cannot  find  symbol  availableToSkip  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  +  input.availableToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  +  input.availableToSkip;	  long    skipped    =    input.availableToSkip    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  availableToSkip	58	None	replace
17	[BUG]  [BUGGY]  long  skipped  =  input.availableToSkip  /  numToSkip;  [CE]  cannot  find  symbol  availableToSkip  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.availableToSkip  /  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.availableToSkip  /  numToSkip;	  long    skipped    =    input.availableToSkip    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  availableToSkip	58	None	replace
18	[BUG]  [BUGGY]  long  skipped  =  input.availableToSkip  *  numToSkip;  [CE]  cannot  find  symbol  availableToSkip  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.availableToSkip  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.availableToSkip  *  numToSkip;	  long    skipped    =    input.availableToSkip    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  availableToSkip	58	None	replace
19	[BUG]  [BUGGY]  long  skipped  =  this.availableToSkip  +  numToSkip;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  this.availableToSkip  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  this.availableToSkip  +  numToSkip;	  long    skipped    =    input.availableToSkip    +    numToSkip;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	58	None	replace
20	[BUG]  [BUGGY]  int  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);	  long    skipped    =    input.skip(available,    numToSkip,    SKIP_BUF_SIZE);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	93	None	replace
21	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE,  buffersize);  [CE]  cannot  find  symbol  buffersize  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE,  buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE,  buffersize);	  long    skipped    =    input.skip(available,    numToSkip,    SKIP_BUF_SIZE);    	non-compiled	[CE]  cannot  find  symbol  buffersize	93	None	replace
22	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);	  long    skipped    =    input.skip(available,    numToSkip,    SKIP_BUF_SIZE);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	93	None	replace
23	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  buffersize,  SKIP_BUF_SIZE);  [CE]  cannot  find  symbol  buffersize  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  buffersize,  SKIP_BUF_SIZE);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  buffersize,  SKIP_BUF_SIZE);	  long    skipped    =    input.skip(available,    numToSkip,    SKIP_BUF_SIZE);    	non-compiled	[CE]  cannot  find  symbol  buffersize	93	None	replace
24	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  0,  SKIP_BUF_SIZE);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  0,  SKIP_BUF_SIZE);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  0,  SKIP_BUF_SIZE);	  long    skipped    =    input.skip(available,    numToSkip,    SKIP_BUF_SIZE);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	93	None	replace
25	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip,  available,  SKIP_BUF_SIZE);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(numToSkip,  available,  SKIP_BUF_SIZE);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(numToSkip,  available,  SKIP_BUF_SIZE);	  long    skipped    =    input.skip(available,    numToSkip,    SKIP_BUF_SIZE);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	93	None	replace
26	[BUG]  [BUGGY]  long  skipped  =  SKIP_BUF_SIZE.skip(input,  numToSkip,  numToSkip);  [CE]  int  cannot  be  dereferenced  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  SKIP_BUF_SIZE.skip(input,  numToSkip,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  SKIP_BUF_SIZE.skip(input,  numToSkip,  numToSkip);	  long    skipped    =    input.skip(available,    numToSkip,    SKIP_BUF_SIZE);    	non-compiled	[CE]  int  cannot  be  dereferenced	93	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  *  numToSkip  +  1);	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    -    numToSkip    +    1);    	compilable	  [FE]  AssertionError  	157	3	replace
28	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip  +  1);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  *  numToSkip  +  1);	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    -    numToSkip    +    1);    	compilable	  [FE]  AssertionError  	157	3	replace
29	[BUG]  [BUGGY]  InputStream  input  =  input.readLine();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readLine();	  long    skipped    =    input.skip(available);    InputStream    input    =    input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	134	None	replace
30	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();	  long    skipped    =    input.skip(available);    InputStream    input    =    input.readLine();    	non-compiled	[CE]  possible  loss  of  precision	134	None	replace
31	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  InputStream  input  =  input.readLine();  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  InputStream  input  =  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip);  InputStream  input  =  input.readLine();	  long    skipped    =    input.skip(available);    InputStream    input    =    input.readLine();    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	134	None	replace
32	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip);  InputStream  input  =  input.readLine();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(numToSkip);  InputStream  input  =  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(numToSkip);  InputStream  input  =  input.readLine();	  long    skipped    =    input.skip(available);    InputStream    input    =    input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	134	None	replace
33	[BUG]  [BUGGY]  int  skipped  =  available  +  numToSkip;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    skipped    =    available    +    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	32	None	replace
34	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.length  -  1;  [CE]  cannot  find  symbol  length  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.length  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.length  -  1;	  long    skipped    =    available    *    numToSkip    +    input.length;    	non-compiled	[CE]  cannot  find  symbol  length	138	None	replace
35	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.length  +  1;  [CE]  cannot  find  symbol  length  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.length  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.length  +  1;	  long    skipped    =    available    *    numToSkip    +    input.length;    	non-compiled	[CE]  cannot  find  symbol  length	138	None	replace
36	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.size;  [CE]  cannot  find  symbol  size  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.size;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.size;	  long    skipped    =    available    *    numToSkip    +    input.length;    	non-compiled	[CE]  cannot  find  symbol  size	138	None	replace
37	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getCharset();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getCharset();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.getCharset();	  long    skipped    =    available    *    numToSkip    +    input.length;    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
38	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip  +  input.length;  [CE]  cannot  find  symbol  length  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip  +  input.length;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip  +  input.length;	  long    skipped    =    available    *    numToSkip    +    input.length;    	non-compiled	[CE]  cannot  find  symbol  length	138	None	replace
39	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getCharsCount();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getCharsCount();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.getCharsCount();	  long    skipped    =    available    *    numToSkip    +    input.length;    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
40	[BUG]  [BUGGY]  long  numToSkip  =  available  +  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  numToSkip  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  numToSkip  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    numToSkip    =    available    +    numToSkip;    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	127	None	replace
41	[BUG]  [BUGGY]  int  skipped  =  available  +  numToSkip;  int  numToSkip  =  available  +  numToSkip;  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  +  numToSkip;  int  numToSkip  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  +  numToSkip;  int  numToSkip  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    numToSkip    =    available    +    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	127	None	replace
42	[BUG]  [BUGGY]  int  skipped  =  available  +  numToSkip;  long  numToSkip  =  available  +  numToSkip;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  +  numToSkip;  long  numToSkip  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  +  numToSkip;  long  numToSkip  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    numToSkip    =    available    +    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	127	None	replace
43	[BUG]  [BUGGY]  short  skipped  =  available  +  numToSkip;  long  numToSkip  =  available  +  numToSkip;  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  short  skipped  =  available  +  numToSkip;  long  numToSkip  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	short  skipped  =  available  +  numToSkip;  long  numToSkip  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    numToSkip    =    available    +    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	127	None	replace
44	[BUG]  [BUGGY]  long  numToSkip  =  available  *  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  numToSkip  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  numToSkip  =  available  *  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    numToSkip    =    available    +    numToSkip;    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	127	None	replace
45	[BUG]  [BUGGY]  long  numToSkip  =  available  +  numToSkip.longValue();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  numToSkip  =  available  +  numToSkip.longValue();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  numToSkip  =  available  +  numToSkip.longValue();	  long    skipped    =    available    +    numToSkip;    long    numToSkip    =    available    +    numToSkip;    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	127	None	replace
46	[BUG]  [BUGGY]  int  skipped  =  available.read();  [CE]  long  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available.read();	  int    skipped    =    input.read();    	non-compiled	[CE]  long  cannot  be  dereferenced	102	None	replace
47	[BUG]  [BUGGY]  int  skipped  =  input.readFully(available);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.readFully(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.readFully(available);	  int    skipped    =    input.read();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
48	[BUG]  [BUGGY]  int  skipped  =  input.readFully(numToSkip);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.readFully(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.readFully(numToSkip);	  int    skipped    =    input.read();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
49	[BUG]  [BUGGY]  int  skipped  =  input.read(available,  numToSkip);  [CE]  no  suitable  method  found  for  read(long,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read(available,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.read(available,  numToSkip);	  int    skipped    =    input.read();    	non-compiled	[CE]  no  suitable  method  found  for  read(long,long)	102	None	replace
50	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	Long  skipped  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    Long    skipped    =    available    *    numToSkip;    	compilable	  [FE]  AssertionError  	10	3	replace
51	[BUG]  [BUGGY]  Long  skipped  =  available  *  numToSkip;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    Long    skipped    =    available    *    numToSkip;    	compilable	  [FE]  AssertionError  	10	3	replace
52	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip;  Long  skipped  =  available  *  numToSkip;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip;  Long  skipped  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip;  Long  skipped  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    Long    skipped    =    available    *    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
53	[BUG]  [BUGGY]  Integer  skipped  =  available  *  numToSkip;  Long  skipped  =  available  *  numToSkip;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  available  *  numToSkip;  Long  skipped  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  available  *  numToSkip;  Long  skipped  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    Long    skipped    =    available    *    numToSkip;    	non-compiled	[CE]  incompatible  types	10	None	replace
54	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0);  Long  available  =  input.skip(available  -  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0);  Long  available  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip,  0);  Long  available  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    Long    available    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	120	None	replace
55	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  Long  available  =  input.skip(available  -  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  Long  available  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip  +  1);  Long  available  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    Long    available    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	120	None	replace
56	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  Long  available  =  input.skip(available  -  numToSkip,  skipped);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  Long  available  =  input.skip(available  -  numToSkip,  skipped);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  Long  available  =  input.skip(available  -  numToSkip,  skipped);	  long    skipped    =    input.skip(available    -    numToSkip);    Long    available    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	120	None	replace
57	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available  -  numToSkip);  Long  available  =  input.skip(available  -  numToSkip);  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available  -  numToSkip);  Long  available  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available  -  numToSkip);  Long  available  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    Long    available    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  incompatible  types	120	None	replace
58	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  Long  available  =  input.skip(available  -  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  Long  available  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip)+  1;  Long  available  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    Long    available    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	120	None	replace
59	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip).longValue();  [CE]  long  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip).longValue();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip).longValue();	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    -    numToSkip).longValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	6	None	replace
60	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0).longValue();  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0).longValue();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip,  0).longValue();	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    -    numToSkip).longValue();    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	6	None	replace
61	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip).longValue();  [CE]  long  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip).longValue();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  *  numToSkip).longValue();	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    -    numToSkip).longValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	6	None	replace
62	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip).longValue();  [CE]  long  cannot  be  dereferenced  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip).longValue();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip).longValue();	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    -    numToSkip).longValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	6	None	replace
63	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(numToSkip,  0);	  long    skipped    =    available.skip(numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	85	None	replace
64	[BUG]  [BUGGY]  long  skipped  =  available.skip(numToSkip,  0,  numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skip(numToSkip,  0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(numToSkip,  0,  numToSkip);	  long    skipped    =    available.skip(numToSkip,    0);    	non-compiled	[CE]  long  cannot  be  dereferenced	85	None	replace
65	[BUG]  [BUGGY]  long  skipped  =  numToSkip.skip(available,  0);  [CE]  long  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip.skip(available,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip.skip(available,  0);	  long    skipped    =    available.skip(numToSkip,    0);    	non-compiled	[CE]  long  cannot  be  dereferenced	85	None	replace
66	[BUG]  [BUGGY]  int  skipped  =  available.skip(numToSkip,  0);  [CE]  long  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available.skip(numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available.skip(numToSkip,  0);	  long    skipped    =    available.skip(numToSkip,    0);    	non-compiled	[CE]  long  cannot  be  dereferenced	85	None	replace
67	[BUG]  [BUGGY]  long  skipped  =  available.skip(numToSkip,  -1);  [CE]  long  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skip(numToSkip,  -1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(numToSkip,  -1);	  long    skipped    =    available.skip(numToSkip,    0);    	non-compiled	[CE]  long  cannot  be  dereferenced	85	None	replace
68	[BUG]  [BUGGY]  int  skipped  =  input.skip(available,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available,  0);	  long    skipped    =    input.skip(available,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	164	None	replace
69	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  0,  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  0,  numToSkip);	  long    skipped    =    input.skip(available,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	164	None	replace
70	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available,  0);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(available,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available,  0);	  long    skipped    =    input.skip(available,    0);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	164	None	replace
71	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available,  0);	  long    skipped    =    input.skip(available,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	164	None	replace
72	[BUG]  [BUGGY]  long  skip  =  available  *  numToSkip;  [CE]  cannot  find  symbol  skipped  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skip  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skip  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    skip    =    available    *    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  skipped	153	None	replace
73	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip;  long  skip  =  available  *  numToSkip;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip;  long  skip  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip;  long  skip  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    skip    =    available    *    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	153	None	replace
74	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  skip  =  available  *  numToSkip;  [CE]  cannot  find  symbol  skip  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip;  skip  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;  skip  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    skip    =    available    *    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  skip	153	None	replace
75	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip;  short  skip  =  available  *  numToSkip;  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip;  short  skip  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip;  short  skip  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    skip    =    available    *    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	153	None	replace
76	[BUG]  [BUGGY]  InputStream  in  =  this.input.readInput();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  this.input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  this.input.readInput();	  InputStream    in    =    input.readInput();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	104	None	replace
77	[BUG]  [BUGGY]  InputStream  in  =  input.readInput(),  numToSkip;  [CE]  cannot  find  symbol  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  input.readInput(),  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input.readInput(),  numToSkip;	  InputStream    in    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
78	[BUG]  [BUGGY]  InputStream  in  =  input.readInput(numToSkip);  [CE]  cannot  find  symbol  [FE]                                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  input.readInput(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input.readInput(numToSkip);	  InputStream    in    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
79	[BUG]  [BUGGY]  InputStream  in  =  input.readInput(this.buffer,  numToSkip);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  input.readInput(this.buffer,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input.readInput(this.buffer,  numToSkip);	  InputStream    in    =    input.readInput();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	104	None	replace
80	[BUG]  [BUGGY]  InputStream  in  =  input.readInput()  &  0xff;  [CE]  cannot  find  symbol  [FE]                                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  input.readInput()  &  0xff;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input.readInput()  &  0xff;	  InputStream    in    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
81	[BUG]  [BUGGY]  int  numToSkip  =  input.skip(available  -  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  numToSkip  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  numToSkip  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    numToSkip    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	3	None	replace
82	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0);  int  numToSkip  =  input.skip(available  -  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0);  int  numToSkip  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip,  0);  int  numToSkip  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    numToSkip    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	3	None	replace
83	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  int  numToSkip  =  input.skip(available  -  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  int  numToSkip  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip)+  1;  int  numToSkip  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    numToSkip    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	3	None	replace
84	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.skip(available  -  numToSkip  +  1);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.skip(available  -  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.skip(available  -  numToSkip  +  1);	  long    skipped    =    input.skip(available    -    numToSkip);    int    numToSkip    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	3	None	replace
85	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.skip(available  -  numToSkip,  skipped);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.skip(available  -  numToSkip,  skipped);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.skip(available  -  numToSkip,  skipped);	  long    skipped    =    input.skip(available    -    numToSkip);    int    numToSkip    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	3	None	replace
86	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  int  numToSkip  =  input.skip(available  -  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  int  numToSkip  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip  +  1);  int  numToSkip  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    numToSkip    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	3	None	replace
87	[BUG]  [BUGGY]  boolean  skipped  =  input.skip(available);  [CE]  incompatible  types  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  boolean  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	boolean  skipped  =  input.skip(available);	  boolean    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  incompatible  types	29	None	replace
88	[BUG]  [BUGGY]  boolean  skipped  =  input.skip(available,  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  boolean  skipped  =  input.skip(available,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	boolean  skipped  =  input.skip(available,  numToSkip);	  boolean    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	29	None	replace
89	[BUG]  [BUGGY]  boolean  skipped  =  input.skip(numToSkip,  available);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  boolean  skipped  =  input.skip(numToSkip,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	boolean  skipped  =  input.skip(numToSkip,  available);	  boolean    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	29	None	replace
90	[BUG]  [BUGGY]  Boolean  skipped  =  input.skip(available);  [CE]  incompatible  types  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Boolean  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Boolean  skipped  =  input.skip(available);	  boolean    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  incompatible  types	29	None	replace
91	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  +  numToSkip,  0);	  long    skipped    =    input.skip(available    +    numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	53	None	replace
92	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip,  0,  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip,  0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip,  0,  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	53	None	replace
93	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  /  numToSkip,  0);	  long    skipped    =    input.skip(available    +    numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	53	None	replace
94	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  *  numToSkip,  0);	  long    skipped    =    input.skip(available    +    numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	53	None	replace
95	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available  +  numToSkip,  0);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(available  +  numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available  +  numToSkip,  0);	  long    skipped    =    input.skip(available    +    numToSkip,    0);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	53	None	replace
96	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip,  0,  available);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip,  0,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip,  0,  available);	  long    skipped    =    input.skip(available    +    numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	53	None	replace
97	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  long  skipped  =  input.skip(available  -  numToSkip)+  1;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  long  skipped  =  input.skip(available  -  numToSkip)+  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip)+    1;    long  skipped  =  input.skip(available  -  numToSkip)+  1;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	82	None	add
98	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  Long  skipped  =  input.skip(available  -  numToSkip)+  1;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  Long  skipped  =  input.skip(available  -  numToSkip)+  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip)+    1;    Long  skipped  =  input.skip(available  -  numToSkip)+  1;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	82	None	add
99	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  int  numToSkip  =  input.skip(available  -  numToSkip)+  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  int  numToSkip  =  input.skip(available  -  numToSkip)+  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip)+    1;    int  numToSkip  =  input.skip(available  -  numToSkip)+  1;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	82	None	add
100	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  int  available  =  input.skip(available  -  numToSkip)+  1;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  int  available  =  input.skip(available  -  numToSkip)+  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip)+    1;    int  available  =  input.skip(available  -  numToSkip)+  1;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	82	None	add
101	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  short  skipped  =  input.skip(available  -  numToSkip)+  1;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  short  skipped  =  input.skip(available  -  numToSkip)+  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip)+    1;    short  skipped  =  input.skip(available  -  numToSkip)+  1;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	82	None	add
102	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  int  available  =  input.read(available  -  numToSkip)+  1;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  int  available  =  input.read(available  -  numToSkip)+  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip)+    1;    int  available  =  input.read(available  -  numToSkip)+  1;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	82	None	add
103	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  long  skipped  =  input.skip(available  +  numToSkip)+  1;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  long  skipped  =  input.skip(available  +  numToSkip)+  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip)+    1;    long  skipped  =  input.skip(available  +  numToSkip)+  1;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	82	None	add
104	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  long  skipped  =  available  *  numToSkip  -  1;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  long  skipped  =  available  *  numToSkip  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    -    1;    long  skipped  =  available  *  numToSkip  -  1;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	155	None	add
105	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  Long  skipped  =  available  *  numToSkip  -  1;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  Long  skipped  =  available  *  numToSkip  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    -    1;    Long  skipped  =  available  *  numToSkip  -  1;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	155	None	add
106	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  int  numToSkip  =  available  *  numToSkip  -  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  int  numToSkip  =  available  *  numToSkip  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    -    1;    int  numToSkip  =  available  *  numToSkip  -  1;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	155	None	add
107	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  long  skipd  =  available  *  numToSkip  -  1;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  long  skipd  =  available  *  numToSkip  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    -    1;    long  skipd  =  available  *  numToSkip  -  1;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	155	None	add
108	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  int  skipped  =  available  *  numToSkip  -  1;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  int  skipped  =  available  *  numToSkip  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    -    1;    int  skipped  =  available  *  numToSkip  -  1;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	155	None	add
109	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  long  available  =  available  *  numToSkip  -  1;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  long  available  =  available  *  numToSkip  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    -    1;    long  available  =  available  *  numToSkip  -  1;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	155	None	add
110	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  int  numToSkip  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    -    1;    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	155	None	add
111	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  int  numToSkip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    -    1;    int  numToSkip  =  input.read();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	155	None	add
112	[BUG]  [BUGGY]  int  skipped  =  available  /  numToSkip;  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  /  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  /  numToSkip;	  long    skipped    =    available    *    numToSkip;    int    skipped    =    available    *    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	13	None	replace
113	[BUG]  [BUGGY]  Integer  skipped  =  available  *  numToSkip;  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    int    skipped    =    available    *    numToSkip;    	non-compiled	[CE]  incompatible  types	13	None	replace
114	[BUG]  [BUGGY]  double  skipped  =  input.skip(numToSkip);  double  skipped  =  input.skip(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skip(numToSkip);  double  skipped  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double    skipped    =    input.skip(numToSkip);    double  skipped  =  input.skip(numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	25	None	add
115	[BUG]  [BUGGY]  double  skipped  =  input.skip(numToSkip);  long  skipped  =  input.skip(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skip(numToSkip);  long  skipped  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double    skipped    =    input.skip(numToSkip);    long  skipped  =  input.skip(numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	25	None	add
116	[BUG]  [BUGGY]  double  skipped  =  input.skip(numToSkip);  Double  skipped  =  input.skip(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skip(numToSkip);  Double  skipped  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double    skipped    =    input.skip(numToSkip);    Double  skipped  =  input.skip(numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	25	None	add
117	[BUG]  [BUGGY]  double  skipped  =  input.skip(numToSkip);  int  skipped  =  input.skip(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skip(numToSkip);  int  skipped  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double    skipped    =    input.skip(numToSkip);    int  skipped  =  input.skip(numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	25	None	add
118	[BUG]  [BUGGY]  double  skipped  =  input.skip(numToSkip);  double  skip  =  input.skip(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skip(numToSkip);  double  skip  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double    skipped    =    input.skip(numToSkip);    double  skip  =  input.skip(numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	25	None	add
119	[BUG]  [BUGGY]  double  skipped  =  input.skip(numToSkip);  double  skipped  =  input.skip(numToSkip).doubleValue();  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skip(numToSkip);  double  skipped  =  input.skip(numToSkip).doubleValue();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double    skipped    =    input.skip(numToSkip);    double  skipped  =  input.skip(numToSkip).doubleValue();	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	25	None	add
120	[BUG]  [BUGGY]  double  skipped  =  input.skip(numToSkip);  double  skipped  =  input.skip(numToSkip).longValue();  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skip(numToSkip);  double  skipped  =  input.skip(numToSkip).longValue();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double    skipped    =    input.skip(numToSkip);    double  skipped  =  input.skip(numToSkip).longValue();	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	25	None	add
121	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  *  numToSkip;  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    numToSkip    =    available    *    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	106	None	replace
122	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip;  long  numToSkip  =  available  *  numToSkip;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip;  long  numToSkip  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip;  long  numToSkip  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    numToSkip    =    available    *    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	106	None	replace
123	[BUG]  [BUGGY]  Long  skipped  =  available  *  numToSkip;  long  numToSkip  =  available  *  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  available  *  numToSkip;  long  numToSkip  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  available  *  numToSkip;  long  numToSkip  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    numToSkip    =    available    *    numToSkip;    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	106	None	replace
124	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip;  InputStream  input  =  input.readInt();  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip;  InputStream  input  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip;  InputStream  input  =  input.readInt();	  long    skipped    =    available    *    numToSkip;    InputStream    input    =    input.readInt();    	non-compiled	[CE]  possible  loss  of  precision	107	None	replace
125	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  InputStream  input  =  input.readInt();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  InputStream  input  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  /  numToSkip;  InputStream  input  =  input.readInt();	  long    skipped    =    available    *    numToSkip;    InputStream    input    =    input.readInt();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	107	None	replace
126	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  InputStream  input  =  input.readInt();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  InputStream  input  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  1;  InputStream  input  =  input.readInt();	  long    skipped    =    available    *    numToSkip;    InputStream    input    =    input.readInt();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	107	None	replace
127	[BUG]  [BUGGY]  InputStream  input  =  this.inputStream.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  this.inputStream.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  this.inputStream.readInput();	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	97	None	replace
128	[BUG]  [BUGGY]  InputStream  input  =  this.available.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  this.available.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  this.available.readInput();	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	97	None	replace
129	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  this.input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  this.input.readInput();	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	97	None	replace
130	[BUG]  [BUGGY]  InputStream  input  =  getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  getInputStream();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  getInputStream();	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	97	None	replace
131	[BUG]  [BUGGY]  InputStream  input  =  available.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  available.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  available.readInput();	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	97	None	replace
132	[BUG]  [BUGGY]  InputStream  input  =  outputStream.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  outputStream.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  outputStream.readInput();	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	97	None	replace
133	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	double  skipped  =  input.skip(available  -  numToSkip);	  int    skipped    =    input.skip(available    -    numToSkip);    	compilable	  [FE]  AssertionError  	131	3	replace
134	[BUG]  [BUGGY]  double  skipped  =  input.skip(available  -  numToSkip);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double  skipped  =  input.skip(available  -  numToSkip);	  int    skipped    =    input.skip(available    -    numToSkip);    	compilable	  [FE]  AssertionError  	131	3	replace
135	[BUG]  [BUGGY]  boolean  skipped  =  input.skip(available  -  numToSkip);  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  boolean  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	boolean  skipped  =  input.skip(available  -  numToSkip);	  int    skipped    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  incompatible  types	131	None	replace
136	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	float  skipped  =  input.skip(available  -  numToSkip);	  int    skipped    =    input.skip(available    -    numToSkip);    	compilable	  [FE]  AssertionError  	131	3	replace
137	[BUG]  [BUGGY]  float  skipped  =  input.skip(available  -  numToSkip);  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float  skipped  =  input.skip(available  -  numToSkip);	  int    skipped    =    input.skip(available    -    numToSkip);    	compilable	  [FE]  AssertionError  	131	3	replace
138	[BUG]  [BUGGY]  char  skipped  =  input.skip(available  -  numToSkip);  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  char  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	char  skipped  =  input.skip(available  -  numToSkip);	  int    skipped    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	131	None	replace
139	[BUG]  [BUGGY]  double  skipped  =  available.skip(numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  available.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double  skipped  =  available.skip(numToSkip);	  double    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	26	None	replace
140	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	double  skipped  =  input.skip(available);	  double    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	26	2	replace
141	[BUG]  [BUGGY]  double  skipped  =  input.skip(available);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double  skipped  =  input.skip(available);	  double    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	26	2	replace
142	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	double  skipped  =  available  *  numToSkip;	  double    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	26	3	replace
143	[BUG]  [BUGGY]  double  skipped  =  available  *  numToSkip;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double  skipped  =  available  *  numToSkip;	  double    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	26	3	replace
144	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	double  skipped  =  available  +  numToSkip;	  double    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	26	3	replace
145	[BUG]  [BUGGY]  double  skipped  =  available  +  numToSkip;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double  skipped  =  available  +  numToSkip;	  double    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	26	3	replace
146	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  available  -  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	double  skipped  =  available  -  numToSkip;	  double    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	26	3	replace
147	[BUG]  [BUGGY]  double  skipped  =  available  -  numToSkip;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  available  -  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double  skipped  =  available  -  numToSkip;	  double    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	26	3	replace
148	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip  +  1;  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip  +  1;	  int    skipped    =    available    *    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	48	None	replace
149	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	float  skipped  =  available  *  numToSkip;	  int    skipped    =    available    *    numToSkip;    	compilable	  [FE]  AssertionError  	48	3	replace
150	[BUG]  [BUGGY]  float  skipped  =  available  *  numToSkip;  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float  skipped  =  available  *  numToSkip;	  int    skipped    =    available    *    numToSkip;    	compilable	  [FE]  AssertionError  	48	3	replace
151	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0);  long  available  =  input.skip(available  -  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0);  long  available  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip,  0);  long  available  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    long    available    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	119	None	replace
152	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  long  available  =  input.skip(available  -  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  long  available  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip)+  1;  long  available  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    long    available    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	119	None	replace
153	[BUG]  [BUGGY]  long  available  =  input.skip(available  -  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  available  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  available  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    long    available    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	119	None	replace
154	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  long  skipped  =  input.skip(available);  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  long  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  long  skipped  =  input.skip(available);	  long    skipped    =    input.skip(available);    long    skipped    =    input.skip(available);    	non-compiled	[CE]  possible  loss  of  precision	17	None	replace
155	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  *  numToSkip  *  numToSkip;	  long    skipped    =    available    +    numToSkip    *    numToSkip;    	compilable	  [FE]  AssertionError  	76	3	replace
156	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  *  numToSkip;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  *  numToSkip;	  long    skipped    =    available    +    numToSkip    *    numToSkip;    	compilable	  [FE]  AssertionError  	76	3	replace
157	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  +  numToSkip  *  numToSkip  +  1;	  long    skipped    =    available    +    numToSkip    *    numToSkip;    	compilable	  [FE]  AssertionError  	76	3	replace
158	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip  *  numToSkip  +  1;	  long    skipped    =    available    +    numToSkip    *    numToSkip;    	compilable	  [FE]  AssertionError  	76	3	replace
159	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  /  numToSkip  *  numToSkip;	  long    skipped    =    available    +    numToSkip    *    numToSkip;    	compilable	  [FE]  AssertionError  	76	3	replace
160	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip  *  numToSkip;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  /  numToSkip  *  numToSkip;	  long    skipped    =    available    +    numToSkip    *    numToSkip;    	compilable	  [FE]  AssertionError  	76	3	replace
161	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  -  numToSkip  *  numToSkip;	  long    skipped    =    available    +    numToSkip    *    numToSkip;    	compilable	  [FE]  AssertionError  	76	3	replace
162	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip  *  numToSkip;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  -  numToSkip  *  numToSkip;	  long    skipped    =    available    +    numToSkip    *    numToSkip;    	compilable	  [FE]  AssertionError  	76	3	replace
163	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  *  numToSkip  +  numToSkip;	  long    skipped    =    available    +    numToSkip    *    numToSkip;    	compilable	  [FE]  AssertionError  	76	3	replace
164	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  numToSkip;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  numToSkip;	  long    skipped    =    available    +    numToSkip    *    numToSkip;    	compilable	  [FE]  AssertionError  	76	3	replace
165	[BUG]  [BUGGY]  short  skipped  =  input.skip(available  +  numToSkip);  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  short  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	short  skipped  =  input.skip(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    long    skipped    =    input.skip(available    *    numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	149	None	replace
166	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	float  skipped  =  input.skip(available);	  float    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	28	2	replace
167	[BUG]  [BUGGY]  float  skipped  =  input.skip(available);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float  skipped  =  input.skip(available);	  float    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	28	2	replace
168	[BUG]  [BUGGY]  float  skipped  =  available.skip(numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  available.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float  skipped  =  available.skip(numToSkip);	  float    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	28	None	replace
169	[BUG]  [BUGGY]  float  skipped  =  input.skipToSkip(available);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skipToSkip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float  skipped  =  input.skipToSkip(available);	  float    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
170	[BUG]  [BUGGY]  InputStream  skipped  =  input.readInt()  -  numToSkip;  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.readInt()  -  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.readInt()  -  numToSkip;	  InputStream    skipped    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
171	[BUG]  [BUGGY]  InputStream  skipped  =  input.readInt(numToSkip);  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.readInt(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.readInt(numToSkip);	  InputStream    skipped    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
172	[BUG]  [BUGGY]  InputStream  skipped  =  this.input.readInt();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  this.input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  this.input.readInt();	  InputStream    skipped    =    input.readInt();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	144	None	replace
173	[BUG]  [BUGGY]  InputStream  skipped  =  input.readInt()  -  1;  [CE]  cannot  find  symbol  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.readInt()  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.readInt()  -  1;	  InputStream    skipped    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
174	[BUG]  [BUGGY]  InputStream  skipped  =  input.readInt(),  numToSkip;  [CE]  cannot  find  symbol  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.readInt(),  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.readInt(),  numToSkip;	  InputStream    skipped    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
175	[BUG]  [BUGGY]  InputStream  skipped  =  input.readInt(available);  [CE]  cannot  find  symbol  [FE]                                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.readInt(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.readInt(available);	  InputStream    skipped    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
176	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0,  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip,  0,  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	81	None	replace
177	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  -  numToSkip,  0);	  long    skipped    =    input.skip(available    -    numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	81	None	replace
178	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available  -  numToSkip,  0);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(available  -  numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available  -  numToSkip,  0);	  long    skipped    =    input.skip(available    -    numToSkip,    0);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	81	None	replace
179	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  1);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip,  1);	  long    skipped    =    input.skip(available    -    numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	81	None	replace
180	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0,  available);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip,  0,  available);	  long    skipped    =    input.skip(available    -    numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	81	None	replace
181	[BUG]  [BUGGY]  long  skip  =  input.skip(available  +  numToSkip);  [CE]  cannot  find  symbol  skipped  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skip  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skip  =  input.skip(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    long    skip    =    input.skip(available    +    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  skipped	148	None	replace
182	[BUG]  [BUGGY]  long  skipped  =  numToSkip  +  input.length;  [CE]  cannot  find  symbol  length  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  +  input.length;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  +  input.length;	  long    skipped    =    input.length    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  length	57	None	replace
183	[BUG]  [BUGGY]  int  skipped  =  input.length  +  numToSkip;  [CE]  cannot  find  symbol  length  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.length  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.length  +  numToSkip;	  long    skipped    =    input.length    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  length	57	None	replace
184	[BUG]  [BUGGY]  long  skipped  =  input.length  -  numToSkip;  [CE]  cannot  find  symbol  length  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.length  -  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.length  -  numToSkip;	  long    skipped    =    input.length    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  length	57	None	replace
185	[BUG]  [BUGGY]  long  skipped  =  input.length  +  available;  [CE]  cannot  find  symbol  length  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.length  +  available;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.length  +  available;	  long    skipped    =    input.length    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  length	57	None	replace
186	[BUG]  [BUGGY]  InputStream  in  =  input.readInt()  -  numToSkip;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  input.readInt()  -  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input.readInt()  -  numToSkip;	  InputStream    in    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
187	[BUG]  [BUGGY]  InputStream  in  =  this.input.readInt();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  this.input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  this.input.readInt();	  InputStream    in    =    input.readInt();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	142	None	replace
188	[BUG]  [BUGGY]  InputStream  in  =  input.readInt(numToSkip);  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  input.readInt(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input.readInt(numToSkip);	  InputStream    in    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
189	[BUG]  [BUGGY]  InputStream  in  =  input.readInt()  -  1;  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  input.readInt()  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input.readInt()  -  1;	  InputStream    in    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
190	[BUG]  [BUGGY]  InputStream  in  =  input.readInt()  -(numToSkip);  [CE]  cannot  find  symbol  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  input.readInt()  -(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input.readInt()  -(numToSkip);	  InputStream    in    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
191	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  input.size;  [CE]  cannot  find  symbol  size  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  input.size;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip  +  input.size;	  long    skipped    =    available    +    numToSkip    +    input.length;    	non-compiled	[CE]  cannot  find  symbol  size	137	None	replace
192	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  input.getLength();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  input.getLength();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip  +  input.getLength();	  long    skipped    =    available    +    numToSkip    +    input.length;    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
193	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  input.length  *  numToSkip;  [CE]  cannot  find  symbol  length  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  input.length  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip  +  input.length  *  numToSkip;	  long    skipped    =    available    +    numToSkip    +    input.length;    	non-compiled	[CE]  cannot  find  symbol  length	137	None	replace
194	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  input.getCharset();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  input.getCharset();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip  +  input.getCharset();	  long    skipped    =    available    +    numToSkip    +    input.length;    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
195	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  input.getCharsCount();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  input.getCharsCount();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip  +  input.getCharsCount();	  long    skipped    =    available    +    numToSkip    +    input.length;    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
196	[BUG]  [BUGGY]  int  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  numToSkip  =  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  numToSkip  =  input.readLine();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.readLine();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	39	None	replace
197	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  int  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  int  numToSkip  =  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  /  numToSkip;  int  numToSkip  =  input.readLine();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.readLine();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	39	None	replace
198	[BUG]  [BUGGY]  long  skipped  =  numToSkip  +  available;  int  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  +  available;  int  numToSkip  =  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  +  available;  int  numToSkip  =  input.readLine();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.readLine();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	39	None	replace
199	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip,  skipped);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip,  skipped);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available,  numToSkip,  skipped);	  InputStream    available    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
200	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip  +  1);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available,  numToSkip  +  1);	  InputStream    available    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
201	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip,  skip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip,  skip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available,  numToSkip,  skip);	  InputStream    available    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
202	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip,  buffersize);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip,  buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available,  numToSkip,  buffersize);	  InputStream    available    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
203	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip)+  1;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip)+  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available,  numToSkip)+  1;	  InputStream    available    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
204	[BUG]  [BUGGY]  long  skipped  =  input.skipToSkip(this.available);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skipToSkip(this.available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skipToSkip(this.available);	  long    skipped    =    this.available.skipToSkip(input);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	154	None	replace
205	[BUG]  [BUGGY]  long  skipped  =  this.available.skipToSkip(numToSkip);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  this.available.skipToSkip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  this.available.skipToSkip(numToSkip);	  long    skipped    =    this.available.skipToSkip(input);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	154	None	replace
206	[BUG]  [BUGGY]  int  skipped  =  this.available.skipToSkip(input);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  this.available.skipToSkip(input);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  this.available.skipToSkip(input);	  long    skipped    =    this.available.skipToSkip(input);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	154	None	replace
207	[BUG]  [BUGGY]  int  skipped  =  input.skipToSkip(this.available);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skipToSkip(this.available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skipToSkip(this.available);	  long    skipped    =    this.available.skipToSkip(input);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	154	None	replace
208	[BUG]  [BUGGY]  long  skipped  =  input.skipToSkip(false);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skipToSkip(false);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skipToSkip(false);	  long    skipped    =    this.available.skipToSkip(input);    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
209	[BUG]  [BUGGY]  int  skipped  =  input.read();  int  skipped  =  input.read();  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read();  int  skipped  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int    skipped    =    input.read();    int  skipped  =  input.read();	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	101	None	add
210	[BUG]  [BUGGY]  int  skipped  =  input.read();  int  skip  =  input.read();  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read();  int  skip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int    skipped    =    input.read();    int  skip  =  input.read();	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	101	None	add
211	[BUG]  [BUGGY]  int  skipped  =  input.read();  int  available  =  input.read();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read();  int  available  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int    skipped    =    input.read();    int  available  =  input.read();	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	101	None	add
212	[BUG]  [BUGGY]  int  skipped  =  input.read();  Int  int  skipped  =  input.read();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read();  Int  int  skipped  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int    skipped    =    input.read();    Int  int  skipped  =  input.read();	  	non-compiled	[CE]  not  a  statement	101	None	add
213	[BUG]  [BUGGY]  int  skipped  =  input.read();  Integer  skipped  =  input.read();  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read();  Integer  skipped  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int    skipped    =    input.read();    Integer  skipped  =  input.read();	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	101	None	add
214	[BUG]  [BUGGY]  int  skipped  =  input.read();  int  read  =  input.read();  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read();  int  read  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int    skipped    =    input.read();    int  read  =  input.read();	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	101	None	add
215	[BUG]  [BUGGY]  int  skipped  =  input.read();  int  input  =  input.read();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read();  int  input  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int    skipped    =    input.read();    int  input  =  input.read();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	101	None	add
216	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	Long  skipped  =  input.skip(available);	  Long    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	118	2	replace
217	[BUG]  [BUGGY]  Long  skipped  =  input.skip(available);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  input.skip(available);	  Long    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	118	2	replace
218	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(numToSkip);  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(numToSkip);	  Long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  incompatible  types	118	None	replace
219	[BUG]  [BUGGY]  Long  skipped  =  input.skipToSkip(available);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skipToSkip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  input.skipToSkip(available);	  Long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
220	[BUG]  [BUGGY]  Long  skipped  =  input.skip(available,  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(available,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  input.skip(available,  numToSkip);	  Long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	118	None	replace
221	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	Long  skipped  =  input.skip(available  +  numToSkip);	  Long    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	118	3	replace
222	[BUG]  [BUGGY]  Long  skipped  =  input.skip(available  +  numToSkip);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  input.skip(available  +  numToSkip);	  Long    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	118	3	replace
223	[BUG]  [BUGGY]  Long  skipped  =  input.skipToSkip;  [CE]  cannot  find  symbol  skipToSkip  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skipToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  input.skipToSkip;	  Long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  skipToSkip	118	None	replace
224	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available);  [CE]  incompatible  types  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available);	  Long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  incompatible  types	118	None	replace
225	[BUG]  [BUGGY]  long  skipped  =  available.skip(numToSkip  *  numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skip(numToSkip  *  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(numToSkip  *  numToSkip);	  long    skipped    =    input.skip(available    *    numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	52	None	replace
226	[BUG]  [BUGGY]  long  skipped  =  numToSkip.skip(available  *  numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip.skip(available  *  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip.skip(available  *  numToSkip);	  long    skipped    =    input.skip(available    *    numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	52	None	replace
227	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  int  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  int  numToSkip  =  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  1;  int  numToSkip  =  input.readLine();	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.readLine();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	16	None	replace
228	[BUG]  [BUGGY]  long  skipped  =  numToSkip  *  available;  int  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  *  available;  int  numToSkip  =  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  *  available;  int  numToSkip  =  input.readLine();	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.readLine();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	16	None	replace
229	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readLine()  +  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readLine()  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readLine()  +  1;	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.readLine();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	16	None	replace
230	[BUG]  [BUGGY]  InputStream  available  =  numToSkip.skip(input,  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  numToSkip.skip(input,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  numToSkip.skip(input,  numToSkip);	  InputStream    available    =    input.skip(numToSkip,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	95	None	replace
231	[BUG]  [BUGGY]  InputStream  available  =  input.skip(numToSkip,  available);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(numToSkip,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(numToSkip,  available);	  InputStream    available    =    input.skip(numToSkip,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	95	None	replace
232	[BUG]  [BUGGY]  InputStream  available  =  input.skip(input,  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(input,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(input,  numToSkip);	  InputStream    available    =    input.skip(numToSkip,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	95	None	replace
233	[BUG]  [BUGGY]  InputStream  available  =  input.skip(numToSkip,  0);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(numToSkip,  0);	  InputStream    available    =    input.skip(numToSkip,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	95	None	replace
234	[BUG]  [BUGGY]  InputStream  available  =  input.skip(offset,  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(offset,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(offset,  numToSkip);	  InputStream    available    =    input.skip(numToSkip,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	95	None	replace
235	[BUG]  [BUGGY]  InputStream  available  =  input.skip(0,  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(0,  numToSkip);	  InputStream    available    =    input.skip(numToSkip,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	95	None	replace
236	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  long  available  =  input.skip(numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available);  long  available  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available);  long  available  =  input.skip(numToSkip);	  long    skipped    =    input.skip(available);    long    available    =    input.skip(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	132	None	replace
237	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  long  available  =  input.skip(available);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  long  available  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip);  long  available  =  input.skip(available);	  long    skipped    =    input.skip(available);    long    available    =    input.skip(available);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	132	None	replace
238	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip);  long  available  =  input.skip(available);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(numToSkip);  long  available  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(numToSkip);  long  available  =  input.skip(available);	  long    skipped    =    input.skip(available);    long    available    =    input.skip(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	132	None	replace
239	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  long  available  =  input.skip(available);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  long  available  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  long  available  =  input.skip(available);	  long    skipped    =    input.skip(available);    long    available    =    input.skip(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	132	None	replace
240	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  int  available  =  input.skip(available);  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  int  available  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  int  available  =  input.skip(available);	  long    skipped    =    input.skip(available);    long    available    =    input.skip(available);    	non-compiled	[CE]  possible  loss  of  precision	132	None	replace
241	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  /  numToSkip  +  1;	  long    skipped    =    available    +    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	74	3	replace
242	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  /  numToSkip  +  1;	  long    skipped    =    available    +    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	74	3	replace
243	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  1L;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  +  numToSkip  +  1L;	  long    skipped    =    available    +    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	74	3	replace
244	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  1L;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  1L;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip  +  1L;	  long    skipped    =    available    +    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	74	3	replace
245	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  +  numToSkip  *  1;	  long    skipped    =    available    +    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	74	3	replace
246	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  *  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip  *  1;	  long    skipped    =    available    +    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	74	3	replace
247	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  long  skipped  =  input.skip(available  /  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  long  skipped  =  input.skip(available  /  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    /    numToSkip);    long  skipped  =  input.skip(available  /  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	49	None	add
248	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  Long  skipped  =  input.skip(available  /  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  Long  skipped  =  input.skip(available  /  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    /    numToSkip);    Long  skipped  =  input.skip(available  /  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	49	None	add
249	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.skip(available  /  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.skip(available  /  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    /    numToSkip);    int  numToSkip  =  input.skip(available  /  numToSkip);	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	49	None	add
250	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  available  =  input.skip(available  /  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  available  =  input.skip(available  /  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    /    numToSkip);    int  available  =  input.skip(available  /  numToSkip);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	49	None	add
251	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  short  skipped  =  input.skip(available  /  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  short  skipped  =  input.skip(available  /  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    /    numToSkip);    short  skipped  =  input.skip(available  /  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	49	None	add
252	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  available  =  input.read(available  /  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  available  =  input.read(available  /  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    /    numToSkip);    int  available  =  input.read(available  /  numToSkip);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	49	None	add
253	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  long  skipped  =  input.skip(available  *  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  long  skipped  =  input.skip(available  *  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    /    numToSkip);    long  skipped  =  input.skip(available  *  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	49	None	add
254	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  long  skipped  =  input.skip(available  /  numToSkip).longValue();  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  long  skipped  =  input.skip(available  /  numToSkip).longValue();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    /    numToSkip);    long  skipped  =  input.skip(available  /  numToSkip).longValue();	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	49	None	add
255	[BUG]  [BUGGY]  int  n  =  this.input.readInt();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  n  =  this.input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  n  =  this.input.readInt();	  int    n    =    input.readInt();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	99	None	replace
256	[BUG]  [BUGGY]  int  n  =  input.readInt(numToSkip);  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  n  =  input.readInt(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  n  =  input.readInt(numToSkip);	  int    n    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
257	[BUG]  [BUGGY]  Integer  n  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  n  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  n  =  input.readInt();	  int    n    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
258	[BUG]  [BUGGY]  int  n  =  input.readInt(available);  [CE]  cannot  find  symbol  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  n  =  input.readInt(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  n  =  input.readInt(available);	  int    n    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
259	[BUG]  [BUGGY]  int  n  =  output.readInt();  [CE]  cannot  find  symbol  output  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  n  =  output.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  n  =  output.readInt();	  int    n    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol  output	99	None	replace
260	[BUG]  [BUGGY]  int  available  =  input.read(available  +  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  available  =  input.read(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  available  =  input.read(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    int    available    =    input.read(available    +    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	67	None	replace
261	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(available  +  numToSkip,  skipped);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(available  +  numToSkip,  skipped);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(available  +  numToSkip,  skipped);	  long    skipped    =    input.skip(available    +    numToSkip);    int    available    =    input.read(available    +    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	67	None	replace
262	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  int  available  =  input.read(available  *  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  int  available  =  input.read(available  *  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  *  numToSkip);  int  available  =  input.read(available  *  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    int    available    =    input.read(available    +    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	67	None	replace
263	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  available  =  input.read(available  +  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  available  =  input.read(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  /  numToSkip);  int  available  =  input.read(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    int    available    =    input.read(available    +    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	67	None	replace
264	[BUG]  [BUGGY]  Integer  available  =  input.read(available  +  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  available  =  input.read(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  available  =  input.read(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    int    available    =    input.read(available    +    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	67	None	replace
265	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip,  -1);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip,  -1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  -  numToSkip,  -1);	  long    skipped    =    input.skip(available    -    numToSkip,    -1);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	147	None	replace
266	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0,  -1);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0,  -1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip,  0,  -1);	  long    skipped    =    input.skip(available    -    numToSkip,    -1);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	147	None	replace
267	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  -1,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  -1,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip,  -1,  0);	  long    skipped    =    input.skip(available    -    numToSkip,    -1);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	147	None	replace
268	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  -1);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  -1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  -1);	  long    skipped    =    input.skip(available    -    numToSkip,    -1);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	147	None	replace
269	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip,  0,  0);	  long    skipped    =    input.skip(available    -    numToSkip,    -1);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	147	None	replace
270	[BUG]  [BUGGY]  Long  skipped  =  input.skip(numToSkip);  Long  skipped  =  input.skip(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(numToSkip);  Long  skipped  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long    skipped    =    input.skip(numToSkip);    Long  skipped  =  input.skip(numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	117	None	add
271	[BUG]  [BUGGY]  Long  skipped  =  input.skip(numToSkip);  long  skipped  =  input.skip(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(numToSkip);  long  skipped  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long    skipped    =    input.skip(numToSkip);    long  skipped  =  input.skip(numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	117	None	add
272	[BUG]  [BUGGY]  Long  skipped  =  input.skip(numToSkip);  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(numToSkip);  InputStream  input  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long    skipped    =    input.skip(numToSkip);    InputStream  input  =  input.readInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	117	None	add
273	[BUG]  [BUGGY]  Long  skipped  =  input.skip(numToSkip);  Short  skipped  =  input.skip(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(numToSkip);  Short  skipped  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long    skipped    =    input.skip(numToSkip);    Short  skipped  =  input.skip(numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	117	None	add
274	[BUG]  [BUGGY]  Long  skipped  =  input.skip(numToSkip);  InputStream  input  =  input.readInput(numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(numToSkip);  InputStream  input  =  input.readInput(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long    skipped    =    input.skip(numToSkip);    InputStream  input  =  input.readInput(numToSkip);	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	117	None	add
275	[BUG]  [BUGGY]  Long  skipped  =  input.skip(numToSkip);  InputStream  input  =  input.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(numToSkip);  InputStream  input  =  input.getInputStream();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long    skipped    =    input.skip(numToSkip);    InputStream  input  =  input.getInputStream();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	117	None	add
276	[BUG]  [BUGGY]  Long  skipped  =  input.skip(numToSkip);  InputStream  input  =  this.input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(numToSkip);  InputStream  input  =  this.input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long    skipped    =    input.skip(numToSkip);    InputStream  input  =  this.input.readInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	117	None	add
277	[BUG]  [BUGGY]  Long  skipped  =  input.skip(numToSkip);  InputStream  input  =  getInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(numToSkip);  InputStream  input  =  getInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long    skipped    =    input.skip(numToSkip);    InputStream  input  =  getInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	117	None	add
278	[BUG]  [BUGGY]  int  skipped  =  this.input.readInt();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  this.input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  this.input.readInt();	  int    skipped    =    input.readInt();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	98	None	replace
279	[BUG]  [BUGGY]  int  skipped  =  available.readInt();  [CE]  long  cannot  be  dereferenced  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available.readInt();	  int    skipped    =    input.readInt();    	non-compiled	[CE]  long  cannot  be  dereferenced	98	None	replace
280	[BUG]  [BUGGY]  int  skipped  =  input.readInt()  -  numToSkip;  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.readInt()  -  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.readInt()  -  numToSkip;	  int    skipped    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
281	[BUG]  [BUGGY]  int  skipped  =  input.readInt(numToSkip);  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.readInt(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.readInt(numToSkip);	  int    skipped    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
282	[BUG]  [BUGGY]  int  skipped  =  input.readInt(available);  [CE]  cannot  find  symbol  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.readInt(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.readInt(available);	  int    skipped    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
283	[BUG]  [BUGGY]  Integer  skipped  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.readInt();	  int    skipped    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
284	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  int  available  =  input.skip(numToSkip);  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  int  available  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  int  available  =  input.skip(numToSkip);	  long    skipped    =    input.skip(available);    int    available    =    input.skip(available);    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
285	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  int  available  =  input.skip(numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available);  int  available  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available);  int  available  =  input.skip(numToSkip);	  long    skipped    =    input.skip(available);    int    available    =    input.skip(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	20	None	replace
286	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip);  int  available  =  input.skip(available);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(numToSkip);  int  available  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(numToSkip);  int  available  =  input.skip(available);	  long    skipped    =    input.skip(available);    int    available    =    input.skip(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	20	None	replace
287	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  int  available  =  input.skip(available);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  int  available  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip);  int  available  =  input.skip(available);	  long    skipped    =    input.skip(available);    int    available    =    input.skip(available);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	20	None	replace
288	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available);  int  available  =  input.skip(available);  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available);  int  available  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available);  int  available  =  input.skip(available);	  long    skipped    =    input.skip(available);    int    available    =    input.skip(available);    	non-compiled	[CE]  incompatible  types	20	None	replace
289	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available);  int  available  =  input.skip(numToSkip);  [CE]  incompatible  types  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available);  int  available  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available);  int  available  =  input.skip(numToSkip);	  long    skipped    =    input.skip(available);    int    available    =    input.skip(available);    	non-compiled	[CE]  incompatible  types	20	None	replace
290	[BUG]  [BUGGY]  int  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  numToSkip  =  input.length();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  numToSkip  =  input.length();	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.length();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	69	None	replace
291	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.length();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.length();	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.length();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	69	None	replace
292	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  int  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  int  numToSkip  =  input.length();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  *  numToSkip);  int  numToSkip  =  input.length();	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.length();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	69	None	replace
293	[BUG]  [BUGGY]  int  available  =  input.read(available);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  available  =  input.read(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  available  =  input.read(available);	  long    skipped    =    input.skip(available    +    numToSkip);    int    available    =    input.read(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	113	None	replace
294	[BUG]  [BUGGY]  int  available  =  input.read(numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  available  =  input.read(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  available  =  input.read(numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    int    available    =    input.read(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	113	None	replace
295	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(buffer,  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(buffer,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(buffer,  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    int    available    =    input.read(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	113	None	replace
296	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(0,  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(0,  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    int    available    =    input.read(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	113	None	replace
297	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  available  =  input.read(available);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  available  =  input.read(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  /  numToSkip);  int  available  =  input.read(available);	  long    skipped    =    input.skip(available    +    numToSkip);    int    available    =    input.read(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	113	None	replace
298	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  int  available  =  input.read(available);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  int  available  =  input.read(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  *  numToSkip);  int  available  =  input.read(available);	  long    skipped    =    input.skip(available    +    numToSkip);    int    available    =    input.read(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	113	None	replace
299	[BUG]  [BUGGY]  InputStream  skipped  =  input.skip(available,  numToSkip,  buffersize);  [CE]  cannot  find  symbol  buffersize  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.skip(available,  numToSkip,  buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.skip(available,  numToSkip,  buffersize);	  InputStream    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffersize	109	None	replace
300	[BUG]  [BUGGY]  InputStream  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);	  InputStream    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	109	None	replace
301	[BUG]  [BUGGY]  InputStream  skipped  =  input.skip(available,  numToSkip,  bufsize);  [CE]  cannot  find  symbol  bufsize  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.skip(available,  numToSkip,  bufsize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.skip(available,  numToSkip,  bufsize);	  InputStream    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  bufsize	109	None	replace
302	[BUG]  [BUGGY]  InputStream  skipped  =  input.skip(available,  numToSkip,  available);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.skip(available,  numToSkip,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.skip(available,  numToSkip,  available);	  InputStream    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	109	None	replace
303	[BUG]  [BUGGY]  InputStream  skipped  =  input.skip(available,  numToSkip,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.skip(available,  numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.skip(available,  numToSkip,  0);	  InputStream    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	109	None	replace
304	[BUG]  [BUGGY]  InputStream  skipped  =  input.skip(available,  numToSkip,  null);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.skip(available,  numToSkip,  null);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.skip(available,  numToSkip,  null);	  InputStream    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	109	None	replace
305	[BUG]  [BUGGY]  InputStream  skipped  =  input.skip(available,  numToSkip,  this.buffersize);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.skip(available,  numToSkip,  this.buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.skip(available,  numToSkip,  this.buffersize);	  InputStream    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	109	None	replace
306	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numtoSkip);  [CE]  cannot  find  symbol  numtoSkip  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numtoSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numtoSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    long    skipped    =    input.skip(available    +    numtoSkip);    	non-compiled	[CE]  cannot  find  symbol  numtoSkip	114	None	replace
307	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  -  numToSkip  +  1;	  long    skipped    =    available    -    numToSkip;    	compilable	  [FE]  AssertionError  	47	3	replace
308	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  -  numToSkip  +  1;	  long    skipped    =    available    -    numToSkip;    	compilable	  [FE]  AssertionError  	47	3	replace
309	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  -  numToSkip  +  2;	  long    skipped    =    available    -    numToSkip;    	compilable	  [FE]  AssertionError  	47	3	replace
310	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip  +  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  -  numToSkip  +  2;	  long    skipped    =    available    -    numToSkip;    	compilable	  [FE]  AssertionError  	47	3	replace
311	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  /  numToSkip  +  2;	  long    skipped    =    available    /    numToSkip;    	compilable	  [FE]  AssertionError  	41	3	replace
312	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  /  numToSkip  +  2;	  long    skipped    =    available    /    numToSkip;    	compilable	  [FE]  AssertionError  	41	3	replace
313	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  long  available  =  input.skip(available  +  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  long  available  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  /  numToSkip);  long  available  =  input.skip(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    long    available    =    input.skip(available    +    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	112	None	replace
314	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  long  available  =  input.skip(available  *  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  long  available  =  input.skip(available  *  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  *  numToSkip);  long  available  =  input.skip(available  *  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    long    available    =    input.skip(available    +    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	112	None	replace
315	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.skip(available  +  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.skip(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    long    available    =    input.skip(available    +    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	112	None	replace
316	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip,  0);  long  available  =  input.skip(available  +  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip,  0);  long  available  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip,  0);  long  available  =  input.skip(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    long    available    =    input.skip(available    +    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	112	None	replace
317	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numtoSkip);  [CE]  cannot  find  symbol  numtoSkip  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numtoSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numtoSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    -    numtoSkip);    	non-compiled	[CE]  cannot  find  symbol  numtoSkip	124	None	replace
318	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1L;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  *  numToSkip  +  1L;	  long    skipped    =    available    *    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	43	3	replace
319	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1L;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  1L;	  long    skipped    =    available    *    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	43	3	replace
320	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  3;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  *  numToSkip  +  3;	  long    skipped    =    available    *    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	43	3	replace
321	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  3;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  3;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  3;	  long    skipped    =    available    *    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	43	3	replace
322	[BUG]  [BUGGY]  char  skipped  =  input.skip(available);  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  char  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	char  skipped  =  input.skip(available);	  int    skipped    =    input.skip(available);    	non-compiled	[CE]  possible  loss  of  precision	111	None	replace
323	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  long  skipped  =  input.skip(available  *  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  long  skipped  =  input.skip(available  *  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    *    numToSkip);    long  skipped  =  input.skip(available  *  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	51	None	add
324	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  Long  skipped  =  input.skip(available  *  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  Long  skipped  =  input.skip(available  *  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    *    numToSkip);    Long  skipped  =  input.skip(available  *  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	51	None	add
325	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  int  numToSkip  =  input.skip(available  *  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  int  numToSkip  =  input.skip(available  *  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    *    numToSkip);    int  numToSkip  =  input.skip(available  *  numToSkip);	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	51	None	add
326	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  short  skipped  =  input.skip(available  *  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  short  skipped  =  input.skip(available  *  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    *    numToSkip);    short  skipped  =  input.skip(available  *  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	51	None	add
327	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  long  skipped  =  input.skip(available  *  numToSkip).longValue();  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  long  skipped  =  input.skip(available  *  numToSkip).longValue();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    *    numToSkip);    long  skipped  =  input.skip(available  *  numToSkip).longValue();	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	51	None	add
328	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  int  numToSkip  =  input.read(available  *  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  int  numToSkip  =  input.read(available  *  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    *    numToSkip);    int  numToSkip  =  input.read(available  *  numToSkip);	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	51	None	add
329	[BUG]  [BUGGY]  int  skipped  =  available.skip(input);  [CE]  long  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available.skip(input);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available.skip(input);	  long    skipped    =    available.skip(input);    	non-compiled	[CE]  long  cannot  be  dereferenced	72	None	replace
330	[BUG]  [BUGGY]  short  skipped  =  input.skip(available);  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  short  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	short  skipped  =  input.skip(available);	  long    skipped    =    available.skip(input);    	non-compiled	[CE]  possible  loss  of  precision	72	None	replace
331	[BUG]  [BUGGY]  InputStream  input  =  this.inputStream.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  this.inputStream.getInputStream();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  this.inputStream.getInputStream();	  InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	100	None	replace
332	[BUG]  [BUGGY]  InputStream  input  =  this.available.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  this.available.getInputStream();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  this.available.getInputStream();	  InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	100	None	replace
333	[BUG]  [BUGGY]  InputStream  input  =  input.getOutputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.getOutputStream();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.getOutputStream();	  InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	100	None	replace
334	[BUG]  [BUGGY]  InputStream  input  =  input.getInputStream(numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.getInputStream(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.getInputStream(numToSkip);	  InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	100	None	replace
335	[BUG]  [BUGGY]  InputStream  input  =  this.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  this.getInputStream();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  this.getInputStream();	  InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	100	None	replace
336	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  InputStream  input  =  input.readInput();  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  InputStream  input  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  InputStream  input  =  input.readInput();	  long    skipped    =    input.skip(available);    InputStream    input    =    input.readInput();    	non-compiled	[CE]  possible  loss  of  precision	135	None	replace
337	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  InputStream  input  =  input.readInput();  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  InputStream  input  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip);  InputStream  input  =  input.readInput();	  long    skipped    =    input.skip(available);    InputStream    input    =    input.readInput();    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	135	None	replace
338	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip);  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(numToSkip);  InputStream  input  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(numToSkip);  InputStream  input  =  input.readInput();	  long    skipped    =    input.skip(available);    InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	135	None	replace
339	[BUG]  [BUGGY]  Input  input  =  input.readInput();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Input  input  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Input  input  =  input.readInput();	  long    skipped    =    input.skip(available);    InputStream    input    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
340	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  /  numToSkip  +  1);	  long    skipped    =    input.skip(available    /    numToSkip);    	compilable	  [FE]  AssertionError  	50	3	replace
341	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  /  numToSkip  +  1);	  long    skipped    =    input.skip(available    /    numToSkip);    	compilable	  [FE]  AssertionError  	50	3	replace
342	[BUG]  [BUGGY]  long  skipped  =  numToSkip.skip(available  /  numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip.skip(available  /  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip.skip(available  /  numToSkip);	  long    skipped    =    input.skip(available    /    numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	50	None	replace
343	[BUG]  [BUGGY]  long  skipped  =  available.skip(numToSkip  /  input);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skip(numToSkip  /  input);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(numToSkip  /  input);	  long    skipped    =    input.skip(available    /    numToSkip);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	50	None	replace
344	[BUG]  [BUGGY]  int  skipped  =  available.read(input);  [CE]  long  cannot  be  dereferenced  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available.read(input);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available.read(input);	  int    skipped    =    input.read(available);    	non-compiled	[CE]  long  cannot  be  dereferenced	143	None	replace
345	[BUG]  [BUGGY]  int  skipped  =  input.read(buffer,  numToSkip);  [CE]  cannot  find  symbol  buffer  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read(buffer,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.read(buffer,  numToSkip);	  int    skipped    =    input.read(available);    	non-compiled	[CE]  cannot  find  symbol  buffer	143	None	replace
346	[BUG]  [BUGGY]  int  skipped  =  input.read(buffer,  available);  [CE]  cannot  find  symbol  buffer  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read(buffer,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.read(buffer,  available);	  int    skipped    =    input.read(available);    	non-compiled	[CE]  cannot  find  symbol  buffer	143	None	replace
347	[BUG]  [BUGGY]  int  skipped  =  input.read(numToSkip,  available);  [CE]  no  suitable  method  found  for  read(long,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read(numToSkip,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.read(numToSkip,  available);	  int    skipped    =    input.read(available);    	non-compiled	[CE]  no  suitable  method  found  for  read(long,long)	143	None	replace
348	[BUG]  [BUGGY]  int  skipped  =  input.read(this.buffer,  available);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read(this.buffer,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.read(this.buffer,  available);	  int    skipped    =    input.read(available);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	143	None	replace
349	[BUG]  [BUGGY]  int  skipped  =  input.read(data,  numToSkip);  [CE]  cannot  find  symbol  data  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read(data,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.read(data,  numToSkip);	  int    skipped    =    input.read(available);    	non-compiled	[CE]  cannot  find  symbol  data	143	None	replace
350	[BUG]  [BUGGY]  long  skipped  =  numToSkip.skip(available  -  numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    *    numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	121	None	replace
351	[BUG]  [BUGGY]  Integer  skipped  =  input.skipToSkip(available);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skipToSkip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skipToSkip(available);	  Long    skipped    =    available.skipToSkip(input);    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
352	[BUG]  [BUGGY]  InputStream  input  =  input.skipToSkip(available);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.skipToSkip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.skipToSkip(available);	  Long    skipped    =    available.skipToSkip(input);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	126	None	replace
353	[BUG]  [BUGGY]  Long  skipped  =  output.skipToSkip(available);  [CE]  cannot  find  symbol  output  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  output.skipToSkip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  output.skipToSkip(available);	  Long    skipped    =    available.skipToSkip(input);    	non-compiled	[CE]  cannot  find  symbol  output	126	None	replace
354	[BUG]  [BUGGY]  Short  skipped  =  input.skipToSkip(available);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Short  skipped  =  input.skipToSkip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Short  skipped  =  input.skipToSkip(available);	  Long    skipped    =    available.skipToSkip(input);    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
355	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip).length;  [CE]  long  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip).length;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip).length;	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    -    numToSkip).length;    	non-compiled	[CE]  long  cannot  be  dereferenced	158	None	replace
356	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0).length;  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0).length;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip,  0).length;	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    -    numToSkip).length;    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	158	None	replace
357	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip).length;  [CE]  long  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip).length;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  *  numToSkip).length;	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    -    numToSkip).length;    	non-compiled	[CE]  long  cannot  be  dereferenced	158	None	replace
358	[BUG]  [BUGGY]  long  skipped  =  input.getSize()  *  numToSkip;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.getSize()  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.getSize()  *  numToSkip;	  long    skipped    =    input.getSize()    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
359	[BUG]  [BUGGY]  long  skipped  =  input.getSize()  /  numToSkip;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.getSize()  /  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.getSize()  /  numToSkip;	  long    skipped    =    input.getSize()    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
360	[BUG]  [BUGGY]  long  skipped  =  input.getSize()  +  available;  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.getSize()  +  available;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.getSize()  +  available;	  long    skipped    =    input.getSize()    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
361	[BUG]  [BUGGY]  long  skipped  =  input.getSize()  -  numToSkip;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.getSize()  -  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.getSize()  -  numToSkip;	  long    skipped    =    input.getSize()    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
362	[BUG]  [BUGGY]  Long  skipped  =  input.getSize()  +  numToSkip;  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.getSize()  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  input.getSize()  +  numToSkip;	  long    skipped    =    input.getSize()    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
363	[BUG]  [BUGGY]  int  skipped  =  input.getSize()  +  numToSkip;  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.getSize()  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.getSize()  +  numToSkip;	  long    skipped    =    input.getSize()    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
364	[BUG]  [BUGGY]  String  skipped  =  input.skip(numToSkip);  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  String  skipped  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	String  skipped  =  input.skip(numToSkip);	  char    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  incompatible  types	30	None	replace
365	[BUG]  [BUGGY]  String  skipd  =  input.skip(numToSkip);  [CE]  incompatible  types  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  String  skipd  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	String  skipd  =  input.skip(numToSkip);	  char    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  incompatible  types	30	None	replace
366	[BUG]  [BUGGY]  Character  skipped  =  input.skip(numToSkip);  [CE]  incompatible  types  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Character  skipped  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Character  skipped  =  input.skip(numToSkip);	  char    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  incompatible  types	30	None	replace
367	[BUG]  [BUGGY]  Char  skipped  =  input.skip(numToSkip);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Char  skipped  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Char  skipped  =  input.skip(numToSkip);	  char    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
368	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  long  skipped  =  input.skip(available  +  numToSkip  +  1);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  long  skipped  =  input.skip(available  +  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip    +    1);    long  skipped  =  input.skip(available  +  numToSkip  +  1);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	129	None	add
369	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  Long  skipped  =  input.skip(available  +  numToSkip  +  1);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  Long  skipped  =  input.skip(available  +  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip    +    1);    Long  skipped  =  input.skip(available  +  numToSkip  +  1);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	129	None	add
370	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  short  skipped  =  input.skip(available  +  numToSkip  +  1);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  short  skipped  =  input.skip(available  +  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip    +    1);    short  skipped  =  input.skip(available  +  numToSkip  +  1);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	129	None	add
371	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  long  skipped  =  input.skip(available  +  numToSkip  +  1));  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  long  skipped  =  input.skip(available  +  numToSkip  +  1));  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip    +    1);    long  skipped  =  input.skip(available  +  numToSkip  +  1));	  	non-compiled	[CE]  ';'  expected	129	None	add
372	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  int  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  int  numToSkip  =  input.length();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip    +    1);    int  numToSkip  =  input.length();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	129	None	add
373	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  long  skipped  =  input.skip(available  +  numToSkip  +  2);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  long  skipped  =  input.skip(available  +  numToSkip  +  2);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip    +    1);    long  skipped  =  input.skip(available  +  numToSkip  +  2);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	129	None	add
374	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  int  available  =  input.read(available  +  numToSkip  +  1);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  int  available  =  input.read(available  +  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip    +    1);    int  available  =  input.read(available  +  numToSkip  +  1);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	129	None	add
375	[BUG]  [BUGGY]  int  numToSkip  =  input.read(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  numToSkip  =  input.read(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  numToSkip  =  input.read(available);	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	115	None	replace
376	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	115	None	replace
377	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.read(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.read(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.read(available);	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	115	None	replace
378	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(0,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(0,  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	115	None	replace
379	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  int  numToSkip  =  input.read(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  int  numToSkip  =  input.read(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  *  numToSkip);  int  numToSkip  =  input.read(available);	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	115	None	replace
380	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(numToSkip,  available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(numToSkip,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(numToSkip,  available);	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	115	None	replace
381	[BUG]  [BUGGY]  long  skipped  =  available.skipToSkip(numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skipToSkip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skipToSkip(numToSkip);	  long    skipped    =    available.skipToSkip(input);    	non-compiled	[CE]  long  cannot  be  dereferenced	60	None	replace
382	[BUG]  [BUGGY]  int  skipped  =  available.skipToSkip(input);  [CE]  long  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available.skipToSkip(input);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available.skipToSkip(input);	  long    skipped    =    available.skipToSkip(input);    	non-compiled	[CE]  long  cannot  be  dereferenced	60	None	replace
383	[BUG]  [BUGGY]  long  skipped  =  output.skipToSkip(available);  [CE]  cannot  find  symbol  output  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  output.skipToSkip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  output.skipToSkip(available);	  long    skipped    =    available.skipToSkip(input);    	non-compiled	[CE]  cannot  find  symbol  output	60	None	replace
384	[BUG]  [BUGGY]  int  skipped  =  available.skipToSkip(numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available.skipToSkip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available.skipToSkip(numToSkip);	  long    skipped    =    available.skipToSkip(INIT_SIZE);    	non-compiled	[CE]  long  cannot  be  dereferenced	63	None	replace
385	[BUG]  [BUGGY]  long  skipped  =  numToSkip.skipToSkip(available);  [CE]  long  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip.skipToSkip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip.skipToSkip(available);	  long    skipped    =    available.skipToSkip(INIT_SIZE);    	non-compiled	[CE]  long  cannot  be  dereferenced	63	None	replace
386	[BUG]  [BUGGY]  Long  skipped  =  available.skipToSkip(numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  available.skipToSkip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  available.skipToSkip(numToSkip);	  long    skipped    =    available.skipToSkip(INIT_SIZE);    	non-compiled	[CE]  long  cannot  be  dereferenced	63	None	replace
387	[BUG]  [BUGGY]  int  skipped  =  input.getSize()  -  numToSkip;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.getSize()  -  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.getSize()  -  numToSkip;	  int    skipped    =    input.getSize();    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
388	[BUG]  [BUGGY]  int  skipped  =  input.getSize()  -  1;  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.getSize()  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.getSize()  -  1;	  int    skipped    =    input.getSize();    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
389	[BUG]  [BUGGY]  int  skipped  =  this.input.getSize();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  this.input.getSize();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  this.input.getSize();	  int    skipped    =    input.getSize();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	162	None	replace
390	[BUG]  [BUGGY]  int  skipped  =  input.getSize(numToSkip);  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.getSize(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.getSize(numToSkip);	  int    skipped    =    input.getSize();    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
391	[BUG]  [BUGGY]  InputStream  input  =  this.input.readIn();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  this.input.readIn();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  this.input.readIn();	  InputStream    input    =    input.readIn();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	163	None	replace
392	[BUG]  [BUGGY]  InputStream  input  =  this.available.readIn();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  this.available.readIn();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  this.available.readIn();	  InputStream    input    =    input.readIn();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	163	None	replace
393	[BUG]  [BUGGY]  InputStream  input  =  available.readIn();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  available.readIn();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  available.readIn();	  InputStream    input    =    input.readIn();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	163	None	replace
394	[BUG]  [BUGGY]  InputStream  input  =  n.readIn();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  n.readIn();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  n.readIn();	  InputStream    input    =    input.readIn();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	163	None	replace
395	[BUG]  [BUGGY]  InputStream  input  =  outputStream.readIn();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  outputStream.readIn();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  outputStream.readIn();	  InputStream    input    =    input.readIn();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	163	None	replace
396	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  +  numToSkip  *  2;	  long    skipped    =    available    +    numToSkip    +    2;    	compilable	  [FE]  AssertionError  	78	3	replace
397	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  *  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip  *  2;	  long    skipped    =    available    +    numToSkip    +    2;    	compilable	  [FE]  AssertionError  	78	3	replace
398	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  long  available  =  available  +  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  long  available  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  /  numToSkip;  long  available  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    available    =    available    +    numToSkip;    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	37	None	replace
399	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  long  available  =  available  +  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip;  long  available  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;  long  available  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    available    =    available    +    numToSkip;    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	37	None	replace
400	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  int  available  =  available  +  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip;  int  available  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip;  int  available  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    available    =    available    +    numToSkip;    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	37	None	replace
401	[BUG]  [BUGGY]  long  available  =  available  +  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  available  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  available  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    available    =    available    +    numToSkip;    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	37	None	replace
402	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip,  available);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(numToSkip,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(numToSkip,  available);	  long    skipped    =    available.skip(numToSkip,    input);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	89	None	replace
403	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip,  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(numToSkip,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(numToSkip,  numToSkip);	  long    skipped    =    available.skip(numToSkip,    input);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	89	None	replace
404	[BUG]  [BUGGY]  int  skipped  =  input.skip(numToSkip,  available);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(numToSkip,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(numToSkip,  available);	  long    skipped    =    available.skip(numToSkip,    input);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	89	None	replace
405	[BUG]  [BUGGY]  Long  skipped  =  input.skip(numToSkip,  available);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(numToSkip,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  input.skip(numToSkip,  available);	  long    skipped    =    available.skip(numToSkip,    input);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	89	None	replace
406	[BUG]  [BUGGY]  int  skipped  =  available.skip(numToSkip,  input);  [CE]  long  cannot  be  dereferenced  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available.skip(numToSkip,  input);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available.skip(numToSkip,  input);	  long    skipped    =    available.skip(numToSkip,    input);    	non-compiled	[CE]  long  cannot  be  dereferenced	89	None	replace
407	[BUG]  [BUGGY]  Short  skipped  =  input.skip(available  +  numToSkip);  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Short  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Short  skipped  =  input.skip(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    short    skipped    =    input.skip(available    +    numToSkip);    	non-compiled	[CE]  incompatible  types	66	None	replace
408	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	Long  skipped  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    Long    skipped    =    available    +    numToSkip;    	compilable	  [FE]  AssertionError  	33	3	replace
409	[BUG]  [BUGGY]  Long  skipped  =  available  +  numToSkip;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    Long    skipped    =    available    +    numToSkip;    	compilable	  [FE]  AssertionError  	33	3	replace
410	[BUG]  [BUGGY]  Integer  skipped  =  available  +  numToSkip;  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    Long    skipped    =    available    +    numToSkip;    	non-compiled	[CE]  incompatible  types	33	None	replace
411	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  Long  skipped  =  input.skip(available);  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  Long  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  Long  skipped  =  input.skip(available);	  long    skipped    =    input.skip(available);    Long    skipped    =    input.skip(available);    	non-compiled	[CE]  possible  loss  of  precision	18	None	replace
412	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available);  Long  skipped  =  input.skip(available);  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available);  Long  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available);  Long  skipped  =  input.skip(available);	  long    skipped    =    input.skip(available);    Long    skipped    =    input.skip(available);    	non-compiled	[CE]  incompatible  types	18	None	replace
413	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  Integer  skipped  =  input.skip(available);  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  Integer  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  Integer  skipped  =  input.skip(available);	  long    skipped    =    input.skip(available);    Long    skipped    =    input.skip(available);    	non-compiled	[CE]  possible  loss  of  precision	18	None	replace
414	[BUG]  [BUGGY]  long  skipped  =  numToSkip.skipToSkip(input);  [CE]  long  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip.skipToSkip(input);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip.skipToSkip(input);	  long    skipped    =    input.skipToSkip(numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	61	None	replace
415	[BUG]  [BUGGY]  long  skipped  =  input.skipToSkip(available,  numToSkip);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skipToSkip(available,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skipToSkip(available,  numToSkip);	  long    skipped    =    input.skipToSkip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
416	[BUG]  [BUGGY]  long  skipped  =  input.skipToSkip(numToSkip,  available);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skipToSkip(numToSkip,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skipToSkip(numToSkip,  available);	  long    skipped    =    input.skipToSkip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
417	[BUG]  [BUGGY]  long  skipped  =  input.skippedToSkip(numToSkip);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skippedToSkip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skippedToSkip(numToSkip);	  long    skipped    =    input.skipToSkip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
418	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)/  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  -  numToSkip)/  1;	  long    skipped    =    input.skip(available    -    numToSkip)+    1;    	compilable	  [FE]  AssertionError  	83	3	replace
419	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)/  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)/  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip)/  1;	  long    skipped    =    input.skip(available    -    numToSkip)+    1;    	compilable	  [FE]  AssertionError  	83	3	replace
420	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  -  numToSkip)+  2;	  long    skipped    =    input.skip(available    -    numToSkip)+    1;    	compilable	  [FE]  AssertionError  	83	3	replace
421	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip)+  2;	  long    skipped    =    input.skip(available    -    numToSkip)+    1;    	compilable	  [FE]  AssertionError  	83	3	replace
422	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip)+  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  *  numToSkip)+  1;	  long    skipped    =    input.skip(available    -    numToSkip)+    1;    	compilable	  [FE]  AssertionError  	83	3	replace
423	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip)+  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip)+  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  *  numToSkip)+  1;	  long    skipped    =    input.skip(available    -    numToSkip)+    1;    	compilable	  [FE]  AssertionError  	83	3	replace
424	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip)+  1;  [CE]  possible  loss  of  precision  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip)+  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  -  numToSkip)+  1;	  long    skipped    =    input.skip(available    -    numToSkip)+    1;    	non-compiled	[CE]  possible  loss  of  precision	83	None	replace
425	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip)+  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  /  numToSkip)+  1;	  long    skipped    =    input.skip(available    -    numToSkip)+    1;    	compilable	  [FE]  AssertionError  	83	3	replace
426	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip)+  1;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip)+  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  /  numToSkip)+  1;	  long    skipped    =    input.skip(available    -    numToSkip)+    1;    	compilable	  [FE]  AssertionError  	83	3	replace
427	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  int  available  =  input.read(numToSkip);  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  int  available  =  input.read(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  int  available  =  input.read(numToSkip);	  long    skipped    =    input.skip(available);    int    available    =    input.read(available);    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
428	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  int  available  =  input.read(available);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  int  available  =  input.read(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip);  int  available  =  input.read(available);	  long    skipped    =    input.skip(available);    int    available    =    input.read(available);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	19	None	replace
429	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  int  available  =  input.read(available);  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  int  available  =  input.read(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  int  available  =  input.read(available);	  long    skipped    =    input.skip(available);    int    available    =    input.read(available);    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
430	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip);  int  available  =  input.read(available);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(numToSkip);  int  available  =  input.read(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(numToSkip);  int  available  =  input.read(available);	  long    skipped    =    input.skip(available);    int    available    =    input.read(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	19	None	replace
431	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  int  available  =  input.read(numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available);  int  available  =  input.read(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available);  int  available  =  input.read(numToSkip);	  long    skipped    =    input.skip(available);    int    available    =    input.read(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	19	None	replace
432	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available);  int  available  =  input.read(available);  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available);  int  available  =  input.read(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available);  int  available  =  input.read(available);	  long    skipped    =    input.skip(available);    int    available    =    input.read(available);    	non-compiled	[CE]  incompatible  types	19	None	replace
433	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available  +  numToSkip);  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    Long    skipped    =    input.skip(available    +    numToSkip);    	non-compiled	[CE]  incompatible  types	65	None	replace
434	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  2);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  +  numToSkip  +  2);	  long    skipped    =    input.skip(available    +    numToSkip    +    1);    	compilable	  [FE]  AssertionError  	130	3	replace
435	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  2);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  2);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip  +  2);	  long    skipped    =    input.skip(available    +    numToSkip    +    1);    	compilable	  [FE]  AssertionError  	130	3	replace
436	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  long  skipped  =  available  +  numToSkip  +  2;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  long  skipped  =  available  +  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    2;    long  skipped  =  available  +  numToSkip  +  2;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	77	None	add
437	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  Long  skipped  =  available  +  numToSkip  +  2;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  Long  skipped  =  available  +  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    2;    Long  skipped  =  available  +  numToSkip  +  2;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	77	None	add
438	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  int  numToSkip  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    2;    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	77	None	add
439	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  int  numToSkip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    2;    int  numToSkip  =  input.read();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	77	None	add
440	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  long  skipd  =  available  +  numToSkip  +  2;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  long  skipd  =  available  +  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    2;    long  skipd  =  available  +  numToSkip  +  2;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	77	None	add
441	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  long  available  =  available  +  numToSkip  +  2;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  long  available  =  available  +  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    2;    long  available  =  available  +  numToSkip  +  2;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	77	None	add
442	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  short  skipped  =  available  +  numToSkip  +  2;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  short  skipped  =  available  +  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    2;    short  skipped  =  available  +  numToSkip  +  2;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	77	None	add
443	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  int  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  int  numToSkip  =  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    2;    int  numToSkip  =  input.readLine();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	77	None	add
444	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip;  long  skipped  =  available  *  numToSkip;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip;  long  skipped  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip;  long  skipped  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    skipped    =    available    *    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
445	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip.longValue();  [CE]  long  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip.longValue();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip.longValue();	  long    skipped    =    available    *    numToSkip;    long    skipped    =    available    *    numToSkip;    	non-compiled	[CE]  long  cannot  be  dereferenced	9	None	replace
446	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  short  skipped  =  input.skip(available);  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  short  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  short  skipped  =  input.skip(available);	  long    skipped    =    input.skip(available);    short    skipped    =    input.skip(available);    	non-compiled	[CE]  possible  loss  of  precision	159	None	replace
447	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  short  skipped  =  input.skip(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available);  short  skipped  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available);  short  skipped  =  input.skip(numToSkip);	  long    skipped    =    input.skip(available);    short    skipped    =    input.skip(available);    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	159	None	replace
448	[BUG]  [BUGGY]  long  skipd  =  available  +  numToSkip;  [CE]  cannot  find  symbol  skipped  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipd  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipd  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    skipd    =    available    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  skipped	34	None	replace
449	[BUG]  [BUGGY]  InputStream  available  =  input.readInput();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.readInput();	  long    skipped    =    input.skip(available);    InputStream    available    =    input.readInput();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	22	None	replace
450	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  InputStream  available  =  input.readInput();  [CE]  possible  loss  of  precision  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  InputStream  available  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  InputStream  available  =  input.readInput();	  long    skipped    =    input.skip(available);    InputStream    available    =    input.readInput();    	non-compiled	[CE]  possible  loss  of  precision	22	None	replace
451	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip);  InputStream  available  =  input.readInput();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(numToSkip);  InputStream  available  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(numToSkip);  InputStream  available  =  input.readInput();	  long    skipped    =    input.skip(available);    InputStream    available    =    input.readInput();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	22	None	replace
452	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  InputStream  available  =  input.readInput();  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  InputStream  available  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip);  InputStream  available  =  input.readInput();	  long    skipped    =    input.skip(available);    InputStream    available    =    input.readInput();    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	22	None	replace
453	[BUG]  [BUGGY]  long  skipped  =  available.skip(input);  InputStream  available  =  input.readInput();  [CE]  long  cannot  be  dereferenced  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skip(input);  InputStream  available  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(input);  InputStream  available  =  input.readInput();	  long    skipped    =    input.skip(available);    InputStream    available    =    input.readInput();    	non-compiled	[CE]  long  cannot  be  dereferenced	22	None	replace
454	[BUG]  [BUGGY]  InputStream  skipped  =  input.skip(available);  InputStream  available  =  input.readInput();  [CE]  incompatible  types  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.skip(available);  InputStream  available  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.skip(available);  InputStream  available  =  input.readInput();	  long    skipped    =    input.skip(available);    InputStream    available    =    input.readInput();    	non-compiled	[CE]  incompatible  types	22	None	replace
455	[BUG]  [BUGGY]  int  numToSkip  =  input.getCount();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  numToSkip  =  input.getCount();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  numToSkip  =  input.getCount();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.getCount();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	146	None	replace
456	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.getCount();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.getCount();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.getCount();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.getCount();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	146	None	replace
457	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  int  numToSkip  =  input.getCount();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  int  numToSkip  =  input.getCount();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  /  numToSkip;  int  numToSkip  =  input.getCount();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.getCount();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	146	None	replace
458	[BUG]  [BUGGY]  Long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.getCount();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.getCount();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.getCount();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.getCount();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	146	None	replace
459	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.getColumnCount();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.getColumnCount();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.getColumnCount();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.getCount();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	146	None	replace
460	[BUG]  [BUGGY]  InputStream  available  =  input.readInput(numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.readInput(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.readInput(numToSkip);	  long    skipped    =    input.skip(available);    InputStream    available    =    input.readInput(numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	24	None	replace
461	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  InputStream  available  =  input.readInput(numToSkip);  [CE]  possible  loss  of  precision  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  InputStream  available  =  input.readInput(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  InputStream  available  =  input.readInput(numToSkip);	  long    skipped    =    input.skip(available);    InputStream    available    =    input.readInput(numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	24	None	replace
462	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  InputStream  available  =  input.readInput(numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  InputStream  available  =  input.readInput(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip);  InputStream  available  =  input.readInput(numToSkip);	  long    skipped    =    input.skip(available);    InputStream    available    =    input.readInput(numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	24	None	replace
463	[BUG]  [BUGGY]  long  skipped  =  available.skip(input);  InputStream  available  =  input.readInput(numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skip(input);  InputStream  available  =  input.readInput(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(input);  InputStream  available  =  input.readInput(numToSkip);	  long    skipped    =    input.skip(available);    InputStream    available    =    input.readInput(numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	24	None	replace
464	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  InputStream  available  =  input.readInput(numToSkip,  0);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available);  InputStream  available  =  input.readInput(numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available);  InputStream  available  =  input.readInput(numToSkip,  0);	  long    skipped    =    input.skip(available);    InputStream    available    =    input.readInput(numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	24	None	replace
465	[BUG]  [BUGGY]  int  skipped  =  input.read(this.buffer,  numToSkip);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read(this.buffer,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.read(this.buffer,  numToSkip);	  int    skipped    =    input.read(numToSkip);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	161	None	replace
466	[BUG]  [BUGGY]  long  skipped  =  input.read(numToSkip);  [CE]  no  suitable  method  found  for  read(long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.read(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.read(numToSkip);	  int    skipped    =    input.read(numToSkip);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	161	None	replace
467	[BUG]  [BUGGY]  int  skipped  =  input.read(skipped,  numToSkip);  [CE]  no  suitable  method  found  for  read(int,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read(skipped,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.read(skipped,  numToSkip);	  int    skipped    =    input.read(numToSkip);    	non-compiled	[CE]  no  suitable  method  found  for  read(int,long)	161	None	replace
468	[BUG]  [BUGGY]  InputStream  input  =  input.skip(available,  numToSkip  +  1);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.skip(available,  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.skip(available,  numToSkip  +  1);	  InputStream    input    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
469	[BUG]  [BUGGY]  InputStream  input  =  this.available.skip(numToSkip,  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  this.available.skip(numToSkip,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  this.available.skip(numToSkip,  numToSkip);	  InputStream    input    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
470	[BUG]  [BUGGY]  InputStream  input  =  available.skip(numToSkip,  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  available.skip(numToSkip,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  available.skip(numToSkip,  numToSkip);	  InputStream    input    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
471	[BUG]  [BUGGY]  InputStream  input  =  numToSkip.skip(available,  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  numToSkip.skip(available,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  numToSkip.skip(available,  numToSkip);	  InputStream    input    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
472	[BUG]  [BUGGY]  InputStream  input  =  this.available.skip(input,  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  this.available.skip(input,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  this.available.skip(input,  numToSkip);	  InputStream    input    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
473	[BUG]  [BUGGY]  InputStream  input  =  input.skip(available,  numToSkip,  skipped);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.skip(available,  numToSkip,  skipped);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.skip(available,  numToSkip,  skipped);	  InputStream    input    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
474	[BUG]  [BUGGY]  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  numToSkip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  numToSkip  =  input.read();	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	71	None	replace
475	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.read();	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	71	None	replace
476	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  int  numToSkip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  *  numToSkip);  int  numToSkip  =  input.read();	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	71	None	replace
477	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.read();	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	71	None	replace
478	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  Integer  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  Integer  numToSkip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip);  Integer  numToSkip  =  input.read();	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	71	None	replace
479	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  long  skipped  =  available  *  numToSkip  +  2;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  long  skipped  =  available  *  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    2;    long  skipped  =  available  *  numToSkip  +  2;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	44	None	add
480	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  Long  skipped  =  available  *  numToSkip  +  2;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  Long  skipped  =  available  *  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    2;    Long  skipped  =  available  *  numToSkip  +  2;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	44	None	add
481	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  int  numToSkip  =  available  *  numToSkip  +  2;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  int  numToSkip  =  available  *  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    2;    int  numToSkip  =  available  *  numToSkip  +  2;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	44	None	add
482	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  int  numToSkip  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    2;    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	44	None	add
483	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  long  available  =  available  *  numToSkip  +  2;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  long  available  =  available  *  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    2;    long  available  =  available  *  numToSkip  +  2;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	44	None	add
484	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  short  skipped  =  available  *  numToSkip  +  2;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  short  skipped  =  available  *  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    2;    short  skipped  =  available  *  numToSkip  +  2;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	44	None	add
485	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  int  numToSkip  =  available  *  numToSkip  +  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  int  numToSkip  =  available  *  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    2;    int  numToSkip  =  available  *  numToSkip  +  1;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	44	None	add
486	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  int  numToSkip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    2;    int  numToSkip  =  input.read();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	44	None	add
487	[BUG]  [BUGGY]  long  skipd  =  available  *  numToSkip;  [CE]  cannot  find  symbol  skipped  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipd  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipd  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    skipd    =    available    *    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  skipped	12	None	replace
488	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip;  long  skipd  =  available  *  numToSkip;  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip;  long  skipd  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip;  long  skipd  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    skipd    =    available    *    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	12	None	replace
489	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip;  short  skipd  =  available  *  numToSkip;  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip;  short  skipd  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip;  short  skipd  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    skipd    =    available    *    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	12	None	replace
490	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip,  buffersize);  [CE]  cannot  find  symbol  buffersize  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip,  buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available,  numToSkip,  buffersize);	  Integer    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffersize	108	None	replace
491	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);	  Integer    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	108	None	replace
492	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available,  numToSkip,  0);	  Integer    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	108	None	replace
493	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip,  bufsize);  [CE]  cannot  find  symbol  bufsize  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip,  bufsize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available,  numToSkip,  bufsize);	  Integer    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  bufsize	108	None	replace
494	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip,  available);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available,  numToSkip,  available);	  Integer    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	108	None	replace
495	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip,  n);  [CE]  cannot  find  symbol  n  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip,  n);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available,  numToSkip,  n);	  Integer    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  n	108	None	replace
496	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(numToSkip,  available);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(numToSkip,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(numToSkip,  available);	  Integer    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	108	None	replace
497	[BUG]  [BUGGY]  InputStream  input  =  input.readInput(available);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.readInput(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readInput(available);	  InputStream    input    =    input.readInput(numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	103	None	replace
498	[BUG]  [BUGGY]  InputStream  input  =  input.readInput(available,  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.readInput(available,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readInput(available,  numToSkip);	  InputStream    input    =    input.readInput(numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	103	None	replace
499	[BUG]  [BUGGY]  InputStream  input  =  input.readInput(numToSkip,  available);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.readInput(numToSkip,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readInput(numToSkip,  available);	  InputStream    input    =    input.readInput(numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	103	None	replace
500	[BUG]  [BUGGY]  InputStream  input  =  this.inputStream.readInput(numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  this.inputStream.readInput(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  this.inputStream.readInput(numToSkip);	  InputStream    input    =    input.readInput(numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	103	None	replace
501	[BUG]  [BUGGY]  InputStream  input  =  input.readInput(0,  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.readInput(0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readInput(0,  numToSkip);	  InputStream    input    =    input.readInput(numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	103	None	replace
502	[BUG]  [BUGGY]  InputStream  input  =  input.readInput(available  +  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.readInput(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readInput(available  +  numToSkip);	  InputStream    input    =    input.readInput(numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	103	None	replace
503	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  [CE]  possible  loss  of  precision  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();	  long    skipped    =    input.skip(available    -    numToSkip);    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
504	[BUG]  [BUGGY]  long  skipped  =  this.input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  this.input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  this.input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();	  long    skipped    =    input.skip(available    -    numToSkip);    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	8	None	replace
505	[BUG]  [BUGGY]  int  skipped  =  this.input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  this.input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  this.input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();	  long    skipped    =    input.skip(available    -    numToSkip);    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	8	None	replace
506	[BUG]  [BUGGY]  Input  input  =  this.input.readInput();  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Input  input  =  this.input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Input  input  =  this.input.readInput();	  long    skipped    =    input.skip(available    -    numToSkip);    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
507	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(numToSkip  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(numToSkip  -  numToSkip);	  long    skipped    =    available.skip(numToSkip    -    numToSkip);    	compilable	  [FE]  AssertionError  	84	3	replace
508	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip  -  numToSkip);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(numToSkip  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(numToSkip  -  numToSkip);	  long    skipped    =    available.skip(numToSkip    -    numToSkip);    	compilable	  [FE]  AssertionError  	84	3	replace
509	[BUG]  [BUGGY]  long  skipped  =  available.skip(available  -  numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(available  -  numToSkip);	  long    skipped    =    available.skip(numToSkip    -    numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	84	None	replace
510	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(numToSkip  -  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(numToSkip  -  available);	  long    skipped    =    available.skip(numToSkip    -    numToSkip);    	compilable	  [FE]  AssertionError  	84	3	replace
511	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip  -  available);  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(numToSkip  -  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(numToSkip  -  available);	  long    skipped    =    available.skip(numToSkip    -    numToSkip);    	compilable	  [FE]  AssertionError  	84	3	replace
512	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  int  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  int  numToSkip  =  input.length();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip)+  1;  int  numToSkip  =  input.length();	  long    skipped    =    input.skip(available    -    numToSkip);    int    numToSkip    =    input.length();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	7	None	replace
513	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0);  int  numToSkip  =  input.length();  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0);  int  numToSkip  =  input.length();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip,  0);  int  numToSkip  =  input.length();	  long    skipped    =    input.skip(available    -    numToSkip);    int    numToSkip    =    input.length();    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	7	None	replace
514	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  int  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  int  numToSkip  =  input.length();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip  +  1);  int  numToSkip  =  input.length();	  long    skipped    =    input.skip(available    -    numToSkip);    int    numToSkip    =    input.length();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	7	None	replace
515	[BUG]  [BUGGY]  InputStream  input  =  this.input.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  this.input.getInputStream();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  this.input.getInputStream();	  long    skipped    =    input.skip(available);    InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	23	None	replace
516	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  InputStream  input  =  this.input.getInputStream();  [CE]  possible  loss  of  precision  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  InputStream  input  =  this.input.getInputStream();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  InputStream  input  =  this.input.getInputStream();	  long    skipped    =    input.skip(available);    InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  possible  loss  of  precision	23	None	replace
517	[BUG]  [BUGGY]  long  skipped  =  this.input.skip(available);  InputStream  input  =  this.input.getInputStream();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  this.input.skip(available);  InputStream  input  =  this.input.getInputStream();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  this.input.skip(available);  InputStream  input  =  this.input.getInputStream();	  long    skipped    =    input.skip(available);    InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	23	None	replace
518	[BUG]  [BUGGY]  long  skipped  =  available.skip(numToSkip);  InputStream  input  =  this.input.getInputStream();  [CE]  long  cannot  be  dereferenced  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skip(numToSkip);  InputStream  input  =  this.input.getInputStream();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(numToSkip);  InputStream  input  =  this.input.getInputStream();	  long    skipped    =    input.skip(available);    InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  long  cannot  be  dereferenced	23	None	replace
519	[BUG]  [BUGGY]  long  skipped  =  input.available  /  numToSkip;  [CE]  cannot  find  symbol  available  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.available  /  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.available  /  numToSkip;	  long    skipped    =    input.available    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	55	None	replace
520	[BUG]  [BUGGY]  long  skipped  =  input.available  -  numToSkip;  [CE]  cannot  find  symbol  available  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.available  -  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.available  -  numToSkip;	  long    skipped    =    input.available    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	55	None	replace
521	[BUG]  [BUGGY]  long  skipped  =  numToSkip  +  input.available;  [CE]  cannot  find  symbol  available  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  +  input.available;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  +  input.available;	  long    skipped    =    input.available    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	55	None	replace
522	[BUG]  [BUGGY]  long  skipped  =  input.available  *  numToSkip;  [CE]  cannot  find  symbol  available  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.available  *  numToSkip;	  long    skipped    =    input.available    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	55	None	replace
523	[BUG]  [BUGGY]  int  skipped  =  input.available  +  numToSkip;  [CE]  cannot  find  symbol  available  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.available  +  numToSkip;	  long    skipped    =    input.available    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	55	None	replace
524	[BUG]  [BUGGY]  InputStream  input  =  getInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  getInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  getInput();	  long    skipped    =    input.skip(available);    InputStream    input    =    getInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	160	None	replace
525	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  InputStream  input  =  getInput();  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  InputStream  input  =  getInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  InputStream  input  =  getInput();	  long    skipped    =    input.skip(available);    InputStream    input    =    getInput();    	non-compiled	[CE]  possible  loss  of  precision	160	None	replace
526	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip);  InputStream  input  =  getInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(numToSkip);  InputStream  input  =  getInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(numToSkip);  InputStream  input  =  getInput();	  long    skipped    =    input.skip(available);    InputStream    input    =    getInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	160	None	replace
527	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  InputStream  input  =  getInput();  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  InputStream  input  =  getInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip);  InputStream  input  =  getInput();	  long    skipped    =    input.skip(available);    InputStream    input    =    getInput();    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	160	None	replace
528	[BUG]  [BUGGY]  long  skipped  =  available.skip(input);  InputStream  input  =  getInput();  [CE]  long  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skip(input);  InputStream  input  =  getInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(input);  InputStream  input  =  getInput();	  long    skipped    =    input.skip(available);    InputStream    input    =    getInput();    	non-compiled	[CE]  long  cannot  be  dereferenced	160	None	replace
529	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  InputStream  input  =  this.input.readInput();  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  InputStream  input  =  this.input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  InputStream  input  =  this.input.readInput();	  long    skipped    =    input.skip(available);    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  possible  loss  of  precision	21	None	replace
530	[BUG]  [BUGGY]  long  skipped  =  this.input.skip(available);  InputStream  input  =  this.input.readInput();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  this.input.skip(available);  InputStream  input  =  this.input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  this.input.skip(available);  InputStream  input  =  this.input.readInput();	  long    skipped    =    input.skip(available);    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	21	None	replace
531	[BUG]  [BUGGY]  long  skipped  =  this.input.skip(numToSkip);  InputStream  input  =  this.input.readInput();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  this.input.skip(numToSkip);  InputStream  input  =  this.input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  this.input.skip(numToSkip);  InputStream  input  =  this.input.readInput();	  long    skipped    =    input.skip(available);    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	21	None	replace
532	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  int  available  =  input.read();  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  int  available  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  int  available  =  input.read();	  long    skipped    =    input.skip(available);    int    available    =    input.read();    	non-compiled	[CE]  possible  loss  of  precision	136	None	replace
533	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  int  available  =  input.read();  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  int  available  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip);  int  available  =  input.read();	  long    skipped    =    input.skip(available);    int    available    =    input.read();    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	136	None	replace
534	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available);  int  available  =  input.read();  [CE]  incompatible  types  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available);  int  available  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available);  int  available  =  input.read();	  long    skipped    =    input.skip(available);    int    available    =    input.read();    	non-compiled	[CE]  incompatible  types	136	None	replace
535	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip);  int  available  =  input.read();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(numToSkip);  int  available  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(numToSkip);  int  available  =  input.read();	  long    skipped    =    input.skip(available);    int    available    =    input.read();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	136	None	replace
536	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read();	  long    skipped    =    input.skip(available);    int    available    =    input.read();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	136	None	replace
537	[BUG]  [BUGGY]  int  skipped  =  input.skip(available,  numToSkip,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available,  numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available,  numToSkip,  0);	  long    skipped    =    input.skip(available,    numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	94	None	replace
538	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  0,  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  0,  numToSkip);	  long    skipped    =    input.skip(available,    numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	94	None	replace
539	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip,  0);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available,  numToSkip,  0);	  long    skipped    =    input.skip(available,    numToSkip,    0);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	94	None	replace
540	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  0,  available);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  0,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  0,  available);	  long    skipped    =    input.skip(available,    numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	94	None	replace
541	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  0,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  0,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  0,  0);	  long    skipped    =    input.skip(available,    numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	94	None	replace
542	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip,  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    +    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	122	None	replace
543	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	double  skipped  =  input.skip(available  +  numToSkip);	  int    skipped    =    input.skip(available    +    numToSkip);    	compilable	  [FE]  AssertionError  	54	3	replace
544	[BUG]  [BUGGY]  double  skipped  =  input.skip(available  +  numToSkip);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double  skipped  =  input.skip(available  +  numToSkip);	  int    skipped    =    input.skip(available    +    numToSkip);    	compilable	  [FE]  AssertionError  	54	3	replace
545	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	float  skipped  =  input.skip(available  +  numToSkip);	  int    skipped    =    input.skip(available    +    numToSkip);    	compilable	  [FE]  AssertionError  	54	3	replace
546	[BUG]  [BUGGY]  float  skipped  =  input.skip(available  +  numToSkip);  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float  skipped  =  input.skip(available  +  numToSkip);	  int    skipped    =    input.skip(available    +    numToSkip);    	compilable	  [FE]  AssertionError  	54	3	replace
547	[BUG]  [BUGGY]  char  skipped  =  input.skip(available  +  numToSkip);  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  char  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	char  skipped  =  input.skip(available  +  numToSkip);	  int    skipped    =    input.skip(available    +    numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	54	None	replace
548	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  /  numToSkip);  [CE]  possible  loss  of  precision  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  /  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  /  numToSkip);	  int    skipped    =    input.skip(available    +    numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	54	None	replace
549	[BUG]  [BUGGY]  int  skipped  =  input.skipToSkip(numToSkip);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skipToSkip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skipToSkip(numToSkip);	  int    skipped    =    input.skipToSkip(available);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
550	[BUG]  [BUGGY]  int  skipped  =  available.skipToSkip(INIT_SIZE);  [CE]  cannot  find  symbol  INIT_SIZE  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available.skipToSkip(INIT_SIZE);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available.skipToSkip(INIT_SIZE);	  int    skipped    =    input.skipToSkip(available);    	non-compiled	[CE]  cannot  find  symbol  INIT_SIZE	62	None	replace
551	[BUG]  [BUGGY]  long  skipped  =  numToSkip  +  available.skipToSkip;  [CE]  long  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  +  available.skipToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  +  available.skipToSkip;	  long    skipped    =    numToSkip    +    input.skipToSkip;    	non-compiled	[CE]  long  cannot  be  dereferenced	56	None	replace
552	[BUG]  [BUGGY]  long  skipped  =  numToSkip  +  input.size;  [CE]  cannot  find  symbol  size  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  +  input.size;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  +  input.size;	  long    skipped    =    numToSkip    +    input.skipToSkip;    	non-compiled	[CE]  cannot  find  symbol  size	56	None	replace
553	[BUG]  [BUGGY]  long  skipped  =  numToSkip  +  input.getSize();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  +  input.getSize();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  +  input.getSize();	  long    skipped    =    numToSkip    +    input.skipToSkip;    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
554	[BUG]  [BUGGY]  long  skipped  =  numToSkip  +  input.skippedToSkip;  [CE]  cannot  find  symbol  skippedToSkip  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  +  input.skippedToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  +  input.skippedToSkip;	  long    skipped    =    numToSkip    +    input.skipToSkip;    	non-compiled	[CE]  cannot  find  symbol  skippedToSkip	56	None	replace
555	[BUG]  [BUGGY]  long  skipped  =  numToSkip  +  input.getCharacterIndex();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  +  input.getCharacterIndex();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  +  input.getCharacterIndex();	  long    skipped    =    numToSkip    +    input.skipToSkip;    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
556	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip;  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip;	  long    skipped    =    input.skip(available    +    numToSkip);    long    skipped    =    input.skip(available    +    numToSkip;    	non-compiled	[CE]  ')'  expected	150	None	replace
557	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  2);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  -  numToSkip  +  2);	  long    skipped    =    input.skip(available    -    numToSkip    +    1);    	compilable	  [FE]  AssertionError  	80	3	replace
558	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  2);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  2);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip  +  2);	  long    skipped    =    input.skip(available    -    numToSkip    +    1);    	compilable	  [FE]  AssertionError  	80	3	replace
559	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  *  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  -  numToSkip  *  1);	  long    skipped    =    input.skip(available    -    numToSkip    +    1);    	compilable	  [FE]  AssertionError  	80	3	replace
560	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  *  1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  *  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip  *  1);	  long    skipped    =    input.skip(available    -    numToSkip    +    1);    	compilable	  [FE]  AssertionError  	80	3	replace
561	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip  +  1);  [CE]  possible  loss  of  precision  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  -  numToSkip  +  1);	  long    skipped    =    input.skip(available    -    numToSkip    +    1);    	non-compiled	[CE]  possible  loss  of  precision	80	None	replace
562	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.skippedToSkip;  [CE]  cannot  find  symbol  skippedToSkip  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.skippedToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.skippedToSkip;	  long    skipped    =    input.skippedToSkip    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  skippedToSkip	125	None	replace
563	[BUG]  [BUGGY]  long  skipped  =  input.skippedToSkip  +  available;  [CE]  cannot  find  symbol  skippedToSkip  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skippedToSkip  +  available;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skippedToSkip  +  available;	  long    skipped    =    input.skippedToSkip    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  skippedToSkip	125	None	replace
564	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(buffer,  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(buffer,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(buffer,  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.read(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	123	None	replace
565	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(0,  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(0,  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.read(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	123	None	replace
566	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(skipped);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(skipped);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(skipped);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.read(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	123	None	replace
567	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(buffersize);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(buffersize);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.read(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	123	None	replace
568	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  Long  available  =  input.skip(numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available);  Long  available  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available);  Long  available  =  input.skip(numToSkip);	  long    skipped    =    input.skip(available);    Long    available    =    input.skip(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	133	None	replace
569	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip);  Long  available  =  input.skip(available);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(numToSkip);  Long  available  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(numToSkip);  Long  available  =  input.skip(available);	  long    skipped    =    input.skip(available);    Long    available    =    input.skip(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	133	None	replace
570	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  Long  available  =  input.skip(available);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  Long  available  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip);  Long  available  =  input.skip(available);	  long    skipped    =    input.skip(available);    Long    available    =    input.skip(available);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	133	None	replace
571	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available);  Long  available  =  input.skip(available);  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available);  Long  available  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available);  Long  available  =  input.skip(available);	  long    skipped    =    input.skip(available);    Long    available    =    input.skip(available);    	non-compiled	[CE]  incompatible  types	133	None	replace
572	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  Integer  available  =  input.skip(available);  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  Integer  available  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  Integer  available  =  input.skip(available);	  long    skipped    =    input.skip(available);    Long    available    =    input.skip(available);    	non-compiled	[CE]  possible  loss  of  precision	133	None	replace
573	[BUG]  [BUGGY]  long  skipped  =  available.skip(input);  Long  available  =  input.skip(numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skip(input);  Long  available  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(input);  Long  available  =  input.skip(numToSkip);	  long    skipped    =    input.skip(available);    Long    available    =    input.skip(available);    	non-compiled	[CE]  long  cannot  be  dereferenced	133	None	replace
574	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available);  Long  available  =  input.skip(numToSkip);  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available);  Long  available  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available);  Long  available  =  input.skip(numToSkip);	  long    skipped    =    input.skip(available);    Long    available    =    input.skip(available);    	non-compiled	[CE]  incompatible  types	133	None	replace
575	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip  +  2;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip  +  2;	  long    skipped    =    available    *    numToSkip    +    2;    	non-compiled	[CE]  possible  loss  of  precision	45	None	replace
576	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  /  numToSkip  -  1;	  long    skipped    =    available    *    numToSkip    -    1;    	compilable	  [FE]  AssertionError  	156	3	replace
577	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip  -  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  /  numToSkip  -  1;	  long    skipped    =    available    *    numToSkip    -    1;    	compilable	  [FE]  AssertionError  	156	3	replace
578	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  /  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  *  numToSkip  /  1;	  long    skipped    =    available    *    numToSkip    -    1;    	compilable	  [FE]  AssertionError  	156	3	replace
579	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  /  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  /  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  /  1;	  long    skipped    =    available    *    numToSkip    -    1;    	compilable	  [FE]  AssertionError  	156	3	replace
580	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  -  1  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  *  numToSkip  -  1  +  1;	  long    skipped    =    available    *    numToSkip    -    1;    	compilable	  [FE]  AssertionError  	156	3	replace
581	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  -  1  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  -  1  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  -  1  +  1;	  long    skipped    =    available    *    numToSkip    -    1;    	compilable	  [FE]  AssertionError  	156	3	replace
582	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip  -  1;  [CE]  possible  loss  of  precision  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip  -  1;	  long    skipped    =    available    *    numToSkip    -    1;    	non-compiled	[CE]  possible  loss  of  precision	156	None	replace
583	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  -  1L;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  *  numToSkip  -  1L;	  long    skipped    =    available    *    numToSkip    -    1;    	compilable	  [FE]  AssertionError  	156	3	replace
584	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  -  1L;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  -  1L;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  -  1L;	  long    skipped    =    available    *    numToSkip    -    1;    	compilable	  [FE]  AssertionError  	156	3	replace
585	[BUG]  [BUGGY]  long  skipped  =  available.skip(input,  numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skip(input,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(input,  numToSkip);	  long    skipped    =    available.skip(available,    numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	86	None	replace
586	[BUG]  [BUGGY]  long  skipped  =  available.skip(numToSkip,  numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skip(numToSkip,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(numToSkip,  numToSkip);	  long    skipped    =    available.skip(available,    numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	86	None	replace
587	[BUG]  [BUGGY]  long  skipped  =  numToSkip.skip(available,  numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip.skip(available,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip.skip(available,  numToSkip);	  long    skipped    =    available.skip(available,    numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	86	None	replace
588	[BUG]  [BUGGY]  long  skipped  =  available.skip(available,  numToSkip  +  1);  [CE]  long  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skip(available,  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(available,  numToSkip  +  1);	  long    skipped    =    available.skip(available,    numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	86	None	replace
589	[BUG]  [BUGGY]  long  skipped  =  available.skip(available,  numToSkip,  buffersize);  [CE]  cannot  find  symbol  buffersize  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skip(available,  numToSkip,  buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(available,  numToSkip,  buffersize);	  long    skipped    =    available.skip(available,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffersize	86	None	replace
590	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  long  skipped  =  available  +  numToSkip  *  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  long  skipped  =  available  +  numToSkip  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    *    numToSkip;    long  skipped  =  available  +  numToSkip  *  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	75	None	add
591	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  Long  skipped  =  available  +  numToSkip  *  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  Long  skipped  =  available  +  numToSkip  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    *    numToSkip;    Long  skipped  =  available  +  numToSkip  *  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	75	None	add
592	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  long  skipd  =  available  +  numToSkip  *  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  long  skipd  =  available  +  numToSkip  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    *    numToSkip;    long  skipd  =  available  +  numToSkip  *  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	75	None	add
593	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  long  available  =  available  +  numToSkip  *  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  long  available  =  available  +  numToSkip  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    *    numToSkip;    long  available  =  available  +  numToSkip  *  numToSkip;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	75	None	add
594	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  int  numToSkip  =  available  +  numToSkip  *  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  int  numToSkip  =  available  +  numToSkip  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    *    numToSkip;    int  numToSkip  =  available  +  numToSkip  *  numToSkip;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	75	None	add
595	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  long  skip  =  available  +  numToSkip  *  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  long  skip  =  available  +  numToSkip  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    *    numToSkip;    long  skip  =  available  +  numToSkip  *  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	75	None	add
596	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  int  numToSkip  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    *    numToSkip;    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	75	None	add
597	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  int  numToSkip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    *    numToSkip;    int  numToSkip  =  input.read();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	75	None	add
598	[BUG]  [BUGGY]  long  skip  =  available  +  numToSkip;  [CE]  cannot  find  symbol  skipped  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skip  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skip  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    skip    =    available    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  skipped	128	None	replace
599	[BUG]  [BUGGY]  int  skipped  =  available  +  numToSkip;  long  skip  =  available  +  numToSkip;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  +  numToSkip;  long  skip  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  +  numToSkip;  long  skip  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    skip    =    available    +    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	128	None	replace
600	[BUG]  [BUGGY]  int  skipped  =  available  +  numToSkip;  short  skip  =  available  +  numToSkip;  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  +  numToSkip;  short  skip  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  +  numToSkip;  short  skip  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    skip    =    available    +    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	128	None	replace
601	[BUG]  [BUGGY]  int  skipped  =  available  +  numToSkip;  int  skip  =  available  +  numToSkip;  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  +  numToSkip;  int  skip  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  +  numToSkip;  int  skip  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    skip    =    available    +    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	128	None	replace
602	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  long  skipped  =  available  *  numToSkip  +  1;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  long  skipped  =  available  *  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    1;    long  skipped  =  available  *  numToSkip  +  1;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	42	None	add
603	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  Long  skipped  =  available  *  numToSkip  +  1;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  Long  skipped  =  available  *  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    1;    Long  skipped  =  available  *  numToSkip  +  1;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	42	None	add
604	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  int  numToSkip  =  available  *  numToSkip  +  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  int  numToSkip  =  available  *  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    1;    int  numToSkip  =  available  *  numToSkip  +  1;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	42	None	add
605	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  int  skipped  =  available  *  numToSkip  +  1;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  int  skipped  =  available  *  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    1;    int  skipped  =  available  *  numToSkip  +  1;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	42	None	add
606	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  long  available  =  available  *  numToSkip  +  1;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  long  available  =  available  *  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    1;    long  available  =  available  *  numToSkip  +  1;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	42	None	add
607	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  int  numToSkip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    1;    int  numToSkip  =  input.read();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	42	None	add
608	[BUG]  [BUGGY]  InputStream  input  =  this.available.readInt();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  this.available.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  this.available.readInt();	  InputStream    input    =    input.readInt();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	141	None	replace
609	[BUG]  [BUGGY]  InputStream  input  =  this.inputStream.readInt();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  this.inputStream.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  this.inputStream.readInt();	  InputStream    input    =    input.readInt();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	141	None	replace
610	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInt();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  this.input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  this.input.readInt();	  InputStream    input    =    input.readInt();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	141	None	replace
611	[BUG]  [BUGGY]  InputStream  input  =  input.readFully(numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.readFully(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readFully(numToSkip);	  InputStream    input    =    input.readInt();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	141	None	replace
612	[BUG]  [BUGGY]  InputStream  input  =  input.readUTF();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.readUTF();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readUTF();	  InputStream    input    =    input.readInt();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	141	None	replace
613	[BUG]  [BUGGY]  InputStream  input  =  available.readInt();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  available.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  available.readInt();	  InputStream    input    =    input.readInt();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	141	None	replace
614	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  long  skipped  =  available  /  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  long  skipped  =  available  /  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    /    numToSkip;    long  skipped  =  available  /  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	40	None	add
615	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  Long  skipped  =  available  /  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  Long  skipped  =  available  /  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    /    numToSkip;    Long  skipped  =  available  /  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	40	None	add
616	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  int  numToSkip  =  available  /  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  int  numToSkip  =  available  /  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    /    numToSkip;    int  numToSkip  =  available  /  numToSkip;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	40	None	add
617	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  long  skipd  =  available  /  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  long  skipd  =  available  /  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    /    numToSkip;    long  skipd  =  available  /  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	40	None	add
618	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  int  skipped  =  available  /  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  int  skipped  =  available  /  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    /    numToSkip;    int  skipped  =  available  /  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	40	None	add
619	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  long  available  =  available  /  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  long  available  =  available  /  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    /    numToSkip;    long  available  =  available  /  numToSkip;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	40	None	add
620	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  int  numToSkip  =  available  /  numToSkip.length;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  int  numToSkip  =  available  /  numToSkip.length;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    /    numToSkip;    int  numToSkip  =  available  /  numToSkip.length;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	40	None	add
621	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  n);  [CE]  cannot  find  symbol  n  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  n);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  n);	  long    skipped    =    input.skip(available,    numToSkip,    bufsize);    	non-compiled	[CE]  cannot  find  symbol  n	96	None	replace
622	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  KEY_BUF_SIZE);  [CE]  cannot  find  symbol  KEY_BUF_SIZE  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  KEY_BUF_SIZE);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  KEY_BUF_SIZE);	  long    skipped    =    input.skip(available,    numToSkip,    bufsize);    	non-compiled	[CE]  cannot  find  symbol  KEY_BUF_SIZE	96	None	replace
623	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  c);  [CE]  cannot  find  symbol  c  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  c);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  c);	  long    skipped    =    input.skip(available,    numToSkip,    bufsize);    	non-compiled	[CE]  cannot  find  symbol  c	96	None	replace
624	[BUG]  [BUGGY]  float  skipped  =  input.skip(numToSkip);  float  skipped  =  input.skip(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(numToSkip);  float  skipped  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float    skipped    =    input.skip(numToSkip);    float  skipped  =  input.skip(numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	27	None	add
625	[BUG]  [BUGGY]  float  skipped  =  input.skip(numToSkip);  int  float  skipped  =  input.skip(numToSkip);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(numToSkip);  int  float  skipped  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float    skipped    =    input.skip(numToSkip);    int  float  skipped  =  input.skip(numToSkip);	  	non-compiled	[CE]  not  a  statement	27	None	add
626	[BUG]  [BUGGY]  float  skipped  =  input.skip(numToSkip);  float  skipd  =  input.skip(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(numToSkip);  float  skipd  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float    skipped    =    input.skip(numToSkip);    float  skipd  =  input.skip(numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	27	None	add
627	[BUG]  [BUGGY]  float  skipped  =  input.skip(numToSkip);  long  skipped  =  input.skip(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(numToSkip);  long  skipped  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float    skipped    =    input.skip(numToSkip);    long  skipped  =  input.skip(numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	27	None	add
628	[BUG]  [BUGGY]  float  skipped  =  input.skip(numToSkip);  float  skipped  =  input.skip(numToSkip).longValue();  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(numToSkip);  float  skipped  =  input.skip(numToSkip).longValue();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float    skipped    =    input.skip(numToSkip);    float  skipped  =  input.skip(numToSkip).longValue();	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	27	None	add
629	[BUG]  [BUGGY]  float  skipped  =  input.skip(numToSkip);  float  skipped  =  input.skipped(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(numToSkip);  float  skipped  =  input.skipped(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float    skipped    =    input.skip(numToSkip);    float  skipped  =  input.skipped(numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	27	None	add
630	[BUG]  [BUGGY]  float  skipped  =  input.skip(numToSkip);  float  skipped  =  output.skip(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(numToSkip);  float  skipped  =  output.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float    skipped    =    input.skip(numToSkip);    float  skipped  =  output.skip(numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	27	None	add
631	[BUG]  [BUGGY]  float  skipped  =  input.skip(numToSkip);  float  skipped  =  input.skip(numToSkip;  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(numToSkip);  float  skipped  =  input.skip(numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float    skipped    =    input.skip(numToSkip);    float  skipped  =  input.skip(numToSkip;	  	non-compiled	[CE]  ')'  expected	27	None	add
632	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  long  skipped  =  input.skip(available  -  numToSkip  +  1);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  long  skipped  =  input.skip(available  -  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip    +    1);    long  skipped  =  input.skip(available  -  numToSkip  +  1);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	79	None	add
633	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  Long  skipped  =  input.skip(available  -  numToSkip  +  1);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  Long  skipped  =  input.skip(available  -  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip    +    1);    Long  skipped  =  input.skip(available  -  numToSkip  +  1);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	79	None	add
634	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  int  numToSkip  =  input.skip(available  -  numToSkip  +  1);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  int  numToSkip  =  input.skip(available  -  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip    +    1);    int  numToSkip  =  input.skip(available  -  numToSkip  +  1);	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	79	None	add
635	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  short  skipped  =  input.skip(available  -  numToSkip  +  1);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  short  skipped  =  input.skip(available  -  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip    +    1);    short  skipped  =  input.skip(available  -  numToSkip  +  1);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	79	None	add
636	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  long  skipped  =  input.skip(available  -  numToSkip  +  1));  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  long  skipped  =  input.skip(available  -  numToSkip  +  1));  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip    +    1);    long  skipped  =  input.skip(available  -  numToSkip  +  1));	  	non-compiled	[CE]  ';'  expected	79	None	add
637	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  long  skipped  =  input.skip(available  *  numToSkip  +  1);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  long  skipped  =  input.skip(available  *  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip    +    1);    long  skipped  =  input.skip(available  *  numToSkip  +  1);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	79	None	add
638	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  long  skipped  =  input.skip(available  +  numToSkip  +  1);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  long  skipped  =  input.skip(available  +  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip    +    1);    long  skipped  =  input.skip(available  +  numToSkip  +  1);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	79	None	add
639	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(numToSkip  +  1);	  long    skipped    =    available.skip(numToSkip    +    1);    	compilable	  [FE]  AssertionError  	87	3	replace
640	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip  +  1);  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(numToSkip  +  1);	  long    skipped    =    available.skip(numToSkip    +    1);    	compilable	  [FE]  AssertionError  	87	3	replace
641	[BUG]  [BUGGY]  long  skipped  =  available.skip(available  /  numToSkip  +  1);  [CE]  long  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skip(available  /  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(available  /  numToSkip  +  1);	  long    skipped    =    available.skip(numToSkip    +    1);    	non-compiled	[CE]  long  cannot  be  dereferenced	87	None	replace
642	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  +  1);	  long    skipped    =    available.skip(numToSkip    +    1);    	compilable	  [FE]  AssertionError  	87	3	replace
643	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  1);  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  1);	  long    skipped    =    available.skip(numToSkip    +    1);    	compilable	  [FE]  AssertionError  	87	3	replace
644	[BUG]  [BUGGY]  long  skipped  =  available.skip(available  *  numToSkip  +  1);  [CE]  long  cannot  be  dereferenced  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skip(available  *  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(available  *  numToSkip  +  1);	  long    skipped    =    available.skip(numToSkip    +    1);    	non-compiled	[CE]  long  cannot  be  dereferenced	87	None	replace
645	[BUG]  [BUGGY]  long  skipped  =  numToSkip.skip(available  +  1);  [CE]  long  cannot  be  dereferenced  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip.skip(available  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip.skip(available  +  1);	  long    skipped    =    available.skip(numToSkip    +    1);    	non-compiled	[CE]  long  cannot  be  dereferenced	87	None	replace
646	[BUG]  [BUGGY]  long  skipped  =  available.skip(available  +  1);  [CE]  long  cannot  be  dereferenced  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skip(available  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(available  +  1);	  long    skipped    =    available.skip(numToSkip    +    1);    	non-compiled	[CE]  long  cannot  be  dereferenced	87	None	replace
647	[BUG]  [BUGGY]  int  skipped  =  available.skip(available,  numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available.skip(available,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available.skip(available,  numToSkip);	  int    skipped    =    available.skip(numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	116	None	replace
648	[BUG]  [BUGGY]  int  skipped  =  numToSkip.skip(available);  [CE]  long  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  numToSkip.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  numToSkip.skip(available);	  int    skipped    =    available.skip(numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	116	None	replace
649	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  LOW_BUF_SIZE);  [CE]  cannot  find  symbol  LOW_BUF_SIZE  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  LOW_BUF_SIZE);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  LOW_BUF_SIZE);	  long    skipped    =    input.skip(available,    numToSkip,    buffersize);    	non-compiled	[CE]  cannot  find  symbol  LOW_BUF_SIZE	91	None	replace
650	[BUG]  [BUGGY]  int  numToSkip  =  available  *  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  numToSkip  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  numToSkip  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    available    *    numToSkip;    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	11	None	replace
651	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  int  numToSkip  =  available  *  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  int  numToSkip  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  /  numToSkip;  int  numToSkip  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    available    *    numToSkip;    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	11	None	replace
652	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  int  numToSkip  =  available  *  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  int  numToSkip  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  1;  int  numToSkip  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    available    *    numToSkip;    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	11	None	replace
653	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  *  numToSkip  +  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  *  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  *  numToSkip  +  1;	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    available    *    numToSkip;    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	11	None	replace
654	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  *  numToSkip.length;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  *  numToSkip.length;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  *  numToSkip.length;	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    available    *    numToSkip;    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	11	None	replace
655	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip;  InputStream  input  =  input.readInput();  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip;  InputStream  input  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip;  InputStream  input  =  input.readInput();	  long    skipped    =    available    *    numToSkip;    InputStream    input    =    input.readInput();    	non-compiled	[CE]  possible  loss  of  precision	152	None	replace
656	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  InputStream  input  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  /  numToSkip;  InputStream  input  =  input.readInput();	  long    skipped    =    available    *    numToSkip;    InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	152	None	replace
657	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  InputStream  input  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  1;  InputStream  input  =  input.readInput();	  long    skipped    =    available    *    numToSkip;    InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	152	None	replace
658	[BUG]  [BUGGY]  int  available  =  input.skip(available  -  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  available  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  available  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	4	None	replace
659	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0);  int  available  =  input.skip(available  -  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0);  int  available  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip,  0);  int  available  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	4	None	replace
660	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.skip(available  -  numToSkip,  skipped);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.skip(available  -  numToSkip,  skipped);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.skip(available  -  numToSkip,  skipped);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	4	None	replace
661	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.skip(available  -  numToSkip  +  1);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.skip(available  -  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.skip(available  -  numToSkip  +  1);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	4	None	replace
662	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  int  available  =  input.skip(available  -  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  int  available  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip)+  1;  int  available  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	4	None	replace
663	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  int  available  =  input.skip(available  -  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  int  available  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip  +  1);  int  available  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	4	None	replace
664	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  int  numToSkip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  /  numToSkip;  int  numToSkip  =  input.read();	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	15	None	replace
665	[BUG]  [BUGGY]  long  skipped  =  numToSkip  *  available;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  *  available;  int  numToSkip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  *  available;  int  numToSkip  =  input.read();	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	15	None	replace
666	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read(numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read(numToSkip);	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	15	None	replace
667	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read(0,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read(0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read(0,  numToSkip);	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	15	None	replace
668	[BUG]  [BUGGY]  int  numToSkip  =  input.read(available  +  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  numToSkip  =  input.read(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  numToSkip  =  input.read(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read(available    +    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	68	None	replace
669	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.read(available  /  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.read(available  /  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.read(available  /  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read(available    +    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	68	None	replace
670	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.read(available  +  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.read(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.read(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read(available    +    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	68	None	replace
671	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(available  +  numToSkip,  skipped);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(available  +  numToSkip,  skipped);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(available  +  numToSkip,  skipped);	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read(available    +    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	68	None	replace
672	[BUG]  [BUGGY]  Integer  numToSkip  =  input.read(available  +  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  numToSkip  =  input.read(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  numToSkip  =  input.read(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read(available    +    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	68	None	replace
673	[BUG]  [BUGGY]  Long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readInt();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	35	None	replace
674	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip;  long  skipped  =  available  -  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip;  long  skipped  =  available  -  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    -    numToSkip;    long  skipped  =  available  -  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	46	None	add
675	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip;  Long  skipped  =  available  -  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip;  Long  skipped  =  available  -  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    -    numToSkip;    Long  skipped  =  available  -  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	46	None	add
676	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip;  int  numToSkip  =  available  -  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip;  int  numToSkip  =  available  -  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    -    numToSkip;    int  numToSkip  =  available  -  numToSkip;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	46	None	add
677	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip;  int  skipped  =  available  -  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip;  int  skipped  =  available  -  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    -    numToSkip;    int  skipped  =  available  -  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	46	None	add
678	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip;  long  skipd  =  available  -  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip;  long  skipd  =  available  -  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    -    numToSkip;    long  skipd  =  available  -  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	46	None	add
679	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip;  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip;  int  numToSkip  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    -    numToSkip;    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	46	None	add
680	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip;  int  numToSkip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    -    numToSkip;    int  numToSkip  =  input.read();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	46	None	add
681	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip;  long  skip  =  available  -  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip;  long  skip  =  available  -  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    -    numToSkip;    long  skip  =  available  -  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	46	None	add
682	[BUG]  [BUGGY]  long  skipped  =  input  *  numToSkip  +  available.getChars(0,  numToSkip);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input  *  numToSkip  +  available.getChars(0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input  *  numToSkip  +  available.getChars(0,  numToSkip);	  long    skipped    =    available    *    numToSkip    +    input.getChars(0,    numToSkip);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	140	None	replace
683	[BUG]  [BUGGY]  long  skipped  =  numToSkip  *  numToSkip  +  input.getChars(0,  numToSkip);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  *  numToSkip  +  input.getChars(0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  *  numToSkip  +  input.getChars(0,  numToSkip);	  long    skipped    =    available    *    numToSkip    +    input.getChars(0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
684	[BUG]  [BUGGY]  Long  skipped  =  available  *  numToSkip  +  input.getChars(0,  numToSkip);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  available  *  numToSkip  +  input.getChars(0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  available  *  numToSkip  +  input.getChars(0,  numToSkip);	  long    skipped    =    available    *    numToSkip    +    input.getChars(0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
685	[BUG]  [BUGGY]  long  skipped  =  numToSkip  *  available  +  input.getChars(0,  numToSkip);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  *  available  +  input.getChars(0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  *  available  +  input.getChars(0,  numToSkip);	  long    skipped    =    available    *    numToSkip    +    input.getChars(0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
686	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input,  input.getChars(0,  numToSkip);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  input,  input.getChars(0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input,  input.getChars(0,  numToSkip);	  long    skipped    =    available    *    numToSkip    +    input.getChars(0,    numToSkip);    	non-compiled	[CE]  ';'  expected	140	None	replace
687	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(0,  numToSkip).longValue();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(0,  numToSkip).longValue();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.getChars(0,  numToSkip).longValue();	  long    skipped    =    available    *    numToSkip    +    input.getChars(0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
688	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  long  available  =  available  *  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  long  available  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  /  numToSkip;  long  available  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    available    =    available    *    numToSkip;    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	105	None	replace
689	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  long  available  =  available  *  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  long  available  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  1;  long  available  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    available    =    available    *    numToSkip;    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	105	None	replace
690	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  int  available  =  available  *  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip;  int  available  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;  int  available  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    available    =    available    *    numToSkip;    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	105	None	replace
691	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  short  available  =  available  *  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip;  short  available  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;  short  available  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    available    =    available    *    numToSkip;    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	105	None	replace
692	[BUG]  [BUGGY]  long  skipped  =  numToSkip  *  available;  long  available  =  available  *  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  *  available;  long  available  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  *  available;  long  available  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    available    =    available    *    numToSkip;    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	105	None	replace
693	[BUG]  [BUGGY]  long  skipped  =  numToSkip  +  available;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  +  available;  int  numToSkip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  +  available;  int  numToSkip  =  input.read();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	36	None	replace
694	[BUG]  [BUGGY]  Long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.read();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	36	None	replace
695	[BUG]  [BUGGY]  int  skipped  =  available  +  numToSkip;  InputStream  input  =  input.readInput();  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  +  numToSkip;  InputStream  input  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  +  numToSkip;  InputStream  input  =  input.readInput();	  long    skipped    =    available    +    numToSkip;    InputStream    input    =    input.readInput();    	non-compiled	[CE]  possible  loss  of  precision	145	None	replace
696	[BUG]  [BUGGY]  InputStream  input  =  input.readInput();  if(numToSkip  >  0)  {  skipped  =  available  +  numToSkip;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.readInput();  if(numToSkip  >  0)  {  skipped  =  available  +  numToSkip;  }  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readInput();  if(numToSkip  >  0)  {  skipped  =  available  +  numToSkip;  }	  long    skipped    =    available    +    numToSkip;    InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	145	None	replace
697	[BUG]  [BUGGY]  InputStream  input  =  input.readInput();  if(numToSkip  >  0)  {  skip  =  available  +  numToSkip;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.readInput();  if(numToSkip  >  0)  {  skip  =  available  +  numToSkip;  }  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readInput();  if(numToSkip  >  0)  {  skip  =  available  +  numToSkip;  }	  long    skipped    =    available    +    numToSkip;    InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	145	None	replace
698	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip,  0);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip,  0);	  long    skipped    =    available    *    numToSkip    +    input.getChars(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
699	[BUG]  [BUGGY]  long  skipped  =  input  *  numToSkip  +  available.getChars(numToSkip);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input  *  numToSkip  +  available.getChars(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input  *  numToSkip  +  available.getChars(numToSkip);	  long    skipped    =    available    *    numToSkip    +    input.getChars(numToSkip);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	139	None	replace
700	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip,  n);  [CE]  cannot  find  symbol  n  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip,  n);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip,  n);	  long    skipped    =    available    *    numToSkip    +    input.getChars(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  n	139	None	replace
701	[BUG]  [BUGGY]  long  skipped  =  numToSkip  *  numToSkip  +  input.getChars(numToSkip);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  *  numToSkip  +  input.getChars(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  *  numToSkip  +  input.getChars(numToSkip);	  long    skipped    =    available    *    numToSkip    +    input.getChars(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
702	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip,  -1);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip,  -1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip,  -1);	  long    skipped    =    available    *    numToSkip    +    input.getChars(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
703	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip)+  1;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip)+  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip)+  1;	  long    skipped    =    available    *    numToSkip    +    input.getChars(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
704	[BUG]  [BUGGY]  int  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  numToSkip  =  input.size();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  numToSkip  =  input.size();	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	151	None	replace
705	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.size();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  /  numToSkip);  int  numToSkip  =  input.size();	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	151	None	replace
706	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  int  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  int  numToSkip  =  input.size();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  *  numToSkip);  int  numToSkip  =  input.size();	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	151	None	replace
707	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.size();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.size();	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	151	None	replace
708	[BUG]  [BUGGY]  int  skipped  =  input.skip(available,  numToSkip,  buffersize);  [CE]  cannot  find  symbol  buffersize  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available,  numToSkip,  buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available,  numToSkip,  buffersize);	  int    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffersize	90	None	replace
709	[BUG]  [BUGGY]  int  skipped  =  available.skip(input,  numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available.skip(input,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available.skip(input,  numToSkip);	  int    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	90	None	replace
710	[BUG]  [BUGGY]  int  skipped  =  input.skip(available,  numToSkip,  bufsize);  [CE]  cannot  find  symbol  bufsize  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available,  numToSkip,  bufsize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available,  numToSkip,  bufsize);	  int    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  bufsize	90	None	replace
711	[BUG]  [BUGGY]  int  skipped  =  numToSkip.skip(input,  numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  numToSkip.skip(input,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  numToSkip.skip(input,  numToSkip);	  int    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	90	None	replace
712	[BUG]  [BUGGY]  int  skipped  =  input.skip(available,  numToSkip,  available);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available,  numToSkip,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available,  numToSkip,  available);	  int    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	90	None	replace
713	[BUG]  [BUGGY]  int  available  =  input.read(available  -  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  available  =  input.read(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  available  =  input.read(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.read(available    -    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	5	None	replace
714	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available  -  numToSkip,  skipped);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available  -  numToSkip,  skipped);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available  -  numToSkip,  skipped);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.read(available    -    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	5	None	replace
715	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0);  int  available  =  input.read(available  -  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0);  int  available  =  input.read(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip,  0);  int  available  =  input.read(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.read(available    -    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	5	None	replace
716	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available  -  numToSkip  +  1);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available  -  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available  -  numToSkip  +  1);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.read(available    -    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	5	None	replace
717	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  int  available  =  input.read(available  -  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  int  available  =  input.read(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip)+  1;  int  available  =  input.read(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.read(available    -    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	5	None	replace
718	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  int  available  =  input.read(available  -  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  int  available  =  input.read(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip  +  1);  int  available  =  input.read(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.read(available    -    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	5	None	replace
719	[BUG]  [BUGGY]  Long  skipped  =  available.skip(numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  available.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  available.skip(numToSkip);	  long    skipped    =    numToSkip.skip(available);    	non-compiled	[CE]  long  cannot  be  dereferenced	88	None	replace
720	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip).longValue();  [CE]  long  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip).longValue();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  /  numToSkip).longValue();	  long    skipped    =    input.skip(available    +    numToSkip);    long    skipped    =    input.skip(available    +    numToSkip).longValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	70	None	replace
721	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  0;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  +  numToSkip  *  0;	  long    skipped    =    available    +    numToSkip    *    numToSkip;    	compilable	  [FE]  AssertionError  	76	3	replace
722	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  *  0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  0;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip  *  0;	  long    skipped    =    available    +    numToSkip    *    numToSkip;    	compilable	  [FE]  AssertionError  	76	3	replace
723	[BUG]  [BUGGY]  InputStream  skipped  =  available  *  numToSkip;  InputStream  input  =  input.readInput();  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  available  *  numToSkip;  InputStream  input  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  available  *  numToSkip;  InputStream  input  =  input.readInput();	  long    skipped    =    available    +    numToSkip;    InputStream    input    =    input.readInput();    	non-compiled	[CE]  incompatible  types	145	None	replace
724	[BUG]  [BUGGY]  Integer  numToSkip  =  input.skip(available  -  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  numToSkip  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  numToSkip  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    numToSkip    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	3	None	replace
725	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  long  numToSkip  =  available  *  numToSkip  +  2;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  long  numToSkip  =  available  *  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    2;    long  numToSkip  =  available  *  numToSkip  +  2;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	44	None	add
726	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  int  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  int  numToSkip  =  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    2;    int  numToSkip  =  input.readLine();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	44	None	add
727	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip);  Long  skipped  =  input.skip(available  -  numToSkip);  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip);  Long  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  -  numToSkip);  Long  skipped  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    Long    skipped    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
728	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available  -  numToSkip);  Long  skipped  =  input.skip(available  -  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(available  -  numToSkip);  Long  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available  -  numToSkip);  Long  skipped  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    Long    skipped    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	2	None	replace
729	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip);  Integer  skipped  =  input.skip(available  -  numToSkip);  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip);  Integer  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  -  numToSkip);  Integer  skipped  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    Long    skipped    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
730	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  int  skipped  =  available  *  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  int  skipped  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  /  numToSkip;  int  skipped  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    int    skipped    =    available    *    numToSkip;    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	13	None	replace
731	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  int  skipped  =  available  *  numToSkip  +  1;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip;  int  skipped  =  available  *  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;  int  skipped  =  available  *  numToSkip  +  1;	  long    skipped    =    available    *    numToSkip;    int    skipped    =    available    *    numToSkip;    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	13	None	replace
732	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  int  skipped  =  available  *  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  int  skipped  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  1;  int  skipped  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    int    skipped    =    available    *    numToSkip;    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	13	None	replace
733	[BUG]  [BUGGY]  int  skipped  =  input.readLine();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.readLine();	  int    skipped    =    input.read();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
734	[BUG]  [BUGGY]  InputStream  input  =  input.readFully();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.readFully();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readFully();	  InputStream    input    =    input.readInt();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	141	None	replace
735	[BUG]  [BUGGY]  InputStream  input  =  buffersize.readInt();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  buffersize.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  buffersize.readInt();	  InputStream    input    =    input.readInt();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	141	None	replace
736	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1  +  input.getChars(numToSkip);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1  +  input.getChars(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  1  +  input.getChars(numToSkip);	  long    skipped    =    available    *    numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
737	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1  +  input.getChars(0,  numToSkip);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1  +  input.getChars(0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  1  +  input.getChars(0,  numToSkip);	  long    skipped    =    available    *    numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
738	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1  +  input.getCharacterEncoding();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1  +  input.getCharacterEncoding();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  1  +  input.getCharacterEncoding();	  long    skipped    =    available    *    numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
739	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip-1);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip-1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available,  numToSkip-1);	  InputStream    available    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
740	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip  +  2);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip  +  2);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available,  numToSkip  +  2);	  InputStream    available    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
741	[BUG]  [BUGGY]  int  skipped  =  available.skip(available);  [CE]  long  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available.skip(available);	  int    skipped    =    available.skip(numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	116	None	replace
742	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip;  int  skip  =  available  *  numToSkip;  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip;  int  skip  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip;  int  skip  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    skip    =    available    *    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	153	None	replace
743	[BUG]  [BUGGY]  short  skipped  =  available  *  numToSkip;  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  short  skipped  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	short  skipped  =  available  *  numToSkip;	  int    skipped    =    available    *    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	48	None	replace
744	[BUG]  [BUGGY]  InputStream  input  =  this.inputStream.readIn();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  this.inputStream.readIn();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  this.inputStream.readIn();	  InputStream    input    =    input.readIn();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	163	None	replace
745	[BUG]  [BUGGY]  InputStream  input  =  input.readFully(available);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.readFully(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readFully(available);	  InputStream    input    =    input.readIn();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	163	None	replace
746	[BUG]  [BUGGY]  InputStream  input  =  input.readIn(available);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.readIn(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readIn(available);	  InputStream    input    =    input.readIn();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	163	None	replace
747	[BUG]  [BUGGY]  Long  skipped  =  input.skip(numToSkip,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  input.skip(numToSkip,  0);	  long    skipped    =    available.skip(numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	85	None	replace
748	[BUG]  [BUGGY]  short  skipped  =  input.skip(numToSkip,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  short  skipped  =  input.skip(numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	short  skipped  =  input.skip(numToSkip,  0);	  long    skipped    =    available.skip(numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	85	None	replace
749	[BUG]  [BUGGY]  short  skipped  =  input.skip(available  -  numToSkip);  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  short  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	short  skipped  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	1	None	replace
750	[BUG]  [BUGGY]  InputStream  input  =  outputStream.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  outputStream.getInputStream();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  outputStream.getInputStream();	  InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	100	None	replace
751	[BUG]  [BUGGY]  InputStream  input  =  this.inputStream.readLine();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  this.inputStream.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  this.inputStream.readLine();	  InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	100	None	replace
752	[BUG]  [BUGGY]  InputStream  input  =  input.getInputStream(available);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.getInputStream(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.getInputStream(available);	  InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	100	None	replace
753	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available  +  numToSkip,  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(available  +  numToSkip,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available  +  numToSkip,  numToSkip);	  InputStream    available    =    input.skip(numToSkip,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	95	None	replace
754	[BUG]  [BUGGY]  InputStream  available  =  input.skipWithZero(available,  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skipWithZero(available,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skipWithZero(available,  numToSkip);	  InputStream    available    =    input.skip(numToSkip,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	95	None	replace
755	[BUG]  [BUGGY]  InputStream  available  =  input.seek(available,  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.seek(available,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.seek(available,  numToSkip);	  InputStream    available    =    input.skip(numToSkip,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	95	None	replace
756	[BUG]  [BUGGY]  InputStream  available  =  input.skipSkip(available,  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skipSkip(available,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skipSkip(available,  numToSkip);	  InputStream    available    =    input.skip(numToSkip,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	95	None	replace
757	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available  +  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available  +  numToSkip);	  InputStream    available    =    input.skip(numToSkip,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	95	None	replace
758	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  int  available  =  input.skip(available  +  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available);  int  available  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available);  int  available  =  input.skip(available  +  numToSkip);	  long    skipped    =    input.skip(available);    int    available    =    input.skip(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	20	None	replace
759	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  int  available  =  input.skip(available  -  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available);  int  available  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available);  int  available  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available);    int    available    =    input.skip(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	20	None	replace
760	[BUG]  [BUGGY]  long  skipped  =  available.skipToSkip(available);  [CE]  long  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skipToSkip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skipToSkip(available);	  long    skipped    =    available.skipToSkip(INIT_SIZE);    	non-compiled	[CE]  long  cannot  be  dereferenced	63	None	replace
761	[BUG]  [BUGGY]  int  skipped  =  available.skip(numToSkip  +  1);  [CE]  long  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available.skip(numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available.skip(numToSkip  +  1);	  long    skipped    =    available.skip(numToSkip    +    1);    	non-compiled	[CE]  long  cannot  be  dereferenced	87	None	replace
762	[BUG]  [BUGGY]  long  skipped  =  available.skip(available  +  numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(available  +  numToSkip);	  long    skipped    =    available.skip(numToSkip    +    1);    	non-compiled	[CE]  long  cannot  be  dereferenced	87	None	replace
763	[BUG]  [BUGGY]  long  skipped  =  available.skip(available  +  numToSkip  +  1);  [CE]  long  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available.skip(available  +  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(available  +  numToSkip  +  1);	  long    skipped    =    available.skip(numToSkip    +    1);    	non-compiled	[CE]  long  cannot  be  dereferenced	87	None	replace
764	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  short  numToSkip  =  available  *  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip;  short  numToSkip  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;  short  numToSkip  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    numToSkip    =    available    *    numToSkip;    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	106	None	replace
765	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  long  numToSkip  =  available  *  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  long  numToSkip  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  1;  long  numToSkip  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    numToSkip    =    available    *    numToSkip;    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	106	None	replace
766	[BUG]  [BUGGY]  Long  skipped  =  input.available  +  numToSkip;  [CE]  cannot  find  symbol  available  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  input.available  +  numToSkip;	  long    skipped    =    input.available    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	55	None	replace
767	[BUG]  [BUGGY]  InputStream  skipped  =  input.skip(available,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.skip(available,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.skip(available,  0);	  long    skipped    =    input.skip(available,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	164	None	replace
768	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  /  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  +  numToSkip  /  2;	  long    skipped    =    available    +    numToSkip    +    2;    	compilable	  [FE]  AssertionError  	78	3	replace
769	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  /  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  /  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip  /  2;	  long    skipped    =    available    +    numToSkip    +    2;    	compilable	  [FE]  AssertionError  	78	3	replace
770	[BUG]  [BUGGY]  InputStream  skipped  =  input.skip(available);  InputStream  input  =  input.readInput();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.skip(available);  InputStream  input  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.skip(available);  InputStream  input  =  input.readInput();	  long    skipped    =    input.skip(available);    InputStream    input    =    input.readInput();    	non-compiled	[CE]  incompatible  types	135	None	replace
771	[BUG]  [BUGGY]  n  =  input.skip(available);  InputStream  input  =  input.readInput();  [CE]  cannot  find  symbol  n  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  n  =  input.skip(available);  InputStream  input  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	n  =  input.skip(available);  InputStream  input  =  input.readInput();	  long    skipped    =    input.skip(available);    InputStream    input    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol  n	135	None	replace
772	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  input.length  *  SKIP_BUF_SIZE;  [CE]  cannot  find  symbol  length  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  input.length  *  SKIP_BUF_SIZE;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip  +  input.length  *  SKIP_BUF_SIZE;	  long    skipped    =    available    +    numToSkip    +    input.length;    	non-compiled	[CE]  cannot  find  symbol  length	137	None	replace
773	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  *  input.length;  [CE]  cannot  find  symbol  length  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  input.length;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip  *  input.length;	  long    skipped    =    available    +    numToSkip    +    input.length;    	non-compiled	[CE]  cannot  find  symbol  length	137	None	replace
774	[BUG]  [BUGGY]  int  skipped  =  available  +  numToSkip  +  input.length;  [CE]  cannot  find  symbol  length  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  +  numToSkip  +  input.length;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  +  numToSkip  +  input.length;	  long    skipped    =    available    +    numToSkip    +    input.length;    	non-compiled	[CE]  cannot  find  symbol  length	137	None	replace
775	[BUG]  [BUGGY]  int  skipped  =  input.readInt()  -  1;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.readInt()  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.readInt()  -  1;	  int    skipped    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
776	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readInt();  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readInt();	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  possible  loss  of  precision	14	None	replace
777	[BUG]  [BUGGY]  Long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readInt();	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	14	None	replace
778	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readInt(0,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readInt(0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readInt(0,  numToSkip);	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	14	None	replace
779	[BUG]  [BUGGY]  Long  skipped  =  input.skipToSkip(this.available);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skipToSkip(this.available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  input.skipToSkip(this.available);	  long    skipped    =    this.available.skipToSkip(input);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	154	None	replace
780	[BUG]  [BUGGY]  long  skipped  =  input.skipToSkip(this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skipToSkip(this);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skipToSkip(this);	  long    skipped    =    this.available.skipToSkip(input);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	154	None	replace
781	[BUG]  [BUGGY]  long  skipped  =  input.skipToSkip(input);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skipToSkip(input);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skipToSkip(input);	  long    skipped    =    this.available.skipToSkip(input);    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
782	[BUG]  [BUGGY]  double  skipped  =  input.skip(numToSkip);  long  skipped  =  input.skip(available);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skip(numToSkip);  long  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double    skipped    =    input.skip(numToSkip);    long  skipped  =  input.skip(available);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	25	None	add
783	[BUG]  [BUGGY]  double  skipped  =  input.skip(numToSkip);  int  skipped  =  input.skip(available);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skip(numToSkip);  int  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double    skipped    =    input.skip(numToSkip);    int  skipped  =  input.skip(available);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	25	None	add
784	[BUG]  [BUGGY]  Long  skipped  =  input.skip(available);  InputStream  available  =  input.readInput();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(available);  InputStream  available  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  input.skip(available);  InputStream  available  =  input.readInput();	  long    skipped    =    input.skip(available);    InputStream    available    =    input.readInput();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	22	None	replace
785	[BUG]  [BUGGY]  Short  skipped  =  input.skip(available);  InputStream  available  =  input.readInput();  [CE]  incompatible  types  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Short  skipped  =  input.skip(available);  InputStream  available  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Short  skipped  =  input.skip(available);  InputStream  available  =  input.readInput();	  long    skipped    =    input.skip(available);    InputStream    available    =    input.readInput();    	non-compiled	[CE]  incompatible  types	22	None	replace
786	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(available);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.getChars(available);	  long    skipped    =    available    *    numToSkip    +    input.getChars(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
787	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip,  buffersize);  [CE]  cannot  find  symbol  buffersize  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip,  buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip,  buffersize);	  long    skipped    =    available    *    numToSkip    +    input.getChars(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffersize	139	None	replace
788	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip,  available);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip,  available);	  long    skipped    =    available    *    numToSkip    +    input.getChars(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
789	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip  +  1);	  long    skipped    =    available    *    numToSkip    +    input.getChars(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
790	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  long  available  =  input.skip(available  -  numToSkip  +  1);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  long  available  =  input.skip(available  -  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip    +    1);    long  available  =  input.skip(available  -  numToSkip  +  1);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	79	None	add
791	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  long  skipped  =  input.skip(available  -  numToSkip  +  2);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  long  skipped  =  input.skip(available  -  numToSkip  +  2);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip    +    1);    long  skipped  =  input.skip(available  -  numToSkip  +  2);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	79	None	add
792	[BUG]  [BUGGY]  Long  skipped  =  input.skip(numToSkip);  InputStream  input  =  input.readLine();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(numToSkip);  InputStream  input  =  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long    skipped    =    input.skip(numToSkip);    InputStream  input  =  input.readLine();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	117	None	add
793	[BUG]  [BUGGY]  Long  skipped  =  input.skip(numToSkip);  Long  available  =  input.skip(numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(numToSkip);  Long  available  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long    skipped    =    input.skip(numToSkip);    Long  available  =  input.skip(numToSkip);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	117	None	add
794	[BUG]  [BUGGY]  Long  skipped  =  input.skip(numToSkip);  Integer  numToSkip  =  input.skip(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(numToSkip);  Integer  numToSkip  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long    skipped    =    input.skip(numToSkip);    Integer  numToSkip  =  input.skip(available);	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	117	None	add
795	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  int  available  =  input.read(buffersize);  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  int  available  =  input.read(buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  int  available  =  input.read(buffersize);	  long    skipped    =    input.skip(available);    int    available    =    input.read(available);    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
796	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  int  available  =  input.read(buffersize);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available);  int  available  =  input.read(buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available);  int  available  =  input.read(buffersize);	  long    skipped    =    input.skip(available);    int    available    =    input.read(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	19	None	replace
797	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  long  available  =  input.skip(available  +  numToSkip  +  1);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  long  available  =  input.skip(available  +  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip    +    1);    long  available  =  input.skip(available  +  numToSkip  +  1);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	129	None	add
798	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  long  skipped  =  input.skip(available  +  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  long  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip    +    1);    long  skipped  =  input.skip(available  +  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	129	None	add
799	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  int  numToSkip  =  input.read(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  int  numToSkip  =  input.read(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip    +    1);    int  numToSkip  =  input.read(available);	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	129	None	add
800	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  InputStream  input  =  this.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  InputStream  input  =  this.getInputStream();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip    +    1);    InputStream  input  =  this.getInputStream();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	129	None	add
801	[BUG]  [BUGGY]  Long  skipped  =  available  *  numToSkip;  InputStream  input  =  input.readInt();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  available  *  numToSkip;  InputStream  input  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  available  *  numToSkip;  InputStream  input  =  input.readInt();	  long    skipped    =    available    *    numToSkip;    InputStream    input    =    input.readInt();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	107	None	replace
802	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  -  1  +  input.getChars(numToSkip);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  -  1  +  input.getChars(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  -  1  +  input.getChars(numToSkip);	  long    skipped    =    available    *    numToSkip    -    1;    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
803	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip,  0).longValue();  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip,  0).longValue();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip,  0).longValue();	  long    skipped    =    input.skip(available    +    numToSkip);    long    skipped    =    input.skip(available    +    numToSkip).longValue();    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	70	None	replace
804	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  available  +  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip;  int  numToSkip  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    numToSkip    =    available    +    numToSkip;    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	127	None	replace
805	[BUG]  [BUGGY]  float  skipped  =  input.skipFloat(available);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skipFloat(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float  skipped  =  input.skipFloat(available);	  float    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
806	[BUG]  [BUGGY]  float  skipped  =  input.skipToSkip;  [CE]  cannot  find  symbol  skipToSkip  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skipToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float  skipped  =  input.skipToSkip;	  float    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  skipToSkip	28	None	replace
807	[BUG]  [BUGGY]  int  skipped  =  input.read(buffersize,  numToSkip);  [CE]  cannot  find  symbol  buffersize  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read(buffersize,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.read(buffersize,  numToSkip);	  int    skipped    =    input.read(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffersize	161	None	replace
808	[BUG]  [BUGGY]  Integer  skipped  =  input.read(available,  numToSkip);  [CE]  no  suitable  method  found  for  read(long,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.read(available,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.read(available,  numToSkip);	  int    skipped    =    input.read(numToSkip);    	non-compiled	[CE]  no  suitable  method  found  for  read(long,long)	161	None	replace
809	[BUG]  [BUGGY]  int  n  =  input.readInt()  +  numToSkip;  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  n  =  input.readInt()  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  n  =  input.readInt()  +  numToSkip;	  int    n    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
810	[BUG]  [BUGGY]  int  n  =  input.readInt()  +  1;  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  n  =  input.readInt()  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  n  =  input.readInt()  +  1;	  int    n    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
811	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  *  numToSkip);  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  *  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  *  numToSkip);	  long    skipped    =    input.skip(available    *    numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	52	None	replace
812	[BUG]  [BUGGY]  Long  skipped  =  input.availableToSkip  +  numToSkip;  [CE]  cannot  find  symbol  availableToSkip  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.availableToSkip  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  input.availableToSkip  +  numToSkip;	  long    skipped    =    input.availableToSkip    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  availableToSkip	58	None	replace
813	[BUG]  [BUGGY]  long  skipped  =  input.skippedToSkip  *  numToSkip;  [CE]  cannot  find  symbol  skippedToSkip  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skippedToSkip  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skippedToSkip  *  numToSkip;	  long    skipped    =    input.skippedToSkip    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  skippedToSkip	125	None	replace
814	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(buffersize);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(buffersize);	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	115	None	replace
815	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip);  long  available  =  input.skip(available  +  numToSkip);  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip);  long  available  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  +  numToSkip);  long  available  =  input.skip(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    long    available    =    input.skip(available    +    numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	112	None	replace
816	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip)+  1;  long  available  =  input.skip(available  +  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip)+  1;  long  available  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip)+  1;  long  available  =  input.skip(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    long    available    =    input.skip(available    +    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	112	None	replace
817	[BUG]  [BUGGY]  int  skipped  =  available.skip(numToSkip  -  numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available.skip(numToSkip  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available.skip(numToSkip  -  numToSkip);	  long    skipped    =    available.skip(numToSkip    -    numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	84	None	replace
818	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read(buffersize);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read(buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read(buffersize);	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	15	None	replace
819	[BUG]  [BUGGY]  Long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read();	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	15	None	replace
820	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read();  [CE]  possible  loss  of  precision  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read();	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.read();    	non-compiled	[CE]  possible  loss  of  precision	15	None	replace
821	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.read(buffersize);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.read(buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.read(buffersize);	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	36	None	replace
822	[BUG]  [BUGGY]  Long  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);	  long    skipped    =    input.skip(available,    numToSkip,    bufsize);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	96	None	replace
823	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.skip(available  -  numToSkip);  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	4	None	replace
824	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.skip(available  -  numToSkip);  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  incompatible  types	4	None	replace
825	[BUG]  [BUGGY]  Integer  available  =  input.skip(available  -  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  available  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  available  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	4	None	replace
826	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip;  long  available  =  available  +  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip;  long  available  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  -  numToSkip;  long  available  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    available    =    available    +    numToSkip;    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	37	None	replace
827	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.size();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.size();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.size();	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	151	None	replace
828	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.getSize();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.getSize();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.getSize();	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	151	None	replace
829	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.size();  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.size();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.size();	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.size();    	non-compiled	[CE]  possible  loss  of  precision	151	None	replace
830	[BUG]  [BUGGY]  InputStream  input  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);	  long    skipped    =    input.skip(available,    numToSkip,    SKIP_BUF_SIZE);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	93	None	replace
831	[BUG]  [BUGGY]  int  skipped  =  input.getSize(available);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.getSize(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.getSize(available);	  int    skipped    =    input.getSize();    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
832	[BUG]  [BUGGY]  int  skipped  =  input.read(available,  buffersize);  [CE]  cannot  find  symbol  buffersize  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read(available,  buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.read(available,  buffersize);	  int    skipped    =    input.read(available);    	non-compiled	[CE]  cannot  find  symbol  buffersize	143	None	replace
833	[BUG]  [BUGGY]  int  skipped  =  input.read(available,  0);  [CE]  no  suitable  method  found  for  read(long,int)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read(available,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.read(available,  0);	  int    skipped    =    input.read(available);    	non-compiled	[CE]  no  suitable  method  found  for  read(long,int)	143	None	replace
834	[BUG]  [BUGGY]  int  skipped  =  input.read(available,  0,  numToSkip);  [CE]  no  suitable  method  found  for  read(long,int,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read(available,  0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.read(available,  0,  numToSkip);	  int    skipped    =    input.read(available);    	non-compiled	[CE]  no  suitable  method  found  for  read(long,int,long)	143	None	replace
835	[BUG]  [BUGGY]  int  skipped  =  input.read(buffersize,  available);  [CE]  cannot  find  symbol  buffersize  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read(buffersize,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.read(buffersize,  available);	  int    skipped    =    input.read(available);    	non-compiled	[CE]  cannot  find  symbol  buffersize	143	None	replace
836	[BUG]  [BUGGY]  int  skipped  =  input.read(available,  _buffersize);  [CE]  cannot  find  symbol  _buffersize  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read(available,  _buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.read(available,  _buffersize);	  int    skipped    =    input.read(available);    	non-compiled	[CE]  cannot  find  symbol  _buffersize	143	None	replace
837	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip,  null);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip,  null);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available,  numToSkip,  null);	  Integer    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	108	None	replace
838	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip  +  1);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available,  numToSkip  +  1);	  Integer    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	108	None	replace
839	[BUG]  [BUGGY]  InputStream  input  =  available.skip(input,  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  available.skip(input,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  available.skip(input,  numToSkip);	  InputStream    input    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
840	[BUG]  [BUGGY]  long  skipped  =  this.available.skip(input);  InputStream  input  =  this.input.readInput();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  this.available.skip(input);  InputStream  input  =  this.input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  this.available.skip(input);  InputStream  input  =  this.input.readInput();	  long    skipped    =    input.skip(available);    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	21	None	replace
841	[BUG]  [BUGGY]  int  skipped  =  this.input.skip(available);  InputStream  input  =  this.input.readInput();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  this.input.skip(available);  InputStream  input  =  this.input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  this.input.skip(available);  InputStream  input  =  this.input.readInput();	  long    skipped    =    input.skip(available);    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	21	None	replace
842	[BUG]  [BUGGY]  Integer  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readInt();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readInt();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  incompatible  types	35	None	replace
843	[BUG]  [BUGGY]  int  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readInt();  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readInt();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  possible  loss  of  precision	35	None	replace
844	[BUG]  [BUGGY]  Short  skipped  =  input.skip(available);  InputStream  input  =  getInput();  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Short  skipped  =  input.skip(available);  InputStream  input  =  getInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Short  skipped  =  input.skip(available);  InputStream  input  =  getInput();	  long    skipped    =    input.skip(available);    InputStream    input    =    getInput();    	non-compiled	[CE]  incompatible  types	160	None	replace
845	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  long  available  =  input.skip(available  /  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  long  available  =  input.skip(available  /  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    /    numToSkip);    long  available  =  input.skip(available  /  numToSkip);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	49	None	add
846	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  long  skipped  =  input.skip(available  %  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  long  skipped  =  input.skip(available  %  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    /    numToSkip);    long  skipped  =  input.skip(available  %  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	49	None	add
847	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  long  skipped  =  input.skip(available  /  numtoSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  long  skipped  =  input.skip(available  /  numtoSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    /    numToSkip);    long  skipped  =  input.skip(available  /  numtoSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	49	None	add
848	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  available  =  input.read(available,  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  int  available  =  input.read(available,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    /    numToSkip);    int  available  =  input.read(available,  numToSkip);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	49	None	add
849	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  long  numToSkip  =  available  *  numToSkip  +  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  long  numToSkip  =  available  *  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    1;    long  numToSkip  =  available  *  numToSkip  +  1;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	42	None	add
850	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  long  numToSkip  =  available  +  numToSkip  *  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  long  numToSkip  =  available  +  numToSkip  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    *    numToSkip;    long  numToSkip  =  available  +  numToSkip  *  numToSkip;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	75	None	add
851	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  long  available  =  numToSkip  +  numToSkip  *  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  long  available  =  numToSkip  +  numToSkip  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    *    numToSkip;    long  available  =  numToSkip  +  numToSkip  *  numToSkip;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	75	None	add
852	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.read(available  +  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.read(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.read(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read(available    +    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	68	None	replace
853	[BUG]  [BUGGY]  InputStream  input  =  getInputStream(available);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  getInputStream(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  getInputStream(available);	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	97	None	replace
854	[BUG]  [BUGGY]  InputStream  input  =  this.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  this.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  this.readInput();	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	97	None	replace
855	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(available);  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(available);	  long    skipped    =    input.skip(available    +    numToSkip);    int    available    =    input.read(available);    	non-compiled	[CE]  possible  loss  of  precision	113	None	replace
856	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(available);  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(available);	  long    skipped    =    input.skip(available    +    numToSkip);    int    available    =    input.read(available);    	non-compiled	[CE]  incompatible  types	113	None	replace
857	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(buffersize);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(buffersize);	  long    skipped    =    input.skip(available    +    numToSkip);    int    available    =    input.read(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	113	None	replace
858	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip);  Integer  available  =  input.skip(available  -  numToSkip);  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip);  Integer  available  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  -  numToSkip);  Integer  available  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    Long    available    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	120	None	replace
859	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.length();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.length();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.length();	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.length();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	69	None	replace
860	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.length();  [CE]  possible  loss  of  precision  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.length();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.length();	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.length();    	non-compiled	[CE]  possible  loss  of  precision	69	None	replace
861	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  Long  available  =  input.skip(available  *  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  Long  available  =  input.skip(available  *  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    *    numToSkip);    Long  available  =  input.skip(available  *  numToSkip);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	51	None	add
862	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  InputStream  input  =  getInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  InputStream  input  =  getInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    *    numToSkip);    InputStream  input  =  getInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	51	None	add
863	[BUG]  [BUGGY]  InputStream  input  =  input.skip(available);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.skip(available);	  long    skipped    =    available.skip(input);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	72	None	replace
864	[BUG]  [BUGGY]  InputStream  in  =  input.readInput(this.buffersize,  numToSkip);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  input.readInput(this.buffersize,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input.readInput(this.buffersize,  numToSkip);	  InputStream    in    =    input.readInput();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	104	None	replace
865	[BUG]  [BUGGY]  InputStream  in  =  input.readInput(buffersize,  numToSkip);  [CE]  cannot  find  symbol  buffersize  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  input.readInput(buffersize,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input.readInput(buffersize,  numToSkip);	  InputStream    in    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol  buffersize	104	None	replace
866	[BUG]  [BUGGY]  InputStream  in  =  input.readInput(this.buffersize);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  input.readInput(this.buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input.readInput(this.buffersize);	  InputStream    in    =    input.readInput();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	104	None	replace
867	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip;  long  available  =  available  -  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip;  long  available  =  available  -  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    -    numToSkip;    long  available  =  available  -  numToSkip;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	46	None	add
868	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip;  long  numToSkip  =  available  -  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip;  long  numToSkip  =  available  -  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    -    numToSkip;    long  numToSkip  =  available  -  numToSkip;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	46	None	add
869	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip;  InputStream  input  =  input.readInt();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip;  InputStream  input  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    -    numToSkip;    InputStream  input  =  input.readInt();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	46	None	add
870	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available  -  numToSkip,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available  -  numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available  -  numToSkip,  0);	  long    skipped    =    input.skip(available    -    numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	81	None	replace
871	[BUG]  [BUGGY]  InputStream  skipped  =  input.skip(available  -  numToSkip,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.skip(available  -  numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.skip(available  -  numToSkip,  0);	  long    skipped    =    input.skip(available    -    numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	81	None	replace
872	[BUG]  [BUGGY]  InputStream  input  =  input.skip(available  -  numToSkip,  0);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.skip(available  -  numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.skip(available  -  numToSkip,  0);	  long    skipped    =    input.skip(available    -    numToSkip,    0);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	81	None	replace
873	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0,  buffersize);  [CE]  cannot  find  symbol  buffersize  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0,  buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip,  0,  buffersize);	  long    skipped    =    input.skip(available    -    numToSkip,    0);    	non-compiled	[CE]  cannot  find  symbol  buffersize	81	None	replace
874	[BUG]  [BUGGY]  short  skipped  =  available.skip(numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  short  skipped  =  available.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	short  skipped  =  available.skip(numToSkip);	  long    skipped    =    numToSkip.skip(available);    	non-compiled	[CE]  long  cannot  be  dereferenced	88	None	replace
875	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  4;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  -  numToSkip)+  4;	  long    skipped    =    input.skip(available    -    numToSkip)+    1;    	compilable	  [FE]  AssertionError  	83	3	replace
876	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  4;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  4;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip)+  4;	  long    skipped    =    input.skip(available    -    numToSkip)+    1;    	compilable	  [FE]  AssertionError  	83	3	replace
877	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1L;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  -  numToSkip)+  1L;	  long    skipped    =    input.skip(available    -    numToSkip)+    1;    	compilable	  [FE]  AssertionError  	83	3	replace
878	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1L;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1L;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip)+  1L;	  long    skipped    =    input.skip(available    -    numToSkip)+    1;    	compilable	  [FE]  AssertionError  	83	3	replace
879	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  Long  skipped  =  available  +  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  Long  skipped  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  /  numToSkip;  Long  skipped  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    Long    skipped    =    available    +    numToSkip;    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	33	None	replace
880	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  Long  skipped  =  available  +  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip;  Long  skipped  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;  Long  skipped  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    Long    skipped    =    available    +    numToSkip;    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	33	None	replace
881	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip;  Long  skipped  =  available  +  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip;  Long  skipped  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  -  numToSkip;  Long  skipped  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    Long    skipped    =    available    +    numToSkip;    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	33	None	replace
882	[BUG]  [BUGGY]  InputStream  in  =  input.readInt(available);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  input.readInt(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input.readInt(available);	  InputStream    in    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
883	[BUG]  [BUGGY]  InputStream  in  =  input.readInt(0);  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  input.readInt(0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input.readInt(0);	  InputStream    in    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
884	[BUG]  [BUGGY]  InputStream  in  =  input.readInt(),  numToSkip;  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  input.readInt(),  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input.readInt(),  numToSkip;	  InputStream    in    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
885	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  int  skipped  =  available  +  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip;  int  skipped  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;  int  skipped  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    int    skipped    =    available    +    numToSkip;    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	38	None	replace
886	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  int  skipped  =  available  +  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  int  skipped  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  /  numToSkip;  int  skipped  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    int    skipped    =    available    +    numToSkip;    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	38	None	replace
887	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip;  int  skipped  =  available  +  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip;  int  skipped  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  -  numToSkip;  int  skipped  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    int    skipped    =    available    +    numToSkip;    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	38	None	replace
888	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  if(available  >  numToSkip)  {  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  }  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	if(available  >  numToSkip)  {  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  }	  long    skipped    =    input.skip(available    -    numToSkip);    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	8	None	replace
889	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  }  else  {  return  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  if(available  >  numToSkip)  {  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  }  else  {  return  0;  }  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	if(available  >  numToSkip)  {  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  }  else  {  return  0;  }	  long    skipped    =    input.skip(available    -    numToSkip);    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	8	None	replace
890	[BUG]  [BUGGY]  long  skipped  =  input  *  numToSkip  +  input.getChars(0,  numToSkip);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input  *  numToSkip  +  input.getChars(0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input  *  numToSkip  +  input.getChars(0,  numToSkip);	  long    skipped    =    available    *    numToSkip    +    input.getChars(0,    numToSkip);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	140	None	replace
891	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(0,  numToSkip-1);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(0,  numToSkip-1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.getChars(0,  numToSkip-1);	  long    skipped    =    available    *    numToSkip    +    input.getChars(0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
892	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(0,  numToSkip).length;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(0,  numToSkip).length;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.getChars(0,  numToSkip).length;	  long    skipped    =    available    *    numToSkip    +    input.getChars(0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
893	[BUG]  [BUGGY]  Long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readLine();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.readLine();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	39	None	replace
894	[BUG]  [BUGGY]  Integer  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  numToSkip  =  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  numToSkip  =  input.readLine();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.readLine();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	39	None	replace
895	[BUG]  [BUGGY]  int  skipped  =  available.skipToSkip(INITIAL_SIZE);  [CE]  cannot  find  symbol  INITIAL_SIZE  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available.skipToSkip(INITIAL_SIZE);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available.skipToSkip(INITIAL_SIZE);	  int    skipped    =    input.skipToSkip(available);    	non-compiled	[CE]  cannot  find  symbol  INITIAL_SIZE	62	None	replace
896	[BUG]  [BUGGY]  InputStream  skipped  =  input.skip(available  -  numToSkip,  -1);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.skip(available  -  numToSkip,  -1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.skip(available  -  numToSkip,  -1);	  long    skipped    =    input.skip(available    -    numToSkip,    -1);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	147	None	replace
897	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available  -  numToSkip,  -1);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available  -  numToSkip,  -1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available  -  numToSkip,  -1);	  long    skipped    =    input.skip(available    -    numToSkip,    -1);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	147	None	replace
898	[BUG]  [BUGGY]  InputStream  skipped  =  input.skip(available);  InputStream  available  =  input.readInput(numToSkip);  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.skip(available);  InputStream  available  =  input.readInput(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.skip(available);  InputStream  available  =  input.readInput(numToSkip);	  long    skipped    =    input.skip(available);    InputStream    available    =    input.readInput(numToSkip);    	non-compiled	[CE]  incompatible  types	24	None	replace
899	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  InputStream  available  =  input.readInput(0,  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available);  InputStream  available  =  input.readInput(0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available);  InputStream  available  =  input.readInput(0,  numToSkip);	  long    skipped    =    input.skip(available);    InputStream    available    =    input.readInput(numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	24	None	replace
900	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)-  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  -  numToSkip)-  numToSkip;	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    -    numToSkip).length;    	compilable	  [FE]  AssertionError  	158	3	replace
901	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)-  numToSkip;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)-  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip)-  numToSkip;	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    -    numToSkip).length;    	compilable	  [FE]  AssertionError  	158	3	replace
902	[BUG]  [BUGGY]  long  skipped  =  this.available.skip(input);  InputStream  input  =  this.input.getInputStream();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  this.available.skip(input);  InputStream  input  =  this.input.getInputStream();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  this.available.skip(input);  InputStream  input  =  this.input.getInputStream();	  long    skipped    =    input.skip(available);    InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	23	None	replace
903	[BUG]  [BUGGY]  float  skipped  =  input.skip(numToSkip);  long  float  skipped  =  input.skip(numToSkip);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(numToSkip);  long  float  skipped  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float    skipped    =    input.skip(numToSkip);    long  float  skipped  =  input.skip(numToSkip);	  	non-compiled	[CE]  not  a  statement	27	None	add
904	[BUG]  [BUGGY]  float  skipped  =  input.skip(numToSkip);  int  float  skipped  =  input.skip(available);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(numToSkip);  int  float  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float    skipped    =    input.skip(numToSkip);    int  float  skipped  =  input.skip(available);	  	non-compiled	[CE]  not  a  statement	27	None	add
905	[BUG]  [BUGGY]  float  skipped  =  input.skip(numToSkip);  InputStream  input  =  this.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(numToSkip);  InputStream  input  =  this.getInputStream();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float    skipped    =    input.skip(numToSkip);    InputStream  input  =  this.getInputStream();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	27	None	add
906	[BUG]  [BUGGY]  float  skipped  =  input.skip(numToSkip);  float  skipped  =  input.skip(numToSkip  +  1);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(numToSkip);  float  skipped  =  input.skip(numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float    skipped    =    input.skip(numToSkip);    float  skipped  =  input.skip(numToSkip  +  1);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	27	None	add
907	[BUG]  [BUGGY]  float  skipped  =  input.skip(numToSkip);  float  skipped  =  input.skip(available);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(numToSkip);  float  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float    skipped    =    input.skip(numToSkip);    float  skipped  =  input.skip(available);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	27	None	add
908	[BUG]  [BUGGY]  short  skipped  =  input.skipToSkip(available);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  short  skipped  =  input.skipToSkip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	short  skipped  =  input.skipToSkip(available);	  long    skipped    =    available.skipToSkip(input);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
909	[BUG]  [BUGGY]  int  skipped  =  available  +  numToSkip;  long  skipd  =  available  +  numToSkip;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  +  numToSkip;  long  skipd  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  +  numToSkip;  long  skipd  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    skipd    =    available    +    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	34	None	replace
910	[BUG]  [BUGGY]  int  skipped  =  available  +  numToSkip;  long  skipped  =  available  +  numToSkip;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  +  numToSkip;  long  skipped  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  +  numToSkip;  long  skipped  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    skipped    =    available    +    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	32	None	replace
911	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip  +  1);  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  +  numToSkip  +  1);	  long    skipped    =    input.skip(available    +    numToSkip    +    1);    	non-compiled	[CE]  possible  loss  of  precision	130	None	replace
912	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  *  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  +  numToSkip  *  1);	  long    skipped    =    input.skip(available    +    numToSkip    +    1);    	compilable	  [FE]  AssertionError  	130	3	replace
913	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  *  1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  *  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip  *  1);	  long    skipped    =    input.skip(available    +    numToSkip    +    1);    	compilable	  [FE]  AssertionError  	130	3	replace
914	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  long  numToSkip  =  available  *  numToSkip  -  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  long  numToSkip  =  available  *  numToSkip  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    -    1;    long  numToSkip  =  available  *  numToSkip  -  1;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	155	None	add
915	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  InputStream  input  =  input.readInt();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  InputStream  input  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    -    1;    InputStream  input  =  input.readInt();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	155	None	add
916	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  int  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  int  numToSkip  =  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    -    1;    int  numToSkip  =  input.readLine();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	155	None	add
917	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available  -  numToSkip);  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.read(available    -    numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
918	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available  -  numToSkip);  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.read(available    -    numToSkip);    	non-compiled	[CE]  incompatible  types	5	None	replace
919	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  Long  skipped  =  available  *  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  Long  skipped  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  /  numToSkip;  Long  skipped  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    Long    skipped    =    available    *    numToSkip;    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	10	None	replace
920	[BUG]  [BUGGY]  Short  skipped  =  input.skip(available);  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Short  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Short  skipped  =  input.skip(available);	  long    skipped    =    input.skip(available);    short    skipped    =    input.skip(available);    	non-compiled	[CE]  incompatible  types	159	None	replace
921	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  long  numToSkip  =  available  +  numToSkip  +  2;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  long  numToSkip  =  available  +  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    2;    long  numToSkip  =  available  +  numToSkip  +  2;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	77	None	add
922	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  int  numToSkip  =  input.read(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  int  numToSkip  =  input.read(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    2;    int  numToSkip  =  input.read(available);	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	77	None	add
923	[BUG]  [BUGGY]  boolean  skipped  =  input!=  null  &&  input.skip(numToSkip);  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  boolean  skipped  =  input!=  null  &&  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	boolean  skipped  =  input!=  null  &&  input.skip(numToSkip);	  boolean    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	29	None	replace
924	[BUG]  [BUGGY]  boolean  skipped  =  input  ==  null  &&  input.skip(numToSkip);  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  boolean  skipped  =  input  ==  null  &&  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	boolean  skipped  =  input  ==  null  &&  input.skip(numToSkip);	  boolean    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	29	None	replace
925	[BUG]  [BUGGY]  Long  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  *  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    available    *    numToSkip;    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	11	None	replace
926	[BUG]  [BUGGY]  InputStream  skipped  =  input.readInt(0);  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.readInt(0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.readInt(0);	  InputStream    skipped    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
927	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read();  [CE]  possible  loss  of  precision  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read();	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read();    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
928	[BUG]  [BUGGY]  Boolean  skipped  =  input.skip(numToSkip);  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Boolean  skipped  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Boolean  skipped  =  input.skip(numToSkip);	  char    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  incompatible  types	30	None	replace
929	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  /  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  *  numToSkip  /  2;	  long    skipped    =    available    *    numToSkip    +    2;    	compilable	  [FE]  AssertionError  	45	3	replace
930	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  /  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  /  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  /  2;	  long    skipped    =    available    *    numToSkip    +    2;    	compilable	  [FE]  AssertionError  	45	3	replace
931	[BUG]  [BUGGY]  Long  skipped  =  available  *  numToSkip;  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  available  *  numToSkip;  InputStream  input  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  available  *  numToSkip;  InputStream  input  =  input.readInput();	  long    skipped    =    available    *    numToSkip;    InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	152	None	replace
932	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip;  int  available  =  available  *  numToSkip;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip;  int  available  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip;  int  available  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    available    =    available    *    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	105	None	replace
933	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.length();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.length();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.length();	  long    skipped    =    input.skip(available    -    numToSkip);    int    numToSkip    =    input.length();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	7	None	replace
934	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available);  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.read(available);    	non-compiled	[CE]  possible  loss  of  precision	123	None	replace
935	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available);  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.read(available);    	non-compiled	[CE]  incompatible  types	123	None	replace
936	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available  +  numToSkip,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available  +  numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available  +  numToSkip,  0);	  long    skipped    =    input.skip(available    +    numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	53	None	replace
937	[BUG]  [BUGGY]  InputStream  skipped  =  input.skip(available  +  numToSkip,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.skip(available  +  numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.skip(available  +  numToSkip,  0);	  long    skipped    =    input.skip(available    +    numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	53	None	replace
938	[BUG]  [BUGGY]  double  skipped  =  input.skipToSkip  +  numToSkip;  [CE]  cannot  find  symbol  skipToSkip  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skipToSkip  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double  skipped  =  input.skipToSkip  +  numToSkip;	  double    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  skipToSkip	26	None	replace
939	[BUG]  [BUGGY]  double  skipped  =  input.skipToSkip;  [CE]  cannot  find  symbol  skipToSkip  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skipToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double  skipped  =  input.skipToSkip;	  double    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  skipToSkip	26	None	replace
940	[BUG]  [BUGGY]  Long  skipped  =  available  *  numToSkip  +  input.length;  [CE]  cannot  find  symbol  length  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  available  *  numToSkip  +  input.length;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  available  *  numToSkip  +  input.length;	  long    skipped    =    available    *    numToSkip    +    input.length;    	non-compiled	[CE]  cannot  find  symbol  length	138	None	replace
941	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  long  skip  =  available  /  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  long  skip  =  available  /  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    /    numToSkip;    long  skip  =  available  /  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	40	None	add
942	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  -  numToSkip  -  1;	  long    skipped    =    available    -    numToSkip;    	compilable	  [FE]  AssertionError  	47	3	replace
943	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip  -  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  -  numToSkip  -  1;	  long    skipped    =    available    -    numToSkip;    	compilable	  [FE]  AssertionError  	47	3	replace
944	[BUG]  [BUGGY]  int  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.getCount();  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.getCount();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.getCount();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.getCount();    	non-compiled	[CE]  possible  loss  of  precision	146	None	replace
945	[BUG]  [BUGGY]  Integer  numToSkip  =  input.getCount();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  numToSkip  =  input.getCount();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  numToSkip  =  input.getCount();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.getCount();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	146	None	replace
946	[BUG]  [BUGGY]  Long  skipped  =  input.skip(available,  numToSkip,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(available,  numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  input.skip(available,  numToSkip,  0);	  long    skipped    =    input.skip(available,    numToSkip,    buffersize);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	91	None	replace
947	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  Long  available  =  input.skip(available);  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  Long  available  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  Long  available  =  input.skip(available);	  long    skipped    =    input.skip(available);    Long    available    =    input.skip(available);    	non-compiled	[CE]  possible  loss  of  precision	133	None	replace
948	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available);  Integer  available  =  input.skip(available);  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available);  Integer  available  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available);  Integer  available  =  input.skip(available);	  long    skipped    =    input.skip(available);    Long    available    =    input.skip(available);    	non-compiled	[CE]  incompatible  types	133	None	replace
949	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  Integer  available  =  input.skip(available);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available);  Integer  available  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available);  Integer  available  =  input.skip(available);	  long    skipped    =    input.skip(available);    Long    available    =    input.skip(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	133	None	replace
950	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(available  +  numToSkip);  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    int    available    =    input.read(available    +    numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	67	None	replace
951	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available  +  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    int    available    =    input.read(available    +    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	67	None	replace
952	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  long  available  =  input.skip(available  -  numToSkip)+  1;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  long  available  =  input.skip(available  -  numToSkip)+  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip)+    1;    long  available  =  input.skip(available  -  numToSkip)+  1;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	82	None	add
953	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  long  skip  =  input.skip(available  -  numToSkip)+  1;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  long  skip  =  input.skip(available  -  numToSkip)+  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip)+    1;    long  skip  =  input.skip(available  -  numToSkip)+  1;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	82	None	add
954	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  long  skipped  =  input.skip(available  *  numToSkip)+  1;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  long  skipped  =  input.skip(available  *  numToSkip)+  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip)+    1;    long  skipped  =  input.skip(available  *  numToSkip)+  1;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	82	None	add
955	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  long  skipped  =  input.skip(available  -  numToSkip)+1  1;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  long  skipped  =  input.skip(available  -  numToSkip)+1  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip)+    1;    long  skipped  =  input.skip(available  -  numToSkip)+1  1;	  	non-compiled	[CE]  ';'  expected	82	None	add
956	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readLine();  [CE]  possible  loss  of  precision  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readLine();	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.readLine();    	non-compiled	[CE]  possible  loss  of  precision	16	None	replace
957	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  long  available  =  input.skip(available);  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available);  long  available  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);  long  available  =  input.skip(available);	  long    skipped    =    input.skip(available);    long    available    =    input.skip(available);    	non-compiled	[CE]  possible  loss  of  precision	132	None	replace
958	[BUG]  [BUGGY]  if(available  >  0)  {  long  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  if(available  >  0)  {  long  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();  }  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	if(available  >  0)  {  long  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();  }	  long    skipped    =    input.skip(available);    InputStream    input    =    input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	134	None	replace
959	[BUG]  [BUGGY]  if(available  >  0)  {  long  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();  }  else  {  switch(numToSkip)  {  case  COPY_BUF_SIZE:  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  if(available  >  0)  {  long  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();  }  else  {  switch(numToSkip)  {  case  COPY_BUF_SIZE:  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	if(available  >  0)  {  long  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();  }  else  {  switch(numToSkip)  {  case  COPY_BUF_SIZE:	  long    skipped    =    input.skip(available);    InputStream    input    =    input.readLine();    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
960	[BUG]  [BUGGY]  if(available  >  0)  {  long  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();  }  else  {  skip(input,  numToSkip);  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  if(available  >  0)  {  long  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();  }  else  {  skip(input,  numToSkip);  }  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	if(available  >  0)  {  long  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();  }  else  {  skip(input,  numToSkip);  }	  long    skipped    =    input.skip(available);    InputStream    input    =    input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	134	None	replace
961	[BUG]  [BUGGY]  InputStream  input  =  input.skip(available);  int  skipped  =  input.read();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.skip(available);  int  skipped  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.skip(available);  int  skipped  =  input.read();	  long    skipped    =    input.skip(available);    int    available    =    input.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	136	None	replace
962	[BUG]  [BUGGY]  InputStream  input  =  outputStream.readInput(numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  outputStream.readInput(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  outputStream.readInput(numToSkip);	  InputStream    input    =    input.readInput(numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	103	None	replace
963	[BUG]  [BUGGY]  long  skipped  =  numToSkip  +  input.buffersize;  [CE]  cannot  find  symbol  buffersize  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  +  input.buffersize;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  +  input.buffersize;	  long    skipped    =    numToSkip    +    input.skipToSkip;    	non-compiled	[CE]  cannot  find  symbol  buffersize	56	None	replace
964	[BUG]  [BUGGY]  long  skipped  =  numToSkip  +  input.skippedOffset;  [CE]  cannot  find  symbol  skippedOffset  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  +  input.skippedOffset;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  +  input.skippedOffset;	  long    skipped    =    numToSkip    +    input.skipToSkip;    	non-compiled	[CE]  cannot  find  symbol  skippedOffset	56	None	replace
965	[BUG]  [BUGGY]  long  skipped  =  numToSkip  +  input.skip;  [CE]  cannot  find  symbol  skip  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  +  input.skip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  +  input.skip;	  long    skipped    =    numToSkip    +    input.skipToSkip;    	non-compiled	[CE]  cannot  find  symbol  skip	56	None	replace
966	[BUG]  [BUGGY]  InputStream  input  =  input.skip(available,  numToSkip,  0);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.skip(available,  numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.skip(available,  numToSkip,  0);	  long    skipped    =    input.skip(available,    numToSkip,    0);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	94	None	replace
967	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  InputStream  input  =  input.readInt();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  InputStream  input  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    1;    InputStream  input  =  input.readInt();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	73	None	add
968	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip;  long  available  =  available  *  numToSkip;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  *  numToSkip;  long  available  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip;  long  available  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    available    =    available    *    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	105	None	replace
969	[BUG]  [BUGGY]  long  skipped  =  input.available  *  numToSkip;  long  available  =  available  *  numToSkip;  [CE]  cannot  find  symbol  available  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.available  *  numToSkip;  long  available  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.available  *  numToSkip;  long  available  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    available    =    available    *    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	105	None	replace
970	[BUG]  [BUGGY]  InputStream  skipped  =  input.skip(available,  numToSkip  +  1);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.skip(available,  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.skip(available,  numToSkip  +  1);	  InputStream    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	109	None	replace
971	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  if(numToSkip  >  0)  {  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  }  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	if(numToSkip  >  0)  {  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  }	  long    skipped    =    input.skip(available    -    numToSkip);    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	8	None	replace
972	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  }  else  {  return  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  if(numToSkip  >  0)  {  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  }  else  {  return  0;  }  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	if(numToSkip  >  0)  {  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  }  else  {  return  0;  }	  long    skipped    =    input.skip(available    -    numToSkip);    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	8	None	replace
973	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read(buffer,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read(buffer,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read(buffer,  numToSkip);	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	15	None	replace
974	[BUG]  [BUGGY]  InputStream  input  =  input.readInt()  -  numToSkip;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.readInt()  -  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readInt()  -  numToSkip;	  InputStream    input    =    input.readInt();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	141	None	replace
975	[BUG]  [BUGGY]  InputStream  input  =  input.readInt()  -  1;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.readInt()  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readInt()  -  1;	  InputStream    input    =    input.readInt();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	141	None	replace
976	[BUG]  [BUGGY]  InputStream  input  =  input.readInt()  &  0xff;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.readInt()  &  0xff;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readInt()  &  0xff;	  InputStream    input    =    input.readInt();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	141	None	replace
977	[BUG]  [BUGGY]  int  skipped  =  input.readInt()  +  numToSkip;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.readInt()  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.readInt()  +  numToSkip;	  int    skipped    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
978	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip)-  1;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip)-  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available,  numToSkip)-  1;	  InputStream    available    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
979	[BUG]  [BUGGY]  InputStream  input  =  input.skip(available,  0);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.skip(available,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.skip(available,  0);	  long    skipped    =    input.skip(available,    0);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	164	None	replace
980	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)/  1L;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  -  numToSkip)/  1L;	  long    skipped    =    input.skip(available    -    numToSkip)+    1;    	compilable	  [FE]  AssertionError  	83	3	replace
981	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)/  1L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)/  1L;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip)/  1L;	  long    skipped    =    input.skip(available    -    numToSkip)+    1;    	compilable	  [FE]  AssertionError  	83	3	replace
982	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip;  int  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip;  int  numToSkip  =  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  -  numToSkip;  int  numToSkip  =  input.readLine();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.readLine();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	39	None	replace
983	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readInt(0);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readInt(0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readInt(0);	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	35	None	replace
984	[BUG]  [BUGGY]  short  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readInt();  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  short  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readInt();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	short  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readInt();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  possible  loss  of  precision	35	None	replace
985	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.read(buffer,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.read(buffer,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.read(buffer,  numToSkip);	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	36	None	replace
986	[BUG]  [BUGGY]  InputStream  input  =  input.read();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.read();	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	97	None	replace
987	[BUG]  [BUGGY]  Double  skipped  =  input.skip(numToSkip);  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Double  skipped  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Double  skipped  =  input.skip(numToSkip);	  char    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  incompatible  types	30	None	replace
988	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(buffer,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(buffer,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(buffer,  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	115	None	replace
989	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.read(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.read(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.read(available);	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.read(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	115	None	replace
990	[BUG]  [BUGGY]  InputStream  input  =  input.readInput(available  -  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.readInput(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readInput(available  -  numToSkip);	  InputStream    input    =    input.readInput(numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	103	None	replace
991	[BUG]  [BUGGY]  int  skipped  =  available  +  numToSkip;  long  available  =  available  +  numToSkip;  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  available  +  numToSkip;  long  available  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  +  numToSkip;  long  available  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    available    =    available    +    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	37	None	replace
992	[BUG]  [BUGGY]  long  skipped  =  input  +  numToSkip  +  available.length;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input  +  numToSkip  +  available.length;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input  +  numToSkip  +  available.length;	  long    skipped    =    available    +    numToSkip    +    input.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	137	None	replace
993	[BUG]  [BUGGY]  long  skipped  =  numToSkip  +  available  +  input.length;  [CE]  cannot  find  symbol  length  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  +  available  +  input.length;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  +  available  +  input.length;	  long    skipped    =    available    +    numToSkip    +    input.length;    	non-compiled	[CE]  cannot  find  symbol  length	137	None	replace
994	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  InputStream  available  =  input.readInput(skipped);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available);  InputStream  available  =  input.readInput(skipped);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available);  InputStream  available  =  input.readInput(skipped);	  long    skipped    =    input.skip(available);    InputStream    available    =    input.readInput(numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	24	None	replace
995	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  available  =  input.readInput(numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  available  =  input.readInput(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  InputStream  available  =  input.readInput(numToSkip);	  long    skipped    =    input.skip(available);    InputStream    available    =    input.readInput(numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	24	None	replace
996	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readInt(0);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readInt(0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readInt(0);	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	14	None	replace
997	[BUG]  [BUGGY]  Integer  skipped  =  input.read(available  -  numToSkip);  int  available  =  input.read(available  -  numToSkip);  [CE]  no  suitable  method  found  for  read(long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.read(available  -  numToSkip);  int  available  =  input.read(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.read(available  -  numToSkip);  int  available  =  input.read(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    int    available    =    input.read(available    -    numToSkip);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	5	None	replace
998	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip);  Long  skipped  =  input.skip(available  +  numToSkip);  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip);  Long  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  +  numToSkip);  Long  skipped  =  input.skip(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    Long    skipped    =    input.skip(available    +    numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	65	None	replace
999	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available  +  numToSkip);  Long  skipped  =  input.skip(available  +  numToSkip);  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available  +  numToSkip);  Long  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available  +  numToSkip);  Long  skipped  =  input.skip(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    Long    skipped    =    input.skip(available    +    numToSkip);    	non-compiled	[CE]  incompatible  types	65	None	replace
1000	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip);  Integer  skipped  =  input.skip(available  +  numToSkip);  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip);  Integer  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  +  numToSkip);  Integer  skipped  =  input.skip(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    Long    skipped    =    input.skip(available    +    numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	65	None	replace
1001	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(numToSkip  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	Long  skipped  =  input.skip(numToSkip  -  numToSkip);	  long    skipped    =    available.skip(numToSkip    -    numToSkip);    	compilable	  [FE]  AssertionError  	84	3	replace
1002	[BUG]  [BUGGY]  Long  skipped  =  input.skip(numToSkip  -  numToSkip);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(numToSkip  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  input.skip(numToSkip  -  numToSkip);	  long    skipped    =    available.skip(numToSkip    -    numToSkip);    	compilable	  [FE]  AssertionError  	84	3	replace
1003	[BUG]  [BUGGY]  int  skipped  =  input.skip(numToSkip  -  numToSkip);  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(numToSkip  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(numToSkip  -  numToSkip);	  long    skipped    =    available.skip(numToSkip    -    numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	84	None	replace
1004	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  int  skipped  =  available  +  numToSkip  *  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  int  skipped  =  available  +  numToSkip  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    *    numToSkip;    int  skipped  =  available  +  numToSkip  *  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	75	None	add
1005	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  long  skipped  =  available  +  numToSkip  *  numToSkip.length;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  long  skipped  =  available  +  numToSkip  *  numToSkip.length;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    *    numToSkip;    long  skipped  =  available  +  numToSkip  *  numToSkip.length;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	75	None	add
1006	[BUG]  [BUGGY]  float  skipped  =  input.skip(numToSkip);  float  skipped  =  input.skip(numToSkip).floatValue();  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(numToSkip);  float  skipped  =  input.skip(numToSkip).floatValue();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float    skipped    =    input.skip(numToSkip);    float  skipped  =  input.skip(numToSkip).floatValue();	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	27	None	add
1007	[BUG]  [BUGGY]  short  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  *  numToSkip;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  short  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	short  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    int    numToSkip    =    available    *    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	11	None	replace
1008	[BUG]  [BUGGY]  double  skipped  =  input.skipToSkip(available);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skipToSkip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double  skipped  =  input.skipToSkip(available);	  double    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
1009	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  -  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  -  numToSkip  -  1);	  long    skipped    =    input.skip(available    -    numToSkip    +    1);    	compilable	  [FE]  AssertionError  	80	3	replace
1010	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  -  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  -  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip  -  1);	  long    skipped    =    input.skip(available    -    numToSkip    +    1);    	compilable	  [FE]  AssertionError  	80	3	replace
1011	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  Long  available  =  input.skip(available);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  Long  available  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  Long  available  =  input.skip(available);	  long    skipped    =    input.skip(available);    Long    available    =    input.skip(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	133	None	replace
1012	[BUG]  [BUGGY]  InputStream  input  =  input.readIn()  -  numToSkip;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.readIn()  -  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readIn()  -  numToSkip;	  InputStream    input    =    input.readIn();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	163	None	replace
1013	[BUG]  [BUGGY]  InputStream  input  =  input.readIn()  &  0xff;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.readIn()  &  0xff;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readIn()  &  0xff;	  InputStream    input    =    input.readIn();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	163	None	replace
1014	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  long  skip  =  input.skip(available  /  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  long  skip  =  input.skip(available  /  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    /    numToSkip);    long  skip  =  input.skip(available  /  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	49	None	add
1015	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  long  skipped  =  input.skip(available  /  numToSkip  +  1);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  long  skipped  =  input.skip(available  /  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    /    numToSkip);    long  skipped  =  input.skip(available  /  numToSkip  +  1);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	49	None	add
1016	[BUG]  [BUGGY]  InputStream  input  =  input.getInputStream()  -  1;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.getInputStream()  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.getInputStream()  -  1;	  InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	100	None	replace
1017	[BUG]  [BUGGY]  InputStream  input  =  input.getReadStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.getReadStream();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.getReadStream();	  InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	100	None	replace
1018	[BUG]  [BUGGY]  int  skipped  =  input.getSize()  -  available;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.getSize()  -  available;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.getSize()  -  available;	  int    skipped    =    input.getSize();    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
1019	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip;  int  numToSkip  =  input.getCount();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip;  int  numToSkip  =  input.getCount();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  -  numToSkip;  int  numToSkip  =  input.getCount();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.getCount();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	146	None	replace
1020	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.getHeaderCount();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.getHeaderCount();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.getHeaderCount();	  long    skipped    =    available    +    numToSkip;    int    numToSkip    =    input.getCount();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	146	None	replace
1021	[BUG]  [BUGGY]  short  skipped  =  input.skip(available  -  numToSkip).length;  [CE]  long  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  short  skipped  =  input.skip(available  -  numToSkip).length;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	short  skipped  =  input.skip(available  -  numToSkip).length;	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    -    numToSkip).length;    	non-compiled	[CE]  long  cannot  be  dereferenced	158	None	replace
1022	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  int  skipped  =  available  +  numToSkip  +  2;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  int  skipped  =  available  +  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    2;    int  skipped  =  available  +  numToSkip  +  2;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	77	None	add
1023	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  InputStream  input  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    2;    InputStream  input  =  input.readInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	77	None	add
1024	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  input.readInput();	  long    skipped    =    input.skip(available);    InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	135	None	replace
1025	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip;  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  -  numToSkip;  InputStream  input  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    -    numToSkip;    InputStream  input  =  input.readInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	46	None	add
1026	[BUG]  [BUGGY]  InputStream  input  =  input.skip(available  +  numToSkip,  0);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.skip(available  +  numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.skip(available  +  numToSkip,  0);	  long    skipped    =    input.skip(available    +    numToSkip,    0);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	53	None	replace
1027	[BUG]  [BUGGY]  Long  skipped  =  input.skipBytes(available);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skipBytes(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  input.skipBytes(available);	  Long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
1028	[BUG]  [BUGGY]  int  skipd  =  input.skip(numToSkip);  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipd  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipd  =  input.skip(numToSkip);	  int    skipped    =    available.skip(numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	116	None	replace
1029	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  short  skipped  =  available  /  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  short  skipped  =  available  /  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    /    numToSkip;    short  skipped  =  available  /  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	40	None	add
1030	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  long  skipped  =  available  /  numToSkip  +  1;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  long  skipped  =  available  /  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    /    numToSkip;    long  skipped  =  available  /  numToSkip  +  1;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	40	None	add
1031	[BUG]  [BUGGY]  long  skipd  =  available  /  numToSkip;  [CE]  cannot  find  symbol  skipped  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipd  =  available  /  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipd  =  available  /  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    skipd    =    available    *    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  skipped	12	None	replace
1032	[BUG]  [BUGGY]  InputStream  input  =  input.skip(available  -  numToSkip,  -1);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.skip(available  -  numToSkip,  -1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.skip(available  -  numToSkip,  -1);	  long    skipped    =    input.skip(available    -    numToSkip,    -1);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	147	None	replace
1033	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  -1,  -1);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  -1,  -1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip,  -1,  -1);	  long    skipped    =    input.skip(available    -    numToSkip,    -1);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	147	None	replace
1034	[BUG]  [BUGGY]  int  skipped  =  input.read(buffer,  0,  numToSkip);  [CE]  cannot  find  symbol  buffer  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read(buffer,  0,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.read(buffer,  0,  numToSkip);	  int    skipped    =    input.read();    	non-compiled	[CE]  cannot  find  symbol  buffer	102	None	replace
1035	[BUG]  [BUGGY]  Integer  skipped  =  input.read(available  +  numToSkip);  int  available  =  input.read(available  +  numToSkip);  [CE]  no  suitable  method  found  for  read(long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.read(available  +  numToSkip);  int  available  =  input.read(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.read(available  +  numToSkip);  int  available  =  input.read(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    int    available    =    input.read(available    +    numToSkip);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	67	None	replace
1036	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(available  *  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(available  *  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(available  *  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    int    available    =    input.read(available    +    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	67	None	replace
1037	[BUG]  [BUGGY]  long  available  =  input.skip(available  +  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  available  =  input.skip(available  +  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  available  =  input.skip(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    long    available    =    input.skip(available    +    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	112	None	replace
1038	[BUG]  [BUGGY]  int  skipped  =  input.skip(numToSkip,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(numToSkip,  0);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(numToSkip,  0);	  long    skipped    =    available.skip(numToSkip,    0);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	85	None	replace
1039	[BUG]  [BUGGY]  int  skipped  =  input.skipToSkip(available,  numToSkip);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skipToSkip(available,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skipToSkip(available,  numToSkip);	  int    skipped    =    input.skipToSkip(available);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
1040	[BUG]  [BUGGY]  long  skipped  =  input.skipToSkip(available  -  numToSkip);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skipToSkip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skipToSkip(available  -  numToSkip);	  long    skipped    =    input.skipToSkip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
1041	[BUG]  [BUGGY]  long  skipped  =  input.skipSkip(numToSkip);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skipSkip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skipSkip(numToSkip);	  long    skipped    =    input.skipToSkip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
1042	[BUG]  [BUGGY]  int  skipped  =  input.read(buffered,  numToSkip);  [CE]  cannot  find  symbol  buffered  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read(buffered,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.read(buffered,  numToSkip);	  int    skipped    =    input.read(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffered	161	None	replace
1043	[BUG]  [BUGGY]  Long  skipped  =  input.skip(numToSkip);  Long  skip  =  input.skip(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(numToSkip);  Long  skip  =  input.skip(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long    skipped    =    input.skip(numToSkip);    Long  skip  =  input.skip(numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	117	None	add
1044	[BUG]  [BUGGY]  Long  skipped  =  input.skip(numToSkip);  InputStream  input  =  input.read();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(numToSkip);  InputStream  input  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long    skipped    =    input.skip(numToSkip);    InputStream  input  =  input.read();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	117	None	add
1045	[BUG]  [BUGGY]  int  n  =  input.readInt(COPY_BUF_SIZE);  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  n  =  input.readInt(COPY_BUF_SIZE);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  n  =  input.readInt(COPY_BUF_SIZE);	  int    n    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
1046	[BUG]  [BUGGY]  int  n  =  input.readInt(COPY_BUF_SIZE,  numToSkip);  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  n  =  input.readInt(COPY_BUF_SIZE,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  n  =  input.readInt(COPY_BUF_SIZE,  numToSkip);	  int    n    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
1047	[BUG]  [BUGGY]  if(input!=  null)  {  long  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  if(input!=  null)  {  long  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();  }  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	if(input!=  null)  {  long  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();  }	  long    skipped    =    input.skip(available);    InputStream    input    =    input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	134	None	replace
1048	[BUG]  [BUGGY]  if(input!=  null)  {  long  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();  }  else  {  return  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  if(input!=  null)  {  long  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();  }  else  {  return  0;  }  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	if(input!=  null)  {  long  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();  }  else  {  return  0;  }	  long    skipped    =    input.skip(available);    InputStream    input    =    input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	134	None	replace
1049	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  0);  InputStream  available  =  input.readInput();  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  0);  InputStream  available  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  0);  InputStream  available  =  input.readInput();	  long    skipped    =    input.skip(available);    InputStream    available    =    input.readInput();    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	22	None	replace
1050	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  long  numToSkip  =  available  *  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  /  numToSkip;  long  numToSkip  =  available  *  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  /  numToSkip;  long  numToSkip  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    long    numToSkip    =    available    *    numToSkip;    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	106	None	replace
1051	[BUG]  [BUGGY]  long  skipped  =  input.skipToSkip(INIT_SIZE);  [CE]  cannot  find  symbol  INIT_SIZE  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skipToSkip(INIT_SIZE);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skipToSkip(INIT_SIZE);	  long    skipped    =    available.skipToSkip(INIT_SIZE);    	non-compiled	[CE]  cannot  find  symbol  INIT_SIZE	63	None	replace
1052	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  long  skipped  =  input.skip(available  *  numToSkip  +  1);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  long  skipped  =  input.skip(available  *  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip    +    1);    long  skipped  =  input.skip(available  *  numToSkip  +  1);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	129	None	add
1053	[BUG]  [BUGGY]  int  skipped  =  input.read();  int  skipd  =  input.read();  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read();  int  skipd  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int    skipped    =    input.read();    int  skipd  =  input.read();	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	101	None	add
1054	[BUG]  [BUGGY]  int  skipped  =  input.read();  long  skipped  =  input.read();  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.read();  long  skipped  =  input.read();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int    skipped    =    input.read();    long  skipped  =  input.read();	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	101	None	add
1055	[BUG]  [BUGGY]  InputStream  in  =  input.readInt()  +  numToSkip;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  input.readInt()  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input.readInt()  +  numToSkip;	  InputStream    in    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
1056	[BUG]  [BUGGY]  InputStream  in  =  input.readInt()  &  0xff;  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  input.readInt()  &  0xff;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input.readInt()  &  0xff;	  InputStream    in    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
1057	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  long  skip  =  input.skip(available  *  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  long  skip  =  input.skip(available  *  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    *    numToSkip);    long  skip  =  input.skip(available  *  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	51	None	add
1058	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  long  skipped  =  input.skip(available  *  numToSkip  +  1);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  long  skipped  =  input.skip(available  *  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    *    numToSkip);    long  skipped  =  input.skip(available  *  numToSkip  +  1);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	51	None	add
1059	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  long  skipped  =  input.skip(available  *  numToSkip).length;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  long  skipped  =  input.skip(available  *  numToSkip).length;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    *    numToSkip);    long  skipped  =  input.skip(available  *  numToSkip).length;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	51	None	add
1060	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  *  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  -  numToSkip  *  numToSkip  +  1);	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    -    numToSkip    +    1);    	compilable	  [FE]  AssertionError  	157	3	replace
1061	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  *  numToSkip  +  1);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  *  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip  *  numToSkip  +  1);	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    -    numToSkip    +    1);    	compilable	  [FE]  AssertionError  	157	3	replace
1062	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1,  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip  +  1,  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    -    numToSkip    +    1);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	157	None	replace
1063	[BUG]  [BUGGY]  long  skipped  =  input.length  /  numToSkip;  [CE]  cannot  find  symbol  length  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.length  /  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.length  /  numToSkip;	  long    skipped    =    input.length    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  length	57	None	replace
1064	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  available);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  available);	  long    skipped    =    input.skip(available,    numToSkip,    bufsize);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	96	None	replace
1065	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  +  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  +  numToSkip;	  long    skipped    =    available    +    numToSkip;    long    numToSkip    =    available    +    numToSkip;    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	127	None	replace
1066	[BUG]  [BUGGY]  long  skipped  =  this.available.skip(numToSkip);  InputStream  input  =  this.input.getInputStream();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  this.available.skip(numToSkip);  InputStream  input  =  this.input.getInputStream();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  this.available.skip(numToSkip);  InputStream  input  =  this.input.getInputStream();	  long    skipped    =    input.skip(available);    InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	23	None	replace
1067	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip,  -1);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip,  -1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available,  numToSkip,  -1);	  Integer    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	108	None	replace
1068	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip,  skipOffset);  [CE]  cannot  find  symbol  skipOffset  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip,  skipOffset);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available,  numToSkip,  skipOffset);	  Integer    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  skipOffset	108	None	replace
1069	[BUG]  [BUGGY]  InputStream  skipped  =  input.skipToSkip(available);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.skipToSkip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.skipToSkip(available);	  Long    skipped    =    available.skipToSkip(input);    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
1070	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  InputStream  input  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    1;    InputStream  input  =  input.readInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	73	None	add
1071	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  long  skip  =  available  +  numToSkip  +  1;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  long  skip  =  available  +  numToSkip  +  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    1;    long  skip  =  available  +  numToSkip  +  1;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	73	None	add
1072	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  long  skipped  =  available  +  numToSkip  +  2;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  long  skipped  =  available  +  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip    +    1;    long  skipped  =  available  +  numToSkip  +  2;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	73	None	add
1073	[BUG]  [BUGGY]  InputStream  input  =  input.skip(available,  numToSkip)+  1;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  input  =  input.skip(available,  numToSkip)+  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.skip(available,  numToSkip)+  1;	  InputStream    input    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
1074	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  int  available  =  input.read(buffer,  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available);  int  available  =  input.read(buffer,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available);  int  available  =  input.read(buffer,  numToSkip);	  long    skipped    =    input.skip(available);    int    available    =    input.read(available);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	19	None	replace
1075	[BUG]  [BUGGY]  InputStream  in  =  input!=  null?  input.readInput()  :  numToSkip;  [CE]  cannot  find  symbol  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  input!=  null?  input.readInput()  :  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input!=  null?  input.readInput()  :  numToSkip;	  InputStream    in    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
1076	[BUG]  [BUGGY]  InputStream  in  =  input.readInput(buffer,  numToSkip);  [CE]  cannot  find  symbol  buffer  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  input.readInput(buffer,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input.readInput(buffer,  numToSkip);	  InputStream    in    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol  buffer	104	None	replace
1077	[BUG]  [BUGGY]  InputStream  in  =  input!=  null?  input.readInput()  :  _input.readInput();  [CE]  cannot  find  symbol  [FE]                                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  in  =  input!=  null?  input.readInput()  :  _input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input!=  null?  input.readInput()  :  _input.readInput();	  InputStream    in    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
1078	[BUG]  [BUGGY]  int  skipped  =  input.skip(numToSkip  +  1);  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(numToSkip  +  1);	  long    skipped    =    available.skip(numToSkip    +    1);    	non-compiled	[CE]  possible  loss  of  precision	87	None	replace
1079	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	Long  skipped  =  input.skip(numToSkip  +  1);	  long    skipped    =    available.skip(numToSkip    +    1);    	compilable	  [FE]  AssertionError  	87	3	replace
1080	[BUG]  [BUGGY]  Long  skipped  =  input.skip(numToSkip  +  1);  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Long  skipped  =  input.skip(numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  input.skip(numToSkip  +  1);	  long    skipped    =    available.skip(numToSkip    +    1);    	compilable	  [FE]  AssertionError  	87	3	replace
1081	[BUG]  [BUGGY]  short  skipped  =  input.skip(numToSkip  +  1);  [CE]  possible  loss  of  precision  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  short  skipped  =  input.skip(numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	short  skipped  =  input.skip(numToSkip  +  1);	  long    skipped    =    available.skip(numToSkip    +    1);    	non-compiled	[CE]  possible  loss  of  precision	87	None	replace
1082	[BUG]  [BUGGY]  short  skipped  =  input.skip(available  -  numToSkip).longValue();  [CE]  long  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  short  skipped  =  input.skip(available  -  numToSkip).longValue();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	short  skipped  =  input.skip(available  -  numToSkip).longValue();	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    -    numToSkip).longValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	6	None	replace
1083	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)/.longValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)/.longValue();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip)/.longValue();	  long    skipped    =    input.skip(available    -    numToSkip);    long    skipped    =    input.skip(available    -    numToSkip).longValue();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1084	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  COPY_BUF_SIZE);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  COPY_BUF_SIZE);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  COPY_BUF_SIZE);	  long    skipped    =    input.skip(available,    numToSkip,    SKIP_BUF_SIZE);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	93	None	replace
1085	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE  +  1);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE  +  1);	  long    skipped    =    input.skip(available,    numToSkip,    SKIP_BUF_SIZE);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	93	None	replace
1086	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  int  skipped  =  available  *  numToSkip  +  2;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  int  skipped  =  available  *  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    2;    int  skipped  =  available  *  numToSkip  +  2;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	44	None	add
1087	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  InputStream  input  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    2;    InputStream  input  =  input.readInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	44	None	add
1088	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  long  skipped  =  available  *  numToSkip  +  2;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  long  skipped  =  available  *  numToSkip  +  2;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    +    1;    long  skipped  =  available  *  numToSkip  +  2;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	42	None	add
1089	[BUG]  [BUGGY]  long  skipped  =  numToSkip  +  input.readLine();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  numToSkip  +  input.readLine();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  +  input.readLine();	  long    skipped    =    numToSkip    +    input.skipToSkip;    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
1090	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  /  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  +  numToSkip  /  1;	  long    skipped    =    available    +    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	74	3	replace
1091	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  /  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  /  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip  /  1;	  long    skipped    =    available    +    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	74	3	replace
1092	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  NEGATING_BACKSLASH);  [CE]  cannot  find  symbol  NEGATING_BACKSLASH  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  NEGATING_BACKSLASH);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  NEGATING_BACKSLASH);	  long    skipped    =    input.skip(available,    numToSkip,    buffersize);    	non-compiled	[CE]  cannot  find  symbol  NEGATING_BACKSLASH	91	None	replace
1093	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  null);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  null);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  null);	  long    skipped    =    input.skip(available,    numToSkip,    buffersize);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	91	None	replace
1094	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  getInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  getInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  getInput();	  long    skipped    =    input.skip(available);    InputStream    input    =    getInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	160	None	replace
1095	[BUG]  [BUGGY]  if(available  <  =  0)  {  long  skipped  =  input.skip(available);  InputStream  input  =  getInput();  }  else  {  skip(input,  numToSkip);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  if(available  <  =  0)  {  long  skipped  =  input.skip(available);  InputStream  input  =  getInput();  }  else  {  skip(input,  numToSkip);  }  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	if(available  <  =  0)  {  long  skipped  =  input.skip(available);  InputStream  input  =  getInput();  }  else  {  skip(input,  numToSkip);  }	  long    skipped    =    input.skip(available);    InputStream    input    =    getInput();    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
1096	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.size()  -  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.size()  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.size()  -  1;	  long    skipped    =    input.skip(available    +    numToSkip);    int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	151	None	replace
1097	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available);  int  skipped  =  input.skip(available);  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available);  int  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available);  int  skipped  =  input.skip(available);	  long    skipped    =    input.skip(available);    long    skipped    =    input.skip(available);    	non-compiled	[CE]  incompatible  types	17	None	replace
1098	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip);  Long  available  =  input.skip(available  -  numToSkip);  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip);  Long  available  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  -  numToSkip);  Long  available  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    Long    available    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	120	None	replace
1099	[BUG]  [BUGGY]  long  skipped  =  input  *  numToSkip  +  numToSkip.length;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input  *  numToSkip  +  numToSkip.length;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input  *  numToSkip  +  numToSkip.length;	  long    skipped    =    available    *    numToSkip    +    input.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	138	None	replace
1100	[BUG]  [BUGGY]  long  skipped  =  input  *  numToSkip  +  numToSkip;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input  *  numToSkip  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input  *  numToSkip  +  numToSkip;	  long    skipped    =    available    *    numToSkip    +    input.length;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	138	None	replace
1101	[BUG]  [BUGGY]  int  skipped  =  input.skip(available,  numToSkip,  this.buffersize);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available,  numToSkip,  this.buffersize);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available,  numToSkip,  this.buffersize);	  int    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	90	None	replace
1102	[BUG]  [BUGGY]  int  skipped  =  input.skip(available,  numToSkip  +  1);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  int  skipped  =  input.skip(available,  numToSkip  +  1);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available,  numToSkip  +  1);	  int    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	90	None	replace
1103	[BUG]  [BUGGY]  short  skipped  =  input.skip(available,  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  short  skipped  =  input.skip(available,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	short  skipped  =  input.skip(available,  numToSkip);	  long    skipped    =    available.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	86	None	replace
1104	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available  -  numToSkip);  Long  skipped  =  input.skip(available  -  numToSkip);  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  Integer  skipped  =  input.skip(available  -  numToSkip);  Long  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available  -  numToSkip);  Long  skipped  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    Long    skipped    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  incompatible  types	2	None	replace
1105	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  int  skipped  =  input.skip(available);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(available);  int  skipped  =  input.skip(available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available);  int  skipped  =  input.skip(available);	  long    skipped    =    input.skip(available);    short    skipped    =    input.skip(available);    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	159	None	replace
1106	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  InputStream  input  =  input.readInput();  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    -    1;    InputStream  input  =  input.readInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	155	None	add
1107	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  long  skipped  =  available  *  numToSkip.  -  1;  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  long  skipped  =  available  *  numToSkip.  -  1;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip    -    1;    long  skipped  =  available  *  numToSkip.  -  1;	  	non-compiled	[CE]  <identifier>  expected	155	None	add
1108	[BUG]  [BUGGY]  long  skipped  =  input.skip  +  numToSkip;  [CE]  cannot  find  symbol  skip  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip  +  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip  +  numToSkip;	  long    skipped    =    input.skippedToSkip    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  skip	125	None	replace
1109	[BUG]  [BUGGY]  long  skipped  =  input.skippedToSkip  /  numToSkip;  [CE]  cannot  find  symbol  skippedToSkip  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skippedToSkip  /  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skippedToSkip  /  numToSkip;	  long    skipped    =    input.skippedToSkip    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  skippedToSkip	125	None	replace
1110	[BUG]  [BUGGY]  short  skipped  =  input.skip(numToSkip,  available);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  short  skipped  =  input.skip(numToSkip,  available);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	short  skipped  =  input.skip(numToSkip,  available);	  long    skipped    =    available.skip(numToSkip,    input);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	89	None	replace
1111	[BUG]  [BUGGY]  long  skipped  =  input.skip(input,  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  input.skip(input,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(input,  numToSkip);	  long    skipped    =    available.skip(numToSkip,    input);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	89	None	replace
1112	[BUG]  [BUGGY]  float  skipped  =  input.skip(available,  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  float  skipped  =  input.skip(available,  numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float  skipped  =  input.skip(available,  numToSkip);	  float    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	28	None	replace
1113	[BUG]  [BUGGY]  double  skipped  =  input.skip(numToSkip);  double  skipped  =  input.skipped(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skip(numToSkip);  double  skipped  =  input.skipped(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double    skipped    =    input.skip(numToSkip);    double  skipped  =  input.skipped(numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	25	None	add
1114	[BUG]  [BUGGY]  double  skipped  =  input.skip(numToSkip);  double  skipped  =  input.switch(numToSkip);  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  double  skipped  =  input.skip(numToSkip);  double  skipped  =  input.switch(numToSkip);  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double    skipped    =    input.skip(numToSkip);    double  skipped  =  input.switch(numToSkip);	  	non-compiled	[CE]  <identifier>  expected	25	None	add
1115	[BUG]  [BUGGY]  InputStream  skipped  =  input.readInt()  &  0xff;  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  InputStream  skipped  =  input.readInt()  &  0xff;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.readInt()  &  0xff;	  InputStream    skipped    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1116	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  /  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  +  numToSkip  /  numToSkip;	  long    skipped    =    available    +    numToSkip    *    numToSkip;    	compilable	  [FE]  AssertionError  	76	3	replace
1117	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  /  numToSkip;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {      [BUGGY]  long  skipped  =  available  +  numToSkip  /  numToSkip;  [BUGGY]      if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip  /  numToSkip;	  long    skipped    =    available    +    numToSkip    *    numToSkip;    	compilable	  [FE]  AssertionError  	76	3	replace
