bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  [BUGGY]  long  skipped  =  input.skip(available);  [BUGGY]  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available);	long  skipped  =  input.skip(numToSkip);  	compilable	  [FE]  AssertionError  	7	2	replace
2	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  [BUGGY]  long  skipped  =  input.skip(available);  [BUGGY]  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available);	long  skipped  =  input.skip(numToSkip);  	compilable	  [FE]  AssertionError  	7	2	replace
3	[BUG]  [BUGGY]  long  skipped  =  available.skip(numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]      AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  [BUGGY]  long  skipped  =  available.skip(numToSkip);  [BUGGY]  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(numToSkip);	long  skipped  =  input.skip(numToSkip);  	non-compiled	[CE]  long  cannot  be  dereferenced	7	None	replace
4	[BUG]  [BUGGY]  int  skipped  =  input.skip(numToSkip);  [CE]  possible  loss  of  precision  [FE]        AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  [BUGGY]  int  skipped  =  input.skip(numToSkip);  [BUGGY]  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(numToSkip);	long  skipped  =  input.skip(numToSkip);  	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  -  numToSkip);	long  skipped  =  input.skip(numToSkip);  	compilable	  [FE]  AssertionError  	7	3	replace
6	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip);	long  skipped  =  input.skip(numToSkip);  	compilable	  [FE]  AssertionError  	7	3	replace
7	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]            AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip);  [BUGGY]  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip);	long  skipped  =  input.skip(numToSkip);  	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	7	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  [BUGGY]  long  skipped  =  available  *  numToSkip;  [BUGGY]  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  *  numToSkip;	long  skipped  =  input.skip(numToSkip);  	compilable	  [FE]  AssertionError  	7	3	replace
9	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  [FE]  AssertionError  [FE]              AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  [BUGGY]  long  skipped  =  available  *  numToSkip;  [BUGGY]  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip;	long  skipped  =  input.skip(numToSkip);  	compilable	  [FE]  AssertionError  	7	3	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  [BUGGY]  long  skipped  =  available  +  numToSkip;  [BUGGY]  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  +  numToSkip;	long  skipped  =  input.skip(numToSkip);  	compilable	  [FE]  AssertionError  	7	3	replace
11	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  [FE]  AssertionError  [FE]                AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  [BUGGY]  long  skipped  =  available  +  numToSkip;  [BUGGY]  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip;	long  skipped  =  input.skip(numToSkip);  	compilable	  [FE]  AssertionError  	7	3	replace
12	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  skipped  [FE]                  AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  [BUGGY]    [BUGGY]  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	  	long  skipped  =  input.skip(numToSkip);  	non-compiled	[CE]  cannot  find  symbol  skipped	7	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  +  numToSkip);	long  skipped  =  input.skip(numToSkip);  	compilable	  [FE]  AssertionError  	7	3	replace
14	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip);	long  skipped  =  input.skip(numToSkip);  	compilable	  [FE]  AssertionError  	7	3	replace
15	[BUG]  [BUGGY]  long  skipped  =  input.skipToSkip  +  numToSkip;  [CE]  cannot  find  symbol  skipToSkip  [FE]      AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  [BUGGY]  long  skipped  =  input.skipToSkip  +  numToSkip;  [BUGGY]  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skipToSkip  +  numToSkip;	long  skipped  =  input.skip(numToSkip);  	non-compiled	[CE]  cannot  find  symbol  skipToSkip	7	None	replace
16	[BUG]  [BUGGY]  long  skipped  =  input.skipToSkip(available);  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  [BUGGY]  long  skipped  =  input.skipToSkip(available);  [BUGGY]  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skipToSkip(available);	long  skipped  =  input.skip(numToSkip);  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
