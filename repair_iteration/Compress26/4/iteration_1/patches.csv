bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  long  skipped  =  input.skip(available  -  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  long  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip);    long  skipped  =  input.skip(available  -  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	5	None	add
2	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  Long  skipped  =  input.skip(available  -  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  Long  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip);    Long  skipped  =  input.skip(available  -  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	5	None	add
3	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.skip(available  -  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.skip(available  -  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip);    int  numToSkip  =  input.skip(available  -  numToSkip);	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	5	None	add
4	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.skip(available  -  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.skip(available  -  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip);    int  available  =  input.skip(available  -  numToSkip);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	5	None	add
5	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available  -  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available  -  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip);    int  available  =  input.read(available  -  numToSkip);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	5	None	add
6	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  long  skipped  =  input.skip(available  -  numToSkip).longValue();  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  long  skipped  =  input.skip(available  -  numToSkip).longValue();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip);    long  skipped  =  input.skip(available  -  numToSkip).longValue();	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	5	None	add
7	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  numToSkip  =  input.length();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip);    int  numToSkip  =  input.length();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	5	None	add
8	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  InputStream  input  =  this.input.readInput();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip);    InputStream  input  =  this.input.readInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	5	None	add
9	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  long  skipped  =  available  *  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip;  long  skipped  =  available  *  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip;    long  skipped  =  available  *  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	8	None	add
10	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  Long  skipped  =  available  *  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip;  Long  skipped  =  available  *  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip;    Long  skipped  =  available  *  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	8	None	add
11	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  *  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  available  *  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip;    int  numToSkip  =  available  *  numToSkip;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	8	None	add
12	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  long  skipd  =  available  *  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip;  long  skipd  =  available  *  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip;    long  skipd  =  available  *  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	8	None	add
13	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  int  skipped  =  available  *  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip;  int  skipped  =  available  *  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip;    int  skipped  =  available  *  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	8	None	add
14	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readInt();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip;    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	8	None	add
15	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.read();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip;    int  numToSkip  =  input.read();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	8	None	add
16	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip;  int  numToSkip  =  input.readLine();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip;    int  numToSkip  =  input.readLine();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	8	None	add
17	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  long  skipped  =  input.skip(available);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available);  long  skipped  =  input.skip(available);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available);    long  skipped  =  input.skip(available);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	1	None	add
18	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  Long  skipped  =  input.skip(available);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available);  Long  skipped  =  input.skip(available);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available);    Long  skipped  =  input.skip(available);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	1	None	add
19	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  int  available  =  input.read(available);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available);  int  available  =  input.read(available);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available);    int  available  =  input.read(available);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	1	None	add
20	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  int  available  =  input.skip(available);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available);  int  available  =  input.skip(available);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available);    int  available  =  input.skip(available);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	1	None	add
21	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  InputStream  input  =  this.input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available);  InputStream  input  =  this.input.readInput();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available);    InputStream  input  =  this.input.readInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	1	None	add
22	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  InputStream  available  =  input.readInput();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available);  InputStream  available  =  input.readInput();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available);    InputStream  available  =  input.readInput();	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	1	None	add
23	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  InputStream  input  =  this.input.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available);  InputStream  input  =  this.input.getInputStream();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available);    InputStream  input  =  this.input.getInputStream();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	1	None	add
24	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  InputStream  available  =  input.readInput(numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available);  InputStream  available  =  input.readInput(numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available);    InputStream  available  =  input.readInput(numToSkip);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	1	None	add
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  double  skipped  =  input.skip(numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	double  skipped  =  input.skip(numToSkip);	  int    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	4	2	replace
26	[BUG]  [BUGGY]  double  skipped  =  input.skip(numToSkip);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  double  skipped  =  input.skip(numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	double  skipped  =  input.skip(numToSkip);	  int    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	4	2	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  float  skipped  =  input.skip(numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	float  skipped  =  input.skip(numToSkip);	  int    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	4	2	replace
28	[BUG]  [BUGGY]  float  skipped  =  input.skip(numToSkip);  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  float  skipped  =  input.skip(numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	float  skipped  =  input.skip(numToSkip);	  int    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	4	2	replace
29	[BUG]  [BUGGY]  boolean  skipped  =  input.skip(numToSkip);  [CE]  incompatible  types  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  boolean  skipped  =  input.skip(numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	boolean  skipped  =  input.skip(numToSkip);	  int    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  incompatible  types	4	None	replace
30	[BUG]  [BUGGY]  char  skipped  =  input.skip(numToSkip);  [CE]  possible  loss  of  precision  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  char  skipped  =  input.skip(numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	char  skipped  =  input.skip(numToSkip);	  int    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	4	None	replace
31	[BUG]  [BUGGY]  short  skipped  =  input.skip(numToSkip);  [CE]  possible  loss  of  precision  [FE]                    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  short  skipped  =  input.skip(numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	short  skipped  =  input.skip(numToSkip);	  int    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	4	None	replace
32	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  long  skipped  =  available  +  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  +  numToSkip;  long  skipped  =  available  +  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip;    long  skipped  =  available  +  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	10	None	add
33	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  Long  skipped  =  available  +  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  +  numToSkip;  Long  skipped  =  available  +  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip;    Long  skipped  =  available  +  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	10	None	add
34	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  long  skipd  =  available  +  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  +  numToSkip;  long  skipd  =  available  +  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip;    long  skipd  =  available  +  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	10	None	add
35	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readInt();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip;    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	10	None	add
36	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.read();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip;    int  numToSkip  =  input.read();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	10	None	add
37	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  long  available  =  available  +  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  +  numToSkip;  long  available  =  available  +  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip;    long  available  =  available  +  numToSkip;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	10	None	add
38	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  int  skipped  =  available  +  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  +  numToSkip;  int  skipped  =  available  +  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip;    int  skipped  =  available  +  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	10	None	add
39	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.readLine();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip;    int  numToSkip  =  input.readLine();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	10	None	add
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  /  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  /  numToSkip;	  long    skipped    =    available    *    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
41	[BUG]  [BUGGY]  long  skipped  =  available  /  numToSkip;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  /  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  /  numToSkip;	  long    skipped    =    available    *    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  *  numToSkip  +  1;	  long    skipped    =    available    *    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
43	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip  +  1;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  1;	  long    skipped    =    available    *    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  *  numToSkip  +  2;	  long    skipped    =    available    *    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
45	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip  +  2;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  2;	  long    skipped    =    available    *    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
46	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  -  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  -  numToSkip;	  long    skipped    =    available    *    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
47	[BUG]  [BUGGY]  long  skipped  =  available  -  numToSkip;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  -  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  -  numToSkip;	  long    skipped    =    available    *    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
48	[BUG]  [BUGGY]  int  skipped  =  available  *  numToSkip;  [CE]  possible  loss  of  precision  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  int  skipped  =  available  *  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available  *  numToSkip;	  long    skipped    =    available    *    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  /  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    	compilable	  [FE]  AssertionError  	14	2	replace
50	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  /  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  /  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    	compilable	  [FE]  AssertionError  	14	2	replace
51	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  *  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    	compilable	  [FE]  AssertionError  	14	3	replace
52	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  *  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  *  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    	compilable	  [FE]  AssertionError  	14	3	replace
53	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip,  0);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip,  0);	  long    skipped    =    input.skip(available    +    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	14	None	replace
54	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip);  [CE]  possible  loss  of  precision  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  int  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  +  numToSkip);	  long    skipped    =    input.skip(available    +    numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	14	None	replace
55	[BUG]  [BUGGY]  long  skipped  =  input.available  +  numToSkip;  [CE]  cannot  find  symbol  available  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.available  +  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.available  +  numToSkip;	  long    skipped    =    input.skipToSkip    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	15	None	replace
56	[BUG]  [BUGGY]  long  skipped  =  numToSkip  +  input.skipToSkip;  [CE]  cannot  find  symbol  skipToSkip  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  numToSkip  +  input.skipToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip  +  input.skipToSkip;	  long    skipped    =    input.skipToSkip    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  skipToSkip	15	None	replace
57	[BUG]  [BUGGY]  long  skipped  =  input.length  +  numToSkip;  [CE]  cannot  find  symbol  length  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.length  +  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.length  +  numToSkip;	  long    skipped    =    input.skipToSkip    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  length	15	None	replace
58	[BUG]  [BUGGY]  long  skipped  =  input.availableToSkip  +  numToSkip;  [CE]  cannot  find  symbol  availableToSkip  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.availableToSkip  +  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.availableToSkip  +  numToSkip;	  long    skipped    =    input.skipToSkip    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  availableToSkip	15	None	replace
59	[BUG]  [BUGGY]  long  skipped  =  input.getSize()  +  numToSkip;  [CE]  cannot  find  symbol  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.getSize()  +  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.getSize()  +  numToSkip;	  long    skipped    =    input.skipToSkip    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
60	[BUG]  [BUGGY]  long  skipped  =  available.skipToSkip(input);  [CE]  long  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available.skipToSkip(input);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skipToSkip(input);	  long    skipped    =    input.skipToSkip(available);    	non-compiled	[CE]  long  cannot  be  dereferenced	16	None	replace
61	[BUG]  [BUGGY]  long  skipped  =  input.skipToSkip(numToSkip);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skipToSkip(numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skipToSkip(numToSkip);	  long    skipped    =    input.skipToSkip(available);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
62	[BUG]  [BUGGY]  int  skipped  =  input.skipToSkip(available);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  int  skipped  =  input.skipToSkip(available);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skipToSkip(available);	  long    skipped    =    input.skipToSkip(available);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
63	[BUG]  [BUGGY]  long  skipped  =  available.skipToSkip(INIT_SIZE);  [CE]  cannot  find  symbol  INIT_SIZE  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available.skipToSkip(INIT_SIZE);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skipToSkip(INIT_SIZE);	  long    skipped    =    input.skipToSkip(available);    	non-compiled	[CE]  cannot  find  symbol  INIT_SIZE	16	None	replace
64	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  long  skipped  =  input.skip(available  +  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  long  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip);    long  skipped  =  input.skip(available  +  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	13	None	add
65	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  Long  skipped  =  input.skip(available  +  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  Long  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip);    Long  skipped  =  input.skip(available  +  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	13	None	add
66	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  short  skipped  =  input.skip(available  +  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  short  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip);    short  skipped  =  input.skip(available  +  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	13	None	add
67	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(available  +  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(available  +  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip);    int  available  =  input.read(available  +  numToSkip);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	13	None	add
68	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(available  +  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(available  +  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip);    int  numToSkip  =  input.read(available  +  numToSkip);	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	13	None	add
69	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.length();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip);    int  numToSkip  =  input.length();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	13	None	add
70	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  long  skipped  =  input.skip(available  +  numToSkip).longValue();  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  long  skipped  =  input.skip(available  +  numToSkip).longValue();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip);    long  skipped  =  input.skip(available  +  numToSkip).longValue();	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	13	None	add
71	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip);    int  numToSkip  =  input.read();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	13	None	add
72	[BUG]  [BUGGY]  long  skipped  =  available.skip(input);  [CE]  long  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available.skip(input);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(input);	  long    skipped    =    input.skip(available);    	non-compiled	[CE]  long  cannot  be  dereferenced	2	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  +  numToSkip  +  1;	  long    skipped    =    available    +    numToSkip;    	compilable	  [FE]  AssertionError  	11	3	replace
74	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  +  numToSkip  +  1;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip  +  1;	  long    skipped    =    available    +    numToSkip;    	compilable	  [FE]  AssertionError  	11	3	replace
75	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  +  numToSkip  *  numToSkip;	  long    skipped    =    available    +    numToSkip;    	compilable	  [FE]  AssertionError  	11	3	replace
76	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  +  numToSkip  *  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip  *  numToSkip;	  long    skipped    =    available    +    numToSkip;    	compilable	  [FE]  AssertionError  	11	3	replace
77	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  +  numToSkip  +  2;	  long    skipped    =    available    +    numToSkip;    	compilable	  [FE]  AssertionError  	11	3	replace
78	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  +  numToSkip  +  2;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip  +  2;	  long    skipped    =    available    +    numToSkip;    	compilable	  [FE]  AssertionError  	11	3	replace
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  -  numToSkip  +  1);	  long    skipped    =    input.skip(available    -    numToSkip);    	compilable	  [FE]  AssertionError  	6	3	replace
80	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip  +  1);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip  +  1);	  long    skipped    =    input.skip(available    -    numToSkip);    	compilable	  [FE]  AssertionError  	6	3	replace
81	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  0);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip,  0);	  long    skipped    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	6	None	replace
82	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  -  numToSkip)+  1;	  long    skipped    =    input.skip(available    -    numToSkip);    	compilable	  [FE]  AssertionError  	6	3	replace
83	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip)+  1;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip)+  1;	  long    skipped    =    input.skip(available    -    numToSkip);    	compilable	  [FE]  AssertionError  	6	3	replace
84	[BUG]  [BUGGY]  long  skipped  =  available.skip(numToSkip  -  numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available.skip(numToSkip  -  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(numToSkip  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	6	None	replace
85	[BUG]  [BUGGY]  long  skipped  =  available.skip(numToSkip,  0);  [CE]  long  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available.skip(numToSkip,  0);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(numToSkip,  0);	  long    skipped    =    available.skip(numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	3	None	replace
86	[BUG]  [BUGGY]  long  skipped  =  available.skip(available,  numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available.skip(available,  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(available,  numToSkip);	  long    skipped    =    available.skip(numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	3	None	replace
87	[BUG]  [BUGGY]  long  skipped  =  available.skip(numToSkip  +  1);  [CE]  long  cannot  be  dereferenced  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available.skip(numToSkip  +  1);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(numToSkip  +  1);	  long    skipped    =    available.skip(numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	3	None	replace
88	[BUG]  [BUGGY]  long  skipped  =  numToSkip.skip(available);  [CE]  long  cannot  be  dereferenced  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  numToSkip.skip(available);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  numToSkip.skip(available);	  long    skipped    =    available.skip(numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	3	None	replace
89	[BUG]  [BUGGY]  long  skipped  =  available.skip(numToSkip,  input);  [CE]  long  cannot  be  dereferenced  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available.skip(numToSkip,  input);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available.skip(numToSkip,  input);	  long    skipped    =    available.skip(numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	3	None	replace
90	[BUG]  [BUGGY]  int  skipped  =  input.skip(available,  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  int  skipped  =  input.skip(available,  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available,  numToSkip);	  long    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	7	None	replace
91	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  buffersize);  [CE]  cannot  find  symbol  buffersize  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  buffersize);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  buffersize);	  long    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffersize	7	None	replace
92	[BUG]  [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  InputStream  available  =  input.skip(available,  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(available,  numToSkip);	  long    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	7	None	replace
93	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  SKIP_BUF_SIZE);	  long    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	7	None	replace
94	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  0);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  0);	  long    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	7	None	replace
95	[BUG]  [BUGGY]  InputStream  available  =  input.skip(numToSkip,  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  InputStream  available  =  input.skip(numToSkip,  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  available  =  input.skip(numToSkip,  numToSkip);	  long    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	7	None	replace
96	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  bufsize);  [CE]  cannot  find  symbol  bufsize  [FE]                            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available,  numToSkip,  bufsize);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  numToSkip,  bufsize);	  long    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  bufsize	7	None	replace
97	[BUG]  [BUGGY]  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  InputStream  input  =  input.readInput();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readInput();	      	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	12	None	replace
98	[BUG]  [BUGGY]  int  skipped  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  int  skipped  =  input.readInt();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.readInt();	      	non-compiled	[CE]  cannot  find  symbol	12	None	replace
99	[BUG]  [BUGGY]  int  n  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  int  n  =  input.readInt();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  n  =  input.readInt();	      	non-compiled	[CE]  cannot  find  symbol	12	None	replace
100	[BUG]  [BUGGY]  InputStream  input  =  input.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  InputStream  input  =  input.getInputStream();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.getInputStream();	      	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	12	None	replace
101	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  int  skipped  =  input.read();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	int  skipped  =  input.read();	      	compilable	  [FE]  AssertionError  	12	3	replace
102	[BUG]  [BUGGY]  int  skipped  =  input.read();  [FE]  AssertionError  [FE]                              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  int  skipped  =  input.read();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.read();	      	compilable	  [FE]  AssertionError  	12	3	replace
103	[BUG]  [BUGGY]  InputStream  input  =  input.readInput(numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  InputStream  input  =  input.readInput(numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readInput(numToSkip);	      	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	12	None	replace
104	[BUG]  [BUGGY]  InputStream  in  =  input.readInput();  [CE]  cannot  find  symbol  [FE]                                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  InputStream  in  =  input.readInput();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input.readInput();	      	non-compiled	[CE]  cannot  find  symbol	12	None	replace
105	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  long  available  =  available  *  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip;  long  available  =  available  *  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip;    long  available  =  available  *  numToSkip;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	8	None	add
106	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  long  numToSkip  =  available  *  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip;  long  numToSkip  =  available  *  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip;    long  numToSkip  =  available  *  numToSkip;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	8	None	add
107	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  InputStream  input  =  input.readInt();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip;  InputStream  input  =  input.readInt();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip;    InputStream  input  =  input.readInt();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	8	None	add
108	[BUG]  [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  Integer  skipped  =  input.skip(available,  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Integer  skipped  =  input.skip(available,  numToSkip);	  long    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	7	None	replace
109	[BUG]  [BUGGY]  InputStream  skipped  =  input.skip(available,  numToSkip);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  InputStream  skipped  =  input.skip(available,  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.skip(available,  numToSkip);	  long    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	7	None	replace
110	[BUG]  [BUGGY]  InputStream  input  =  input.skip(available,  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  InputStream  input  =  input.skip(available,  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.skip(available,  numToSkip);	  long    skipped    =    input.skip(available,    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	7	None	replace
111	[BUG]  [BUGGY]  int  skipped  =  input.skip(available);  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  int  skipped  =  input.skip(available);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available);	  long    skipped    =    input.skip(available);    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
112	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  long  available  =  input.skip(available  +  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  long  available  =  input.skip(available  +  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip);    long  available  =  input.skip(available  +  numToSkip);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	13	None	add
113	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(available);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  available  =  input.read(available);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip);    int  available  =  input.read(available);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	13	None	add
114	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  long  skipped  =  input.skip(available  +  numtoSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  long  skipped  =  input.skip(available  +  numtoSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip);    long  skipped  =  input.skip(available  +  numtoSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	13	None	add
115	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.read(available);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip);    int  numToSkip  =  input.read(available);	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	13	None	add
116	[BUG]  [BUGGY]  int  skipped  =  available.skip(numToSkip);  [CE]  long  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  int  skipped  =  available.skip(numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  available.skip(numToSkip);	  long    skipped    =    available.skip(numToSkip);    	non-compiled	[CE]  long  cannot  be  dereferenced	3	None	replace
117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  Long  skipped  =  input.skip(numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	Long  skipped  =  input.skip(numToSkip);	  long    skipped    =    available.skip(numToSkip);    	compilable	  [FE]  AssertionError  	3	2	replace
118	[BUG]  [BUGGY]  Long  skipped  =  input.skip(numToSkip);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  Long  skipped  =  input.skip(numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  input.skip(numToSkip);	  long    skipped    =    available.skip(numToSkip);    	compilable	  [FE]  AssertionError  	3	2	replace
119	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  long  available  =  input.skip(available  -  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  long  available  =  input.skip(available  -  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip);    long  available  =  input.skip(available  -  numToSkip);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	5	None	add
120	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  Long  available  =  input.skip(available  -  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  Long  available  =  input.skip(available  -  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip);    Long  available  =  input.skip(available  -  numToSkip);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	5	None	add
121	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  long  skipped  =  input.skip(available  *  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  long  skipped  =  input.skip(available  *  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip);    long  skipped  =  input.skip(available  *  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	5	None	add
122	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  long  skipped  =  input.skip(available  +  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  long  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip);    long  skipped  =  input.skip(available  +  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	5	None	add
123	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  int  available  =  input.read(available);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip);    int  available  =  input.read(available);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	5	None	add
124	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  long  skipped  =  input.skip(available  -  numtoSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  long  skipped  =  input.skip(available  -  numtoSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip);    long  skipped  =  input.skip(available  -  numtoSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	5	None	add
125	[BUG]  [BUGGY]  long  skipped  =  input.skippedToSkip  +  numToSkip;  [CE]  cannot  find  symbol  skippedToSkip  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skippedToSkip  +  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skippedToSkip  +  numToSkip;	  long    skipped    =    input.skipToSkip    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  skippedToSkip	15	None	replace
126	[BUG]  [BUGGY]  Long  skipped  =  available.skipToSkip(input);  [CE]  long  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  Long  skipped  =  available.skipToSkip(input);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	Long  skipped  =  available.skipToSkip(input);	  long    skipped    =    input.skipToSkip(available);    	non-compiled	[CE]  long  cannot  be  dereferenced	16	None	replace
127	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  long  numToSkip  =  available  +  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  +  numToSkip;  long  numToSkip  =  available  +  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip;    long  numToSkip  =  available  +  numToSkip;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	10	None	add
128	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  long  skip  =  available  +  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  +  numToSkip;  long  skip  =  available  +  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip;    long  skip  =  available  +  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	10	None	add
129	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  input.skip(available  +  numToSkip  +  1);	  long    skipped    =    input.skip(available    +    numToSkip);    	compilable	  [FE]  AssertionError  	14	3	replace
130	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip  +  1);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  +  numToSkip  +  1);	  long    skipped    =    input.skip(available    +    numToSkip);    	compilable	  [FE]  AssertionError  	14	3	replace
131	[BUG]  [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip);  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  int  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.skip(available  -  numToSkip);	  long    skipped    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	6	None	replace
132	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  long  available  =  input.skip(available);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available);  long  available  =  input.skip(available);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available);    long  available  =  input.skip(available);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	1	None	add
133	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  Long  available  =  input.skip(available);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available);  Long  available  =  input.skip(available);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available);    Long  available  =  input.skip(available);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	1	None	add
134	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available);  InputStream  input  =  input.readLine();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available);    InputStream  input  =  input.readLine();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	1	None	add
135	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available);  InputStream  input  =  input.readInput();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available);    InputStream  input  =  input.readInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	1	None	add
136	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  int  available  =  input.read();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available);  int  available  =  input.read();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available);    int  available  =  input.read();	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	1	None	add
137	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip  +  input.length;  [CE]  cannot  find  symbol  length  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  +  numToSkip  +  input.length;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  +  numToSkip  +  input.length;	  long    skipped    =    available    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  length	11	None	replace
138	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.length;  [CE]  cannot  find  symbol  length  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.length;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.length;	  long    skipped    =    available    *    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  length	9	None	replace
139	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.getChars(numToSkip);	  long    skipped    =    available    *    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
140	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(0,  numToSkip);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip  +  input.getChars(0,  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  +  input.getChars(0,  numToSkip);	  long    skipped    =    available    *    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
141	[BUG]  [BUGGY]  InputStream  input  =  input.readInt();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  InputStream  input  =  input.readInt();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readInt();	      	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	12	None	replace
142	[BUG]  [BUGGY]  InputStream  in  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  InputStream  in  =  input.readInt();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  in  =  input.readInt();	      	non-compiled	[CE]  cannot  find  symbol	12	None	replace
143	[BUG]  [BUGGY]  int  skipped  =  input.read(available);  [CE]  no  suitable  method  found  for  read(long)  [FE]                          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  int  skipped  =  input.read(available);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.read(available);	      	non-compiled	[CE]  no  suitable  method  found  for  read(long)	12	None	replace
144	[BUG]  [BUGGY]  InputStream  skipped  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  InputStream  skipped  =  input.readInt();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  skipped  =  input.readInt();	      	non-compiled	[CE]  cannot  find  symbol	12	None	replace
145	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  +  numToSkip;  InputStream  input  =  input.readInput();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip;    InputStream  input  =  input.readInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	10	None	add
146	[BUG]  [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.getCount();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  +  numToSkip;  int  numToSkip  =  input.getCount();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    +    numToSkip;    int  numToSkip  =  input.getCount();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	10	None	add
147	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  -1);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip,  -1);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available  -  numToSkip,  -1);	  long    skipped    =    input.skip(available    -    numToSkip);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	6	None	replace
148	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  long  skip  =  input.skip(available  +  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  long  skip  =  input.skip(available  +  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip);    long  skip  =  input.skip(available  +  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	13	None	add
149	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  long  skipped  =  input.skip(available  *  numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  long  skipped  =  input.skip(available  *  numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip);    long  skipped  =  input.skip(available  *  numToSkip);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	13	None	add
150	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  long  skipped  =  input.skip(available  +  numToSkip;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  long  skipped  =  input.skip(available  +  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip);    long  skipped  =  input.skip(available  +  numToSkip;	  	non-compiled	[CE]  ')'  expected	13	None	add
151	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  +  numToSkip);  int  numToSkip  =  input.size();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    +    numToSkip);    int  numToSkip  =  input.size();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	13	None	add
152	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip;  InputStream  input  =  input.readInput();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip;    InputStream  input  =  input.readInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	8	None	add
153	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip;  long  skip  =  available  *  numToSkip;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip;  long  skip  =  available  *  numToSkip;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    available    *    numToSkip;    long  skip  =  available  *  numToSkip;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	8	None	add
154	[BUG]  [BUGGY]  long  skipped  =  this.available.skipToSkip(input);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  this.available.skipToSkip(input);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  this.available.skipToSkip(input);	  long    skipped    =    input.skipToSkip(available);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	16	None	replace
155	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	add	long  skipped  =  available  *  numToSkip  -  1;	  long    skipped    =    available    *    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
156	[BUG]  [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  available  *  numToSkip  -  1;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  available  *  numToSkip  -  1;	  long    skipped    =    available    *    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
157	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  long  skipped  =  input.skip(available  -  numToSkip  +  1);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  long  skipped  =  input.skip(available  -  numToSkip  +  1);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip);    long  skipped  =  input.skip(available  -  numToSkip  +  1);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	5	None	add
158	[BUG]  [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  long  skipped  =  input.skip(available  -  numToSkip).length;  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available  -  numToSkip);  long  skipped  =  input.skip(available  -  numToSkip).length;  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available    -    numToSkip);    long  skipped  =  input.skip(available  -  numToSkip).length;	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	5	None	add
159	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  short  skipped  =  input.skip(available);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available);  short  skipped  =  input.skip(available);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available);    short  skipped  =  input.skip(available);	  	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	1	None	add
160	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  InputStream  input  =  getInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available);  InputStream  input  =  getInput();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long    skipped    =    input.skip(available);    InputStream  input  =  getInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	1	None	add
161	[BUG]  [BUGGY]  int  skipped  =  input.read(numToSkip);  [CE]  no  suitable  method  found  for  read(long)  [FE]                      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  int  skipped  =  input.read(numToSkip);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.read(numToSkip);	      	non-compiled	[CE]  no  suitable  method  found  for  read(long)	12	None	replace
162	[BUG]  [BUGGY]  int  skipped  =  input.getSize();  [CE]  cannot  find  symbol  [FE]                        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  int  skipped  =  input.getSize();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	int  skipped  =  input.getSize();	      	non-compiled	[CE]  cannot  find  symbol	12	None	replace
163	[BUG]  [BUGGY]  InputStream  input  =  input.readIn();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  InputStream  input  =  input.readIn();  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	InputStream  input  =  input.readIn();	      	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	12	None	replace
164	[BUG]  [BUGGY]  long  skipped  =  input.skip(available,  0);  [CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {    [BUGGY]  long  skipped  =  input.skip(available,  0);  [BUGGY]    if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	97	97	2	replace	long  skipped  =  input.skip(available,  0);	  long    skipped    =    input.skip(available);    	non-compiled	[CE]  method  skip  in  class  InputStream  cannot  be  applied  to  given  types;	2	None	replace
