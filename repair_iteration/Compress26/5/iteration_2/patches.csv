bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(skip!=  0)  {  [CE]  cannot  find  symbol  skip  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip!=  0)  {	  if(available    >=    0)    {    if(available!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  skip	39	None	replace
2	[BUG]  [BUGGY]  if(skip  ==  0)  {  [CE]  cannot  find  symbol  skip  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  ==  0)  {	  if(available    >=    0)    {    if(available!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  skip	39	None	replace
3	[BUG]  [BUGGY]  if(available  >  0)  {  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(COPY_BUF_SIZE))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
4	[BUG]  [BUGGY]  if(available  <  0)  {  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(COPY_BUF_SIZE))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
5	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(COPY_BUF_SIZE))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
6	[BUG]  [BUGGY]  if(available  <  =  0)  {  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0)  {  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0)  {  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(COPY_BUF_SIZE))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
7	[BUG]  [BUGGY]  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(COPY_BUF_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
8	[BUG]  [BUGGY]  if(available  >  0)  {  if(available  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(available  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(available  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(COPY_BUF_SIZE))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
9	[BUG]  [BUGGY]  if(available  >  0)  {  if(skipped  <  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skipped  <  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skipped  <  0  ||  input.isEnabled(COPY_BUF_SIZE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(COPY_BUF_SIZE))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
10	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skipped  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skipped  >=  0)  {	  if(skipped    >=    0)    {    if(skipped!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
11	[BUG]  [BUGGY]  if(available  <  0)  {  if(skipped  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skipped  >=  0)  {	  if(skipped    >=    0)    {    if(skipped!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
12	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skipped!=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skipped!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skipped!=  0)  {	  if(skipped    >=    0)    {    if(skipped!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
13	[BUG]  [BUGGY]  if(available  >  0)  {  if(skipped  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skipped  >=  0)  {	  if(skipped    >=    0)    {    if(skipped!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
14	[BUG]  [BUGGY]  if(available!=  0)  {  if(skipped  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available!=  0)  {  if(skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available!=  0)  {  if(skipped  >=  0)  {	  if(skipped    >=    0)    {    if(skipped!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
15	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  if(skipped  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip)  {  if(skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip)  {  if(skipped  >=  0)  {	  if(skipped    >=    0)    {    if(skipped!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  0  ||  available  >  numToSkip)  {	  if(skip    >    0    ||    available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	51	3	replace
17	[BUG]  [BUGGY]  if(available  >  0  ||  available  >  numToSkip)  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  available  >  numToSkip)  {	  if(skip    >    0    ||    available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	51	3	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(numToSkip  >  0  ||  available  >  numToSkip)  {	  if(skip    >    0    ||    available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	51	3	replace
19	[BUG]  [BUGGY]  if(numToSkip  >  0  ||  available  >  numToSkip)  {  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  >  0  ||  available  >  numToSkip)  {	  if(skip    >    0    ||    available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	51	3	replace
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  0  ||  available  <  numToSkip)  {	  if(skip    >    0    ||    available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	51	3	replace
21	[BUG]  [BUGGY]  if(available  >  0  ||  available  <  numToSkip)  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  available  <  numToSkip)  {	  if(skip    >    0    ||    available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	51	3	replace
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  0  ||  skipped  >  numToSkip)  {	  if(skip    >    0    ||    available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	51	3	replace
23	[BUG]  [BUGGY]  if(available  >  0  ||  skipped  >  numToSkip)  {  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  skipped  >  numToSkip)  {	  if(skip    >    0    ||    available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	51	3	replace
24	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
25	[BUG]  [BUGGY]  while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [CE]  possible  loss  of  precision  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	non-compiled	[CE]  possible  loss  of  precision	79	None	replace
26	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [CE]  cannot  find  symbol  skip  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	non-compiled	[CE]  cannot  find  symbol  skip	79	None	replace
27	[BUG]  [BUGGY]  while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  =  input.skip(numToSkip);  }  [CE]  possible  loss  of  precision  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  =  input.skip(numToSkip);  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  =  input.skip(numToSkip);  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	non-compiled	[CE]  possible  loss  of  precision	79	None	replace
28	[BUG]  [BUGGY]  while(numToSkip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [CE]  possible  loss  of  precision  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(numToSkip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(numToSkip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	non-compiled	[CE]  possible  loss  of  precision	79	None	replace
29	[BUG]  [BUGGY]  while(available  >  0)  {  for(int  i  =  available.size();  i  <  numToSkip;  i++)  {  input.close();  }  [CE]  long  cannot  be  dereferenced  [FE]                                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  available.size();  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(int  i  =  available.size();  i  <  numToSkip;  i++)  {  input.close();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	non-compiled	[CE]  long  cannot  be  dereferenced	79	None	replace
30	[BUG]  [BUGGY]  while(available  >  0)  {  for(int  i  =  available.length;  i  <  numToSkip;  i++)  {  input.close();  }  [CE]  long  cannot  be  dereferenced  [FE]                                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  available.length;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(int  i  =  available.length;  i  <  numToSkip;  i++)  {  input.close();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	non-compiled	[CE]  long  cannot  be  dereferenced	79	None	replace
31	[BUG]  [BUGGY]  if(skipped  >  available)  {  if(skipped  >  available)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available)  {  if(skipped  >  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    available)    {    if(skipped  >  available)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	56	None	add
32	[BUG]  [BUGGY]  if(skipped  >  available)  {  If(skipped  >  available)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available)  {  If(skipped  >  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    available)    {    If(skipped  >  available)  {	  timeout    	non-compiled	[CE]  ';'  expected	56	None	add
33	[BUG]  [BUGGY]  if(skipped  >  available)  {  if(skipped  >  unavailable)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available)  {  if(skipped  >  unavailable)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    available)    {    if(skipped  >  unavailable)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	56	None	add
34	[BUG]  [BUGGY]  if(skipped  >  available)  {  if(skipped  >  Available)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available)  {  if(skipped  >  Available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    available)    {    if(skipped  >  Available)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	56	None	add
35	[BUG]  [BUGGY]  if(skipped  >  available)  {  if(skipped  >  accessible)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available)  {  if(skipped  >  accessible)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    available)    {    if(skipped  >  accessible)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	56	None	add
36	[BUG]  [BUGGY]  if(skipped  >  0)  {  int  available  =  input.read(available);  if(available  >  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  int  available  =  input.read(available);  if(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  int  available  =  input.read(available);  if(available  >  0)  {	  if    (available    >    0)    {    int    available    =    input.read(skipped);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
37	[BUG]  [BUGGY]  if(skip  >  0)  {  int  available  =  input.read(skipped);  if(available  >  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  int  available  =  input.read(skipped);  if(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  int  available  =  input.read(skipped);  if(available  >  0)  {	  if    (available    >    0)    {    int    available    =    input.read(skipped);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
38	[BUG]  [BUGGY]  if(skipped  >  0)  {  int  available  =  input.read(available);  if(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  int  available  =  input.read(available);  if(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  int  available  =  input.read(available);  if(available  <  0)  {	  if    (available    >    0)    {    int    available    =    input.read(skipped);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
39	[BUG]  [BUGGY]  if(skipped  >  0)  {  int  available  =  input.read(available);  if(available  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  int  available  =  input.read(available);  if(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  int  available  =  input.read(available);  if(available  >=  0)  {	  if    (available    >    0)    {    int    available    =    input.read(skipped);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
40	[BUG]  [BUGGY]  if(skipped  >  0)  {  int  available  =  input.read(skipped);  if(available  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  int  available  =  input.read(skipped);  if(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  int  available  =  input.read(skipped);  if(available  >  0)  {	  if    (available    >    0)    {    int    available    =    input.read(skipped);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.getLength();    }    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
42	[BUG]  [BUGGY]  while(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  skipped  +=  input.getLength();  }  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  skipped  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  skipped  +=  input.getLength();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
43	[BUG]  [BUGGY]  while(available  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
44	[BUG]  [BUGGY]  if(available  >  0)  {  for(int  i  =  0;  i  <  skipped;  ++i)  {  skipped  +=  input.getLength();  }  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  for(int  i  =  0;  i  <  skipped;  ++i)  {  skipped  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  for(int  i  =  0;  i  <  skipped;  ++i)  {  skipped  +=  input.getLength();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
45	[BUG]  [BUGGY]  while(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }  [CE]  cannot  find  symbol  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
46	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }  [CE]  '.class'  expected  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  For(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	For(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.getLength();    }    	non-compiled	[CE]  '.class'  expected	121	None	replace
47	[BUG]  [BUGGY]  if(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  skipped  +=  input.getLength();  }  [CE]  cannot  find  symbol  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  skipped  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  skipped  +=  input.getLength();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
48	[BUG]  [BUGGY]  if(available  >  0)  {  while(available  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  while(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  while(available  >=  0)  {	  if(available    >=    0)    {    while(available    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
49	[BUG]  [BUGGY]  if(available  >  0)  {  while(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  while(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  while(available  <  0)  {	  if(available    >=    0)    {    while(available    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
50	[BUG]  [BUGGY]  if(available  <  =  0)  {  while(available  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0)  {  while(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0)  {  while(available  >=  0)  {	  if(available    >=    0)    {    while(available    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
51	[BUG]  [BUGGY]  if(available  >  0)  {  while(available  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  while(available  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  while(available  <  =  0)  {	  if(available    >=    0)    {    while(available    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
52	[BUG]  [BUGGY]  if(skip  >=  0)  {  while(available  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >=  0)  {  while(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >=  0)  {  while(available  >=  0)  {	  if(available    >=    0)    {    while(available    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
53	[BUG]  [BUGGY]  if(skipped  >=  0)  {  while(available  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0)  {  while(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >=  0)  {  while(available  >  0)  {	  if(available    >=    0)    {    while(available    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
54	[BUG]  [BUGGY]  if(available  <  =  0  &&  available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0  &&  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0  &&  available  >  numToSkip)  {	  if(skipped    <    =    0    &&    available    >    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
55	[BUG]  [BUGGY]  if(available  <  =  0  &&  skipped  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0  &&  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0  &&  skipped  >  numToSkip)  {	  if(skipped    <    =    0    &&    available    >    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
56	[BUG]  [BUGGY]  if(available  <  =  0  &&  numToSkip  >  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0  &&  numToSkip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0  &&  numToSkip  >  0)  {	  if(skipped    <    =    0    &&    available    >    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
57	[BUG]  [BUGGY]  if(numToSkip  <  =  0  &&  available  >  skipped)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  <  =  0  &&  available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  <  =  0  &&  available  >  skipped)  {	  if(skipped    <    =    0    &&    available    >    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
58	[BUG]  [BUGGY]  timeout  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  &&  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  0  &&  available  >  numToSkip)  {	  if(skipped    <    =    0    &&    available    >    numToSkip)    {    	compilable	timeout	87	1	replace
59	[BUG]  [BUGGY]  if(skipped  <  0  &&  available  >  numToSkip)  {  timeout  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  &&  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  0  &&  available  >  numToSkip)  {	  if(skipped    <    =    0    &&    available    >    numToSkip)    {    	compilable	timeout	87	1	replace
60	[BUG]  [BUGGY]  if(available  <  =  0  ||  available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0  ||  available  >  numToSkip)  {	  if(skipped    <    =    0    &&    available    >    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
61	[BUG]  [BUGGY]  if(available  >  0)  {  while(available  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  while(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  while(available  >  0)  {	  if(skipped    >    0)    {    while(skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
62	[BUG]  [BUGGY]  if(available  >  0)  {  while(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  while(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  while(skipped  >  0)  {	  if(skipped    >    0)    {    while(skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
63	[BUG]  [BUGGY]  if(skip  >  0)  {  while(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  while(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  while(skipped  >  0)  {	  if(skipped    >    0)    {    while(skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
64	[BUG]  [BUGGY]  if(skipped  >  available)  {  while(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available)  {  while(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  available)  {  while(skipped  >  0)  {	  if(skipped    >    0)    {    while(skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
65	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  while(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0)  {  while(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  >  0)  {  while(skipped  >  0)  {	  if(skipped    >    0)    {    while(skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
66	[BUG]  [BUGGY]  if(available  >  0)  {  while(skip  >  0)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  while(skip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  while(skip  >  0)  {	  if(skipped    >    0)    {    while(skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
67	[BUG]  [BUGGY]  if(available  >  0)  {  if(skip  >  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skip  >  0)  {	  if(skipped    >    0)    {    if(skiipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
68	[BUG]  [BUGGY]  if(available  >  0)  {  if(skid  >  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skid  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skid  >  0)  {	  if(skipped    >    0)    {    if(skiipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
69	[BUG]  [BUGGY]  if(available  >  0)  {  if(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skipped  >  0)  {	  if(skipped    >    0)    {    if(skiipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
70	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  if(skid  >  0)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip)  {  if(skid  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip)  {  if(skid  >  0)  {	  if(skipped    >    0)    {    if(skiipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
71	[BUG]  [BUGGY]  if(available  >  0)  {  if(skiipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skiipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skiipped  >  0)  {	  if(skipped    >    0)    {    if(skiipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
72	[BUG]  [BUGGY]  if(available  <  =  0)  {  if(skiipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0)  {  if(skiipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0)  {  if(skiipped  >  0)  {	  if(skipped    >    0)    {    if(skiipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
73	[BUG]  [BUGGY]  if(available  >  0)  {  if(skipping  >  0)  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skipping  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skipping  >  0)  {	  if(skipped    >    0)    {    if(skiipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
74	[BUG]  [BUGGY]  if(skipped  <  0  ||  available  <  numToSkip)  {  if(skipped  <  0  ||  available  <  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  <  numToSkip)  {  if(skipped  <  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    available    <    numToSkip)    {    if(skipped  <  0  ||  available  <  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	7	None	add
75	[BUG]  [BUGGY]  if(skipped  <  0  ||  available  <  numToSkip)  {  If(skipped  <  0  ||  available  <  numToSkip)  {  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  <  numToSkip)  {  If(skipped  <  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    available    <    numToSkip)    {    If(skipped  <  0  ||  available  <  numToSkip)  {	  timeout    	non-compiled	[CE]  ';'  expected	7	None	add
76	[BUG]  [BUGGY]  if(skipped  <  0  ||  available  <  numToSkip)  {  if(skipped  >=  0  ||  available  <  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  <  numToSkip)  {  if(skipped  >=  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    available    <    numToSkip)    {    if(skipped  >=  0  ||  available  <  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	7	None	add
77	[BUG]  [BUGGY]  if(skipped  <  0  ||  available  <  numToSkip)  {  if(skipped  <  0  ||  available  >=  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  <  numToSkip)  {  if(skipped  <  0  ||  available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    available    <    numToSkip)    {    if(skipped  <  0  ||  available  >=  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	7	None	add
78	[BUG]  [BUGGY]  if(skipped  <  0  ||  available  <  numToSkip)  {  if(skipped  <  0  ||  available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  <  numToSkip)  {  if(skipped  <  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    available    <    numToSkip)    {    if(skipped  <  0  ||  available  >  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	7	None	add
79	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  >  skipped)  {  if(skipped  >  0  ||  available  >  skipped)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  >  skipped)  {  if(skipped  >  0  ||  available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    available    >    skipped)    {    if(skipped  >  0  ||  available  >  skipped)  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
80	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  >  skipped)  {  If(skipped  >  0  ||  available  >  skipped)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  >  skipped)  {  If(skipped  >  0  ||  available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    available    >    skipped)    {    If(skipped  >  0  ||  available  >  skipped)  {	  	non-compiled	[CE]  ';'  expected	133	None	add
81	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  >  skipped)  {  if(skipped  >  0  ||  available  >  skip)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  >  skipped)  {  if(skipped  >  0  ||  available  >  skip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    available    >    skipped)    {    if(skipped  >  0  ||  available  >  skip)  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
82	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  >  skipped)  {  if(skipped  >  0  ||  available  >  skipd)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  >  skipped)  {  if(skipped  >  0  ||  available  >  skipd)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    available    >    skipped)    {    if(skipped  >  0  ||  available  >  skipd)  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
83	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  >  skipped)  {  if(skipped  >  0  ||  available  >  missing)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  >  skipped)  {  if(skipped  >  0  ||  available  >  missing)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    available    >    skipped)    {    if(skipped  >  0  ||  available  >  missing)  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
84	[BUG]  [BUGGY]  if(available  <  0)  {  if(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skipped  >  0)  {	  if(skipped    <    0)    {    if(skipped    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
85	[BUG]  [BUGGY]  if(available  <  0)  {  if(skip  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skip  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skip  >=  0)  {	  if(skipped    <    0)    {    if(skipped    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
86	[BUG]  [BUGGY]  if(available  <  numToSkip)  {  if(skipped  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip)  {  if(skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  numToSkip)  {  if(skipped  >=  0)  {	  if(skipped    <    0)    {    if(skipped    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
87	[BUG]  [BUGGY]  if(available  <  =  0)  {  if(skipped  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0)  {  if(skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0)  {  if(skipped  >=  0)  {	  if(skipped    <    0)    {    if(skipped    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
88	[BUG]  [BUGGY]  if(available  <  0)  {  if(skipped  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skipped  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skipped  ==  0)  {	  if(skipped    <    0)    {    if(skipped    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
89	[BUG]  [BUGGY]  if(available  <  0)  {  if(skipped  >>  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skipped  >>  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skipped  >>  0)  {	  if(skipped    <    0)    {    if(skipped    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
90	[BUG]  [BUGGY]  if(available  <  =  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  numToSkip)  {	  if(available    <    numToSkip)    {    timeout    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
91	[BUG]  [BUGGY]  timeout  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  skipped)  {	  if(available    <    numToSkip)    {    timeout    	compilable	timeout	96	1	replace
92	[BUG]  [BUGGY]  if(available  <  skipped)  {  timeout  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  skipped)  {	  if(available    <    numToSkip)    {    timeout    	compilable	timeout	96	1	replace
93	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >=  numToSkip)  {	  if(available    <    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	96	3	replace
94	[BUG]  [BUGGY]  if(available  >=  numToSkip)  {  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  numToSkip)  {	  if(available    <    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	96	3	replace
95	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  numToSkip  ||  skipped  >  0)  {	  if(available    <    numToSkip)    {    timeout    	compilable	timeout	96	1	replace
96	[BUG]  [BUGGY]  if(available  <  numToSkip  ||  skipped  >  0)  {  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  numToSkip  ||  skipped  >  0)  {	  if(available    <    numToSkip)    {    timeout    	compilable	timeout	96	1	replace
97	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  numToSkip)  {	  if(available    <    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	96	2	replace
98	[BUG]  [BUGGY]  if(skipped  <  numToSkip)  {  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  numToSkip)  {	  if(available    <    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	96	2	replace
99	[BUG]  [BUGGY]  if(available  >  skipped)  {  if(available  >  skipped)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  if(available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >    skipped)    {    if(available  >  skipped)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
100	[BUG]  [BUGGY]  if(available  >  skipped)  {  If(available  >  skipped)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  If(available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >    skipped)    {    If(available  >  skipped)  {	  	non-compiled	[CE]  ';'  expected	93	None	add
101	[BUG]  [BUGGY]  if(available  >  skipped)  {  if(available  >  skip)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  if(available  >  skip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >    skipped)    {    if(available  >  skip)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
102	[BUG]  [BUGGY]  if(available  >  skipped)  {  if(available  >  missing)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  if(available  >  missing)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >    skipped)    {    if(available  >  missing)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
103	[BUG]  [BUGGY]  if(available  >  skipped)  {  if(available  >  saved)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  if(available  >  saved)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >    skipped)    {    if(available  >  saved)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
104	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    skipped;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
105	[BUG]  [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [CE]  possible  loss  of  precision  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    skipped;    }    	non-compiled	[CE]  possible  loss  of  precision	69	None	replace
106	[BUG]  [BUGGY]  while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [CE]  possible  loss  of  precision  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    skipped;    }    	non-compiled	[CE]  possible  loss  of  precision	69	None	replace
107	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [CE]  possible  loss  of  precision  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    skipped;    }    	non-compiled	[CE]  possible  loss  of  precision	69	None	replace
108	[BUG]  [BUGGY]  int  numToSkip  =  available  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [CE]  ';'  expected  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  numToSkip  =  available  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  numToSkip  =  available  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    skipped;    }    	non-compiled	[CE]  ';'  expected	69	None	replace
109	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipd;  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipd;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipd;  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    skipped;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
110	[BUG]  [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipd;  }  [CE]  possible  loss  of  precision  [FE]                                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipd;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipd;  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    skipped;    }    	non-compiled	[CE]  possible  loss  of  precision	69	None	replace
111	[BUG]  [BUGGY]  if(available  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
112	[BUG]  [BUGGY]  if(available  <  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
113	[BUG]  [BUGGY]  if(available  <  =  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
114	[BUG]  [BUGGY]  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  cannot  find  symbol  Feature  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	107	None	replace
115	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
116	[BUG]  [BUGGY]  if(available  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  cannot  find  symbol  Feature  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	107	None	replace
117	[BUG]  [BUGGY]  if(available  >  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
119	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [CE]  cannot  find  symbol  skip  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol  skip	77	None	replace
120	[BUG]  [BUGGY]  while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [CE]  possible  loss  of  precision  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  possible  loss  of  precision	77	None	replace
121	[BUG]  [BUGGY]  long  available  =  numToSkip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [CE]  ';'  expected  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  long  available  =  numToSkip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	long  available  =  numToSkip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  ';'  expected	77	None	replace
122	[BUG]  [BUGGY]  long  available  =  numToSkip;  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  long  available  =  numToSkip;  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	long  available  =  numToSkip;	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
123	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getUpperBound();  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getUpperBound();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getUpperBound();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getUpperCase();  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getUpperCase();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getUpperCase();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
125	[BUG]  [BUGGY]  if(available  <  numToSkip)  {  if(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip)  {  if(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  numToSkip)  {  if(skipped  >  0)  {	  if(skipped    <    0)    {    if(skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
126	[BUG]  [BUGGY]  if(available  <  0)  {  if(skip  >  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skip  >  0)  {	  if(skipped    <    0)    {    if(skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
127	[BUG]  [BUGGY]  if(available  <  =  0)  {  if(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0)  {  if(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0)  {  if(skipped  >  0)  {	  if(skipped    <    0)    {    if(skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
128	[BUG]  [BUGGY]  if(available  <  numToSkip)  {  if(skip  >  0)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip)  {  if(skip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  numToSkip)  {  if(skip  >  0)  {	  if(skipped    <    0)    {    if(skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
129	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skipped  >  0)  {	  if(skipped    <    0)    {    if(skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
130	[BUG]  [BUGGY]  if(skipped  <  available)  {  if(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available)  {  if(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  available)  {  if(skipped  >  0)  {	  if(skipped    <    0)    {    if(skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
131	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skipped  <  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skipped  <  0)  {	  if(skipped    >=    0)    {    if(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
132	[BUG]  [BUGGY]  if(available  <  0)  {  if(skipped  <  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skipped  <  0)  {	  if(skipped    >=    0)    {    if(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
133	[BUG]  [BUGGY]  if(available  >=  numToSkip)  {  if(skipped  <  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  numToSkip)  {  if(skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  numToSkip)  {  if(skipped  <  0)  {	  if(skipped    >=    0)    {    if(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
134	[BUG]  [BUGGY]  if(available  >  0)  {  if(skipped  <  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skipped  <  0)  {	  if(skipped    >=    0)    {    if(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
135	[BUG]  [BUGGY]  if(available  ==  0)  {  if(skipped  <  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  ==  0)  {  if(skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  ==  0)  {  if(skipped  <  0)  {	  if(skipped    >=    0)    {    if(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
136	[BUG]  [BUGGY]  if(available!=  0)  {  if(skipped  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available!=  0)  {  if(skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available!=  0)  {  if(skipped  <  0)  {	  if(skipped    >=    0)    {    if(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
137	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skipped  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skipped  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skipped  <  =  0)  {	  if(skipped    >=    0)    {    if(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
138	[BUG]  [BUGGY]  if(available  <  0)  {  if(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    <    0)    {    if(available  <  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
139	[BUG]  [BUGGY]  if(available  <  0)  {  If(available  <  0)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  If(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    <    0)    {    If(available  <  0)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
140	[BUG]  [BUGGY]  if(available  <  0)  {  if(available  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    <    0)    {    if(available  >=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
141	[BUG]  [BUGGY]  if(available  <  0)  {  while(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  while(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    <    0)    {    while(available  <  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
142	[BUG]  [BUGGY]  if(available  <  0)  {  when(available  <  0)  {  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  when(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    <    0)    {    when(available  <  0)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
143	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
144	[BUG]  [BUGGY]  while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [CE]  possible  loss  of  precision  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length;    }    	non-compiled	[CE]  possible  loss  of  precision	68	None	replace
145	[BUG]  [BUGGY]  if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [CE]  cannot  find  symbol  skip  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length;    }    	non-compiled	[CE]  cannot  find  symbol  skip	68	None	replace
146	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [CE]  cannot  find  symbol  skip  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length;    }    	non-compiled	[CE]  cannot  find  symbol  skip	68	None	replace
147	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [CE]  cannot  find  symbol  skip  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length;    }    	non-compiled	[CE]  cannot  find  symbol  skip	68	None	replace
148	[BUG]  [BUGGY]  if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [CE]  cannot  find  symbol  skip  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length;    }    	non-compiled	[CE]  cannot  find  symbol  skip	68	None	replace
149	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if(available  <  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(numToSkip);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
150	[BUG]  [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if(available  <  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(numToSkip);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
151	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if(available!=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if(available!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if(available!=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(numToSkip);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
152	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if(available  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if(available  >=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(numToSkip);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
153	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if(available  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if(available  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if(available  ==  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(numToSkip);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
154	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0  ||  skipped  <  numToSkip)  {	  if(skipped    <    0    ||    available    <    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	8	2	replace
155	[BUG]  [BUGGY]  if(available  <  0  ||  skipped  <  numToSkip)  {  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  skipped  <  numToSkip)  {	  if(skipped    <    0    ||    available    <    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	8	2	replace
156	[BUG]  [BUGGY]  timeout  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0  ||  available  >  numToSkip)  {	  if(skipped    <    0    ||    available    <    numToSkip)    {    timeout    	compilable	timeout	8	1	replace
157	[BUG]  [BUGGY]  if(available  <  0  ||  available  >  numToSkip)  {  timeout  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  available  >  numToSkip)  {	  if(skipped    <    0    ||    available    <    numToSkip)    {    timeout    	compilable	timeout	8	1	replace
158	[BUG]  [BUGGY]  timeout  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0  ||  available  <  numToSkip)  {	  if(skipped    <    0    ||    available    <    numToSkip)    {    timeout    	compilable	timeout	8	1	replace
159	[BUG]  [BUGGY]  if(available  <  0  ||  available  <  numToSkip)  {  timeout  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  available  <  numToSkip)  {	  if(skipped    <    0    ||    available    <    numToSkip)    {    timeout    	compilable	timeout	8	1	replace
160	[BUG]  [BUGGY]  timeout  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  <  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(numToSkip  <  0  ||  available  <  numToSkip)  {	  if(skipped    <    0    ||    available    <    numToSkip)    {    timeout    	compilable	timeout	8	1	replace
161	[BUG]  [BUGGY]  if(numToSkip  <  0  ||  available  <  numToSkip)  {  timeout  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  <  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  <  0  ||  available  <  numToSkip)  {	  if(skipped    <    0    ||    available    <    numToSkip)    {    timeout    	compilable	timeout	8	1	replace
162	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0  ||  available  >=  numToSkip)  {	  if(skipped    <    0    ||    available    <    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	8	3	replace
163	[BUG]  [BUGGY]  if(available  <  0  ||  available  >=  numToSkip)  {  [FE]  AssertionError  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  available  >=  numToSkip)  {	  if(skipped    <    0    ||    available    <    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	8	3	replace
164	[BUG]  [BUGGY]  if(available  <  0  ||  skipd  <  numToSkip)  {  [CE]  cannot  find  symbol  skipd  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipd  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  skipd  <  numToSkip)  {	  if(skipped    <    0    ||    available    <    numToSkip)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  skipd	8	None	replace
165	[BUG]  [BUGGY]  if(available  <  =  0  ||  available  <  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0  ||  available  <  numToSkip)  {	  if(skipped    <    =    0    ||    available    <    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
166	[BUG]  [BUGGY]  if(available  <  =  0  ||  skipped  <  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0  ||  skipped  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0  ||  skipped  <  numToSkip)  {	  if(skipped    <    =    0    ||    available    <    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
167	[BUG]  [BUGGY]  if(numToSkip  <  =  0  ||  available  <  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  <  =  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  <  =  0  ||  available  <  numToSkip)  {	  if(skipped    <    =    0    ||    available    <    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
168	[BUG]  [BUGGY]  if(available  <  =  0  ||  skipd  <  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0  ||  skipd  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0  ||  skipd  <  numToSkip)  {	  if(skipped    <    =    0    ||    available    <    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
169	[BUG]  [BUGGY]  if(available  <  =  0  ||  available  >=  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0  ||  available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0  ||  available  >=  numToSkip)  {	  if(skipped    <    =    0    ||    available    <    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
170	[BUG]  [BUGGY]  InputStream  available  =  input.getInputStream();  if(skip  >  0)  {  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  InputStream  available  =  input.getInputStream();  if(skip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	InputStream  available  =  input.getInputStream();  if(skip  >  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.getInputStream();    if    (available    >    0)    {    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	22	None	replace
171	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.getInputStream();  if(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.getInputStream();  if(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.getInputStream();  if(available  <  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.getInputStream();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
172	[BUG]  [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.getInputStream();  if(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.getInputStream();  if(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  InputStream  available  =  input.getInputStream();  if(available  <  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.getInputStream();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
173	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.getInputStream();  if(available!=  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.getInputStream();  if(available!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.getInputStream();  if(available!=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.getInputStream();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
174	[BUG]  [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.getInputStream();  if(available!=  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.getInputStream();  if(available!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  InputStream  available  =  input.getInputStream();  if(available!=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.getInputStream();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
175	[BUG]  [BUGGY]  InputStream  available  =  input.getInputStream();  if(skipped  >  0)  {  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  InputStream  available  =  input.getInputStream();  if(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	InputStream  available  =  input.getInputStream();  if(skipped  >  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.getInputStream();    if    (available    >    0)    {    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	22	None	replace
176	[BUG]  [BUGGY]  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	118	None	add
177	[BUG]  [BUGGY]  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  If(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  If(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    If(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }	  timeout    	non-compiled	[CE]  ';'  expected	118	None	add
178	[BUG]  [BUGGY]  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  int  skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  int  skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    int  skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }	  timeout    	non-compiled	[CE]  ';'  expected	118	None	add
179	[BUG]  [BUGGY]  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  while(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  while(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    while(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	118	None	add
180	[BUG]  [BUGGY]  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  output.close();  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  output.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  output.close();  }	  timeout    	non-compiled	[CE]  illegal  start  of  expression	118	None	add
181	[BUG]  [BUGGY]  if(available  <  =  0  ||  skipped  >=  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0  ||  skipped  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0  ||  skipped  >=  numToSkip)  {	  if(skipped    <    =    0    ||    available    >=    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
182	[BUG]  [BUGGY]  if(numToSkip  <  =  0  ||  available  >=  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  <  =  0  ||  available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  <  =  0  ||  available  >=  numToSkip)  {	  if(skipped    <    =    0    ||    available    >=    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
183	[BUG]  [BUGGY]  if(available  <  =  0  ||  available!=  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0  ||  available!=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0  ||  available!=  numToSkip)  {	  if(skipped    <    =    0    ||    available    >=    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
184	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  0  ||  available  >=  numToSkip)  {	  if(skipped    <    =    0    ||    available    >=    numToSkip)    {    	compilable	  [FE]  AssertionError  	14	3	replace
185	[BUG]  [BUGGY]  if(skipped  <  0  ||  available  >=  numToSkip)  {  [FE]  AssertionError  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  0  ||  available  >=  numToSkip)  {	  if(skipped    <    =    0    ||    available    >=    numToSkip)    {    	compilable	  [FE]  AssertionError  	14	3	replace
186	[BUG]  [BUGGY]  timeout  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0  ||  skipped  >=  numToSkip)  {	  if(skipped    <    =    0    ||    available    >=    numToSkip)    {    	compilable	timeout	14	1	replace
187	[BUG]  [BUGGY]  if(available  <  0  ||  skipped  >=  numToSkip)  {  timeout  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  skipped  >=  numToSkip)  {	  if(skipped    <    =    0    ||    available    >=    numToSkip)    {    	compilable	timeout	14	1	replace
188	[BUG]  [BUGGY]  if(skunk  >  0  ||  available  >  numToSkip)  {  [CE]  cannot  find  symbol  skunk  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skunk  >  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skunk  >  0  ||  available  >  numToSkip)  {	  if(skunk    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  skunk	86	None	replace
189	[BUG]  [BUGGY]  if(skunk  >  0  ||  available  <  numToSkip)  {  [CE]  cannot  find  symbol  skunk  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skunk  >  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skunk  >  0  ||  available  <  numToSkip)  {	  if(skunk    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  skunk	86	None	replace
190	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >=  0  ||  available  >  numToSkip)  {	  if(skipped    >>    0)    {    	compilable	  [FE]  AssertionError  	116	3	replace
191	[BUG]  [BUGGY]  if(skipped  >=  0  ||  available  >  numToSkip)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >=  0  ||  available  >  numToSkip)  {	  if(skipped    >>    0)    {    	compilable	  [FE]  AssertionError  	116	3	replace
192	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >=  0  ||  available  <  numToSkip)  {	  if(skipped    >>    0)    {    	compilable	  [FE]  AssertionError  	116	3	replace
193	[BUG]  [BUGGY]  if(skipped  >=  0  ||  available  <  numToSkip)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >=  0  ||  available  <  numToSkip)  {	  if(skipped    >>    0)    {    	compilable	  [FE]  AssertionError  	116	3	replace
194	[BUG]  [BUGGY]  timeout  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0  &&  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >=  0  &&  available  <  numToSkip)  {	  if(skipped    >>    0)    {    	compilable	timeout	116	1	replace
195	[BUG]  [BUGGY]  if(skipped  >=  0  &&  available  <  numToSkip)  {  timeout  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0  &&  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >=  0  &&  available  <  numToSkip)  {	  if(skipped    >>    0)    {    	compilable	timeout	116	1	replace
196	[BUG]  [BUGGY]  if(skipped  <  0  ||  available  >  numToSkip)  {  if(skipped  <  0  ||  available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  >  numToSkip)  {  if(skipped  <  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    available    >    numToSkip)    {    if(skipped  <  0  ||  available  >  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
197	[BUG]  [BUGGY]  if(skipped  <  0  ||  available  >  numToSkip)  {  If(skipped  <  0  ||  available  >  numToSkip)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  >  numToSkip)  {  If(skipped  <  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    available    >    numToSkip)    {    If(skipped  <  0  ||  available  >  numToSkip)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
198	[BUG]  [BUGGY]  if(skipped  <  0  ||  available  >  numToSkip)  {  if(skipped  >=  0  ||  available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  >  numToSkip)  {  if(skipped  >=  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    available    >    numToSkip)    {    if(skipped  >=  0  ||  available  >  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
199	[BUG]  [BUGGY]  if(skipped  <  0  ||  available  >  numToSkip)  {  if(skipped  <  0  ||  accessible  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  >  numToSkip)  {  if(skipped  <  0  ||  accessible  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    available    >    numToSkip)    {    if(skipped  <  0  ||  accessible  >  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
200	[BUG]  [BUGGY]  if(available  ==  0)  {  if(skipped  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  ==  0)  {  if(skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  ==  0)  {  if(skipped  >=  0)  {	  if(skipped    >=    0)    {    if(skipped    >>    0)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
201	[BUG]  [BUGGY]  if(skipped  >=  available)  {  if(skipped  >=  available)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  available)  {  if(skipped  >=  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >=    available)    {    if(skipped  >=  available)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	100	None	add
202	[BUG]  [BUGGY]  if(skipped  >=  available)  {  if(skipped!=  available)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  available)  {  if(skipped!=  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >=    available)    {    if(skipped!=  available)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	100	None	add
203	[BUG]  [BUGGY]  if(skipped  >=  available)  {  if(skipped  >>  available)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  available)  {  if(skipped  >>  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >=    available)    {    if(skipped  >>  available)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	100	None	add
204	[BUG]  [BUGGY]  if(skipped  >=  available)  {  if(skipped  ==  available)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  available)  {  if(skipped  ==  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >=    available)    {    if(skipped  ==  available)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	100	None	add
205	[BUG]  [BUGGY]  if(skipped  >=  available)  {  if(skipped  [Delete]  available)  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  available)  {  if(skipped  [Delete]  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >=    available)    {    if(skipped  [Delete]  available)  {	  timeout    	non-compiled	[CE]  ')'  expected	100	None	add
206	[BUG]  [BUGGY]  if(skipped  >=  available)  {  If(skipped  >=  available)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  available)  {  If(skipped  >=  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >=    available)    {    If(skipped  >=  available)  {	  timeout    	non-compiled	[CE]  ';'  expected	100	None	add
207	[BUG]  [BUGGY]  if(skipped  >=  available)  {  if(skipped  [BUGGY]  available)  {  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  available)  {  if(skipped  [BUGGY]  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >=    available)    {    if(skipped  [BUGGY]  available)  {	  timeout    	non-compiled	[CE]  ')'  expected	100	None	add
208	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  <  numToSkip)  {  if(skipped  >  0  ||  available  <  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  <  numToSkip)  {  if(skipped  >  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    available    <    numToSkip)    {    if(skipped  >  0  ||  available  <  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	129	None	add
209	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  <  numToSkip)  {  If(skipped  >  0  ||  available  <  numToSkip)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  <  numToSkip)  {  If(skipped  >  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    available    <    numToSkip)    {    If(skipped  >  0  ||  available  <  numToSkip)  {	  timeout    	non-compiled	[CE]  ';'  expected	129	None	add
210	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  <  numToSkip)  {  if(skipped  >  0  ||  available  >=  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  <  numToSkip)  {  if(skipped  >  0  ||  available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    available    <    numToSkip)    {    if(skipped  >  0  ||  available  >=  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	129	None	add
211	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  <  numToSkip)  {  if(skipped  >  0  ||  accessible  <  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  <  numToSkip)  {  if(skipped  >  0  ||  accessible  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    available    <    numToSkip)    {    if(skipped  >  0  ||  accessible  <  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	129	None	add
212	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  <  numToSkip)  {  if(skipped  >  0  ||  available  <  numtoSkip)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  <  numToSkip)  {  if(skipped  >  0  ||  available  <  numtoSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    available    <    numToSkip)    {    if(skipped  >  0  ||  available  <  numtoSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	129	None	add
213	[BUG]  [BUGGY]  if(available  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
214	[BUG]  [BUGGY]  if(available  <  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
215	[BUG]  [BUGGY]  if(available  <  numToSkip)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  numToSkip)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
216	[BUG]  [BUGGY]  if(available  <  =  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
217	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
218	[BUG]  [BUGGY]  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	105	None	replace
219	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skipped  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skipped  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skipped  ==  0)  {	  if(skipped    >=    0)    {    if(skipped    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
220	[BUG]  [BUGGY]  if(available  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
221	[BUG]  [BUGGY]  if(available  <  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
222	[BUG]  [BUGGY]  if(available  <  =  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
223	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
224	[BUG]  [BUGGY]  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  cannot  find  symbol  Feature  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	104	None	replace
225	[BUG]  [BUGGY]  if(available  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  cannot  find  symbol  Feature  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	104	None	replace
226	[BUG]  [BUGGY]  if(available  >  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
227	[BUG]  [BUGGY]  timeout  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0  ||  skipped  >  numToSkip)  {	  if(skipped    <    0    ||    available    >    numToSkip)    {    timeout    	compilable	timeout	4	1	replace
228	[BUG]  [BUGGY]  if(available  <  0  ||  skipped  >  numToSkip)  {  timeout  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  skipped  >  numToSkip)  {	  if(skipped    <    0    ||    available    >    numToSkip)    {    timeout    	compilable	timeout	4	1	replace
229	[BUG]  [BUGGY]  if(available  <  0  ||  skipd  >  numToSkip)  {  [CE]  cannot  find  symbol  skipd  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipd  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  skipd  >  numToSkip)  {	  if(skipped    <    0    ||    available    >    numToSkip)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  skipd	4	None	replace
230	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  <  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(numToSkip  <  0  ||  available  >  numToSkip)  {	  if(skipped    <    0    ||    available    >    numToSkip)    {    timeout    	compilable	timeout	4	1	replace
231	[BUG]  [BUGGY]  if(numToSkip  <  0  ||  available  >  numToSkip)  {  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  <  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  <  0  ||  available  >  numToSkip)  {	  if(skipped    <    0    ||    available    >    numToSkip)    {    timeout    	compilable	timeout	4	1	replace
232	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  <  0  ||  available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(numToSkip  <  0  ||  available  >  skipped)  {	  if(skipped    <    0    ||    available    >    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	4	2	replace
233	[BUG]  [BUGGY]  if(numToSkip  <  0  ||  available  >  skipped)  {  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  <  0  ||  available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  <  0  ||  available  >  skipped)  {	  if(skipped    <    0    ||    available    >    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	4	2	replace
234	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >=  0  ||  available  >  numToSkip)  {	  if(skipped    <    0    ||    available    >    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	4	3	replace
235	[BUG]  [BUGGY]  if(available  >=  0  ||  available  >  numToSkip)  {  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0  ||  available  >  numToSkip)  {	  if(skipped    <    0    ||    available    >    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	4	3	replace
236	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  ==  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  0  ||  available  ==  numToSkip)  {	  if(skipped    <    0    ||    available    >    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	4	3	replace
237	[BUG]  [BUGGY]  if(skipped  <  0  ||  available  ==  numToSkip)  {  [FE]  AssertionError  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  ==  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  0  ||  available  ==  numToSkip)  {	  if(skipped    <    0    ||    available    >    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	4	3	replace
238	[BUG]  [BUGGY]  if(skip  ==  0)  {  If  (available  ==  0)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  ==  0)  {  If  (available  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  ==  0)  {  If  (available  ==  0)  {	  if    (available    ==    0)    {    If    (available    ==    0)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
239	[BUG]  [BUGGY]  if(skipped  ==  0)  {  If  (available  ==  0)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  ==  0)  {  If  (available  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  ==  0)  {  If  (available  ==  0)  {	  if    (available    ==    0)    {    If    (available    ==    0)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
240	[BUG]  [BUGGY]  if(available  <  =  0)  {  If  (available  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0)  {  If  (available  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0)  {  If  (available  ==  0)  {	  if    (available    ==    0)    {    If    (available    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
241	[BUG]  [BUGGY]  if(skip  ==  0)  {  If(skip  ==  0)  {  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  ==  0)  {  If(skip  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  ==  0)  {  If(skip  ==  0)  {	  if    (available    ==    0)    {    If    (available    ==    0)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
242	[BUG]  [BUGGY]  if(skip  >=  0)  {  If  (available  ==  0)  {  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >=  0)  {  If  (available  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >=  0)  {  If  (available  ==  0)  {	  if    (available    ==    0)    {    If    (available    ==    0)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
243	[BUG]  [BUGGY]  timeout  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  <  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(numToSkip  <  0  ||  skipped  >  0)  {	  if(skipped    <    0    ||    skipped    >    numToSkip)    {    timeout    	compilable	timeout	110	1	replace
244	[BUG]  [BUGGY]  if(numToSkip  <  0  ||  skipped  >  0)  {  timeout  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  <  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  <  0  ||  skipped  >  0)  {	  if(skipped    <    0    ||    skipped    >    numToSkip)    {    timeout    	compilable	timeout	110	1	replace
245	[BUG]  [BUGGY]  timeout  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  skipped  >  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  0  ||  skipped  >  available)  {	  if(skipped    <    0    ||    skipped    >    numToSkip)    {    timeout    	compilable	timeout	110	1	replace
246	[BUG]  [BUGGY]  if(skipped  <  0  ||  skipped  >  available)  {  timeout  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  skipped  >  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  0  ||  skipped  >  available)  {	  if(skipped    <    0    ||    skipped    >    numToSkip)    {    timeout    	compilable	timeout	110	1	replace
247	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >=  0  ||  skipped  >  numToSkip)  {	  if(skipped    <    0    ||    skipped    >    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	110	3	replace
248	[BUG]  [BUGGY]  if(skipped  >=  0  ||  skipped  >  numToSkip)  {  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >=  0  ||  skipped  >  numToSkip)  {	  if(skipped    <    0    ||    skipped    >    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	110	3	replace
249	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  skipped  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  0  ||  skipped  >=  numToSkip)  {	  if(skipped    <    0    ||    skipped    >    numToSkip)    {    timeout    	compilable	timeout	110	1	replace
250	[BUG]  [BUGGY]  if(skipped  <  0  ||  skipped  >=  numToSkip)  {  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  skipped  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  0  ||  skipped  >=  numToSkip)  {	  if(skipped    <    0    ||    skipped    >    numToSkip)    {    timeout    	compilable	timeout	110	1	replace
251	[BUG]  [BUGGY]  if(skip  >  0)  {  If  (skip  >  0)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  If  (skip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  If  (skip  >  0)  {	  if    (available    >    0)    {    If    (available    >    0)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
252	[BUG]  [BUGGY]  if(skipped  >  0)  {  If  (available  >  0)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  If  (available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  If  (available  >  0)  {	  if    (available    >    0)    {    If    (available    >    0)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
253	[BUG]  [BUGGY]  if(skip  >  0)  {  If  (available  >  0)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  If  (available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  If  (available  >  0)  {	  if    (available    >    0)    {    If    (available    >    0)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
254	[BUG]  [BUGGY]  while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [CE]  possible  loss  of  precision  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  possible  loss  of  precision	78	None	replace
255	[BUG]  [BUGGY]  while(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
256	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped.getLength();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped.getLength();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
257	[BUG]  [BUGGY]  if(skipped  <  0  ||  skipped  >  numToSkip)  {  if(skipped  <  0  ||  skipped  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  skipped  >  numToSkip)  {  if(skipped  <  0  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    skipped    >    numToSkip)    {    if(skipped  <  0  ||  skipped  >  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	109	None	add
258	[BUG]  [BUGGY]  if(skipped  <  0  ||  skipped  >  numToSkip)  {  If(skipped  <  0  ||  skipped  >  numToSkip)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  skipped  >  numToSkip)  {  If(skipped  <  0  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    skipped    >    numToSkip)    {    If(skipped  <  0  ||  skipped  >  numToSkip)  {	  timeout    	non-compiled	[CE]  ';'  expected	109	None	add
259	[BUG]  [BUGGY]  if(skipped  <  0  ||  skipped  >  numToSkip)  {  if(skipped  >=  0  ||  skipped  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  skipped  >  numToSkip)  {  if(skipped  >=  0  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    skipped    >    numToSkip)    {    if(skipped  >=  0  ||  skipped  >  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	109	None	add
260	[BUG]  [BUGGY]  if(skipped  <  0  ||  skipped  >  numToSkip)  {  if(skipped  <  0  ||  skipd  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  skipped  >  numToSkip)  {  if(skipped  <  0  ||  skipd  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    skipped    >    numToSkip)    {    if(skipped  <  0  ||  skipd  >  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	109	None	add
261	[BUG]  [BUGGY]  if(skipped  <  0  ||  skipped  >  numToSkip)  {  if(skipped  >  0  ||  skipped  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  skipped  >  numToSkip)  {  if(skipped  >  0  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    skipped    >    numToSkip)    {    if(skipped  >  0  ||  skipped  >  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	109	None	add
262	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.next();    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
263	[BUG]  [BUGGY]  while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }  [CE]  possible  loss  of  precision  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.next();    }    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
264	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }  [CE]  cannot  find  symbol  skip  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.next();    }    	non-compiled	[CE]  cannot  find  symbol  skip	71	None	replace
265	[BUG]  [BUGGY]  if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }  [CE]  cannot  find  symbol  skip  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.next();    }    	non-compiled	[CE]  cannot  find  symbol  skip	71	None	replace
266	[BUG]  [BUGGY]  if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  0;  i++)  {  available  +=  input.next();  }  [CE]  cannot  find  symbol  skip  [FE]                                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  0;  i++)  {  available  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  0;  i++)  {  available  +=  input.next();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.next();    }    	non-compiled	[CE]  cannot  find  symbol  skip	71	None	replace
267	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped.next();  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped.next();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.next();    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
268	[BUG]  [BUGGY]  if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getValue();  }  [CE]  cannot  find  symbol  skip  [FE]                                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getValue();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getValue();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.next();    }    	non-compiled	[CE]  cannot  find  symbol  skip	71	None	replace
269	[BUG]  [BUGGY]  if(available  >  0  ||  input.isEnabled(SCRIPT_SIZE))  {  [CE]  cannot  find  symbol  SCRIPT_SIZE  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  input.isEnabled(SCRIPT_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  input.isEnabled(SCRIPT_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SCRIPT_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  SCRIPT_SIZE	125	None	replace
270	[BUG]  [BUGGY]  if(skipped  >  0  ||  input.isEnabled(SCRIPT_SIZE))  {  [CE]  cannot  find  symbol  SCRIPT_SIZE  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  input.isEnabled(SCRIPT_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  input.isEnabled(SCRIPT_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SCRIPT_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  SCRIPT_SIZE	125	None	replace
271	[BUG]  [BUGGY]  if(skip  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [CE]  cannot  find  symbol  skip  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SCRIPT_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  skip	125	None	replace
272	[BUG]  [BUGGY]  if(numToSkip  >  0  ||  input.isEnabled(SCRIPT_SIZE))  {  [CE]  cannot  find  symbol  SCRIPT_SIZE  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0  ||  input.isEnabled(SCRIPT_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  >  0  ||  input.isEnabled(SCRIPT_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SCRIPT_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  SCRIPT_SIZE	125	None	replace
273	[BUG]  [BUGGY]  if(num  >  0  ||  input.isEnabled(SCRIPT_SIZE))  {  [CE]  cannot  find  symbol  num  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(num  >  0  ||  input.isEnabled(SCRIPT_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(num  >  0  ||  input.isEnabled(SCRIPT_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SCRIPT_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  num	125	None	replace
274	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readLine();  if(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readLine();  if(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readLine();  if(available  <  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readLine();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
275	[BUG]  [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readLine();  if(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readLine();  if(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  InputStream  available  =  input.readLine();  if(available  <  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readLine();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
276	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readLine();  if(available!=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readLine();  if(available!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readLine();  if(available!=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readLine();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
277	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readLine();  if(available  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readLine();  if(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readLine();  if(available  >=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readLine();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
278	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readLine();  if(available  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readLine();  if(available  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readLine();  if(available  ==  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readLine();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
279	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length();    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
280	[BUG]  [BUGGY]  while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [CE]  possible  loss  of  precision  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length();    }    	non-compiled	[CE]  possible  loss  of  precision	65	None	replace
281	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [CE]  cannot  find  symbol  skip  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length();    }    	non-compiled	[CE]  cannot  find  symbol  skip	65	None	replace
282	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped.length();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped.length();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length();    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
283	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped.length();  }  [CE]  cannot  find  symbol  skip  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped.length();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length();    }    	non-compiled	[CE]  cannot  find  symbol  skip	65	None	replace
284	[BUG]  [BUGGY]  int  numToSkip  =  input.readInt();  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  numToSkip  =  input.readInt();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  numToSkip  =  input.readInt();	  if    (available    >    0)    {    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
285	[BUG]  [BUGGY]  long  numToSkip  =  input.readInt();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  long  numToSkip  =  input.readInt();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	long  numToSkip  =  input.readInt();	  if    (available    >    0)    {    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
286	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  int  numToSkip  =  input.readInt();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0)  {  int  numToSkip  =  input.readInt();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  >  0)  {  int  numToSkip  =  input.readInt();  }	  if    (available    >    0)    {    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
287	[BUG]  [BUGGY]  if(available  >  0)  {  int  numToSkip  =  input.readInt();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  int  numToSkip  =  input.readInt();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  int  numToSkip  =  input.readInt();  }	  if    (available    >    0)    {    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
288	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0)  {  int  numToSkip  =  input.readInt();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  >  0)  {  int  numToSkip  =  input.readInt();	  if    (available    >    0)    {    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	114	None	replace
289	[BUG]  [BUGGY]  Integer  numToSkip  =  input.readInt();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  Integer  numToSkip  =  input.readInt();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	Integer  numToSkip  =  input.readInt();	  if    (available    >    0)    {    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
290	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  available  ||  skipped  >  0)  {	  if(skipped    <    0    ||    skipped    >    0)    {    timeout    	compilable	  [FE]  AssertionError  	6	3	replace
291	[BUG]  [BUGGY]  if(skipped  <  available  ||  skipped  >  0)  {  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  available  ||  skipped  >  0)  {	  if(skipped    <    0    ||    skipped    >    0)    {    timeout    	compilable	  [FE]  AssertionError  	6	3	replace
292	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  0  ||  skipped  >  0)  {	  if(skipped    <    0    ||    skipped    >    0)    {    timeout    	compilable	timeout	6	1	replace
293	[BUG]  [BUGGY]  if(skipped  >  0  ||  skipped  >  0)  {  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  skipped  >  0)  {	  if(skipped    <    0    ||    skipped    >    0)    {    timeout    	compilable	timeout	6	1	replace
294	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >=  0  ||  skipped  >  0)  {	  if(skipped    <    0    ||    skipped    >    0)    {    timeout    	compilable	  [FE]  AssertionError  	6	3	replace
295	[BUG]  [BUGGY]  if(skipped  >=  0  ||  skipped  >  0)  {  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >=  0  ||  skipped  >  0)  {	  if(skipped    <    0    ||    skipped    >    0)    {    timeout    	compilable	  [FE]  AssertionError  	6	3	replace
296	[BUG]  [BUGGY]  if(available  <  numToSkip)  {  if(skipped  <  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip)  {  if(skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  numToSkip)  {  if(skipped  <  0)  {	  if(skipped    <    0)    {    if(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
297	[BUG]  [BUGGY]  if(available  <  0)  {  if(skip  <  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skip  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skip  <  0)  {	  if(skipped    <    0)    {    if(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
298	[BUG]  [BUGGY]  if(available  <  =  0)  {  if(skipped  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0)  {  if(skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0)  {  if(skipped  <  0)  {	  if(skipped    <    0)    {    if(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
299	[BUG]  [BUGGY]  if(available  <  0)  {  if(skipped  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skipped  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skipped  <  =  0)  {	  if(skipped    <    0)    {    if(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
300	[BUG]  [BUGGY]  if(available  >=  0)  {  If(skipped  >=  0)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  If(skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  If(skipped  >=  0)  {	  if(skipped    >=    0)    {    If(skipped    >=    0)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
301	[BUG]  [BUGGY]  if(available  >=  0)  {  If(available  ==  0)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  If(available  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  If(available  ==  0)  {	  if(skipped    >=    0)    {    If(skipped    >=    0)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
302	[BUG]  [BUGGY]  if(available  ==  0)  {  If(available  >=  0)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  ==  0)  {  If(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  ==  0)  {  If(available  >=  0)  {	  if(skipped    >=    0)    {    If(skipped    >=    0)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
303	[BUG]  [BUGGY]  if(available  <  0)  {  If(available  >=  0)  {  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  If(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  If(available  >=  0)  {	  if(skipped    >=    0)    {    If(skipped    >=    0)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
304	[BUG]  [BUGGY]  if(available!=  0)  {  If(available  >=  0)  {  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available!=  0)  {  If(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available!=  0)  {  If(available  >=  0)  {	  if(skipped    >=    0)    {    If(skipped    >=    0)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
305	[BUG]  [BUGGY]  if(available  >=  0)  {  If(available  >  0)  {  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  If(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  If(available  >  0)  {	  if(skipped    >=    0)    {    If(skipped    >=    0)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
306	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0  ||  skipped  >=  0)  {	  if(available    <    0    ||    skipped    >    0)    {    timeout    	compilable	  [FE]  AssertionError  	11	3	replace
307	[BUG]  [BUGGY]  if(available  <  0  ||  skipped  >=  0)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  skipped  >=  0)  {	  if(available    <    0    ||    skipped    >    0)    {    timeout    	compilable	  [FE]  AssertionError  	11	3	replace
308	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >=  0  ||  skipped  >  0)  {	  if(available    <    0    ||    skipped    >    0)    {    timeout    	compilable	  [FE]  AssertionError  	11	3	replace
309	[BUG]  [BUGGY]  if(available  >=  0  ||  skipped  >  0)  {  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0  ||  skipped  >  0)  {	  if(available    <    0    ||    skipped    >    0)    {    timeout    	compilable	  [FE]  AssertionError  	11	3	replace
310	[BUG]  [BUGGY]  if(available  <  =  0  ||  skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0  ||  skipped  >  0)  {	  if(available    <    0    ||    skipped    >    0)    {    timeout    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
311	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0  ||  skipped  ==  0)  {	  if(available    <    0    ||    skipped    >    0)    {    timeout    	compilable	  [FE]  AssertionError  	11	2	replace
312	[BUG]  [BUGGY]  if(available  <  0  ||  skipped  ==  0)  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  skipped  ==  0)  {	  if(available    <    0    ||    skipped    >    0)    {    timeout    	compilable	  [FE]  AssertionError  	11	2	replace
313	[BUG]  [BUGGY]  timeout  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  ==  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  ==  0  ||  skipped  >  0)  {	  if(available    <    0    ||    skipped    >    0)    {    timeout    	compilable	timeout	11	1	replace
314	[BUG]  [BUGGY]  if(available  ==  0  ||  skipped  >  0)  {  timeout  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  ==  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  ==  0  ||  skipped  >  0)  {	  if(available    <    0    ||    skipped    >    0)    {    timeout    	compilable	timeout	11	1	replace
315	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0  ||  skipped!=  0)  {	  if(available    <    0    ||    skipped    >    0)    {    timeout    	compilable	timeout	11	1	replace
316	[BUG]  [BUGGY]  if(available  <  0  ||  skipped!=  0)  {  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  skipped!=  0)  {	  if(available    <    0    ||    skipped    >    0)    {    timeout    	compilable	timeout	11	1	replace
317	[BUG]  [BUGGY]  if(available  <  =  0)  {  if(skip  <  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0)  {  if(skip  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0)  {  if(skip  <  0)  {	  if(skipped    <    0)    {    if(skip    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
318	[BUG]  [BUGGY]  if(available  <  numToSkip)  {  if(skip  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip)  {  if(skip  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  numToSkip)  {  if(skip  <  0)  {	  if(skipped    <    0)    {    if(skip    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
319	[BUG]  [BUGGY]  if(skipped  >  0)  {  if(skip  <  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  if(skip  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  if(skip  <  0)  {	  if(skipped    <    0)    {    if(skip    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
320	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  skipped  <  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  0  ||  skipped  <  skipped)  {	  if(skipped    >    0    ||    skipped    <    available)    {    	compilable	  [FE]  AssertionError  	128	3	replace
321	[BUG]  [BUGGY]  if(available  >  0  ||  skipped  <  skipped)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  skipped  <  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  skipped  <  skipped)  {	  if(skipped    >    0    ||    skipped    <    available)    {    	compilable	  [FE]  AssertionError  	128	3	replace
322	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  skipped  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  0  ||  skipped  <  numToSkip)  {	  if(skipped    >    0    ||    skipped    <    available)    {    	compilable	  [FE]  AssertionError  	128	3	replace
323	[BUG]  [BUGGY]  if(available  >  0  ||  skipped  <  numToSkip)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  skipped  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  skipped  <  numToSkip)  {	  if(skipped    >    0    ||    skipped    <    available)    {    	compilable	  [FE]  AssertionError  	128	3	replace
324	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  0  ||  skipped  <  0)  {	  if(skipped    >    0    ||    skipped    <    available)    {    	compilable	  [FE]  AssertionError  	128	3	replace
325	[BUG]  [BUGGY]  if(available  >  0  ||  skipped  <  0)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  skipped  <  0)  {	  if(skipped    >    0    ||    skipped    <    available)    {    	compilable	  [FE]  AssertionError  	128	3	replace
326	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  &&  skipped  <  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  0  &&  skipped  <  available)  {	  if(skipped    >    0    ||    skipped    <    available)    {    	compilable	timeout	128	1	replace
327	[BUG]  [BUGGY]  if(skipped  >  0  &&  skipped  <  available)  {  timeout  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  &&  skipped  <  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  &&  skipped  <  available)  {	  if(skipped    >    0    ||    skipped    <    available)    {    	compilable	timeout	128	1	replace
328	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  skipped  <  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  0  ||  skipped  <  available)  {	  if(skipped    >    0    ||    skipped    <    available)    {    	compilable	  [FE]  AssertionError  	128	2	replace
329	[BUG]  [BUGGY]  if(skipped  <  0  ||  skipped  <  available)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  skipped  <  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  0  ||  skipped  <  available)  {	  if(skipped    >    0    ||    skipped    <    available)    {    	compilable	  [FE]  AssertionError  	128	2	replace
330	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0  ||  skipped  <  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >=  0  ||  skipped  <  available)  {	  if(skipped    >    0    ||    skipped    <    available)    {    	compilable	  [FE]  AssertionError  	128	3	replace
331	[BUG]  [BUGGY]  if(skipped  >=  0  ||  skipped  <  available)  {  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0  ||  skipped  <  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >=  0  ||  skipped  <  available)  {	  if(skipped    >    0    ||    skipped    <    available)    {    	compilable	  [FE]  AssertionError  	128	3	replace
332	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(numToSkip  >  0  ||  available  <  numToSkip)  {	  if(skip    >    0    ||    available    <    numToSkip)    {    	compilable	  [FE]  AssertionError  	52	3	replace
333	[BUG]  [BUGGY]  if(numToSkip  >  0  ||  available  <  numToSkip)  {  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  >  0  ||  available  <  numToSkip)  {	  if(skip    >    0    ||    available    <    numToSkip)    {    	compilable	  [FE]  AssertionError  	52	3	replace
334	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  0  ||  available  >=  numToSkip)  {	  if(skip    >    0    ||    available    <    numToSkip)    {    	compilable	  [FE]  AssertionError  	52	3	replace
335	[BUG]  [BUGGY]  if(available  >  0  ||  available  >=  numToSkip)  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  available  >=  numToSkip)  {	  if(skip    >    0    ||    available    <    numToSkip)    {    	compilable	  [FE]  AssertionError  	52	3	replace
336	[BUG]  [BUGGY]  if(available  >  0  ||  available  <  =  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  available  <  =  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  available  <  =  numToSkip)  {	  if(skip    >    0    ||    available    <    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
337	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  available);  if(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  available);  if(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  available);  if(available  <  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(numToSkip,    available);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
338	[BUG]  [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  available);  if(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  available);  if(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  available);  if(available  <  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(numToSkip,    available);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
339	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  skipped);  if(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  skipped);  if(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  skipped);  if(available  <  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(numToSkip,    available);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
340	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  available);  if(available!=  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  available);  if(available!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  available);  if(available!=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(numToSkip,    available);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
341	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  available);  if(available  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  available);  if(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  available);  if(available  >=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(numToSkip,    available);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
342	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  available);  if(available  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  available);  if(available  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  available);  if(available  ==  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(numToSkip,    available);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
343	[BUG]  [BUGGY]  if(available  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
344	[BUG]  [BUGGY]  if(available  <  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
345	[BUG]  [BUGGY]  if(available  <  numToSkip)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  numToSkip)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
346	[BUG]  [BUGGY]  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [CE]  cannot  find  symbol  Feature  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	106	None	replace
347	[BUG]  [BUGGY]  if(available  <  =  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
348	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
349	[BUG]  [BUGGY]  if(available  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [CE]  cannot  find  symbol  Feature  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	106	None	replace
350	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput();  if(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput();  if(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readInput();  if(available  <  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
351	[BUG]  [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput();  if(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput();  if(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  InputStream  available  =  input.readInput();  if(available  <  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
352	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput();  if(available!=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput();  if(available!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readInput();  if(available!=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
353	[BUG]  [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput();  if(available!=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput();  if(available!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  InputStream  available  =  input.readInput();  if(available!=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
354	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput();  if(available  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput();  if(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readInput();  if(available  >=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
355	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput();  if(available  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput();  if(available  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readInput();  if(available  ==  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
356	[BUG]  [BUGGY]  for(skipped  >  0)  {  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(skipped  >  0)  {	  if(skipped    >    0)    {    for(skipped    >    0)    {    	non-compiled	[CE]  not  a  statement	73	None	replace
357	[BUG]  [BUGGY]  if(available  >  0)  {  for(skipped  >  0)  {  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  for(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  for(skipped  >  0)  {	  if(skipped    >    0)    {    for(skipped    >    0)    {    	non-compiled	[CE]  not  a  statement	73	None	replace
358	[BUG]  [BUGGY]  for(int  skipped  >  0)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  skipped  >  0)  {	  if(skipped    >    0)    {    for(skipped    >    0)    {    	non-compiled	[CE]  ';'  expected	73	None	replace
359	[BUG]  [BUGGY]  if(available  >  0)  {  for(int  skipped  >  0)  {  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  for(int  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  for(int  skipped  >  0)  {	  if(skipped    >    0)    {    for(skipped    >    0)    {    	non-compiled	[CE]  ';'  expected	73	None	replace
360	[BUG]  [BUGGY]  while(available  >  0)  {  for(skipped  >  0)  {  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(skipped  >  0)  {	  if(skipped    >    0)    {    for(skipped    >    0)    {    	non-compiled	[CE]  not  a  statement	73	None	replace
361	[BUG]  [BUGGY]  if(skipped  >  0)  {  for(skipped  =  0)  {  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  for(skipped  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  for(skipped  =  0)  {	  if(skipped    >    0)    {    for(skipped    >    0)    {    	non-compiled	[CE]  ';'  expected	73	None	replace
362	[BUG]  [BUGGY]  if(available  >  0  ||  input.isEnabled(SKIPP_BUF_SIZE))  {  [CE]  cannot  find  symbol  SKIPP_BUF_SIZE  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  input.isEnabled(SKIPP_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  input.isEnabled(SKIPP_BUF_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SKIPP_BUF_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  SKIPP_BUF_SIZE	124	None	replace
363	[BUG]  [BUGGY]  if(skipped  >  0  ||  input.isEnabled(SKIPP_BUF_SIZE))  {  [CE]  cannot  find  symbol  SKIPP_BUF_SIZE  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  input.isEnabled(SKIPP_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  input.isEnabled(SKIPP_BUF_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SKIPP_BUF_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  SKIPP_BUF_SIZE	124	None	replace
364	[BUG]  [BUGGY]  if(available  >  0  ||  input.isEnabled(SKIP_BUF_SIZE))  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  input.isEnabled(SKIP_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  input.isEnabled(SKIP_BUF_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SKIPP_BUF_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
365	[BUG]  [BUGGY]  if(available  >  0  ||  input.isEnabled(SCRIPT_BUF_SIZE))  {  [CE]  cannot  find  symbol  SCRIPT_BUF_SIZE  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  input.isEnabled(SCRIPT_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  input.isEnabled(SCRIPT_BUF_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SKIPP_BUF_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  SCRIPT_BUF_SIZE	124	None	replace
366	[BUG]  [BUGGY]  if(num  >  0  ||  input.isEnabled(SKIPP_BUF_SIZE))  {  [CE]  cannot  find  symbol  num  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(num  >  0  ||  input.isEnabled(SKIPP_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(num  >  0  ||  input.isEnabled(SKIPP_BUF_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SKIPP_BUF_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  num	124	None	replace
367	[BUG]  [BUGGY]  if(numToSkip  >  0  ||  input.isEnabled(SKIPP_BUF_SIZE))  {  [CE]  cannot  find  symbol  SKIPP_BUF_SIZE  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0  ||  input.isEnabled(SKIPP_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  >  0  ||  input.isEnabled(SKIPP_BUF_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SKIPP_BUF_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  SKIPP_BUF_SIZE	124	None	replace
368	[BUG]  [BUGGY]  if(available  <  =  0  ||  skipped  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0  ||  skipped  >  numToSkip)  {	  if(skipped    <    =    0    ||    skipped    >    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
369	[BUG]  [BUGGY]  if(numToSkip  <  =  0  ||  skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  <  =  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  <  =  0  ||  skipped  >  0)  {	  if(skipped    <    =    0    ||    skipped    >    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
370	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  ==  0  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  ==  0  ||  skipped  >  numToSkip)  {	  if(skipped    <    =    0    ||    skipped    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	111	2	replace
371	[BUG]  [BUGGY]  if(skipped  ==  0  ||  skipped  >  numToSkip)  {  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  ==  0  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  ==  0  ||  skipped  >  numToSkip)  {	  if(skipped    <    =    0    ||    skipped    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	111	2	replace
372	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >=  0  ||  skipped  >  numToSkip)  {	  if(skipped    <    =    0    ||    skipped    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	111	3	replace
373	[BUG]  [BUGGY]  if(available  >=  0  ||  skipped  >  numToSkip)  {  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0  ||  skipped  >  numToSkip)  {	  if(skipped    <    =    0    ||    skipped    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	111	3	replace
374	[BUG]  [BUGGY]  while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [CE]  possible  loss  of  precision  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length;    }    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
375	[BUG]  [BUGGY]  while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [CE]  possible  loss  of  precision  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length;    }    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
376	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  if(available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip)  {  if(available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >    numToSkip)    {    if(available  >  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	58	None	add
377	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  If(available  >  numToSkip)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip)  {  If(available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >    numToSkip)    {    If(available  >  numToSkip)  {	  timeout    	non-compiled	[CE]  ';'  expected	58	None	add
378	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  if(disp  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip)  {  if(disp  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >    numToSkip)    {    if(disp  >  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	58	None	add
379	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  while(available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip)  {  while(available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >    numToSkip)    {    while(available  >  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	58	None	add
380	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  when(available  >  numToSkip)  {  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip)  {  when(available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >    numToSkip)    {    when(available  >  numToSkip)  {	  timeout    	non-compiled	[CE]  ';'  expected	58	None	add
381	[BUG]  [BUGGY]  int  numToSkip  =  input.read(skipped);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  numToSkip  =  input.read(skipped);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  numToSkip  =  input.read(skipped);	  if    (available    >    0)    {    int    numToSkip    =    input.read(skipped);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
382	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  int  numToSkip  =  input.read(skipped);  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0)  {  int  numToSkip  =  input.read(skipped);  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  >  0)  {  int  numToSkip  =  input.read(skipped);  }	  if    (available    >    0)    {    int    numToSkip    =    input.read(skipped);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
383	[BUG]  [BUGGY]  long  numToSkip  =  input.read(skipped);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  long  numToSkip  =  input.read(skipped);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	long  numToSkip  =  input.read(skipped);	  if    (available    >    0)    {    int    numToSkip    =    input.read(skipped);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
384	[BUG]  [BUGGY]  int  numToSkip  =  input.read(available);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  numToSkip  =  input.read(available);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  numToSkip  =  input.read(available);	  if    (available    >    0)    {    int    numToSkip    =    input.read(skipped);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
385	[BUG]  [BUGGY]  if(skipped  >  0)  {  int  numToSkip  =  input.read(available);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  int  numToSkip  =  input.read(available);  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  int  numToSkip  =  input.read(available);  }	  if    (available    >    0)    {    int    numToSkip    =    input.read(skipped);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
386	[BUG]  [BUGGY]  Integer  numToSkip  =  input.read(skipped);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  Integer  numToSkip  =  input.read(skipped);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	Integer  numToSkip  =  input.read(skipped);	  if    (available    >    0)    {    int    numToSkip    =    input.read(skipped);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
387	[BUG]  [BUGGY]  if(skipped  >  0)  {  int  numToSkip  =  input.read(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  int  numToSkip  =  input.read(available);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  int  numToSkip  =  input.read(available);	  if    (available    >    0)    {    int    numToSkip    =    input.read(skipped);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	113	None	replace
388	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  if(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip)  {  if(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip)  {  if(skipped  >  0)  {	  if(skipped    >    0)    {    if(skipped    >    0)    <    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
389	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  if(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0)  {  if(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  >  0)  {  if(skipped  >  0)  {	  if(skipped    >    0)    {    if(skipped    >    0)    <    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
390	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  If(skipped  >  0)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0)  {  If(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  >  0)  {  If(skipped  >  0)  {	  if(skipped    >    0)    {    If(skipped    >    0)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
391	[BUG]  [BUGGY]  if(available  <  numToSkip)  {  If(available  >  numToSkip)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip)  {  If(available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  numToSkip)  {  If(available  >  numToSkip)  {	  if(skipped    >    0)    {    If(skipped    >    0)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
392	[BUG]  [BUGGY]  if(available  <  =  0)  {  If(available  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0)  {  If(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0)  {  If(available  >  0)  {	  if(skipped    >    0)    {    If(skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
393	[BUG]  [BUGGY]  if(available  >  0)  {  If(skipped  >  0)  {  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  If(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  If(skipped  >  0)  {	  if(skipped    >    0)    {    If(skipped    >    0)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
394	[BUG]  [BUGGY]  if(skipped  >  available)  {  If(skipped  >  0)  {  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available)  {  If(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  available)  {  If(skipped  >  0)  {	  if(skipped    >    0)    {    If(skipped    >    0)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
395	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  if(numToSkip  >  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0)  {  if(numToSkip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip    >    0)    {    if(numToSkip  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
396	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  If(numToSkip  >  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0)  {  If(numToSkip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip    >    0)    {    If(numToSkip  >  0)  {	  	non-compiled	[CE]  ';'  expected	53	None	add
397	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  if(numToSkip  >  0  ||  available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0)  {  if(numToSkip  >  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip    >    0)    {    if(numToSkip  >  0  ||  available  >  numToSkip)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
398	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  if(numToSkip  >  0  ||  available  >  numToSkip);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0)  {  if(numToSkip  >  0  ||  available  >  numToSkip);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip    >    0)    {    if(numToSkip  >  0  ||  available  >  numToSkip);	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
399	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  if(numToSkip  >  0  ||  available  <  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0)  {  if(numToSkip  >  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip    >    0)    {    if(numToSkip  >  0  ||  available  <  numToSkip)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
400	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  if(numToSkip  >  0  ||  available  >  numToSkip.length)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0)  {  if(numToSkip  >  0  ||  available  >  numToSkip.length)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip    >    0)    {    if(numToSkip  >  0  ||  available  >  numToSkip.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
401	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  if(numToSkip  >  0  ||  available  >=  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0)  {  if(numToSkip  >  0  ||  available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip    >    0)    {    if(numToSkip  >  0  ||  available  >=  numToSkip)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
402	[BUG]  [BUGGY]  if(numToSkip  <  =  0  ||  available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  <  =  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  <  =  0  ||  available  >  numToSkip)  {	  if(skipped    <    =    0    ||    available    >    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
403	[BUG]  [BUGGY]  if(numToSkip  <  =  0  ||  available  >  skipped)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  <  =  0  ||  available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  <  =  0  ||  available  >  skipped)  {	  if(skipped    <    =    0    ||    available    >    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
404	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  0  ||  available  >=  numToSkip)  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	108	3	replace
405	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  >=  numToSkip)  {  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  available  >=  numToSkip)  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	108	3	replace
406	[BUG]  [BUGGY]  System.arraycopy(input,  available,  numToSkip,  skipped);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  System.arraycopy(input,  available,  numToSkip,  skipped);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	System.arraycopy(input,  available,  numToSkip,  skipped);	  System.arraycopy(input,    numToSkip,    available,    skipped);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
407	[BUG]  [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipped,  0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipped,  0);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	System.arraycopy(input,  numToSkip,  available,  skipped,  0);	  System.arraycopy(input,    numToSkip,    available,    skipped);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
408	[BUG]  [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipped,  buffersize);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipped,  buffersize);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	System.arraycopy(input,  numToSkip,  available,  skipped,  buffersize);	  System.arraycopy(input,    numToSkip,    available,    skipped);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
409	[BUG]  [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipd,  skipped);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipd,  skipped);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	System.arraycopy(input,  numToSkip,  available,  skipd,  skipped);	  System.arraycopy(input,    numToSkip,    available,    skipped);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
410	[BUG]  [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipped,  input.length);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipped,  input.length);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	System.arraycopy(input,  numToSkip,  available,  skipped,  input.length);	  System.arraycopy(input,    numToSkip,    available,    skipped);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
411	[BUG]  [BUGGY]  System.arraycopy(input,  skipped,  available,  numToSkip);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  System.arraycopy(input,  skipped,  available,  numToSkip);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	System.arraycopy(input,  skipped,  available,  numToSkip);	  System.arraycopy(input,    numToSkip,    available,    skipped);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
412	[BUG]  [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipped,  bufsize);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipped,  bufsize);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	System.arraycopy(input,  numToSkip,  available,  skipped,  bufsize);	  System.arraycopy(input,    numToSkip,    available,    skipped);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
413	[BUG]  [BUGGY]  if(skipped  <  0  ||  skipped  >  0)  {  if(skipped  <  0  ||  skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  skipped  >  0)  {  if(skipped  <  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    skipped    >    0)    {    if(skipped  <  0  ||  skipped  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
414	[BUG]  [BUGGY]  if(skipped  <  0  ||  skipped  >  0)  {  If(skipped  <  0  ||  skipped  >  0)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  skipped  >  0)  {  If(skipped  <  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    skipped    >    0)    {    If(skipped  <  0  ||  skipped  >  0)  {	  timeout    	non-compiled	[CE]  ';'  expected	5	None	add
415	[BUG]  [BUGGY]  if(skipped  <  0  ||  skipped  >  0)  {  if(skipped  >=  0  ||  skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  skipped  >  0)  {  if(skipped  >=  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    skipped    >    0)    {    if(skipped  >=  0  ||  skipped  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
416	[BUG]  [BUGGY]  if(skipped  <  0  ||  skipped  >  0)  {  if(skipped  <  0  ||  skipd  >  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  skipped  >  0)  {  if(skipped  <  0  ||  skipd  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    skipped    >    0)    {    if(skipped  <  0  ||  skipd  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
417	[BUG]  [BUGGY]  if(skipped  <  0  ||  skipped  >  0)  {  if(skipped  >  0  ||  skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  skipped  >  0)  {  if(skipped  >  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    skipped    >    0)    {    if(skipped  >  0  ||  skipped  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
418	[BUG]  [BUGGY]  if(skipped  >  0  ||  skipped  <  available)  {  if(skipped  >  0  ||  skipped  <  available)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  skipped  <  available)  {  if(skipped  >  0  ||  skipped  <  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    skipped    <    available)    {    if(skipped  >  0  ||  skipped  <  available)  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
419	[BUG]  [BUGGY]  if(skipped  >  0  ||  skipped  <  available)  {  If(skipped  >  0  ||  skipped  <  available)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  skipped  <  available)  {  If(skipped  >  0  ||  skipped  <  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    skipped    <    available)    {    If(skipped  >  0  ||  skipped  <  available)  {	  	non-compiled	[CE]  ';'  expected	127	None	add
420	[BUG]  [BUGGY]  if(skipped  >  0  ||  skipped  <  available)  {  if(skipped  >  0  ||  skipd  <  available)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  skipped  <  available)  {  if(skipped  >  0  ||  skipd  <  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    skipped    <    available)    {    if(skipped  >  0  ||  skipd  <  available)  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
421	[BUG]  [BUGGY]  if(skipped  >  0  ||  skipped  <  available)  {  if(skipped  >  0  ||  skipped  >=  available)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  skipped  <  available)  {  if(skipped  >  0  ||  skipped  >=  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    skipped    <    available)    {    if(skipped  >  0  ||  skipped  >=  available)  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
422	[BUG]  [BUGGY]  if(skipped  >  0  ||  skipped  <  available)  {  while(skipped  >  0  ||  skipped  <  available)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  skipped  <  available)  {  while(skipped  >  0  ||  skipped  <  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    skipped    <    available)    {    while(skipped  >  0  ||  skipped  <  available)  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
423	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(skipped);  if(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(skipped);  if(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readInput(skipped);  if(available  <  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(skipped);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
424	[BUG]  [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput(skipped);  if(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput(skipped);  if(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  InputStream  available  =  input.readInput(skipped);  if(available  <  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(skipped);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
425	[BUG]  [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput(skipped);  if(available!=  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput(skipped);  if(available!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  InputStream  available  =  input.readInput(skipped);  if(available!=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(skipped);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
426	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(skipped);  if(available!=  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInput(skipped);  if(available!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readInput(skipped);  if(available!=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(skipped);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
427	[BUG]  [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput(skipped);  if(available  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput(skipped);  if(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  InputStream  available  =  input.readInput(skipped);  if(available  >=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(skipped);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
428	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(numToSkip  >=  0)  {	  if(skip    >=    0)    {    	compilable	  [FE]  AssertionError  	81	3	replace
429	[BUG]  [BUGGY]  if(numToSkip  >=  0)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  >=  0)  {	  if(skip    >=    0)    {    	compilable	  [FE]  AssertionError  	81	3	replace
430	[BUG]  [BUGGY]  if(available  >>  0)  {  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >>  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >>  0)  {	  if(skip    >=    0)    {    	non-compiled	[CE]  incompatible  types	81	None	replace
431	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  >  numToSkip)  {  if(skipped  >  0  ||  available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  >  numToSkip)  {  if(skipped  >  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    available    >    numToSkip)    {    if(skipped  >  0  ||  available  >  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	131	None	add
432	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  >  numToSkip)  {  If(skipped  >  0  ||  available  >  numToSkip)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  >  numToSkip)  {  If(skipped  >  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    available    >    numToSkip)    {    If(skipped  >  0  ||  available  >  numToSkip)  {	  timeout    	non-compiled	[CE]  ';'  expected	131	None	add
433	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  >  numToSkip)  {  if(skipped  >  0  ||  accessible  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  >  numToSkip)  {  if(skipped  >  0  ||  accessible  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    available    >    numToSkip)    {    if(skipped  >  0  ||  accessible  >  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	131	None	add
434	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  >  numToSkip)  {  if(skipped  >  0  ||  available  >  numtoSkip)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  >  numToSkip)  {  if(skipped  >  0  ||  available  >  numtoSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    available    >    numToSkip)    {    if(skipped  >  0  ||  available  >  numtoSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	131	None	add
435	[BUG]  [BUGGY]  if(available  <  0)  {  while(skipped  <  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  while(skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  while(skipped  <  0)  {	  if(skipped    <    0)    {    while(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
436	[BUG]  [BUGGY]  timeout  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	while(available  <  0)  {	  if(skipped    <    0)    {    while(skipped    <    0)    {    	compilable	timeout	90	1	replace
437	[BUG]  [BUGGY]  while(available  <  0)  {  timeout  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  <  0)  {	  if(skipped    <    0)    {    while(skipped    <    0)    {    	compilable	timeout	90	1	replace
438	[BUG]  [BUGGY]  if(skipped  <  0)  {  while(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0)  {  while(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  0)  {  while(available  <  0)  {	  if(skipped    <    0)    {    while(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
439	[BUG]  [BUGGY]  if(skip  <  0)  {  while(skipped  <  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  0)  {  while(skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  0)  {  while(skipped  <  0)  {	  if(skipped    <    0)    {    while(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
440	[BUG]  [BUGGY]  if(available  <  0)  {  while(skipped  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  while(skipped  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  while(skipped  <  =  0)  {	  if(skipped    <    0)    {    while(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
441	[BUG]  [BUGGY]  if(available  <  =  0)  {  while(skipped  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0)  {  while(skipped  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0)  {  while(skipped  <  =  0)  {	  if(skipped    <    0)    {    while(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
442	[BUG]  [BUGGY]  if(available  <  0  ||  skipped  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  skipped  <  =  0)  {	  if(available    <    =    0    ||    skipped    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
443	[BUG]  [BUGGY]  if(skipped  <  =  0  ||  available  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  =  0  ||  available  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0  ||  available  <  =  0)  {	  if(available    <    =    0    ||    skipped    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
444	[BUG]  [BUGGY]  if(available  <  =  0  ||  skipped  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0  ||  skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0  ||  skipped  >=  0)  {	  if(available    <    =    0    ||    skipped    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
445	[BUG]  [BUGGY]  if(available  >=  0  ||  skipped  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0  ||  skipped  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0  ||  skipped  <  =  0)  {	  if(available    <    =    0    ||    skipped    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
446	[BUG]  [BUGGY]  if(available  <  =  0  ||  skipped  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0  ||  skipped  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0  ||  skipped  ==  0)  {	  if(available    <    =    0    ||    skipped    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
447	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInt();  if(available  >  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInt();  if(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readInt();  if(available  >  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInt();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
448	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInt();  if(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInt();  if(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readInt();  if(available  <  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInt();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
449	[BUG]  [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInt();  if(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInt();  if(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  InputStream  available  =  input.readInt();  if(available  <  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInt();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
450	[BUG]  [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInt();  if(available  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInt();  if(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  InputStream  available  =  input.readInt();  if(available  >  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInt();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
451	[BUG]  [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInt();  if(available  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  InputStream  available  =  input.readInt();  if(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  InputStream  available  =  input.readInt();  if(available  >=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInt();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
452	[BUG]  [BUGGY]  if(available  >  0)  {  If(available  >=  0)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  If(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  If(available  >=  0)  {	  if(available    >=    0)    {    If(available    >=    0)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
453	[BUG]  [BUGGY]  if(available  <  =  0)  {  If(available  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0)  {  If(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0)  {  If(available  >=  0)  {	  if(available    >=    0)    {    If(available    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
454	[BUG]  [BUGGY]  if(skip  >=  0)  {  If(skip  >=  0)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >=  0)  {  If(skip  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >=  0)  {  If(skip  >=  0)  {	  if(available    >=    0)    {    If(available    >=    0)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
455	[BUG]  [BUGGY]  if(skip  >  0)  {  If(skip  >=  0)  {  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  If(skip  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  If(skip  >=  0)  {	  if(available    >=    0)    {    If(available    >=    0)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
456	[BUG]  [BUGGY]  if(available  ==  0)  {  If(available  >  0)  {  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  ==  0)  {  If(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  ==  0)  {  If(available  >  0)  {	  if(available    >=    0)    {    If(available    >=    0)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
457	[BUG]  [BUGGY]  if(available  >  0)  {  If(available  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  If(available  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  If(available  <  =  0)  {	  if(available    >=    0)    {    If(available    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
458	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    skipped    +=    input.length();    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
459	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  }  [CE]  possible  loss  of  precision  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    skipped    +=    input.length();    }    	non-compiled	[CE]  possible  loss  of  precision	67	None	replace
460	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  available.size();  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  }  [CE]  long  cannot  be  dereferenced  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  available.size();  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  numToSkip)  {  for(int  i  =  available.size();  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    skipped    +=    input.length();    }    	non-compiled	[CE]  long  cannot  be  dereferenced	67	None	replace
461	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  output.length();  }  [CE]  possible  loss  of  precision  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  output.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  output.length();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    skipped    +=    input.length();    }    	non-compiled	[CE]  possible  loss  of  precision	67	None	replace
462	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  output.length();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  output.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  output.length();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    skipped    +=    input.length();    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
463	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  input.length();	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    skipped    +=    input.length();    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
464	[BUG]  [BUGGY]  int  numToSkip  =  input.getSize();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  numToSkip  =  input.getSize();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  numToSkip  =  input.getSize();	  if    (available    >    0)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
465	[BUG]  [BUGGY]  long  numToSkip  =  input.getSize();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  long  numToSkip  =  input.getSize();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	long  numToSkip  =  input.getSize();	  if    (available    >    0)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
466	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  int  numToSkip  =  input.getSize();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0)  {  int  numToSkip  =  input.getSize();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  >  0)  {  int  numToSkip  =  input.getSize();  }	  if    (available    >    0)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
467	[BUG]  [BUGGY]  Integer  numToSkip  =  input.getSize();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  Integer  numToSkip  =  input.getSize();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	Integer  numToSkip  =  input.getSize();	  if    (available    >    0)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
468	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  int  numToSkip  =  input.getSize();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0)  {  int  numToSkip  =  input.getSize();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  >  0)  {  int  numToSkip  =  input.getSize();	  if    (available    >    0)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	115	None	replace
469	[BUG]  [BUGGY]  if(available  >  0  ||  input.isEnabled(SKIPP_BUFFER_SIZE))  {  [CE]  cannot  find  symbol  SKIPP_BUFFER_SIZE  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  input.isEnabled(SKIPP_BUFFER_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  input.isEnabled(SKIPP_BUFFER_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SKIPP_BUFFER_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  SKIPP_BUFFER_SIZE	126	None	replace
470	[BUG]  [BUGGY]  if(skip  >  0  ||  input.isEnabled(COPY_BUFFER_SIZE))  {  [CE]  cannot  find  symbol  skip  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0  ||  input.isEnabled(COPY_BUFFER_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0  ||  input.isEnabled(COPY_BUFFER_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SKIPP_BUFFER_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  skip	126	None	replace
471	[BUG]  [BUGGY]  if(skipped  >  0  ||  input.isEnabled(SKIPP_BUFFER_SIZE))  {  [CE]  cannot  find  symbol  SKIPP_BUFFER_SIZE  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  input.isEnabled(SKIPP_BUFFER_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  input.isEnabled(SKIPP_BUFFER_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SKIPP_BUFFER_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  SKIPP_BUFFER_SIZE	126	None	replace
472	[BUG]  [BUGGY]  if(available  >  0  ||  input.isEnabled(SKIP_BUFFER_SIZE))  {  [CE]  cannot  find  symbol  SKIP_BUFFER_SIZE  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  input.isEnabled(SKIP_BUFFER_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  input.isEnabled(SKIP_BUFFER_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SKIPP_BUFFER_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  SKIP_BUFFER_SIZE	126	None	replace
473	[BUG]  [BUGGY]  if(available  >  0  ||  input.isEnabled(SCRIPT_BUFFER_SIZE))  {  [CE]  cannot  find  symbol  SCRIPT_BUFFER_SIZE  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  input.isEnabled(SCRIPT_BUFFER_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  input.isEnabled(SCRIPT_BUFFER_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SKIPP_BUFFER_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  SCRIPT_BUFFER_SIZE	126	None	replace
474	[BUG]  [BUGGY]  if(num  >  0  ||  input.isEnabled(SKIPP_BUFFER_SIZE))  {  [CE]  cannot  find  symbol  num  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(num  >  0  ||  input.isEnabled(SKIPP_BUFFER_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(num  >  0  ||  input.isEnabled(SKIPP_BUFFER_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SKIPP_BUFFER_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  num	126	None	replace
475	[BUG]  [BUGGY]  if(numToSkip  >  0  ||  input.isEnabled(SKIPP_BUFFER_SIZE))  {  [CE]  cannot  find  symbol  SKIPP_BUFFER_SIZE  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0  ||  input.isEnabled(SKIPP_BUFFER_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  >  0  ||  input.isEnabled(SKIPP_BUFFER_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SKIPP_BUFFER_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  SKIPP_BUFFER_SIZE	126	None	replace
476	[BUG]  [BUGGY]  if(available  <  numToSkip)  {  if(skipped  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip)  {  if(skipped  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  numToSkip)  {  if(skipped  <  =  0)  {	  if(skipped    <    0)    {    if(skipped    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
477	[BUG]  [BUGGY]  if(available  <  0)  {  if(skip  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skip  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skip  <  =  0)  {	  if(skipped    <    0)    {    if(skipped    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
478	[BUG]  [BUGGY]  if(available  <  0)  {  If(available  >  0)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  If(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  If(available  >  0)  {	  if(skipped    <    0)    {    If(skipped    <    0)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
479	[BUG]  [BUGGY]  if(available  <  0)  {  If(skipped  <  0)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  If(skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  If(skipped  <  0)  {	  if(skipped    <    0)    {    If(skipped    <    0)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
480	[BUG]  [BUGGY]  if(available  <  0)  {  If(available  >  numToSkip)  {  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  If(available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  If(available  >  numToSkip)  {	  if(skipped    <    0)    {    If(skipped    <    0)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
481	[BUG]  [BUGGY]  if(available  <  =  0)  {  If(skipped  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0)  {  If(skipped  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0)  {  If(skipped  <  =  0)  {	  if(skipped    <    0)    {    If(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
482	[BUG]  [BUGGY]  if(available  <  numToSkip)  {  If(available  <  0)  {  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip)  {  If(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  numToSkip)  {  If(available  <  0)  {	  if(skipped    <    0)    {    If(skipped    <    0)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
483	[BUG]  [BUGGY]  if(available  <  0)  {  If(available  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  If(available  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  If(available  <  =  0)  {	  if(skipped    <    0)    {    If(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
484	[BUG]  [BUGGY]  timeout  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	while(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    timeout    	compilable	timeout	119	1	replace
485	[BUG]  [BUGGY]  while(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  timeout  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    timeout    	compilable	timeout	119	1	replace
486	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    timeout    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
487	[BUG]  [BUGGY]  timeout  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	while(available  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    timeout    	compilable	timeout	119	1	replace
488	[BUG]  [BUGGY]  while(available  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  timeout  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    timeout    	compilable	timeout	119	1	replace
489	[BUG]  [BUGGY]  timeout  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  skipped  =  input.skip(numToSkip);  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	while(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  skipped  =  input.skip(numToSkip);  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    timeout    	compilable	timeout	119	1	replace
490	[BUG]  [BUGGY]  while(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  skipped  =  input.skip(numToSkip);  }  timeout  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  skipped  =  input.skip(numToSkip);  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  skipped  =  input.skip(numToSkip);  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    timeout    	compilable	timeout	119	1	replace
491	[BUG]  [BUGGY]  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.flush();  }  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.flush();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.flush();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    timeout    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
492	[BUG]  [BUGGY]  int  n  =  input.read(available,  skipped);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  n  =  input.read(available,  skipped);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  n  =  input.read(available,  skipped);	  int    n    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
493	[BUG]  [BUGGY]  int  n  =  input.read();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  n  =  input.read();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  n  =  input.read();	  int    n    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
494	[BUG]  [BUGGY]  long  n  =  input.read(available);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  long  n  =  input.read(available);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	long  n  =  input.read(available);	  int    n    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
495	[BUG]  [BUGGY]  int  n  =  input.read(skip);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  n  =  input.read(skip);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  n  =  input.read(skip);	  int    n    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
496	[BUG]  [BUGGY]  int  n  =  input.read(available  +  skipped);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  n  =  input.read(available  +  skipped);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  n  =  input.read(available  +  skipped);	  int    n    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
497	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  ==  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  ==  0  ||  skipped  >  0)  {	  if(skipped    <    =    0    ||    skipped    >    0)    {    	compilable	  [FE]  AssertionError  	15	3	replace
498	[BUG]  [BUGGY]  if(skipped  ==  0  ||  skipped  >  0)  {  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  ==  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  ==  0  ||  skipped  >  0)  {	  if(skipped    <    =    0    ||    skipped    >    0)    {    	compilable	  [FE]  AssertionError  	15	3	replace
499	[BUG]  [BUGGY]  if(available!=  0)  {  if(available  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available!=  0)  {  if(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available!=    0)    {    if(available  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
500	[BUG]  [BUGGY]  if(available!=  0)  {  if(available!=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available!=  0)  {  if(available!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available!=    0)    {    if(available!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
501	[BUG]  [BUGGY]  if(available!=  0)  {  if(available  >>  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available!=  0)  {  if(available  >>  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available!=    0)    {    if(available  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
502	[BUG]  [BUGGY]  if(available!=  0)  {  if(available  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available!=  0)  {  if(available  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available!=    0)    {    if(available  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
503	[BUG]  [BUGGY]  if(available!=  0)  {  If(available!=  0)  {  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available!=  0)  {  If(available!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available!=    0)    {    If(available!=  0)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
504	[BUG]  [BUGGY]  if(available  <  =  skipped)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  skipped)  {	  if(available    >    skipped)    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
505	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >=  skipped)  {	  if(available    >    skipped)    {    	compilable	  [FE]  AssertionError  	94	3	replace
506	[BUG]  [BUGGY]  if(available  >=  skipped)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  skipped)  {	  if(available    >    skipped)    {    	compilable	  [FE]  AssertionError  	94	3	replace
507	[BUG]  [BUGGY]  timeout  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  ==  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  ==  skipped)  {	  if(available    >    skipped)    {    	compilable	timeout	94	1	replace
508	[BUG]  [BUGGY]  if(available  ==  skipped)  {  timeout  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  ==  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  ==  skipped)  {	  if(available    >    skipped)    {    	compilable	timeout	94	1	replace
509	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  skipped  ||  available  >  numToSkip)  {	  if(available    >    skipped)    {    	compilable	  [FE]  AssertionError  	94	2	replace
510	[BUG]  [BUGGY]  if(available  >  skipped  ||  available  >  numToSkip)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  skipped  ||  available  >  numToSkip)  {	  if(available    >    skipped)    {    	compilable	  [FE]  AssertionError  	94	2	replace
511	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  skipped  ||  available  <  numToSkip)  {	  if(available    >    skipped)    {    	compilable	  [FE]  AssertionError  	94	2	replace
512	[BUG]  [BUGGY]  if(available  >  skipped  ||  available  <  numToSkip)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  skipped  ||  available  <  numToSkip)  {	  if(available    >    skipped)    {    	compilable	  [FE]  AssertionError  	94	2	replace
513	[BUG]  [BUGGY]  if(available  >=  skip)  {  [CE]  cannot  find  symbol  skip  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  skip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  skip)  {	  if(skipped    >=    available)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  skip	101	None	replace
514	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available!=  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available!=  skipped)  {	  if(skipped    >=    available)    {    timeout    	compilable	  [FE]  AssertionError  	101	2	replace
515	[BUG]  [BUGGY]  if(available!=  skipped)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available!=  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available!=  skipped)  {	  if(skipped    >=    available)    {    timeout    	compilable	  [FE]  AssertionError  	101	2	replace
516	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  0  ||  skipped  >  0)  {	  if(skipped    >    0    ||    available    >    skipped)    {    	compilable	  [FE]  AssertionError  	134	3	replace
517	[BUG]  [BUGGY]  if(available  >  0  ||  skipped  >  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  skipped  >  0)  {	  if(skipped    >    0    ||    available    >    skipped)    {    	compilable	  [FE]  AssertionError  	134	3	replace
518	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  0  ||  available  >  skipped)  {	  if(skipped    >    0    ||    available    >    skipped)    {    	compilable	  [FE]  AssertionError  	134	3	replace
519	[BUG]  [BUGGY]  if(available  >  0  ||  available  >  skipped)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  available  >  skipped)  {	  if(skipped    >    0    ||    available    >    skipped)    {    	compilable	  [FE]  AssertionError  	134	3	replace
520	[BUG]  [BUGGY]  timeout  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  &&  available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  0  &&  available  >  skipped)  {	  if(skipped    >    0    ||    available    >    skipped)    {    	compilable	timeout	134	1	replace
521	[BUG]  [BUGGY]  if(skipped  >  0  &&  available  >  skipped)  {  timeout  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  &&  available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  &&  available  >  skipped)  {	  if(skipped    >    0    ||    available    >    skipped)    {    	compilable	timeout	134	1	replace
522	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  skipped  >  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  0  ||  skipped  >  available)  {	  if(skipped    >    0    ||    available    >    skipped)    {    	compilable	  [FE]  AssertionError  	134	3	replace
523	[BUG]  [BUGGY]  if(available  >  0  ||  skipped  >  available)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  skipped  >  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  skipped  >  available)  {	  if(skipped    >    0    ||    available    >    skipped)    {    	compilable	  [FE]  AssertionError  	134	3	replace
524	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  0  ||  available  >  skipped)  {	  if(skipped    >    0    ||    available    >    skipped)    {    	compilable	  [FE]  AssertionError  	134	2	replace
525	[BUG]  [BUGGY]  if(skipped  <  0  ||  available  >  skipped)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  0  ||  available  >  skipped)  {	  if(skipped    >    0    ||    available    >    skipped)    {    	compilable	  [FE]  AssertionError  	134	2	replace
526	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }	  if(skip    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    input.close();    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
527	[BUG]  [BUGGY]  while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }  [CE]  possible  loss  of  precision  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }	  if(skip    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    input.close();    }    	non-compiled	[CE]  possible  loss  of  precision	122	None	replace
528	[BUG]  [BUGGY]  if(skipped  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }  [CE]  possible  loss  of  precision  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }	  if(skip    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    input.close();    }    	non-compiled	[CE]  possible  loss  of  precision	122	None	replace
529	[BUG]  [BUGGY]  while(numToSkip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }  [CE]  possible  loss  of  precision  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(numToSkip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(numToSkip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }	  if(skip    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    input.close();    }    	non-compiled	[CE]  possible  loss  of  precision	122	None	replace
530	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  skipped  =  input.skip(numToSkip);  }  [CE]  cannot  find  symbol  skip  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  skipped  =  input.skip(numToSkip);  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  skipped  =  input.skip(numToSkip);  }	  if(skip    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    input.close();    }    	non-compiled	[CE]  cannot  find  symbol  skip	122	None	replace
531	[BUG]  [BUGGY]  if(available  <  0)  {  if(skipped!=  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skipped!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skipped!=  0)  {	  if(skipped    <    0)    {    if(skipped!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
532	[BUG]  [BUGGY]  if(available  <  numToSkip)  {  if(available  <  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip)  {  if(available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    <    numToSkip)    {    if(available  <  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	95	None	add
533	[BUG]  [BUGGY]  if(available  <  numToSkip)  {  If(available  <  numToSkip)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip)  {  If(available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    <    numToSkip)    {    If(available  <  numToSkip)  {	  timeout    	non-compiled	[CE]  ';'  expected	95	None	add
534	[BUG]  [BUGGY]  if(available  <  numToSkip)  {  if(available  >=  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip)  {  if(available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    <    numToSkip)    {    if(available  >=  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	95	None	add
535	[BUG]  [BUGGY]  if(available  <  numToSkip)  {  when(available  <  numToSkip)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip)  {  when(available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    <    numToSkip)    {    when(available  <  numToSkip)  {	  timeout    	non-compiled	[CE]  ';'  expected	95	None	add
536	[BUG]  [BUGGY]  if(available  <  numToSkip)  {  while(available  <  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip)  {  while(available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    <    numToSkip)    {    while(available  <  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	95	None	add
537	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0  ||  available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(numToSkip  >  0  ||  available  >  skipped)  {	  if(skipped    >    0    ||    available    >    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	132	3	replace
538	[BUG]  [BUGGY]  if(numToSkip  >  0  ||  available  >  skipped)  {  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0  ||  available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  >  0  ||  available  >  skipped)  {	  if(skipped    >    0    ||    available    >    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	132	3	replace
539	[BUG]  [BUGGY]  if(skip  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  =  0)  {	  if(available    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
540	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
541	[BUG]  [BUGGY]  if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }  [CE]  cannot  find  symbol  skip  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol  skip	80	None	replace
542	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }  [CE]  cannot  find  symbol  skip  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol  skip	80	None	replace
543	[BUG]  [BUGGY]  while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }  [CE]  possible  loss  of  precision  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  possible  loss  of  precision	80	None	replace
544	[BUG]  [BUGGY]  if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  0;  ++i)  {  available  +=  input.getLength();  }  [CE]  cannot  find  symbol  skip  [FE]                                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  0;  ++i)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  numToSkip)  {  for(int  i  =  available;  i  <  0;  ++i)  {  available  +=  input.getLength();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol  skip	80	None	replace
545	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getUpperBound();  }  [CE]  illegal  start  of  type  [FE]                                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getUpperBound();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getUpperBound();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
546	[BUG]  [BUGGY]  if(available  <  0  ||  skipped  >  0)  {  if(available  <  0  ||  skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  >  0)  {  if(available  <  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    <    0    ||    skipped    >    0)    {    if(available  <  0  ||  skipped  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	10	None	add
547	[BUG]  [BUGGY]  if(available  <  0  ||  skipped  >  0)  {  If(available  <  0  ||  skipped  >  0)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  >  0)  {  If(available  <  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    <    0    ||    skipped    >    0)    {    If(available  <  0  ||  skipped  >  0)  {	  timeout    	non-compiled	[CE]  ';'  expected	10	None	add
548	[BUG]  [BUGGY]  if(available  <  0  ||  skipped  >  0)  {  if(available  <  0  ||  skipd  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  >  0)  {  if(available  <  0  ||  skipd  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    <    0    ||    skipped    >    0)    {    if(available  <  0  ||  skipd  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	10	None	add
549	[BUG]  [BUGGY]  if(available  <  0  ||  skipped  >  0)  {  if(available  >=  0  ||  skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  >  0)  {  if(available  >=  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    <    0    ||    skipped    >    0)    {    if(available  >=  0  ||  skipped  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	10	None	add
550	[BUG]  [BUGGY]  if(available  <  0  ||  skipped  >  0)  {  if(available  <  0  ||  saved  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  >  0)  {  if(available  <  0  ||  saved  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    <    0    ||    skipped    >    0)    {    if(available  <  0  ||  saved  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	10	None	add
551	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [CE]  possible  loss  of  precision  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	non-compiled	[CE]  possible  loss  of  precision	76	None	replace
552	[BUG]  [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [CE]  possible  loss  of  precision  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	non-compiled	[CE]  possible  loss  of  precision	76	None	replace
553	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  =  input.skip(numToSkip);  }  [CE]  possible  loss  of  precision  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  =  input.skip(numToSkip);  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  =  input.skip(numToSkip);  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	non-compiled	[CE]  possible  loss  of  precision	76	None	replace
554	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  =  input.skip(skipped);  }  [CE]  possible  loss  of  precision  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  =  input.skip(skipped);  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  =  input.skip(skipped);  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	non-compiled	[CE]  possible  loss  of  precision	76	None	replace
555	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  int  numToSkip  =  input.skip(numToSkip);  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  int  numToSkip  =  input.skip(numToSkip);  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  numToSkip;  i++)  {  int  numToSkip  =  input.skip(numToSkip);  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
556	[BUG]  [BUGGY]  if(switch  >  0  &&  available  <  =  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(switch  >  0  &&  available  <  =  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(switch  >  0  &&  available  <  =  numToSkip)  {	  if(switch    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
557	[BUG]  [BUGGY]  if(switch  >  0  &&  available  <  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(switch  >  0  &&  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(switch  >  0  &&  available  <  numToSkip)  {	  if(switch    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
558	[BUG]  [BUGGY]  if(switch  >  0  ||  available  <  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(switch  >  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(switch  >  0  ||  available  <  numToSkip)  {	  if(switch    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
559	[BUG]  [BUGGY]  if(available  >  skip)  {  [CE]  cannot  find  symbol  skip  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  skip)  {	  if(skipped    >    available)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  skip	57	None	replace
560	[BUG]  [BUGGY]  timeout  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  available  ||  skipped  >  0)  {	  if(skipped    >    available)    {    timeout    	compilable	timeout	57	1	replace
561	[BUG]  [BUGGY]  if(skipped  >  available  ||  skipped  >  0)  {  timeout  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  available  ||  skipped  >  0)  {	  if(skipped    >    available)    {    timeout    	compilable	timeout	57	1	replace
562	[BUG]  [BUGGY]  timeout  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available  ||  skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  available  ||  skipped  <  0)  {	  if(skipped    >    available)    {    timeout    	compilable	timeout	57	1	replace
563	[BUG]  [BUGGY]  if(skipped  >  available  ||  skipped  <  0)  {  timeout  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available  ||  skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  available  ||  skipped  <  0)  {	  if(skipped    >    available)    {    timeout    	compilable	timeout	57	1	replace
564	[BUG]  [BUGGY]  if(skipped  >  available  ||  skipped  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available  ||  skipped  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  available  ||  skipped  <  =  0)  {	  if(skipped    >    available)    {    timeout    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
565	[BUG]  [BUGGY]  if(available  >  0)  {  when(available  >  0)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  when(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  when(available  >  0)  {	  if(skipped    >    0)    {    when(skipped    >    0)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
566	[BUG]  [BUGGY]  if(available  >  0)  {  when(skipped  >  0)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  when(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  when(skipped  >  0)  {	  if(skipped    >    0)    {    when(skipped    >    0)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
567	[BUG]  [BUGGY]  when(available  >  0)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  when(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	when(available  >  0)  {	  if(skipped    >    0)    {    when(skipped    >    0)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
568	[BUG]  [BUGGY]  when(skipped  >  0)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  when(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	when(skipped  >  0)  {	  if(skipped    >    0)    {    when(skipped    >    0)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
569	[BUG]  [BUGGY]  if(skip  >  0)  {  when(skip  >  0)  {  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  when(skip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  when(skip  >  0)  {	  if(skipped    >    0)    {    when(skipped    >    0)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
570	[BUG]  [BUGGY]  if(skip  >  0)  {  when(skipped  >  0)  {  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  when(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  when(skipped  >  0)  {	  if(skipped    >    0)    {    when(skipped    >    0)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
571	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  if(skip  >  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip)  {  if(skip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip)  {  if(skip  >  0)  {	  if(skipped    >    0)    {    if(skip    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
572	[BUG]  [BUGGY]  if(skipped  <  =  0)  {  if(skip  >  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  =  0)  {  if(skip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0)  {  if(skip  >  0)  {	  if(skipped    >    0)    {    if(skip    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
573	[BUG]  [BUGGY]  if(available  <  =  0)  {  if(skip  >  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0)  {  if(skip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0)  {  if(skip  >  0)  {	  if(skipped    >    0)    {    if(skip    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
574	[BUG]  [BUGGY]  if(skipped  >  available)  {  if(skip  >  0)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available)  {  if(skip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  available)  {  if(skip  >  0)  {	  if(skipped    >    0)    {    if(skip    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
575	[BUG]  [BUGGY]  while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [CE]  possible  loss  of  precision  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length();    }    	non-compiled	[CE]  possible  loss  of  precision	66	None	replace
576	[BUG]  [BUGGY]  while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped.length();  }  [CE]  possible  loss  of  precision  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped.length();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length();    }    	non-compiled	[CE]  possible  loss  of  precision	66	None	replace
577	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  0;  i++)  {  available  +=  input.length();  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  0;  i++)  {  available  +=  input.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  0;  i++)  {  available  +=  input.length();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length();    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
578	[BUG]  [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipd.length();  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipd.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipd.length();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length();    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
579	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >=  0  ||  available  <  numToSkip)  {	  if(skipped    >    0    ||    available    <    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	130	3	replace
580	[BUG]  [BUGGY]  if(available  >=  0  ||  available  <  numToSkip)  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0  ||  available  <  numToSkip)  {	  if(skipped    >    0    ||    available    <    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	130	3	replace
581	[BUG]  [BUGGY]  if(skip  <  0  ||  available  >  numToSkip)  {  [CE]  cannot  find  symbol  skip  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  0  ||  available  >  numToSkip)  {	  if(skip    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  skip	97	None	replace
582	[BUG]  [BUGGY]  if(skip  <  0  ||  available  <  numToSkip)  {  [CE]  cannot  find  symbol  skip  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  0  ||  available  <  numToSkip)  {	  if(skip    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  skip	97	None	replace
583	[BUG]  [BUGGY]  if(skip  <  0  ||  available  >=  numToSkip)  {  [CE]  cannot  find  symbol  skip  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  0  ||  available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  0  ||  available  >=  numToSkip)  {	  if(skip    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  skip	97	None	replace
584	[BUG]  [BUGGY]  if(skip  <  0  ||  available  <  0)  {  [CE]  cannot  find  symbol  skip  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  0  ||  available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  0  ||  available  <  0)  {	  if(skip    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  skip	97	None	replace
585	[BUG]  [BUGGY]  if(skipped  <  available)  {  if(skipped  <  available)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available)  {  if(skipped  <  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    available)    {    if(skipped  <  available)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
586	[BUG]  [BUGGY]  if(skipped  <  available)  {  If(skipped  <  available)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available)  {  If(skipped  <  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    available)    {    If(skipped  <  available)  {	  	non-compiled	[CE]  ';'  expected	98	None	add
587	[BUG]  [BUGGY]  if(skipped  <  available)  {  if(skipped  >=  available)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available)  {  if(skipped  >=  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    available)    {    if(skipped  >=  available)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
588	[BUG]  [BUGGY]  if(skipped  <  available)  {  if(skipped  >  available)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available)  {  if(skipped  >  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    available)    {    if(skipped  >  available)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
589	[BUG]  [BUGGY]  if(skipped  <  available)  {  if(skipped!=  available)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available)  {  if(skipped!=  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    available)    {    if(skipped!=  available)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
590	[BUG]  [BUGGY]  if(skipped  <  available)  {  if(skipped  >>  available)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available)  {  if(skipped  >>  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    available)    {    if(skipped  >>  available)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
591	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available  ||  skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  available  ||  skipped  >=  0)  {	  if(skipped    <    available)    {    	compilable	  [FE]  AssertionError  	99	3	replace
592	[BUG]  [BUGGY]  if(skipped  <  available  ||  skipped  >=  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available  ||  skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  available  ||  skipped  >=  0)  {	  if(skipped    <    available)    {    	compilable	  [FE]  AssertionError  	99	3	replace
593	[BUG]  [BUGGY]  if(skipped  <  available  ||  skipd  >  0)  {  [CE]  cannot  find  symbol  skipd  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available  ||  skipd  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  available  ||  skipd  >  0)  {	  if(skipped    <    available)    {    	non-compiled	[CE]  cannot  find  symbol  skipd	99	None	replace
594	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  ==  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  ==  numToSkip)  {	  if(available    >    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	59	3	replace
595	[BUG]  [BUGGY]  if(available  ==  numToSkip)  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  ==  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  ==  numToSkip)  {	  if(available    >    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	59	3	replace
596	[BUG]  [BUGGY]  timeout  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  numToSkip)  {	  if(available    >    numToSkip)    {    timeout    	compilable	timeout	59	1	replace
597	[BUG]  [BUGGY]  if(skipped  >  numToSkip)  {  timeout  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  numToSkip)  {	  if(available    >    numToSkip)    {    timeout    	compilable	timeout	59	1	replace
598	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(numToSkip  >  available)  {	  if(available    >    numToSkip)    {    timeout    	compilable	timeout	59	1	replace
599	[BUG]  [BUGGY]  if(numToSkip  >  available)  {  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  >  available)  {	  if(available    >    numToSkip)    {    timeout    	compilable	timeout	59	1	replace
600	[BUG]  [BUGGY]  while(skip  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [CE]  cannot  find  symbol  skip  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(skip  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(skip  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }	  if(skip    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    	non-compiled	[CE]  cannot  find  symbol  skip	117	None	replace
601	[BUG]  [BUGGY]  timeout  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	while(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  input.close();  }	  if(skip    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    	compilable	timeout	117	1	replace
602	[BUG]  [BUGGY]  while(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  input.close();  }  timeout  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  input.close();  }	  if(skip    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    	compilable	timeout	117	1	replace
603	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.next();    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
604	[BUG]  [BUGGY]  while(available  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.next();    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
605	[BUG]  [BUGGY]  if(available  >  0)  {  for(int  i  =  0;  i  <  skipped;  ++i)  {  skipped  +=  input.next();  }  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  for(int  i  =  0;  i  <  skipped;  ++i)  {  skipped  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  for(int  i  =  0;  i  <  skipped;  ++i)  {  skipped  +=  input.next();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.next();    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
606	[BUG]  [BUGGY]  while(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  skipped  +=  input.next();  }  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  skipped  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  skipped  +=  input.next();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.next();    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
607	[BUG]  [BUGGY]  while(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.next();    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
608	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }  [CE]  '.class'  expected  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  For(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	For(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.next();    }    	non-compiled	[CE]  '.class'  expected	120	None	replace
609	[BUG]  [BUGGY]  if(skipping  >  0)  {  [CE]  cannot  find  symbol  skipping  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipping  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipping  >  0)  {	  if(skid    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  skipping	55	None	replace
610	[BUG]  [BUGGY]  if(summary  >  0)  {  [CE]  cannot  find  symbol  summary  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(summary  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(summary  >  0)  {	  if(skid    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  summary	55	None	replace
611	[BUG]  [BUGGY]  if(available  >=  0)  {  while(skipped  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  while(skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  while(skipped  >=  0)  {	  if(skipped    >=    0)    {    while(skipped    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
612	[BUG]  [BUGGY]  if(skipped  >  0)  {  while(skipped  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  while(skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  while(skipped  >=  0)  {	  if(skipped    >=    0)    {    while(skipped    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
613	[BUG]  [BUGGY]  if(available  <  0)  {  while(skipped  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  while(skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  while(skipped  >=  0)  {	  if(skipped    >=    0)    {    while(skipped    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
614	[BUG]  [BUGGY]  if(available  >  0)  {  while(skipped  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  while(skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  while(skipped  >=  0)  {	  if(skipped    >=    0)    {    while(skipped    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
615	[BUG]  [BUGGY]  timeout  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	while(available  >=  0)  {	  if(skipped    >=    0)    {    while(skipped    >=    0)    {    	compilable	timeout	89	1	replace
616	[BUG]  [BUGGY]  while(available  >=  0)  {  timeout  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >=  0)  {	  if(skipped    >=    0)    {    while(skipped    >=    0)    {    	compilable	timeout	89	1	replace
617	[BUG]  [BUGGY]  if(available  ==  0)  {  while(skipped  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  ==  0)  {  while(skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  ==  0)  {  while(skipped  >=  0)  {	  if(skipped    >=    0)    {    while(skipped    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
618	[BUG]  [BUGGY]  int  n  =  input.read(skipped,  available);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  n  =  input.read(skipped,  available);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  n  =  input.read(skipped,  available);	  int    n    =    input.read(skipped);    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
619	[BUG]  [BUGGY]  int  n  =  input.read(numToSkip);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  n  =  input.read(numToSkip);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  n  =  input.read(numToSkip);	  int    n    =    input.read(skipped);    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
620	[BUG]  [BUGGY]  long  n  =  input.read(skipped);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  long  n  =  input.read(skipped);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	long  n  =  input.read(skipped);	  int    n    =    input.read(skipped);    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
621	[BUG]  [BUGGY]  int  n  =  input.read(buffersize,  skipped);  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  n  =  input.read(buffersize,  skipped);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  n  =  input.read(buffersize,  skipped);	  int    n    =    input.read(skipped);    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
622	[BUG]  [BUGGY]  timeout  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  &&  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  0  &&  skipped  >  0)  {	  if(skipped    >    0    ||    available    >    skipped)    {    	compilable	timeout	134	1	replace
623	[BUG]  [BUGGY]  if(available  >  0  &&  skipped  >  0)  {  timeout  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  &&  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  &&  skipped  >  0)  {	  if(skipped    >    0    ||    available    >    skipped)    {    	compilable	timeout	134	1	replace
624	[BUG]  [BUGGY]  if(available  >  0  ||  skipd  >  0)  {  [CE]  cannot  find  symbol  skipd  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  skipd  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  skipd  >  0)  {	  if(skipped    >    0    ||    available    >    skipped)    {    	non-compiled	[CE]  cannot  find  symbol  skipd	134	None	replace
625	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  If(available  >  0)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip)  {  If(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip)  {  If(available  >  0)  {	  if(skipped    >    0)    {    If(skipped    >    0)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
626	[BUG]  [BUGGY]  if(skip  >  0)  {  If(skipped  >  0)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  If(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  If(skipped  >  0)  {	  if(skipped    >    0)    {    If(skipped    >    0)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
627	[BUG]  [BUGGY]  if(available  <  numToSkip)  {  while(skipped  <  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip)  {  while(skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  numToSkip)  {  while(skipped  <  0)  {	  if(skipped    <    0)    {    while(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
628	[BUG]  [BUGGY]  if(skip  <  0)  {  while(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  0)  {  while(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  0)  {  while(available  <  0)  {	  if(skipped    <    0)    {    while(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
629	[BUG]  [BUGGY]  if(skipped  >  0)  {  while(skipped  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  while(skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  while(skipped  <  0)  {	  if(skipped    <    0)    {    while(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
630	[BUG]  [BUGGY]  if(available  <  numToSkip)  {  If(skipped  <  0)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip)  {  If(skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  numToSkip)  {  If(skipped  <  0)  {	  if(skipped    <    0)    {    If(skipped    <    0)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
631	[BUG]  [BUGGY]  if(available  <  0)  {  If(skipped  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  If(skipped  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  If(skipped  <  =  0)  {	  if(skipped    <    0)    {    If(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
632	[BUG]  [BUGGY]  If(available  <  0)  {  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  If(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	If(available  <  0)  {	  if(skipped    <    0)    {    If(skipped    <    0)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
633	[BUG]  [BUGGY]  timeout  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped!=  0)  {	  if(available!=    0)    {    	compilable	timeout	17	1	replace
634	[BUG]  [BUGGY]  if(skipped!=  0)  {  timeout  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped!=  0)  {	  if(available!=    0)    {    	compilable	timeout	17	1	replace
635	[BUG]  [BUGGY]  InputStream  available  =  input.readInput(skipped);  if  (available  <  0)  {  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  InputStream  available  =  input.readInput(skipped);  if  (available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	InputStream  available  =  input.readInput(skipped);  if  (available  <  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(skipped);    if    (available    >    0)    {    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	23	None	replace
636	[BUG]  [BUGGY]  InputStream  available  =  input.readInput(skipped);  if  (available!=  0)  {  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  InputStream  available  =  input.readInput(skipped);  if  (available!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	InputStream  available  =  input.readInput(skipped);  if  (available!=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(skipped);    if    (available    >    0)    {    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	23	None	replace
637	[BUG]  [BUGGY]  InputStream  available  =  input.readInput(skipped);  if  (available  >=  0)  {  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  InputStream  available  =  input.readInput(skipped);  if  (available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	InputStream  available  =  input.readInput(skipped);  if  (available  >=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(skipped);    if    (available    >    0)    {    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	23	None	replace
638	[BUG]  [BUGGY]  InputStream  available  =  input.readInput(skipped);  if  (available  >  0)  {  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  InputStream  available  =  input.readInput(skipped);  if  (available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	InputStream  available  =  input.readInput(skipped);  if  (available  >  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(skipped);    if    (available    >    0)    {    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	23	None	replace
639	[BUG]  [BUGGY]  InputStream  available  =  input.readInput(skipped);  if  (available  ==  0)  {  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  InputStream  available  =  input.readInput(skipped);  if  (available  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	InputStream  available  =  input.readInput(skipped);  if  (available  ==  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(skipped);    if    (available    >    0)    {    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	23	None	replace
640	[BUG]  [BUGGY]  if(skipped  >  available)  {  int  skipped  =  input.skip(available);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available)  {  int  skipped  =  input.skip(available);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    available)    {    int  skipped  =  input.skip(available);	  timeout    	non-compiled	[CE]  illegal  start  of  expression	56	None	add
641	[BUG]  [BUGGY]  if(skipped  >  available)  {  while(skipped  >  available)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available)  {  while(skipped  >  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    available)    {    while(skipped  >  available)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	56	None	add
642	[BUG]  [BUGGY]  if(skipped  >  available)  {  int  skipped  =  input.skipSize();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available)  {  int  skipped  =  input.skipSize();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    available)    {    int  skipped  =  input.skipSize();	  timeout    	non-compiled	[CE]  illegal  start  of  expression	56	None	add
643	[BUG]  [BUGGY]  if(skip  >  0  &&  skipped  <  available)  {  [CE]  cannot  find  symbol  skip  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0  &&  skipped  <  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0  &&  skipped  <  available)  {	  if(skipped    >    0    ||    skipped    <    available)    {    	non-compiled	[CE]  cannot  find  symbol  skip	128	None	replace
644	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skipped  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skipped  >>  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skipped  >>  0)  {	  if(skipped    >=    0)    {    if(skipped!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
645	[BUG]  [BUGGY]  if(available  >  0)  {  if(skipped!=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skipped!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skipped!=  0)  {	  if(skipped    >=    0)    {    if(skipped!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
646	[BUG]  [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput();  if(available  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput();  if(available  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  InputStream  available  =  input.readInput();  if(available  ==  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
647	[BUG]  [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput();  if(available  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput();  if(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  InputStream  available  =  input.readInput();  if(available  >=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput();    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
648	[BUG]  [BUGGY]  if(skip  >=  0)  {  while(available  >  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >=  0)  {  while(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >=  0)  {  while(available  >  0)  {	  if(available    >=    0)    {    while(available    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
649	[BUG]  [BUGGY]  if(available  >=  0)  {  while(available  >  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  while(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  while(available  >  0)  {	  if(available    >=    0)    {    while(available    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
650	[BUG]  [BUGGY]  if(skipped  <  available)  {  while(skipped  <  available)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available)  {  while(skipped  <  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    available)    {    while(skipped  <  available)  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
651	[BUG]  [BUGGY]  if(skipped  <  available)  {  when(skipped  <  available)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available)  {  when(skipped  <  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    available)    {    when(skipped  <  available)  {	  	non-compiled	[CE]  ';'  expected	98	None	add
652	[BUG]  [BUGGY]  if(skipped  <  available)  {  int  available  =  input.read(available);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available)  {  int  available  =  input.read(available);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    available)    {    int  available  =  input.read(available);	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
653	[BUG]  [BUGGY]  if(available  <  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
654	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
655	[BUG]  [BUGGY]  if(available  >  0  ||  accessible  >  numToSkip)  {  [CE]  cannot  find  symbol  accessible  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  accessible  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  accessible  >  numToSkip)  {	  if(skip    >    0    ||    available    >    numToSkip)    {    	non-compiled	[CE]  cannot  find  symbol  accessible	51	None	replace
656	[BUG]  [BUGGY]  if(skip  >  0  &&  input.isEnabled(SCRIPT_SIZE))  {  [CE]  cannot  find  symbol  skip  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0  &&  input.isEnabled(SCRIPT_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0  &&  input.isEnabled(SCRIPT_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SCRIPT_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  skip	125	None	replace
657	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  numToSkip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0  ||  numToSkip  >  0)  {	  if(skipped    <    =    0    ||    available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	13	3	replace
658	[BUG]  [BUGGY]  if(available  <  0  ||  numToSkip  >  0)  {  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  numToSkip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  numToSkip  >  0)  {	  if(skipped    <    =    0    ||    available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	13	3	replace
659	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  numToSkip  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0  ||  numToSkip  >  skipped)  {	  if(skipped    <    =    0    ||    available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	13	2	replace
660	[BUG]  [BUGGY]  if(available  <  0  ||  numToSkip  >  skipped)  {  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  numToSkip  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  numToSkip  >  skipped)  {	  if(skipped    <    =    0    ||    available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	13	2	replace
661	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip  ||  skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  numToSkip  ||  skipped  <  0)  {	  if(skipped    <    0    ||    available    <    numToSkip)    {    timeout    	compilable	timeout	8	1	replace
662	[BUG]  [BUGGY]  if(available  <  numToSkip  ||  skipped  <  0)  {  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip  ||  skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  numToSkip  ||  skipped  <  0)  {	  if(skipped    <    0    ||    available    <    numToSkip)    {    timeout    	compilable	timeout	8	1	replace
663	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [CE]  cannot  find  symbol  skip  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length();    }    	non-compiled	[CE]  cannot  find  symbol  skip	66	None	replace
664	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >=  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    timeout    	compilable	  [FE]  AssertionError  	119	3	replace
665	[BUG]  [BUGGY]  if(skipped  >=  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >=  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    timeout    	compilable	  [FE]  AssertionError  	119	3	replace
666	[BUG]  [BUGGY]  long  skipped  =  input.skip(skipped);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  long  skipped  =  input.skip(skipped);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	long  skipped  =  input.skip(skipped);	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    timeout    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
667	[BUG]  [BUGGY]  if(available  <  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
668	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
669	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skip  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skip  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skip  >=  0)  {	  if(skipped    >=    0)    {    if(skipped    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
670	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skip  >  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skip  >  0)  {	  if(skipped    >    0)    {    if(skip    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
671	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  >  skipped)  {  while(skipped  >  0  ||  available  >  skipped)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  >  skipped)  {  while(skipped  >  0  ||  available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    available    >    skipped)    {    while(skipped  >  0  ||  available  >  skipped)  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
672	[BUG]  [BUGGY]  if(available  <  0  ||  missing  >  numToSkip)  {  [CE]  cannot  find  symbol  missing  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  missing  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  missing  >  numToSkip)  {	  if(skipped    <    0    ||    available    >    numToSkip)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  missing	4	None	replace
673	[BUG]  [BUGGY]  if(available  >=  0)  {  int  available  =  input.read(skipped);  if(available  >  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  int  available  =  input.read(skipped);  if(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  int  available  =  input.read(skipped);  if(available  >  0)  {	  if    (available    >    0)    {    int    available    =    input.read(skipped);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
674	[BUG]  [BUGGY]  if(available  <  0)  {  int  available  =  input.read(skipped);  if(available  >  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  int  available  =  input.read(skipped);  if(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  int  available  =  input.read(skipped);  if(available  >  0)  {	  if    (available    >    0)    {    int    available    =    input.read(skipped);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
675	[BUG]  [BUGGY]  if(available  <  =  0)  {  int  available  =  input.read(skipped);  if(available  >  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0)  {  int  available  =  input.read(skipped);  if(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0)  {  int  available  =  input.read(skipped);  if(available  >  0)  {	  if    (available    >    0)    {    int    available    =    input.read(skipped);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
676	[BUG]  [BUGGY]  if(available  >=  0)  {  int  available  =  input.read(skipped);  if(available  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  int  available  =  input.read(skipped);  if(available  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  int  available  =  input.read(skipped);  if(available  ==  0)  {	  if    (available    >    0)    {    int    available    =    input.read(skipped);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
677	[BUG]  [BUGGY]  if(skipped  <  0  ||  available  >  numToSkip)  {  while(skipped  <  0  ||  available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  >  numToSkip)  {  while(skipped  <  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    available    >    numToSkip)    {    while(skipped  <  0  ||  available  >  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
678	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  >  -1)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0  ||  skipped  >  -1)  {	  if(available    <    0)    {    timeout    	compilable	  [FE]  AssertionError  	2	3	replace
679	[BUG]  [BUGGY]  if(available  <  0  ||  skipped  >  -1)  {  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  >  -1)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  skipped  >  -1)  {	  if(available    <    0)    {    timeout    	compilable	  [FE]  AssertionError  	2	3	replace
680	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  for(long  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  0)  {  for(long  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	compilable	  [FE]  AssertionError  	79	3	replace
681	[BUG]  [BUGGY]  if(available  >  0)  {  for(long  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [FE]  AssertionError  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  for(long  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  for(long  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	compilable	  [FE]  AssertionError  	79	3	replace
682	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  input.close();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	compilable	  [FE]  AssertionError  	79	3	replace
683	[BUG]  [BUGGY]  if(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  input.close();  }  [FE]  AssertionError  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  input.close();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	compilable	  [FE]  AssertionError  	79	3	replace
684	[BUG]  [BUGGY]  Integer  numToSkip  =  input.skip(available);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  Integer  numToSkip  =  input.skip(available);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	Integer  numToSkip  =  input.skip(available);	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
685	[BUG]  [BUGGY]  int  n  =  input.read(available,  skip);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  n  =  input.read(available,  skip);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  n  =  input.read(available,  skip);	  int    n    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
686	[BUG]  [BUGGY]  if(available  >  0)  {  if(skipped  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skipped  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skipped  ==  0)  {	  if(skipped    >=    0)    {    if(skipped    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
687	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skip  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skip  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skip  ==  0)  {	  if(skipped    >=    0)    {    if(skipped    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
688	[BUG]  [BUGGY]  if(available!=  0)  {  if(skipped  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available!=  0)  {  if(skipped  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available!=  0)  {  if(skipped  ==  0)  {	  if(skipped    >=    0)    {    if(skipped    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
689	[BUG]  [BUGGY]  if(available  ==  0)  {  if(skipped  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  ==  0)  {  if(skipped  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  ==  0)  {  if(skipped  ==  0)  {	  if(skipped    >=    0)    {    if(skipped    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
690	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  <  numToSkip)  {  while(skipped  >  0  ||  available  <  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  <  numToSkip)  {  while(skipped  >  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    available    <    numToSkip)    {    while(skipped  >  0  ||  available  <  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	129	None	add
691	[BUG]  [BUGGY]  if(skipped  >=  0)  {  If(available  >  0)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0)  {  If(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >=  0)  {  If(available  >  0)  {	  if(available    >=    0)    {    If(available    >=    0)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
692	[BUG]  [BUGGY]  if(skip  >=  0)  {  If(available  >  0)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >=  0)  {  If(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >=  0)  {  If(available  >  0)  {	  if(available    >=    0)    {    If(available    >=    0)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
693	[BUG]  [BUGGY]  if(available  >  0)  {  if(available  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(available  >=  0)  {	  if(available    >=    0)    {    if(available    [Delete]    0)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
694	[BUG]  [BUGGY]  if(available  >  0)  {  if(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(available  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(available  <  0)  {	  if(available    >=    0)    {    if(available    [Delete]    0)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
695	[BUG]  [BUGGY]  if(available  >  0)  {  int  numToSkip  =  input.read(skipped  +  skipped);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  int  numToSkip  =  input.read(skipped  +  skipped);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  int  numToSkip  =  input.read(skipped  +  skipped);	  if    (available    >    0)    {    int    numToSkip    =    input.read(skipped);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	113	None	replace
696	[BUG]  [BUGGY]  if(available  >  0)  {  int  numToSkip  =  input.read(skipped,  skipped);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  int  numToSkip  =  input.read(skipped,  skipped);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  int  numToSkip  =  input.read(skipped,  skipped);	  if    (available    >    0)    {    int    numToSkip    =    input.read(skipped);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	113	None	replace
697	[BUG]  [BUGGY]  timeout  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  &&  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  0  &&  available  >  numToSkip)  {	  if(skipped    >    0    ||    available    >    numToSkip)    {    timeout    	compilable	timeout	132	1	replace
698	[BUG]  [BUGGY]  if(skipped  >  0  &&  available  >  numToSkip)  {  timeout  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  &&  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  &&  available  >  numToSkip)  {	  if(skipped    >    0    ||    available    >    numToSkip)    {    timeout    	compilable	timeout	132	1	replace
699	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  &&  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  0  &&  available  >  numToSkip)  {	  if(skipped    >    0    ||    available    >    numToSkip)    {    timeout    	compilable	timeout	132	1	replace
700	[BUG]  [BUGGY]  if(available  >  0  &&  available  >  numToSkip)  {  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  &&  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  &&  available  >  numToSkip)  {	  if(skipped    >    0    ||    available    >    numToSkip)    {    timeout    	compilable	timeout	132	1	replace
701	[BUG]  [BUGGY]  if(available  >  0  ||  skipd  >  numToSkip)  {  [CE]  cannot  find  symbol  skipd  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  skipd  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  skipd  >  numToSkip)  {	  if(skipped    >    0    ||    available    >    numToSkip)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  skipd	132	None	replace
702	[BUG]  [BUGGY]  Integer  n  =  input.read(available);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  Integer  n  =  input.read(available);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	Integer  n  =  input.read(available);	  int    n    =    input.read(skipped);    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
703	[BUG]  [BUGGY]  int  n  =  input.read(skipped  +  skipped);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  n  =  input.read(skipped  +  skipped);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  n  =  input.read(skipped  +  skipped);	  int    n    =    input.read(skipped);    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
704	[BUG]  [BUGGY]  InputStream  available  =  input.getInputStream();  if(available!=  0)  {  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  InputStream  available  =  input.getInputStream();  if(available!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	InputStream  available  =  input.getInputStream();  if(available!=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.getInputStream();    if    (available    >    0)    {    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	22	None	replace
705	[BUG]  [BUGGY]  if(num  >  0)  {  [CE]  cannot  find  symbol  num  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(num  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(num  >  0)  {	  if(skunk    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  num	86	None	replace
706	[BUG]  [BUGGY]  if(available  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SKIPP_BUF_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
707	[BUG]  [BUGGY]  if(skipped  >  0  ||  input.isEnabled(SKIP_BUF_SIZE))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  input.isEnabled(SKIP_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  input.isEnabled(SKIP_BUF_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SKIPP_BUF_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
708	[BUG]  [BUGGY]  if(available  >  0)  {  if(skip  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skip  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skip  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(COPY_BUF_SIZE))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
709	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip)  {  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip)  {  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(COPY_BUF_SIZE))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
710	[BUG]  [BUGGY]  if(skip  >  0)  {  If  (available  ==  0)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  If  (available  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  If  (available  ==  0)  {	  if    (available    ==    0)    {    If    (available    ==    0)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
711	[BUG]  [BUGGY]  if(skipped  >  0)  {  If  (available  ==  0)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  If  (available  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  If  (available  ==  0)  {	  if    (available    ==    0)    {    If    (available    ==    0)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
712	[BUG]  [BUGGY]  if(skipped  >=  0)  {  If  (available  ==  0)  {  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0)  {  If  (available  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >=  0)  {  If  (available  ==  0)  {	  if    (available    ==    0)    {    If    (available    ==    0)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
713	[BUG]  [BUGGY]  timeout  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  numToSkip  ||  skipped  >  0)  {	  if(numToSkip    >    0)    {    	compilable	timeout	54	1	replace
714	[BUG]  [BUGGY]  if(available  >  numToSkip  ||  skipped  >  0)  {  timeout  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip  ||  skipped  >  0)  {	  if(numToSkip    >    0)    {    	compilable	timeout	54	1	replace
715	[BUG]  [BUGGY]  int  numToSkip  =  available;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  numToSkip  =  available;  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  numToSkip  =  available;	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    skipped;    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
716	[BUG]  [BUGGY]  if(available  >  0)  {  int  numToSkip  =  input.getSize();  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  int  numToSkip  =  input.getSize();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  int  numToSkip  =  input.getSize();  }	  if    (available    >    0)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
717	[BUG]  [BUGGY]  if(available  >  0)  {  int  numToSkip  =  input.getSize()  +  skipped;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  int  numToSkip  =  input.getSize()  +  skipped;  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  int  numToSkip  =  input.getSize()  +  skipped;	  if    (available    >    0)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	115	None	replace
718	[BUG]  [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [CE]  possible  loss  of  precision  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  possible  loss  of  precision	77	None	replace
719	[BUG]  [BUGGY]  int  numToSkip  =  available.size();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  numToSkip  =  available.size();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  numToSkip  =  available.size();	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
720	[BUG]  [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  0;  i++)  {  available  +=  input.getLength();  }  [CE]  possible  loss  of  precision  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  0;  i++)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  skipped)  {  for(int  i  =  available;  i  <  0;  i++)  {  available  +=  input.getLength();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  possible  loss  of  precision	77	None	replace
721	[BUG]  [BUGGY]  int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  i  =  0;  i  <  available;  i++)  {  input.close();  }	  if(skip    >    0)    {    for(int    i    =    0;    i    <    available;    i++)    {    input.close();    }    	non-compiled	[CE]  >  expected	117	None	replace
722	[BUG]  [BUGGY]  timeout  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available  *  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  available  *  numToSkip)  {	  if(skipped    >    available)    {    timeout    	compilable	timeout	57	1	replace
723	[BUG]  [BUGGY]  if(skipped  >  available  *  numToSkip)  {  timeout  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available  *  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  available  *  numToSkip)  {	  if(skipped    >    available)    {    timeout    	compilable	timeout	57	1	replace
724	[BUG]  [BUGGY]  if(skipped  <  =  0  &&  skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  =  0  &&  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0  &&  skipped  >  0)  {	  if(skipped    <    =    0    ||    skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
725	[BUG]  [BUGGY]  timeout  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  &&  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  0  &&  available  <  numToSkip)  {	  if(skipped    >    0    ||    available    <    numToSkip)    {    timeout    	compilable	timeout	130	1	replace
726	[BUG]  [BUGGY]  if(available  >  0  &&  available  <  numToSkip)  {  timeout  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  &&  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  &&  available  <  numToSkip)  {	  if(skipped    >    0    ||    available    <    numToSkip)    {    timeout    	compilable	timeout	130	1	replace
727	[BUG]  [BUGGY]  timeout  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  &&  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  0  &&  available  <  numToSkip)  {	  if(skipped    >    0    ||    available    <    numToSkip)    {    timeout    	compilable	timeout	130	1	replace
728	[BUG]  [BUGGY]  if(skipped  >  0  &&  available  <  numToSkip)  {  timeout  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  &&  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  &&  available  <  numToSkip)  {	  if(skipped    >    0    ||    available    <    numToSkip)    {    timeout    	compilable	timeout	130	1	replace
729	[BUG]  [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if  (available  >  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if  (available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if  (available  >  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(numToSkip);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
730	[BUG]  [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if(available!=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if(available!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if(available!=  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(numToSkip);    if    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
731	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
732	[BUG]  [BUGGY]  if(available  <  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
733	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
734	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  numToSkip  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0  ||  numToSkip  <  0)  {	  if(skipped    <    =    0    ||    available    <    numToSkip)    {    	compilable	timeout	112	1	replace
735	[BUG]  [BUGGY]  if(available  <  0  ||  numToSkip  <  0)  {  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  numToSkip  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  numToSkip  <  0)  {	  if(skipped    <    =    0    ||    available    <    numToSkip)    {    	compilable	timeout	112	1	replace
736	[BUG]  [BUGGY]  if(available  <  =  0  ||  numToSkip  <  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0  ||  numToSkip  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0  ||  numToSkip  <  0)  {	  if(skipped    <    =    0    ||    available    <    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
737	[BUG]  [BUGGY]  if(available  >=  0)  {  while(skipped  >>  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  while(skipped  >>  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  while(skipped  >>  0)  {	  if(skipped    >=    0)    {    while(skipped    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
738	[BUG]  [BUGGY]  if(available  >=  0)  {  while(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  while(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  while(skipped  >  0)  {	  if(skipped    >=    0)    {    while(skipped    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
739	[BUG]  [BUGGY]  if(skipped  <  0  ||  skipped  >  0)  {  if(skip  <  0  ||  skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  skipped  >  0)  {  if(skip  <  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    skipped    >    0)    {    if(skip  <  0  ||  skipped  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
740	[BUG]  [BUGGY]  if(skipped  <  0  ||  skipped  >  0)  {  if(skipped  <  0  ||  saved  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  skipped  >  0)  {  if(skipped  <  0  ||  saved  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    skipped    >    0)    {    if(skipped  <  0  ||  saved  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
741	[BUG]  [BUGGY]  if(skipped  <  0  ||  skipped  >  numToSkip)  {  if(skipped  <  0  ||  skip  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  skipped  >  numToSkip)  {  if(skipped  <  0  ||  skip  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    skipped    >    numToSkip)    {    if(skipped  <  0  ||  skip  >  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	109	None	add
742	[BUG]  [BUGGY]  if(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  skipped  +=  input.next();  }  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  skipped  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  skipped  +=  input.next();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.next();    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
743	[BUG]  [BUGGY]  if(available  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.next();    }    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
744	[BUG]  [BUGGY]  int  i  =  0;  ++i)  {  skipped  +=  input.next();  }  [CE]  ';'  expected  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  i  =  0;  ++i)  {  skipped  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  i  =  0;  ++i)  {  skipped  +=  input.next();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.next();    }    	non-compiled	[CE]  ';'  expected	120	None	replace
745	[BUG]  [BUGGY]  if(skipped  <  =  0  &&  skipped  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  =  0  &&  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0  &&  skipped  >  numToSkip)  {	  if(skipped    <    =    0    ||    skipped    >    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
746	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  0  ||  skipped  >  numToSkip)  {	  if(skipped    <    =    0    ||    skipped    >    numToSkip)    {    	compilable	timeout	111	1	replace
747	[BUG]  [BUGGY]  if(skipped  >  0  ||  skipped  >  numToSkip)  {  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  skipped  >  numToSkip)  {	  if(skipped    <    =    0    ||    skipped    >    numToSkip)    {    	compilable	timeout	111	1	replace
748	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skip  <  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skip  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skip  <  0)  {	  if(skipped    >=    0)    {    if(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
749	[BUG]  [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [CE]  possible  loss  of  precision  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length();    }    	non-compiled	[CE]  possible  loss  of  precision	65	None	replace
750	[BUG]  [BUGGY]  int  numToSkip  =  available.length();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  numToSkip  =  available.length();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  numToSkip  =  available.length();	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length();    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
751	[BUG]  [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [CE]  possible  loss  of  precision  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length;    }    	non-compiled	[CE]  possible  loss  of  precision	68	None	replace
752	[BUG]  [BUGGY]  if(available  <  =  0  &&  skipped  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0  &&  skipped  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0  &&  skipped  <  =  0)  {	  if(available    <    =    0    ||    skipped    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
753	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0  ||  skipped  <  0)  {	  if(available    <    =    0    ||    skipped    <    =    0)    {    	compilable	timeout	12	1	replace
754	[BUG]  [BUGGY]  if(available  <  0  ||  skipped  <  0)  {  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  skipped  <  0)  {	  if(available    <    =    0    ||    skipped    <    =    0)    {    	compilable	timeout	12	1	replace
755	[BUG]  [BUGGY]  timeout  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  &&  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  0  &&  skipped  >  numToSkip)  {	  if(skipped    <    0    ||    skipped    >    numToSkip)    {    timeout    	compilable	timeout	110	1	replace
756	[BUG]  [BUGGY]  if(skipped  <  0  &&  skipped  >  numToSkip)  {  timeout  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  &&  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  0  &&  skipped  >  numToSkip)  {	  if(skipped    <    0    ||    skipped    >    numToSkip)    {    timeout    	compilable	timeout	110	1	replace
757	[BUG]  [BUGGY]  if(skip  >  0)  {  if(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  if(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  if(skipped  >  0)  {	  if(skipped    >    0)    {    if(skipped    >    0)    <    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
758	[BUG]  [BUGGY]  if(skipped  >  0)  {  if(available  >  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  if(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  if(available  >  0)  {	  if(skipped    >    0)    {    if(skipped    >    0)    <    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
759	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped  -  1)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  skipped  -  1)  {	  if(available    >    skipped)    {    	compilable	  [FE]  AssertionError  	94	3	replace
760	[BUG]  [BUGGY]  if(available  >  skipped  -  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped  -  1)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  skipped  -  1)  {	  if(available    >    skipped)    {    	compilable	  [FE]  AssertionError  	94	3	replace
761	[BUG]  [BUGGY]  if(available  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
762	[BUG]  [BUGGY]  int  i  =  0;  ++i)  {  skipped  +=  input.getLength();  }  [CE]  ';'  expected  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  i  =  0;  ++i)  {  skipped  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  i  =  0;  ++i)  {  skipped  +=  input.getLength();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.getLength();    }    	non-compiled	[CE]  ';'  expected	121	None	replace
763	[BUG]  [BUGGY]  if(available  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  skipped  +=  input.getLength();  }  [CE]  cannot  find  symbol  length  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  skipped  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  for(int  i  =  0;  i  <  input.length;  ++i)  {  skipped  +=  input.getLength();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol  length	121	None	replace
764	[BUG]  [BUGGY]  if(skip  <  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [CE]  cannot  find  symbol  skip  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  0  ||  input.isEnabled(COPY_BUF_SIZE))  {	  if(skip    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  skip	97	None	replace
765	[BUG]  [BUGGY]  if(skip  <  0  ||  available  >  numToSkip.length)  {  [CE]  cannot  find  symbol  skip  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  0  ||  available  >  numToSkip.length)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  0  ||  available  >  numToSkip.length)  {	  if(skip    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  skip	97	None	replace
766	[BUG]  [BUGGY]  if(skip  <  0  ||  available  >  0)  {  [CE]  cannot  find  symbol  skip  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  0  ||  available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  0  ||  available  >  0)  {	  if(skip    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  skip	97	None	replace
767	[BUG]  [BUGGY]  if(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }  [CE]  possible  loss  of  precision  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }	  if(skip    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    input.close();    }    	non-compiled	[CE]  possible  loss  of  precision	122	None	replace
768	[BUG]  [BUGGY]  if(skip  >  0)  {  for(long  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }  [CE]  cannot  find  symbol  skip  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(long  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(long  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }	  if(skip    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    input.close();    }    	non-compiled	[CE]  cannot  find  symbol  skip	122	None	replace
769	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [CE]  cannot  find  symbol  skip  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length;    }    	non-compiled	[CE]  cannot  find  symbol  skip	70	None	replace
770	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  >  numToSkip)  {  while(skipped  >  0  ||  available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  >  numToSkip)  {  while(skipped  >  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    available    >    numToSkip)    {    while(skipped  >  0  ||  available  >  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	131	None	add
771	[BUG]  [BUGGY]  if(switch  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(switch  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(switch  >=  0)  {	  if(skip    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
772	[BUG]  [BUGGY]  if(skunk  >=  0)  {  [CE]  cannot  find  symbol  skunk  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skunk  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skunk  >=  0)  {	  if(skip    >=    0)    {    	non-compiled	[CE]  cannot  find  symbol  skunk	81	None	replace
773	[BUG]  [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }  [CE]  possible  loss  of  precision  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.next();    }    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
774	[BUG]  [BUGGY]  while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.next();    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
775	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [CE]  cannot  find  symbol  skip  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol  skip	78	None	replace
776	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getUpperBound();  }  [CE]  cannot  find  symbol  skip  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getUpperBound();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getUpperBound();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol  skip	78	None	replace
777	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  if(numToSkip  >  -1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0)  {  if(numToSkip  >  -1)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip    >    0)    {    if(numToSkip  >  -1)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
778	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  while(numToSkip  >  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0)  {  while(numToSkip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip    >    0)    {    while(numToSkip  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
779	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  int  numToSkip  =  input.getCount();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0)  {  int  numToSkip  =  input.getCount();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip    >    0)    {    int  numToSkip  =  input.getCount();	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
780	[BUG]  [BUGGY]  if(available  <  numToSkip)  {  if(skipped!=  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip)  {  if(skipped!=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  numToSkip)  {  if(skipped!=  0)  {	  if(skipped    <    0)    {    if(skipped!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
781	[BUG]  [BUGGY]  if(skip  >  numToSkip)  {  [CE]  cannot  find  symbol  skip  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  numToSkip)  {	  if(available    >    numToSkip)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  skip	59	None	replace
782	[BUG]  [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }  [CE]  possible  loss  of  precision  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  possible  loss  of  precision	80	None	replace
783	[BUG]  [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  0;  ++i)  {  available  +=  input.getLength();  }  [CE]  possible  loss  of  precision  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  0;  ++i)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  skipped)  {  for(int  i  =  available;  i  <  0;  ++i)  {  available  +=  input.getLength();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  possible  loss  of  precision	80	None	replace
784	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
785	[BUG]  [BUGGY]  if(available  <  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
786	[BUG]  [BUGGY]  if(available  >=  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  0)  {  if(skip  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
787	[BUG]  [BUGGY]  if(available  >  0)  {  for(int  i  =  available;  i  <  0;  i++)  {  skipped  +=  input.length();  }  [CE]  possible  loss  of  precision  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  for(int  i  =  available;  i  <  0;  i++)  {  skipped  +=  input.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  for(int  i  =  available;  i  <  0;  i++)  {  skipped  +=  input.length();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    skipped    +=    input.length();    }    	non-compiled	[CE]  possible  loss  of  precision	67	None	replace
788	[BUG]  [BUGGY]  if(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  }  [CE]  possible  loss  of  precision  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    skipped    +=    input.length();    }    	non-compiled	[CE]  possible  loss  of  precision	67	None	replace
789	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  0;  i++)  {  skipped  +=  input.length();  }  [CE]  possible  loss  of  precision  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  0;  i++)  {  skipped  +=  input.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  numToSkip)  {  for(int  i  =  available;  i  <  0;  i++)  {  skipped  +=  input.length();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    skipped    +=    input.length();    }    	non-compiled	[CE]  possible  loss  of  precision	67	None	replace
790	[BUG]  [BUGGY]  Integer  numToSkip  =  input.getAverageNumber();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  Integer  numToSkip  =  input.getAverageNumber();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	Integer  numToSkip  =  input.getAverageNumber();	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    skipped    +=    input.length();    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
791	[BUG]  [BUGGY]  if(available  <  =  skip)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  skip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  skip)  {	  if(skipped    <    available)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
792	[BUG]  [BUGGY]  if(switch  >  0  &&  available  >=  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(switch  >  0  &&  available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(switch  >  0  &&  available  >=  numToSkip)  {	  if(switch    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
793	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  0  ||  available  >  0)  {	  if(skipped    <    0    ||    skipped    >    0)    {    timeout    	compilable	  [FE]  AssertionError  	6	3	replace
794	[BUG]  [BUGGY]  if(skipped  <  0  ||  available  >  0)  {  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  0  ||  available  >  0)  {	  if(skipped    <    0    ||    skipped    >    0)    {    timeout    	compilable	  [FE]  AssertionError  	6	3	replace
795	[BUG]  [BUGGY]  if(available  >  0)  {  when(skip  >  0)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  when(skip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  when(skip  >  0)  {	  if(skipped    >    0)    {    when(skipped    >    0)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
796	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  when(available  >  0)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip)  {  when(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip)  {  when(available  >  0)  {	  if(skipped    >    0)    {    when(skipped    >    0)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
797	[BUG]  [BUGGY]  while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [CE]  possible  loss  of  precision  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  skipped)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	non-compiled	[CE]  possible  loss  of  precision	76	None	replace
798	[BUG]  [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  0;  i++)  {  input.close();  }  [CE]  possible  loss  of  precision  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  for(int  i  =  available;  i  <  0;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  skipped)  {  for(int  i  =  available;  i  <  0;  i++)  {  input.close();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	non-compiled	[CE]  possible  loss  of  precision	76	None	replace
799	[BUG]  [BUGGY]  timeout  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  &&  numToSkip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0  &&  numToSkip  >  0)  {	  if(skipped    <    =    0    &&    available    >    numToSkip)    {    	compilable	timeout	87	1	replace
800	[BUG]  [BUGGY]  if(available  <  0  &&  numToSkip  >  0)  {  timeout  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  &&  numToSkip  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  &&  numToSkip  >  0)  {	  if(skipped    <    =    0    &&    available    >    numToSkip)    {    	compilable	timeout	87	1	replace
801	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  &&  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0  &&  skipped  >  numToSkip)  {	  if(skipped    <    =    0    &&    available    >    numToSkip)    {    	compilable	timeout	87	1	replace
802	[BUG]  [BUGGY]  if(available  <  0  &&  skipped  >  numToSkip)  {  timeout  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  &&  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  &&  skipped  >  numToSkip)  {	  if(skipped    <    =    0    &&    available    >    numToSkip)    {    	compilable	timeout	87	1	replace
803	[BUG]  [BUGGY]  timeout  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  &&  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0  &&  available  >  numToSkip)  {	  if(skipped    <    =    0    &&    available    >    numToSkip)    {    	compilable	timeout	87	1	replace
804	[BUG]  [BUGGY]  if(available  <  0  &&  available  >  numToSkip)  {  timeout  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  &&  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  &&  available  >  numToSkip)  {	  if(skipped    <    =    0    &&    available    >    numToSkip)    {    	compilable	timeout	87	1	replace
805	[BUG]  [BUGGY]  if(available  >  0  ||  input.isEnabled(COPY_BUFFER_SIZE))  {  [CE]  cannot  find  symbol  COPY_BUFFER_SIZE  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0  ||  input.isEnabled(COPY_BUFFER_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0  ||  input.isEnabled(COPY_BUFFER_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SKIPP_BUFFER_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  COPY_BUFFER_SIZE	126	None	replace
806	[BUG]  [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipped  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipped  +  1);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	System.arraycopy(input,  numToSkip,  available,  skipped  +  1);	  System.arraycopy(input,    numToSkip,    available,    skipped);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
807	[BUG]  [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipped,  -1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipped,  -1);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	System.arraycopy(input,  numToSkip,  available,  skipped,  -1);	  System.arraycopy(input,    numToSkip,    available,    skipped);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
808	[BUG]  [BUGGY]  if(skipped  >=  0)  {  while(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0)  {  while(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >=  0)  {  while(skipped  >  0)  {	  if(skipped    >    0)    {    while(skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
809	[BUG]  [BUGGY]  if(skip  >  0)  {  while(available  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  while(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  while(available  >  0)  {	  if(skipped    >    0)    {    while(skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
810	[BUG]  [BUGGY]  if(available  >  0)  {  If(skipped  >=  0)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  If(skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  If(skipped  >=  0)  {	  if(skipped    >=    0)    {    If(skipped    >=    0)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
811	[BUG]  [BUGGY]  if(available  >=  numToSkip)  {  If(available  >=  0)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >=  numToSkip)  {  If(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >=  numToSkip)  {  If(available  >=  0)  {	  if(skipped    >=    0)    {    If(skipped    >=    0)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
812	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  int  numToSkip  =  input.getCount();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip)  {  int  numToSkip  =  input.getCount();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >    numToSkip)    {    int  numToSkip  =  input.getCount();	  timeout    	non-compiled	[CE]  illegal  start  of  expression	58	None	add
813	[BUG]  [BUGGY]  if(available  >  0)  {  if(skiped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skiped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skiped  >  0)  {	  if(skipped    >    0)    {    if(skiipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
814	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  if(skiipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip)  {  if(skiipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip)  {  if(skiipped  >  0)  {	  if(skipped    >    0)    {    if(skiipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
815	[BUG]  [BUGGY]  if(available  >  0)  {  if(skidded  >  0)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  0)  {  if(skidded  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  if(skidded  >  0)  {	  if(skipped    >    0)    {    if(skiipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
816	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  numToSkip  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0  ||  numToSkip  >=  0)  {	  if(skipped    <    =    0    ||    available    >=    numToSkip)    {    	compilable	  [FE]  AssertionError  	14	3	replace
817	[BUG]  [BUGGY]  if(available  <  0  ||  numToSkip  >=  0)  {  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  numToSkip  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  numToSkip  >=  0)  {	  if(skipped    <    =    0    ||    available    >=    numToSkip)    {    	compilable	  [FE]  AssertionError  	14	3	replace
818	[BUG]  [BUGGY]  if(available  <  =  0  ||  numToSkip  >=  available)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0  ||  numToSkip  >=  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0  ||  numToSkip  >=  available)  {	  if(skipped    <    =    0    ||    available    >=    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
819	[BUG]  [BUGGY]  if(available  <  =  0  ||  available  >>  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  =  0  ||  available  >>  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0  ||  available  >>  numToSkip)  {	  if(skipped    <    =    0    ||    available    >=    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
820	[BUG]  [BUGGY]  if(skip  >  0)  {  for(skipped  >  0)  {  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(skipped  >  0)  {	  if(skipped    >    0)    {    for(skipped    >    0)    {    	non-compiled	[CE]  not  a  statement	73	None	replace
821	[BUG]  [BUGGY]  if(available  >  skipped)  {  InputStream  available  =  input.readInput();  if(available  >  skipped)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  InputStream  available  =  input.readInput();  if(available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >    skipped)    {    InputStream  available  =  input.readInput();  if(available  >  skipped)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
822	[BUG]  [BUGGY]  if(available  >  skipped)  {  long  available  =  input.skip(skipped);  if(available  >  skipped)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  long  available  =  input.skip(skipped);  if(available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >    skipped)    {    long  available  =  input.skip(skipped);  if(available  >  skipped)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
823	[BUG]  [BUGGY]  if(available  >  skipped)  {  int  available  =  input.read(available);  if(available  >  skipped)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  int  available  =  input.read(available);  if(available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >    skipped)    {    int  available  =  input.read(available);  if(available  >  skipped)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
824	[BUG]  [BUGGY]  if(available  >  skipped)  {  InputStream  available  =  input.readLine();  if(available  >  skipped)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  InputStream  available  =  input.readLine();  if(available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >    skipped)    {    InputStream  available  =  input.readLine();  if(available  >  skipped)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
825	[BUG]  [BUGGY]  timeout  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  available  ||  skipped  >  numToSkip)  {	  if(skipped    >    available)    {    timeout    	compilable	timeout	57	1	replace
826	[BUG]  [BUGGY]  if(skipped  >  available  ||  skipped  >  numToSkip)  {  timeout  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  available  ||  skipped  >  numToSkip)  {	  if(skipped    >    available)    {    timeout    	compilable	timeout	57	1	replace
827	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available  ||  skipped  >  -1)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  available  ||  skipped  >  -1)  {	  if(skipped    >    available)    {    timeout    	compilable	  [FE]  AssertionError  	57	3	replace
828	[BUG]  [BUGGY]  if(skipped  >  available  ||  skipped  >  -1)  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available  ||  skipped  >  -1)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  available  ||  skipped  >  -1)  {	  if(skipped    >    available)    {    timeout    	compilable	  [FE]  AssertionError  	57	3	replace
829	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  >  skipped  -  1)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  0  ||  available  >  skipped  -  1)  {	  if(skipped    >    0    ||    available    >    skipped)    {    	compilable	  [FE]  AssertionError  	134	3	replace
830	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  >  skipped  -  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  >  skipped  -  1)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  available  >  skipped  -  1)  {	  if(skipped    >    0    ||    available    >    skipped)    {    	compilable	  [FE]  AssertionError  	134	3	replace
831	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  <  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  0  ||  available  <  skipped)  {	  if(skipped    >    0    ||    available    >    skipped)    {    	compilable	timeout	134	1	replace
832	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  <  skipped)  {  timeout  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  <  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  available  <  skipped)  {	  if(skipped    >    0    ||    available    >    skipped)    {    	compilable	timeout	134	1	replace
833	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  <  =  skipped)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  <  =  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  available  <  =  skipped)  {	  if(skipped    >    0    ||    available    >    skipped)    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
834	[BUG]  [BUGGY]  if(skip  >  0  ||  available  >  skipped)  {  [CE]  cannot  find  symbol  skip  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0  ||  available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0  ||  available  >  skipped)  {	  if(skipped    >    0    ||    available    >    skipped)    {    	non-compiled	[CE]  cannot  find  symbol  skip	134	None	replace
835	[BUG]  [BUGGY]  if(available  >  skipped)  {  if(available  >  skipd)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  if(available  >  skipd)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >    skipped)    {    if(available  >  skipd)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
836	[BUG]  [BUGGY]  if(available  >  skipped)  {  while(available  >  skipped)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  while(available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >    skipped)    {    while(available  >  skipped)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
837	[BUG]  [BUGGY]  if(available  >  skipped)  {  if(available  >  skipped)  {  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  if(available  >  skipped)  {  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >    skipped)    {    if(available  >  skipped)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
838	[BUG]  [BUGGY]  if(skip  <  0  ||  skipped  >  numToSkip)  {  [CE]  cannot  find  symbol  skip  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  0  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  0  ||  skipped  >  numToSkip)  {	  if(skipped    <    =    0    ||    skipped    >    numToSkip)    {    	non-compiled	[CE]  cannot  find  symbol  skip	111	None	replace
839	[BUG]  [BUGGY]  if(switched  >=  0)  {  [CE]  cannot  find  symbol  switched  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(switched  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(switched  >=  0)  {	  if(skip    >=    0)    {    	non-compiled	[CE]  cannot  find  symbol  switched	81	None	replace
840	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0  ||  available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >=  0  ||  available  >=  numToSkip)  {	  if(skipped    <    =    0    ||    available    >=    numToSkip)    {    	compilable	  [FE]  AssertionError  	14	3	replace
841	[BUG]  [BUGGY]  if(skipped  >=  0  ||  available  >=  numToSkip)  {  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0  ||  available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >=  0  ||  available  >=  numToSkip)  {	  if(skipped    <    =    0    ||    available    >=    numToSkip)    {    	compilable	  [FE]  AssertionError  	14	3	replace
842	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip  ||  skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  numToSkip  ||  skipped  >=  0)  {	  if(skipped    <    =    0    ||    available    >=    numToSkip)    {    	compilable	  [FE]  AssertionError  	14	3	replace
843	[BUG]  [BUGGY]  if(available  <  numToSkip  ||  skipped  >=  0)  {  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  numToSkip  ||  skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  numToSkip  ||  skipped  >=  0)  {	  if(skipped    <    =    0    ||    available    >=    numToSkip)    {    	compilable	  [FE]  AssertionError  	14	3	replace
844	[BUG]  [BUGGY]  if(skip  <  0  ||  skipped  >  0)  {  [CE]  cannot  find  symbol  skip  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  0  ||  skipped  >  0)  {	  if(skipped    <    0    ||    skipped    >    0)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  skip	6	None	replace
845	[BUG]  [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [CE]  possible  loss  of  precision  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length;    }    	non-compiled	[CE]  possible  loss  of  precision	68	None	replace
846	[BUG]  [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [CE]  cannot  find  symbol  length  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length;    }    	non-compiled	[CE]  cannot  find  symbol  length	68	None	replace
847	[BUG]  [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [CE]  possible  loss  of  precision  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length;    }    	non-compiled	[CE]  possible  loss  of  precision	68	None	replace
848	[BUG]  [BUGGY]  if(available  <  0)  {  if(available  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0)  {  if(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    <    0)    {    if(available  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
849	[BUG]  [BUGGY]  timeout  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0  &&  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >=  0  &&  available  >  numToSkip)  {	  if(skipped    >>    0)    {    	compilable	timeout	116	1	replace
850	[BUG]  [BUGGY]  if(skipped  >=  0  &&  available  >  numToSkip)  {  timeout  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0  &&  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >=  0  &&  available  >  numToSkip)  {	  if(skipped    >>    0)    {    	compilable	timeout	116	1	replace
851	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0  &&  available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >=  0  &&  available  >  0)  {	  if(skipped    >>    0)    {    	compilable	  [FE]  AssertionError  	116	3	replace
852	[BUG]  [BUGGY]  if(skipped  >=  0  &&  available  >  0)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  0  &&  available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >=  0  &&  available  >  0)  {	  if(skipped    >>    0)    {    	compilable	  [FE]  AssertionError  	116	3	replace
853	[BUG]  [BUGGY]  int  n  =  input.read(buffersize);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  n  =  input.read(buffersize);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  n  =  input.read(buffersize);	  int    n    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
854	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available  ||  skipped  >  -1)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  available  ||  skipped  >  -1)  {	  if(skipped    <    available)    {    	compilable	  [FE]  AssertionError  	99	3	replace
855	[BUG]  [BUGGY]  if(skipped  <  available  ||  skipped  >  -1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available  ||  skipped  >  -1)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  available  ||  skipped  >  -1)  {	  if(skipped    <    available)    {    	compilable	  [FE]  AssertionError  	99	3	replace
856	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  available  ||  skipped  >  numToSkip)  {	  if(skipped    <    available)    {    	compilable	  [FE]  AssertionError  	99	2	replace
857	[BUG]  [BUGGY]  if(skipped  <  available  ||  skipped  >  numToSkip)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available  ||  skipped  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  available  ||  skipped  >  numToSkip)  {	  if(skipped    <    available)    {    	compilable	  [FE]  AssertionError  	99	2	replace
858	[BUG]  [BUGGY]  if(skipped  <  =  0)  {  If(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  =  0)  {  If(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0)  {  If(skipped  >  0)  {	  if(skipped    >    0)    {    If(skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
859	[BUG]  [BUGGY]  if(skipped  <  available)  {  If(skipped  >  0)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available)  {  If(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  available)  {  If(skipped  >  0)  {	  if(skipped    >    0)    {    If(skipped    >    0)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
860	[BUG]  [BUGGY]  if(skipped  <  =  0  ||  available  >  skipped)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  =  0  ||  available  >  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0  ||  available  >  skipped)  {	  if(skipped    <    =    0    ||    available    >    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
861	[BUG]  [BUGGY]  if(skipped  >  available)  {  if(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available)  {  if(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  available)  {  if(skipped  >  0)  {	  if(skipped    >    0)    {    if(skipped    >    0)    <    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
862	[BUG]  [BUGGY]  if(skipped  <  =  0)  {  if(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  =  0)  {  if(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0)  {  if(skipped  >  0)  {	  if(skipped    >    0)    {    if(skipped    >    0)    <    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
863	[BUG]  [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [CE]  possible  loss  of  precision  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length();    }    	non-compiled	[CE]  possible  loss  of  precision	65	None	replace
864	[BUG]  [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length();    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
865	[BUG]  [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped.length();  }  [CE]  possible  loss  of  precision  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped.length();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length();    }    	non-compiled	[CE]  possible  loss  of  precision	65	None	replace
866	[BUG]  [BUGGY]  if(switched  >  0)  {  [CE]  cannot  find  symbol  switched  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(switched  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(switched  >  0)  {	  if(skid    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  switched	55	None	replace
867	[BUG]  [BUGGY]  if(scoped  >  0)  {  [CE]  cannot  find  symbol  scoped  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(scoped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(scoped  >  0)  {	  if(skid    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  scoped	55	None	replace
868	[BUG]  [BUGGY]  if(skip  <  numToSkip)  {  [CE]  cannot  find  symbol  skip  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  numToSkip)  {	  if(available    <    numToSkip)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  skip	96	None	replace
869	[BUG]  [BUGGY]  if(skipped  <  0  ||  available  <  numToSkip)  {  if(skipped  >  0  ||  available  <  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  <  numToSkip)  {  if(skipped  >  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    available    <    numToSkip)    {    if(skipped  >  0  ||  available  <  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	7	None	add
870	[BUG]  [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipped,  -skipped);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipped,  -skipped);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	System.arraycopy(input,  numToSkip,  available,  skipped,  -skipped);	  System.arraycopy(input,    numToSkip,    available,    skipped);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
871	[BUG]  [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipd,  0);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipd,  0);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	System.arraycopy(input,  numToSkip,  available,  skipd,  0);	  System.arraycopy(input,    numToSkip,    available,    skipped);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
872	[BUG]  [BUGGY]  if(skipped  <  available)  {  when(skipped  >  0)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available)  {  when(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  available)  {  when(skipped  >  0)  {	  if(skipped    >    0)    {    when(skipped    >    0)    {    	non-compiled	[CE]  ';'  expected	72	None	replace
873	[BUG]  [BUGGY]  if(skipped  <  =  0)  {  when(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  =  0)  {  when(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0)  {  when(skipped  >  0)  {	  if(skipped    >    0)    {    when(skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
874	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }  [CE]  cannot  find  symbol  skip  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.next();    }    	non-compiled	[CE]  cannot  find  symbol  skip	120	None	replace
875	[BUG]  [BUGGY]  while(skip  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }  [CE]  cannot  find  symbol  skip  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(skip  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(skip  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.next();    }    	non-compiled	[CE]  cannot  find  symbol  skip	120	None	replace
876	[BUG]  [BUGGY]  int  n  =  input.read(skipped,  skipped);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  n  =  input.read(skipped,  skipped);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  n  =  input.read(skipped,  skipped);	  int    n    =    input.read(skipped);    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
877	[BUG]  [BUGGY]  int  n  =  input.read(buffer,  skipped);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  int  n  =  input.read(buffer,  skipped);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  n  =  input.read(buffer,  skipped);	  int    n    =    input.read(skipped);    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
878	[BUG]  [BUGGY]  if(skip  >  0  ||  input.isEnabled(SKIP_BUFFER_SIZE))  {  [CE]  cannot  find  symbol  skip  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0  ||  input.isEnabled(SKIP_BUFFER_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0  ||  input.isEnabled(SKIP_BUFFER_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SKIPP_BUFFER_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  skip	126	None	replace
879	[BUG]  [BUGGY]  if(skip  >  0  ||  input.isEnabled(SPY_BUFFER_SIZE))  {  [CE]  cannot  find  symbol  skip  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0  ||  input.isEnabled(SPY_BUFFER_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0  ||  input.isEnabled(SPY_BUFFER_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SKIPP_BUFFER_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  skip	126	None	replace
880	[BUG]  [BUGGY]  if(skipped  <  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  0  ||  input.isEnabled(COPY_BUF_SIZE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(COPY_BUF_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
881	[BUG]  [BUGGY]  if(skipped  <  =  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  =  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0  ||  input.isEnabled(COPY_BUF_SIZE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(COPY_BUF_SIZE))    {    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
882	[BUG]  [BUGGY]  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE  +  skipped))  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE  +  skipped))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE  +  skipped))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(COPY_BUF_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
883	[BUG]  [BUGGY]  if(skipped  <  available)  {  int  skipped  =  input.skip(available);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available)  {  int  skipped  =  input.skip(available);  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    available)    {    int  skipped  =  input.skip(available);	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
884	[BUG]  [BUGGY]  if(skipped  <  available)  {  int  skipped  =  input.getSize();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available)  {  int  skipped  =  input.getSize();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    available)    {    int  skipped  =  input.getSize();	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
885	[BUG]  [BUGGY]  if(skipped  <  =  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  =  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
886	[BUG]  [BUGGY]  if(available  >  numToSkip  ||  skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  cannot  find  symbol  Feature  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip  ||  skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip  ||  skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	104	None	replace
887	[BUG]  [BUGGY]  if(skipped  >  0  ||  input.canEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  cannot  find  symbol  Feature  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  input.canEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  input.canEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	104	None	replace
888	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  if(numToSkip  >  0  ||  skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(numToSkip  >  0)  {  if(numToSkip  >  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip    >    0)    {    if(numToSkip  >  0  ||  skipped  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
889	[BUG]  [BUGGY]  if(skip  >  0)  {  If(skipped  >=  0)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  If(skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  If(skipped  >=  0)  {	  if(available    >=    0)    {    If(available    >=    0)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
890	[BUG]  [BUGGY]  if(skip  >  0)  {  If(available  >=  0)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  If(available  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  If(available  >=  0)  {	  if(available    >=    0)    {    If(available    >=    0)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
891	[BUG]  [BUGGY]  if(skipped  >  0)  {  If(skipped  >=  0)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  If(skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  If(skipped  >=  0)  {	  if(available    >=    0)    {    If(available    >=    0)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
892	[BUG]  [BUGGY]  if(switch  >  0  ||  available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(switch  >  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(switch  >  0  ||  available  >  numToSkip)  {	  if(skip    >    0    ||    available    >    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
893	[BUG]  [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [CE]  possible  loss  of  precision  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  possible  loss  of  precision	77	None	replace
894	[BUG]  [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
895	[BUG]  [BUGGY]  long  numToSkip  =  input.getLength();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  long  numToSkip  =  input.getLength();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	long  numToSkip  =  input.getLength();	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
896	[BUG]  [BUGGY]  while(available  >  skipped)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  skipped)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  skipped)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
897	[BUG]  [BUGGY]  long  available  =  input.getLength();  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  long  available  =  input.getLength();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	long  available  =  input.getLength();	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
898	[BUG]  [BUGGY]  if(skipped  <  =  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  =  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
899	[BUG]  [BUGGY]  if(available  >  numToSkip  ||  skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  cannot  find  symbol  Feature  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip  ||  skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip  ||  skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	107	None	replace
900	[BUG]  [BUGGY]  if(skipped  >  0  ||  input.canEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  cannot  find  symbol  Feature  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  input.canEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  input.canEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	107	None	replace
901	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  available  ||  available  <  numToSkip)  {	  if(skipped    <    0    ||    available    <    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	8	2	replace
902	[BUG]  [BUGGY]  if(skipped  <  available  ||  available  <  numToSkip)  {  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  available  ||  available  <  numToSkip)  {	  if(skipped    <    0    ||    available    <    numToSkip)    {    timeout    	compilable	  [FE]  AssertionError  	8	2	replace
903	[BUG]  [BUGGY]  timeout  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	while(skipped  >  0)  {	  if(skipped    >    0)    {    while(skipped    >    0)    {    	compilable	timeout	27	1	replace
904	[BUG]  [BUGGY]  while(skipped  >  0)  {  timeout  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(skipped  >  0)  {	  if(skipped    >    0)    {    while(skipped    >    0)    {    	compilable	timeout	27	1	replace
905	[BUG]  [BUGGY]  if(skipped  <  =  0)  {  while(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  =  0)  {  while(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0)  {  while(skipped  >  0)  {	  if(skipped    >    0)    {    while(skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
906	[BUG]  [BUGGY]  if(skipped  <  =  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  =  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
907	[BUG]  [BUGGY]  if(skipped  >  0  ||  input.canEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  input.canEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  input.canEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	105	None	replace
908	[BUG]  [BUGGY]  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	105	None	replace
909	[BUG]  [BUGGY]  if(skip  >  0  ||  input.isEnabled(SPY_BUF_SIZE))  {  [CE]  cannot  find  symbol  skip  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0  ||  input.isEnabled(SPY_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0  ||  input.isEnabled(SPY_BUF_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SCRIPT_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  skip	125	None	replace
910	[BUG]  [BUGGY]  if(skip  >  0  ||  input.isEnabled(SKIP_BUF_SIZE))  {  [CE]  cannot  find  symbol  skip  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0  ||  input.isEnabled(SKIP_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0  ||  input.isEnabled(SKIP_BUF_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SCRIPT_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  skip	125	None	replace
911	[BUG]  [BUGGY]  if(switch  >  0  ||  input.isEnabled(SCRIPT_SIZE))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(switch  >  0  ||  input.isEnabled(SCRIPT_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(switch  >  0  ||  input.isEnabled(SCRIPT_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SCRIPT_SIZE))    {    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
912	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  >  numToSkip)  {  if(skip  >  0  ||  available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  >  numToSkip)  {  if(skip  >  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    available    >    numToSkip)    {    if(skip  >  0  ||  available  >  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	131	None	add
913	[BUG]  [BUGGY]  if(skip  >  0  ||  available  <  =  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0  ||  available  <  =  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0  ||  available  <  =  numToSkip)  {	  if(skip    >    0    ||    available    <    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
914	[BUG]  [BUGGY]  if(skip  >  0  ||  available  >=  numToSkip)  {  [CE]  cannot  find  symbol  skip  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0  ||  available  >=  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0  ||  available  >=  numToSkip)  {	  if(skip    >    0    ||    available    <    numToSkip)    {    	non-compiled	[CE]  cannot  find  symbol  skip	52	None	replace
915	[BUG]  [BUGGY]  if(skip  <  0  ||  available  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  0  ||  available  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  0  ||  available  <  =  0)  {	  if(available    <    =    0    ||    skipped    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
916	[BUG]  [BUGGY]  if(switch  <  =  0  ||  skipped  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(switch  <  =  0  ||  skipped  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(switch  <  =  0  ||  skipped  <  =  0)  {	  if(available    <    =    0    ||    skipped    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
917	[BUG]  [BUGGY]  if(skip  <  =  0  ||  available  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  =  0  ||  available  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  =  0  ||  available  <  =  0)  {	  if(available    <    =    0    ||    skipped    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
918	[BUG]  [BUGGY]  if(skip  <  0  &&  available  >  numToSkip)  {  [CE]  cannot  find  symbol  skip  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  0  &&  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  0  &&  available  >  numToSkip)  {	  if(skipped    <    =    0    &&    available    >    numToSkip)    {    	non-compiled	[CE]  cannot  find  symbol  skip	87	None	replace
919	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [CE]  cannot  find  symbol  skip  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length;    }    	non-compiled	[CE]  cannot  find  symbol  skip	70	None	replace
920	[BUG]  [BUGGY]  timeout  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(skipped  >  0)  {  available  +=  numToSkip;  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	while(skipped  >  0)  {  available  +=  numToSkip;	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length;    }    	compilable	timeout	70	1	replace
921	[BUG]  [BUGGY]  while(skipped  >  0)  {  available  +=  numToSkip;  timeout  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(skipped  >  0)  {  available  +=  numToSkip;  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(skipped  >  0)  {  available  +=  numToSkip;	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length;    }    	compilable	timeout	70	1	replace
922	[BUG]  [BUGGY]  InputStream  available  =  input.readInput(skip);  if  (available  >  0)  {  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  InputStream  available  =  input.readInput(skip);  if  (available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	InputStream  available  =  input.readInput(skip);  if  (available  >  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(numToSkip);    if    (available    >    0)    {    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	20	None	replace
923	[BUG]  [BUGGY]  if(skipped  <  =  0)  {  If  (available  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  =  0)  {  If  (available  ==  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0)  {  If  (available  ==  0)  {	  if    (available    ==    0)    {    If    (available    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
924	[BUG]  [BUGGY]  if(skipped  <  =  0  ||  available  >  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  =  0  ||  available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0  ||  available  >  0)  {	  if(skipped    <    =    0    ||    skipped    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
925	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  input.close();  }  [CE]  cannot  find  symbol  skip  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  input.close();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	non-compiled	[CE]  cannot  find  symbol  skip	79	None	replace
926	[BUG]  [BUGGY]  while(available  >  0)  {  for(int  i  =  skipped;  i  <  numToSkip;  i++)  {  input.close();  }  [CE]  possible  loss  of  precision  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  skipped;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(int  i  =  skipped;  i  <  numToSkip;  i++)  {  input.close();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	non-compiled	[CE]  possible  loss  of  precision	79	None	replace
927	[BUG]  [BUGGY]  while(available  >  0)  {  for(int  i  =  available;  i  <  skipped;  i++)  {  input.close();  }  [CE]  possible  loss  of  precision  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  for(int  i  =  available;  i  <  skipped;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  for(int  i  =  available;  i  <  skipped;  i++)  {  input.close();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	non-compiled	[CE]  possible  loss  of  precision	79	None	replace
928	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  skipped.length();  }  [CE]  cannot  find  symbol  skip  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  skipped.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  skipped.length();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.length();    }    	non-compiled	[CE]  cannot  find  symbol  skip	66	None	replace
929	[BUG]  [BUGGY]  timeout  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  available  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >=  available  ||  skipped  >  0)  {	  if(skipped    >=    available)    {    timeout    	compilable	timeout	101	1	replace
930	[BUG]  [BUGGY]  if(skipped  >=  available  ||  skipped  >  0)  {  timeout  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  available  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >=  available  ||  skipped  >  0)  {	  if(skipped    >=    available)    {    timeout    	compilable	timeout	101	1	replace
931	[BUG]  [BUGGY]  if(skip  >  available)  {  [CE]  cannot  find  symbol  skip  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  available)  {	  if(skipped    >=    available)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  skip	101	None	replace
932	[BUG]  [BUGGY]  if(available  >  skipped  &&  available  <  =  skipped)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped  &&  available  <  =  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  skipped  &&  available  <  =  skipped)  {	  if(available    >    skipped)    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
933	[BUG]  [BUGGY]  if(switch  >  available)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(switch  >  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(switch  >  available)  {	  if(available    >    skipped)    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
934	[BUG]  [BUGGY]  if(available  >  skipped  &&  available  <  =  skipped.length())  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped  &&  available  <  =  skipped.length())  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  skipped  &&  available  <  =  skipped.length())  {	  if(available    >    skipped)    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
935	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  input.close();  }  [CE]  cannot  find  symbol  skip  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  input.close();  }	  if(skip    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    input.close();    }    	non-compiled	[CE]  cannot  find  symbol  skip	122	None	replace
936	[BUG]  [BUGGY]  while(skipped  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }  [CE]  possible  loss  of  precision  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(skipped  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(skipped  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }	  if(skip    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    input.close();    }    	non-compiled	[CE]  possible  loss  of  precision	122	None	replace
937	[BUG]  [BUGGY]  while(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }  [CE]  cannot  find  symbol  skip  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }	  if(skip    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    input.close();    }    	non-compiled	[CE]  cannot  find  symbol  skip	122	None	replace
938	[BUG]  [BUGGY]  if(switch  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(switch  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(switch  <  =  0)  {	  if(available    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
939	[BUG]  [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }  [CE]  possible  loss  of  precision  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  possible  loss  of  precision	80	None	replace
940	[BUG]  [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }  [CE]  cannot  find  symbol  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
941	[BUG]  [BUGGY]  while(available  >  skipped)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }  [CE]  cannot  find  symbol  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  skipped)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  skipped)  {  for(int  i  =  0;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    ++i)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
942	[BUG]  [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }  [CE]  possible  loss  of  precision  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.next();    }    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
943	[BUG]  [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }  [CE]  cannot  find  symbol  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.next();    }    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
944	[BUG]  [BUGGY]  while(available  >  skipped)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }  [CE]  cannot  find  symbol  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  skipped)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  skipped)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.next();    }    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
945	[BUG]  [BUGGY]  if(switch  >  0  &&  available  <  =  skipped)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(switch  >  0  &&  available  <  =  skipped)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(switch  >  0  &&  available  <  =  skipped)  {	  if(switch    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
946	[BUG]  [BUGGY]  if(skipped  <  available)  {  If(skipped  <  0)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available)  {  If(skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  available)  {  If(skipped  <  0)  {	  if(skipped    <    0)    {    If(skipped    <    0)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
947	[BUG]  [BUGGY]  if(skip  <  0)  {  If(skipped  <  0)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  0)  {  If(skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  0)  {  If(skipped  <  0)  {	  if(skipped    <    0)    {    If(skipped    <    0)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
948	[BUG]  [BUGGY]  if(skipped  >  0)  {  If(skipped  <  0)  {  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0)  {  If(skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  If(skipped  <  0)  {	  if(skipped    <    0)    {    If(skipped    <    0)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
949	[BUG]  [BUGGY]  if(skipped  <  available)  {  If(skipped  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available)  {  If(skipped  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  available)  {  If(skipped  <  =  0)  {	  if(skipped    <    0)    {    If(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
950	[BUG]  [BUGGY]  if(skipped  <  =  0)  {  If(skipped  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  =  0)  {  If(skipped  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0)  {  If(skipped  <  =  0)  {	  if(skipped    <    0)    {    If(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
951	[BUG]  [BUGGY]  if(skip  >  0)  {  If(skipped  <  0)  {  [CE]  ';'  expected  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  If(skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  If(skipped  <  0)  {	  if(skipped    <    0)    {    If(skipped    <    0)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
952	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  }  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  numToSkip)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    skipped    +=    input.length();    }    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
953	[BUG]  [BUGGY]  timeout  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  numToSkip)  {  available  +=  numToSkip;  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	while(available  >  numToSkip)  {  available  +=  numToSkip;	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    skipped    +=    input.length();    }    	compilable	timeout	67	1	replace
954	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  available  +=  numToSkip;  timeout  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  numToSkip)  {  available  +=  numToSkip;  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  numToSkip)  {  available  +=  numToSkip;	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    skipped    +=    input.length();    }    	compilable	timeout	67	1	replace
955	[BUG]  [BUGGY]  long  numToSkip  =  input.length();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  long  numToSkip  =  input.length();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	long  numToSkip  =  input.length();	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    skipped    +=    input.length();    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
956	[BUG]  [BUGGY]  if(skipped  >=  available)  {  If(skipped  >  0)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >=  available)  {  If(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >=  available)  {  If(skipped  >  0)  {	  if(skipped    >=    0)    {    If(skipped    >=    0)    {    	non-compiled	[CE]  ';'  expected	48	None	replace
957	[BUG]  [BUGGY]  if(skipped  <  =  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  =  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
958	[BUG]  [BUGGY]  if(available  >  numToSkip  ||  skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [CE]  cannot  find  symbol  Feature  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  numToSkip  ||  skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip  ||  skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	106	None	replace
959	[BUG]  [BUGGY]  if(skipped  >  0  ||  input.canEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [CE]  cannot  find  symbol  Feature  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  input.canEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  input.canEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {	  if(skipped    >    0)    {    if(skipped    >    0    ||    input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	106	None	replace
960	[BUG]  [BUGGY]  if(skipped  <  0  ||  available  >  numToSkip)  {  if(skipped  >  0  ||  available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  0  ||  available  >  numToSkip)  {  if(skipped  >  0  ||  available  >  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0    ||    available    >    numToSkip)    {    if(skipped  >  0  ||  available  >  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
961	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  <  numToSkip)  {  if(skip  >  0  ||  available  <  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  available  <  numToSkip)  {  if(skip  >  0  ||  available  <  numToSkip)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    available    <    numToSkip)    {    if(skip  >  0  ||  available  <  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	129	None	add
962	[BUG]  [BUGGY]  if(available  <  0  ||  skipped  >  0)  {  if(available  >  0  ||  skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  skipped  >  0)  {  if(available  >  0  ||  skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    <    0    ||    skipped    >    0)    {    if(available  >  0  ||  skipped  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	10	None	add
963	[BUG]  [BUGGY]  timeout  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	while(skipped  >=  0)  {	  if(skipped    >=    0)    {    while(skipped    >=    0)    {    	compilable	timeout	89	1	replace
964	[BUG]  [BUGGY]  while(skipped  >=  0)  {  timeout  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(skipped  >=  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(skipped  >=  0)  {	  if(skipped    >=    0)    {    while(skipped    >=    0)    {    	compilable	timeout	89	1	replace
965	[BUG]  [BUGGY]  if(available!=  0)  {  if(available  [Delete]  0)  {  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available!=  0)  {  if(available  [Delete]  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available!=    0)    {    if(available  [Delete]  0)  {	  	non-compiled	[CE]  ')'  expected	16	None	add
966	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }  [CE]  cannot  find  symbol  skip  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol  skip	121	None	replace
967	[BUG]  [BUGGY]  while(skip  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }  [CE]  cannot  find  symbol  skip  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(skip  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(skip  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }	  if(skipped    >    0)    {    for(int    i    =    0;    i    <    available;    ++i)    {    skipped    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol  skip	121	None	replace
968	[BUG]  [BUGGY]  if(skipped  >  0  ||  skipped  <  available)  {  if(skip  >  0  ||  skipped  <  available)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  0  ||  skipped  <  available)  {  if(skip  >  0  ||  skipped  <  available)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0    ||    skipped    <    available)    {    if(skip  >  0  ||  skipped  <  available)  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
969	[BUG]  [BUGGY]  if(skip  <  0  ||  input.isEnabled(SKIPP_BUF_SIZE))  {  [CE]  cannot  find  symbol  skip  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  0  ||  input.isEnabled(SKIPP_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  0  ||  input.isEnabled(SKIPP_BUF_SIZE))  {	  if(skip    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  skip	97	None	replace
970	[BUG]  [BUGGY]  if(skip  <  0  ||  input.isEnabled(SKIPP_BUFFER_SIZE))  {  [CE]  cannot  find  symbol  skip  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  0  ||  input.isEnabled(SKIPP_BUFFER_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  0  ||  input.isEnabled(SKIPP_BUFFER_SIZE))  {	  if(skip    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  skip	97	None	replace
971	[BUG]  [BUGGY]  if(skip  <  0  ||  input.isEnabled(SCRIPT_SIZE))  {  [CE]  cannot  find  symbol  skip  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  <  0  ||  input.isEnabled(SCRIPT_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  0  ||  input.isEnabled(SCRIPT_SIZE))  {	  if(skip    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  skip	97	None	replace
972	[BUG]  [BUGGY]  if(switch  <  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(switch  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(switch  <  0)  {	  if(skip    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
973	[BUG]  [BUGGY]  InputStream  available  =  input.readInput(skipped,  numToSkip);  if  (available  >  0)  {  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  InputStream  available  =  input.readInput(skipped,  numToSkip);  if  (available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	InputStream  available  =  input.readInput(skipped,  numToSkip);  if  (available  >  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(numToSkip,    available);    if    (available    >    0)    {    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	24	None	replace
974	[BUG]  [BUGGY]  InputStream  available  =  input.readInput(skip,  numToSkip);  if  (available  >  0)  {  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  InputStream  available  =  input.readInput(skip,  numToSkip);  if  (available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	InputStream  available  =  input.readInput(skip,  numToSkip);  if  (available  >  0)  {	  if    (available    >    0)    {    InputStream    available    =    input.readInput(numToSkip,    available);    if    (available    >    0)    {    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	24	None	replace
975	[BUG]  [BUGGY]  if(skipped  >  available)  {  for(skipped  >  0)  {  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  available)  {  for(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  available)  {  for(skipped  >  0)  {	  if(skipped    >    0)    {    for(skipped    >    0)    {    	non-compiled	[CE]  not  a  statement	73	None	replace
976	[BUG]  [BUGGY]  while(skipped  >  0)  {  for(skipped  >  0)  {  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(skipped  >  0)  {  for(skipped  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(skipped  >  0)  {  for(skipped  >  0)  {	  if(skipped    >    0)    {    for(skipped    >    0)    {    	non-compiled	[CE]  not  a  statement	73	None	replace
977	[BUG]  [BUGGY]  if(skip  >  0  ||  input.isEnabled(SCRIPT_BUF_SIZE))  {  [CE]  cannot  find  symbol  skip  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0  ||  input.isEnabled(SCRIPT_BUF_SIZE))  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0  ||  input.isEnabled(SCRIPT_BUF_SIZE))  {	  if(skip    >    0    ||    input.isEnabled(SKIPP_BUF_SIZE))    {    	non-compiled	[CE]  cannot  find  symbol  skip	124	None	replace
978	[BUG]  [BUGGY]  if(available  <  0  ||  numToSkip  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  <  0  ||  numToSkip  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  numToSkip  <  =  0)  {	  if(skipped    <    =    0    ||    available    <    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
979	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  skipped;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [CE]  cannot  find  symbol  skip  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skip  >  0)  {  for(int  i  =  skipped;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  skipped;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol  skip	78	None	replace
980	[BUG]  [BUGGY]  while(available  >  0)  {  available  +=  input.getLength();  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  available  +=  input.getLength();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {  available  +=  input.getLength();	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
981	[BUG]  [BUGGY]  while(skipped  >  0)  {  available  +=  input.getLength();  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(skipped  >  0)  {  available  +=  input.getLength();  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(skipped  >  0)  {  available  +=  input.getLength();	  if(available    >    0)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    input.getLength();    }    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
982	[BUG]  [BUGGY]  if(skipped  <  available)  {  while(skipped  <  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available)  {  while(skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  available)  {  while(skipped  <  0)  {	  if(skipped    <    0)    {    while(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
983	[BUG]  [BUGGY]  if(skipped  <  =  0)  {  while(skipped  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  =  0)  {  while(skipped  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0)  {  while(skipped  <  =  0)  {	  if(skipped    <    0)    {    while(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
984	[BUG]  [BUGGY]  if(skipped  <  available)  {  while(skipped  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available)  {  while(skipped  <  =  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  available)  {  while(skipped  <  =  0)  {	  if(skipped    <    0)    {    while(skipped    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
985	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available  ||  skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  available  ||  skipped  <  0)  {	  if(skipped    >    0    ||    skipped    <    available)    {    	compilable	  [FE]  AssertionError  	128	2	replace
986	[BUG]  [BUGGY]  if(skipped  <  available  ||  skipped  <  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  <  available  ||  skipped  <  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  available  ||  skipped  <  0)  {	  if(skipped    >    0    ||    skipped    <    available)    {    	compilable	  [FE]  AssertionError  	128	2	replace
987	[BUG]  [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [CE]  possible  loss  of  precision  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	non-compiled	[CE]  possible  loss  of  precision	76	None	replace
988	[BUG]  [BUGGY]  timeout  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  numToSkip)  {  for(long  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  numToSkip)  {  for(long  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	compilable	timeout	76	1	replace
989	[BUG]  [BUGGY]  if(skipped  >  numToSkip)  {  for(long  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  timeout  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(skipped  >  numToSkip)  {  for(long  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  numToSkip)  {  for(long  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    input.close();    }    	compilable	timeout	76	1	replace
990	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  skipped)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    skipped;    }    	compilable	  [FE]  AssertionError  	69	2	replace
991	[BUG]  [BUGGY]  if(available  >  skipped)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [FE]  AssertionError  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  if(available  >  skipped)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  skipped)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }	  if(available    >    numToSkip)    {    for(int    i    =    available;    i    <    numToSkip;    i++)    {    available    +=    skipped;    }    	compilable	  [FE]  AssertionError  	69	2	replace
992	[BUG]  [BUGGY]  timeout  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	while(available  >  0)  {	  if(available    >=    0)    {    while(available    >=    0)    {    	compilable	timeout	92	1	replace
993	[BUG]  [BUGGY]  while(available  >  0)  {  timeout  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);      [BUGGY]  while(available  >  0)  {  [BUGGY]      break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	while(available  >  0)  {	  if(available    >=    0)    {    while(available    >=    0)    {    	compilable	timeout	92	1	replace
