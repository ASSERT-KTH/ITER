bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  <  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0)  {	  if(skipped    <    0)    {    timeout    	compilable	timeout	15	1	replace
2	[BUG]  [BUGGY]  if(available  <  0)  {  timeout  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  <  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0)  {	  if(skipped    <    0)    {    timeout    	compilable	timeout	15	1	replace
3	[BUG]  [BUGGY]  timeout  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  0  ||  available  >  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  0  ||  available  >  numToSkip)  {	  if(skipped    <    0)    {    timeout    	compilable	timeout	15	1	replace
4	[BUG]  [BUGGY]  if(skipped  <  0  ||  available  >  numToSkip)  {  timeout  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  0  ||  available  >  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  0  ||  available  >  numToSkip)  {	  if(skipped    <    0)    {    timeout    	compilable	timeout	15	1	replace
5	[BUG]  [BUGGY]  timeout  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  0  ||  skipped  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  0  ||  skipped  >  0)  {	  if(skipped    <    0)    {    timeout    	compilable	timeout	15	1	replace
6	[BUG]  [BUGGY]  if(skipped  <  0  ||  skipped  >  0)  {  timeout  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  0  ||  skipped  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  0  ||  skipped  >  0)  {	  if(skipped    <    0)    {    timeout    	compilable	timeout	15	1	replace
7	[BUG]  [BUGGY]  timeout  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  0  ||  available  <  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  0  ||  available  <  numToSkip)  {	  if(skipped    <    0)    {    timeout    	compilable	timeout	15	1	replace
8	[BUG]  [BUGGY]  if(skipped  <  0  ||  available  <  numToSkip)  {  timeout  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  0  ||  available  <  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  0  ||  available  <  numToSkip)  {	  if(skipped    <    0)    {    timeout    	compilable	timeout	15	1	replace
9	[BUG]  [BUGGY]  if(available  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  <  =  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0)  {	  if(available    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  <  0  ||  skipped  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  0  ||  skipped  >  0)  {	  if(available    >=    0)    {    	compilable	timeout	6	1	replace
11	[BUG]  [BUGGY]  if(available  <  0  ||  skipped  >  0)  {  timeout  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  <  0  ||  skipped  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  0  ||  skipped  >  0)  {	  if(available    >=    0)    {    	compilable	timeout	6	1	replace
12	[BUG]  [BUGGY]  if(available  <  =  0  ||  skipped  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  <  =  0  ||  skipped  <  =  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  =  0  ||  skipped  <  =  0)  {	  if(skipped    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  if(skipped  <  =  0  ||  available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  =  0  ||  available  >  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0  ||  available  >  numToSkip)  {	  if(skipped    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  if(skipped  <  =  0  ||  available  >=  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  =  0  ||  available  >=  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0  ||  available  >=  numToSkip)  {	  if(skipped    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  if(skipped  <  =  0  ||  skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  =  0  ||  skipped  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0  ||  skipped  >  0)  {	  if(skipped    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available!=  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available!=  0)  {	  if(skipped    >=    0)    {    	compilable	  [FE]  AssertionError  	9	3	replace
17	[BUG]  [BUGGY]  if(available!=  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available!=  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available!=  0)  {	  if(skipped    >=    0)    {    	compilable	  [FE]  AssertionError  	9	3	replace
18	[BUG]  [BUGGY]  if  (available  >  0)  {  if  (available  >  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if  (available  >  0)  {  if  (available  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if    (available    >    0)    {    if  (available  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
19	[BUG]  [BUGGY]  if  (available  >  0)  {  InputStream  available  =  input.readInput();  if  (available  >  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if  (available  >  0)  {  InputStream  available  =  input.readInput();  if  (available  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if    (available    >    0)    {    InputStream  available  =  input.readInput();  if  (available  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
20	[BUG]  [BUGGY]  if  (available  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if  (available  >  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if  (available  >  0)  {  InputStream  available  =  input.readInput(numToSkip);  if  (available  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if    (available    >    0)    {    InputStream  available  =  input.readInput(numToSkip);  if  (available  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
21	[BUG]  [BUGGY]  if  (available  >  0)  {  If  (available  >  0)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if  (available  >  0)  {  If  (available  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if    (available    >    0)    {    If  (available  >  0)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
22	[BUG]  [BUGGY]  if  (available  >  0)  {  InputStream  available  =  input.getInputStream();  if  (available  >  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if  (available  >  0)  {  InputStream  available  =  input.getInputStream();  if  (available  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if    (available    >    0)    {    InputStream  available  =  input.getInputStream();  if  (available  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
23	[BUG]  [BUGGY]  if  (available  >  0)  {  InputStream  available  =  input.readInput(skipped);  if  (available  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if  (available  >  0)  {  InputStream  available  =  input.readInput(skipped);  if  (available  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if    (available    >    0)    {    InputStream  available  =  input.readInput(skipped);  if  (available  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
24	[BUG]  [BUGGY]  if  (available  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  available);  if  (available  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if  (available  >  0)  {  InputStream  available  =  input.readInput(numToSkip,  available);  if  (available  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if    (available    >    0)    {    InputStream  available  =  input.readInput(numToSkip,  available);  if  (available  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
25	[BUG]  [BUGGY]  if(skipped  >  0)  {  if(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0)  {  if(skipped  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0)    {    if(skipped  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
26	[BUG]  [BUGGY]  if(skipped  >  0)  {  If(skipped  >  0)  {  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0)  {  If(skipped  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0)    {    If(skipped  >  0)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
27	[BUG]  [BUGGY]  if(skipped  >  0)  {  while(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0)  {  while(skipped  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0)    {    while(skipped  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
28	[BUG]  [BUGGY]  if(skipped  >  0)  {  if(skipped  >  0)  <  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0)  {  if(skipped  >  0)  <  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0)    {    if(skipped  >  0)  <	  timeout    	non-compiled	[CE]  illegal  start  of  type	3	None	add
29	[BUG]  [BUGGY]  if(skipped  >  0)  {  if(skip  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0)  {  if(skip  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0)    {    if(skip  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
30	[BUG]  [BUGGY]  if(skipped  >  0)  {  if(skiipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0)  {  if(skiipped  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0)    {    if(skiipped  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
31	[BUG]  [BUGGY]  if(skipped  <  0)  {  if(skipped  <  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  0)  {  if(skipped  <  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0)    {    if(skipped  <  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	14	None	add
32	[BUG]  [BUGGY]  if(skipped  <  0)  {  if(skipped  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  0)  {  if(skipped  >=  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0)    {    if(skipped  >=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	14	None	add
33	[BUG]  [BUGGY]  if(skipped  <  0)  {  If(skipped  <  0)  {  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  0)  {  If(skipped  <  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0)    {    If(skipped  <  0)  {	  timeout    	non-compiled	[CE]  ';'  expected	14	None	add
34	[BUG]  [BUGGY]  if(skipped  <  0)  {  if(skipped  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  0)  {  if(skipped  <  =  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0)    {    if(skipped  <  =  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	14	None	add
35	[BUG]  [BUGGY]  if(skipped  <  0)  {  if(skipped  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  0)  {  if(skipped  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0)    {    if(skipped  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	14	None	add
36	[BUG]  [BUGGY]  if(skipped  <  0)  {  if(skipped!=  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  0)  {  if(skipped!=  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0)    {    if(skipped!=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	14	None	add
37	[BUG]  [BUGGY]  if(available  >=  0)  {  if(available  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >=  0)  {  if(available  >=  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >=    0)    {    if(available  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
38	[BUG]  [BUGGY]  if(available  >=  0)  {  if(available  >>  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >=  0)  {  if(available  >>  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >=    0)    {    if(available  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
39	[BUG]  [BUGGY]  if(available  >=  0)  {  if(available!=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >=  0)  {  if(available!=  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >=    0)    {    if(available!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
40	[BUG]  [BUGGY]  if(available  >=  0)  {  if(available  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >=  0)  {  if(available  ==  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >=    0)    {    if(available  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
41	[BUG]  [BUGGY]  if(available  >=  0)  {  If(available  >=  0)  {  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >=  0)  {  If(available  >=  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >=    0)    {    If(available  >=  0)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
42	[BUG]  [BUGGY]  if(available  >=  0)  {  if(available  [Delete]  0)  {  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >=  0)  {  if(available  [Delete]  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >=    0)    {    if(available  [Delete]  0)  {	  	non-compiled	[CE]  ')'  expected	5	None	add
43	[BUG]  [BUGGY]  if(available  >=  0)  {  if(available  <  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >=  0)  {  if(available  <  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >=    0)    {    if(available  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
44	[BUG]  [BUGGY]  if(skipped  >=  0)  {  if(skipped  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >=  0)  {  if(skipped  >=  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >=    0)    {    if(skipped  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
45	[BUG]  [BUGGY]  if(skipped  >=  0)  {  if(skipped!=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >=  0)  {  if(skipped!=  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >=    0)    {    if(skipped!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
46	[BUG]  [BUGGY]  if(skipped  >=  0)  {  if(skipped  >>  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >=  0)  {  if(skipped  >>  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >=    0)    {    if(skipped  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
47	[BUG]  [BUGGY]  if(skipped  >=  0)  {  if(skipped  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >=  0)  {  if(skipped  ==  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >=    0)    {    if(skipped  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
48	[BUG]  [BUGGY]  if(skipped  >=  0)  {  If(skipped  >=  0)  {  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >=  0)  {  If(skipped  >=  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >=    0)    {    If(skipped  >=  0)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
49	[BUG]  [BUGGY]  if(skipped  >=  0)  {  if(skipped  [Delete]  0)  {  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >=  0)  {  if(skipped  [Delete]  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >=    0)    {    if(skipped  [Delete]  0)  {	  	non-compiled	[CE]  ')'  expected	8	None	add
50	[BUG]  [BUGGY]  if(skipped  >=  0)  {  if(skipped  [BUGGY]  0)  {  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >=  0)  {  if(skipped  [BUGGY]  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >=    0)    {    if(skipped  [BUGGY]  0)  {	  	non-compiled	[CE]  ')'  expected	8	None	add
51	[BUG]  [BUGGY]  if(skip  >  0  ||  available  >  numToSkip)  {  [CE]  cannot  find  symbol  skip  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skip  >  0  ||  available  >  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0  ||  available  >  numToSkip)  {	  if(skip    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  skip	13	None	replace
52	[BUG]  [BUGGY]  if(skip  >  0  ||  available  <  numToSkip)  {  [CE]  cannot  find  symbol  skip  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skip  >  0  ||  available  <  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0  ||  available  <  numToSkip)  {	  if(skip    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  skip	13	None	replace
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(numToSkip  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(numToSkip  >  0)  {	  if(skip    >    0)    {    	compilable	  [FE]  AssertionError  	13	3	replace
54	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(numToSkip  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(numToSkip  >  0)  {	  if(skip    >    0)    {    	compilable	  [FE]  AssertionError  	13	3	replace
55	[BUG]  [BUGGY]  if(skid  >  0)  {  [CE]  cannot  find  symbol  skid  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skid  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skid  >  0)  {	  if(skip    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  skid	13	None	replace
56	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  available)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  available)  {	  if(skipped    >    0)    {    timeout    	compilable	timeout	4	1	replace
57	[BUG]  [BUGGY]  if(skipped  >  available)  {  timeout  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  available)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  available)  {	  if(skipped    >    0)    {    timeout    	compilable	timeout	4	1	replace
58	[BUG]  [BUGGY]  timeout  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  numToSkip)  {	  if(skipped    >    0)    {    timeout    	compilable	timeout	4	1	replace
59	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  timeout  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip)  {	  if(skipped    >    0)    {    timeout    	compilable	timeout	4	1	replace
60	[BUG]  [BUGGY]  if  (available  ==  0)  {  if  (available  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if  (available  ==  0)  {  if  (available  ==  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if    (available    ==    0)    {    if  (available  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
61	[BUG]  [BUGGY]  if  (available  ==  0)  {  if  (available  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if  (available  ==  0)  {  if  (available  >=  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if    (available    ==    0)    {    if  (available  >=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
62	[BUG]  [BUGGY]  if  (available  ==  0)  {  if  (available!=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if  (available  ==  0)  {  if  (available!=  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if    (available    ==    0)    {    if  (available!=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
63	[BUG]  [BUGGY]  if  (available  ==  0)  {  If  (available  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if  (available  ==  0)  {  If  (available  ==  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if    (available    ==    0)    {    If  (available  ==  0)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
64	[BUG]  [BUGGY]  if  (available  ==  0)  {  if  (available  >>  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if  (available  ==  0)  {  if  (available  >>  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if    (available    ==    0)    {    if  (available  >>  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
65	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [CE]  possible  loss  of  precision  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }	      	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
66	[BUG]  [BUGGY]  if(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [CE]  possible  loss  of  precision  [FE]                    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length();  }	      	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
67	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  }  [CE]  possible  loss  of  precision  [FE]                      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  }  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  skipped  +=  input.length();  }	      	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
68	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [CE]  possible  loss  of  precision  [FE]                        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }	      	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
69	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [CE]  possible  loss  of  precision  [FE]                          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  skipped;  }	      	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
70	[BUG]  [BUGGY]  if(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [CE]  possible  loss  of  precision  [FE]                            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.length;  }	      	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
71	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }  [CE]  possible  loss  of  precision  [FE]                              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.next();  }	      	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
72	[BUG]  [BUGGY]  if(skipped  >  0)  {  when(skipped  >  0)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0)  {  when(skipped  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0)    {    when(skipped  >  0)  {	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
73	[BUG]  [BUGGY]  if(skipped  >  0)  {  for(skipped  >  0)  {  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0)  {  for(skipped  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0)    {    for(skipped  >  0)  {	  timeout    	non-compiled	[CE]  not  a  statement	3	None	add
74	[BUG]  [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipped);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  System.arraycopy(input,  numToSkip,  available,  skipped);  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	System.arraycopy(input,  numToSkip,  available,  skipped);	      	non-compiled	[CE]  illegal  start  of  type	10	None	replace
75	[BUG]  [BUGGY]  int  n  =  input.read(available);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  int  n  =  input.read(available);  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  n  =  input.read(available);	      	non-compiled	[CE]  illegal  start  of  type	10	None	replace
76	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [CE]  possible  loss  of  precision  [FE]                      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }	      	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
77	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [CE]  possible  loss  of  precision  [FE]                        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }	      	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
78	[BUG]  [BUGGY]  if(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [CE]  possible  loss  of  precision  [FE]                          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  available  +=  input.getLength();  }	      	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
79	[BUG]  [BUGGY]  if(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [CE]  possible  loss  of  precision  [FE]                            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  i++)  {  input.close();  }	      	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
80	[BUG]  [BUGGY]  if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }  [CE]  possible  loss  of  precision  [FE]                              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  numToSkip)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  available  +=  input.getLength();  }	      	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
81	[BUG]  [BUGGY]  if(skip  >=  0)  {  [CE]  cannot  find  symbol  skip  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skip  >=  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >=  0)  {	  if(available    >=    0)    {    	non-compiled	[CE]  cannot  find  symbol  skip	6	None	replace
82	[BUG]  [BUGGY]  if  (available  >  0)  {  int  available  =  input.read(skipped);  if  (available  >  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if  (available  >  0)  {  int  available  =  input.read(skipped);  if  (available  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if    (available    >    0)    {    int  available  =  input.read(skipped);  if  (available  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
83	[BUG]  [BUGGY]  if  (available  >  0)  {  InputStream  available  =  input.readInt();  if  (available  >  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if  (available  >  0)  {  InputStream  available  =  input.readInt();  if  (available  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if    (available    >    0)    {    InputStream  available  =  input.readInt();  if  (available  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
84	[BUG]  [BUGGY]  if  (available  >  0)  {  InputStream  available  =  input.readLine();  if  (available  >  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if  (available  >  0)  {  InputStream  available  =  input.readLine();  if  (available  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if    (available    >    0)    {    InputStream  available  =  input.readLine();  if  (available  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
85	[BUG]  [BUGGY]  if(switch  >  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(switch  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(switch  >  0)  {	  if(skip    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
86	[BUG]  [BUGGY]  if(skunk  >  0)  {  [CE]  cannot  find  symbol  skunk  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skunk  >  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skunk  >  0)  {	  if(skip    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  skunk	13	None	replace
87	[BUG]  [BUGGY]  if(skipped  <  =  0  &&  available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  =  0  &&  available  >  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0  &&  available  >  numToSkip)  {	  if(skipped    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
88	[BUG]  [BUGGY]  if(skipped  >=  0)  {  if(skipped  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >=  0)  {  if(skipped  <  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >=    0)    {    if(skipped  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
89	[BUG]  [BUGGY]  if(skipped  >=  0)  {  while(skipped  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >=  0)  {  while(skipped  >=  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >=    0)    {    while(skipped  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
90	[BUG]  [BUGGY]  if(skipped  <  0)  {  while(skipped  <  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  0)  {  while(skipped  <  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0)    {    while(skipped  <  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	14	None	add
91	[BUG]  [BUGGY]  if(skipped  <  0)  {  if(skip  <  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  0)  {  if(skip  <  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    <    0)    {    if(skip  <  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	14	None	add
92	[BUG]  [BUGGY]  if(available  >=  0)  {  while(available  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >=  0)  {  while(available  >=  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available    >=    0)    {    while(available  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
93	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >  skipped)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  >  skipped)  {	  if    (available    >    0)    {    	compilable	  [FE]  AssertionError  	12	2	replace
94	[BUG]  [BUGGY]  if(available  >  skipped)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  >  skipped)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  >  skipped)  {	  if    (available    >    0)    {    	compilable	  [FE]  AssertionError  	12	2	replace
95	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  <  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(available  <  numToSkip)  {	  if(skipped    <    0)    {    timeout    	compilable	timeout	15	1	replace
96	[BUG]  [BUGGY]  if(available  <  numToSkip)  {  timeout  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(available  <  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(available  <  numToSkip)  {	  if(skipped    <    0)    {    timeout    	compilable	timeout	15	1	replace
97	[BUG]  [BUGGY]  if(skip  <  0)  {  [CE]  cannot  find  symbol  skip  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skip  <  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  <  0)  {	  if(skipped    <    0)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  skip	15	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  available)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  available)  {	  if(skipped    <    0)    {    timeout    	compilable	  [FE]  AssertionError  	15	2	replace
99	[BUG]  [BUGGY]  if(skipped  <  available)  {  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  available)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  available)  {	  if(skipped    <    0)    {    timeout    	compilable	  [FE]  AssertionError  	15	2	replace
100	[BUG]  [BUGGY]  timeout  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >=  available)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >=  available)  {	  if(skipped    >=    0)    {    	compilable	timeout	9	1	replace
101	[BUG]  [BUGGY]  if(skipped  >=  available)  {  timeout  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >=  available)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >=  available)  {	  if(skipped    >=    0)    {    	compilable	timeout	9	1	replace
102	[BUG]  [BUGGY]  if  (available  ==  0)  {  if  (available  {  0)  {  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if  (available  ==  0)  {  if  (available  {  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if    (available    ==    0)    {    if  (available  {  0)  {	  timeout    	non-compiled	[CE]  ')'  expected	1	None	add
103	[BUG]  [BUGGY]  if(skipped  >  0)  {  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0)  {  if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0)    {    if(skipped  >  0  ||  input.isEnabled(COPY_BUF_SIZE))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
104	[BUG]  [BUGGY]  if(skipped  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0)    {    if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
105	[BUG]  [BUGGY]  if(skipped  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0)    {    if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
106	[BUG]  [BUGGY]  if(skipped  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0)    {    if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NUMERIC_NUMBERS))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
107	[BUG]  [BUGGY]  if(skipped  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0)  {  if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0)    {    if(skipped  >  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
108	[BUG]  [BUGGY]  if(skipped  >  0)  {  if(skipped  >  0  ||  available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0)  {  if(skipped  >  0  ||  available  >  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped    >    0)    {    if(skipped  >  0  ||  available  >  numToSkip)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
109	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  0  ||  skipped  >  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  <  0  ||  skipped  >  numToSkip)  {	  if(skipped    <    0)    {    timeout    	compilable	timeout	15	1	replace
110	[BUG]  [BUGGY]  if(skipped  <  0  ||  skipped  >  numToSkip)  {  timeout  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  0  ||  skipped  >  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  0  ||  skipped  >  numToSkip)  {	  if(skipped    <    0)    {    timeout    	compilable	timeout	15	1	replace
111	[BUG]  [BUGGY]  if(skipped  <  =  0  ||  skipped  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  =  0  ||  skipped  >  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0  ||  skipped  >  numToSkip)  {	  if(skipped    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
112	[BUG]  [BUGGY]  if(skipped  <  =  0  ||  available  <  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  <  =  0  ||  available  <  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  <  =  0  ||  available  <  numToSkip)  {	  if(skipped    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
113	[BUG]  [BUGGY]  if  (available  >  0)  {  int  numToSkip  =  input.read(skipped);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if  (available  >  0)  {  int  numToSkip  =  input.read(skipped);  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if    (available    >    0)    {    int  numToSkip  =  input.read(skipped);	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
114	[BUG]  [BUGGY]  if  (available  >  0)  {  int  numToSkip  =  input.readInt();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if  (available  >  0)  {  int  numToSkip  =  input.readInt();  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if    (available    >    0)    {    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
115	[BUG]  [BUGGY]  if  (available  >  0)  {  int  numToSkip  =  input.getSize();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if  (available  >  0)  {  int  numToSkip  =  input.getSize();  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if    (available    >    0)    {    int  numToSkip  =  input.getSize();	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
116	[BUG]  [BUGGY]  if(skipped  >>  0)  {  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >>  0)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >>  0)  {	  if(available    >=    0)    {    	non-compiled	[CE]  incompatible  types	6	None	replace
117	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [CE]  cannot  find  symbol  skip  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skip  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }	      	non-compiled	[CE]  cannot  find  symbol  skip	10	None	replace
118	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }	      	compilable	timeout	10	1	replace
119	[BUG]  [BUGGY]  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  timeout  [FE]                    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  i++)  {  input.close();  }	      	compilable	timeout	10	1	replace
120	[BUG]  [BUGGY]  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }  [CE]  cannot  find  symbol  [FE]                      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.next();  }	      	non-compiled	[CE]  cannot  find  symbol	10	None	replace
121	[BUG]  [BUGGY]  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }  [CE]  cannot  find  symbol  [FE]                        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0)  {  for(int  i  =  0;  i  <  available;  ++i)  {  skipped  +=  input.getLength();  }	      	non-compiled	[CE]  cannot  find  symbol	10	None	replace
122	[BUG]  [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }  [CE]  cannot  find  symbol  skip  [FE]                          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0)  {  for(int  i  =  available;  i  <  numToSkip;  ++i)  {  input.close();  }	      	non-compiled	[CE]  cannot  find  symbol  skip	10	None	replace
123	[BUG]  [BUGGY]  int  n  =  input.read(skipped);  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  int  n  =  input.read(skipped);  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	int  n  =  input.read(skipped);	      	non-compiled	[CE]  illegal  start  of  type	10	None	replace
124	[BUG]  [BUGGY]  if(skip  >  0  ||  input.isEnabled(SKIPP_BUF_SIZE))  {  [CE]  cannot  find  symbol  skip  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skip  >  0  ||  input.isEnabled(SKIPP_BUF_SIZE))  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0  ||  input.isEnabled(SKIPP_BUF_SIZE))  {	  if(skip    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  skip	13	None	replace
125	[BUG]  [BUGGY]  if(skip  >  0  ||  input.isEnabled(SCRIPT_SIZE))  {  [CE]  cannot  find  symbol  skip  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skip  >  0  ||  input.isEnabled(SCRIPT_SIZE))  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0  ||  input.isEnabled(SCRIPT_SIZE))  {	  if(skip    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  skip	13	None	replace
126	[BUG]  [BUGGY]  if(skip  >  0  ||  input.isEnabled(SKIPP_BUFFER_SIZE))  {  [CE]  cannot  find  symbol  skip  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skip  >  0  ||  input.isEnabled(SKIPP_BUFFER_SIZE))  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skip  >  0  ||  input.isEnabled(SKIPP_BUFFER_SIZE))  {	  if(skip    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  skip	13	None	replace
127	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0  ||  skipped  <  available)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  0  ||  skipped  <  available)  {	  if(skipped    >    0)    {    timeout    	compilable	  [FE]  AssertionError  	4	3	replace
128	[BUG]  [BUGGY]  if(skipped  >  0  ||  skipped  <  available)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0  ||  skipped  <  available)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  skipped  <  available)  {	  if(skipped    >    0)    {    timeout    	compilable	  [FE]  AssertionError  	4	3	replace
129	[BUG]  [BUGGY]  timeout  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0  ||  available  <  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  0  ||  available  <  numToSkip)  {	  if(skipped    >    0)    {    timeout    	compilable	timeout	4	1	replace
130	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  <  numToSkip)  {  timeout  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0  ||  available  <  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  available  <  numToSkip)  {	  if(skipped    >    0)    {    timeout    	compilable	timeout	4	1	replace
131	[BUG]  [BUGGY]  timeout  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0  ||  available  >  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  0  ||  available  >  numToSkip)  {	  if(skipped    >    0)    {    timeout    	compilable	timeout	4	1	replace
132	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  >  numToSkip)  {  timeout  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0  ||  available  >  numToSkip)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  available  >  numToSkip)  {	  if(skipped    >    0)    {    timeout    	compilable	timeout	4	1	replace
133	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0  ||  available  >  skipped)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	add	if(skipped  >  0  ||  available  >  skipped)  {	  if(skipped    >    0)    {    timeout    	compilable	  [FE]  AssertionError  	4	3	replace
134	[BUG]  [BUGGY]  if(skipped  >  0  ||  available  >  skipped)  {  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);    [BUGGY]  if(skipped  >  0  ||  available  >  skipped)  {  [BUGGY]    break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	98	98	2	replace	if(skipped  >  0  ||  available  >  skipped)  {	  if(skipped    >    0)    {    timeout    	compilable	  [FE]  AssertionError  	4	3	replace
