bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  long  available  =  input.available  -  numToSkip;  [CE]  cannot  find  symbol  available  [FE]    AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  [BUGGY]  long  available  =  input.available  -  numToSkip;  [BUGGY]  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  -  numToSkip;	long  available  =  numToSkip;  	non-compiled	[CE]  cannot  find  symbol  available	3	None	replace
2	[BUG]  [BUGGY]  long  available  =  input.available;  [CE]  cannot  find  symbol  available  [FE]      AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  [BUGGY]  long  available  =  input.available;  [BUGGY]  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available;	long  available  =  numToSkip;  	non-compiled	[CE]  cannot  find  symbol  available	3	None	replace
3	[BUG]  [BUGGY]  long  available  =  input.availableLong();  [CE]  cannot  find  symbol  [FE]        AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  [BUGGY]  long  available  =  input.availableLong();  [BUGGY]  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong();	long  available  =  numToSkip;  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
4	[BUG]  [BUGGY]  long  available  =  input.readLine();  [CE]  cannot  find  symbol  [FE]          AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  [BUGGY]  long  available  =  input.readLine();  [BUGGY]  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine();	long  available  =  numToSkip;  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
5	[BUG]  [BUGGY]  long  available  =  input.available  /  numToSkip;  [CE]  cannot  find  symbol  available  [FE]            AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  [BUGGY]  long  available  =  input.available  /  numToSkip;  [BUGGY]  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  /  numToSkip;	long  available  =  numToSkip;  	non-compiled	[CE]  cannot  find  symbol  available	3	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  [BUGGY]  long  available  =  numToSkip  +  1;  [BUGGY]  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  numToSkip  +  1;	long  available  =  numToSkip;  	compilable	  [FE]  AssertionError  	3	3	replace
7	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1;  [FE]  AssertionError  [FE]              AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  [BUGGY]  long  available  =  numToSkip  +  1;  [BUGGY]  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  +  1;	long  available  =  numToSkip;  	compilable	  [FE]  AssertionError  	3	3	replace
8	[BUG]  [BUGGY]  long  available  =  input.availableToInt();  [CE]  cannot  find  symbol  [FE]                AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  [BUGGY]  long  available  =  input.availableToInt();  [BUGGY]  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt();	long  available  =  numToSkip;  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
9	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  available  [FE]                  AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  [BUGGY]    [BUGGY]  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	  	long  available  =  numToSkip;  	non-compiled	[CE]  cannot  find  symbol  available	3	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  [BUGGY]  long  available  =  0;  [BUGGY]  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  0;	long  available  =  numToSkip;  	compilable	  [FE]  AssertionError  	3	3	replace
11	[BUG]  [BUGGY]  long  available  =  0;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  [BUGGY]  long  available  =  0;  [BUGGY]  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0;	long  available  =  numToSkip;  	compilable	  [FE]  AssertionError  	3	3	replace
12	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip);  [CE]  cannot  find  symbol  [FE]      AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  [BUGGY]  long  available  =  input.availableLong(numToSkip);  [BUGGY]  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip);	long  available  =  numToSkip;  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  [BUGGY]  long  available  =  input.read();  [BUGGY]  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  input.read();	long  available  =  numToSkip;  	compilable	  [FE]  AssertionError  	3	3	replace
14	[BUG]  [BUGGY]  long  available  =  input.read();  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  [BUGGY]  long  available  =  input.read();  [BUGGY]  while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read();	long  available  =  numToSkip;  	compilable	  [FE]  AssertionError  	3	3	replace
