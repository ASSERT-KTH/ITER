bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  InputStream  input  =  this.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.getInputStream();	  long    available    =    0;    InputStream    input    =    this.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	93	None	replace
2	[BUG]  [BUGGY]  int  available  =  0;  InputStream  input  =  this.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  InputStream  input  =  this.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  0;  InputStream  input  =  this.getInputStream();	  long    available    =    0;    InputStream    input    =    this.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	93	None	replace
3	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  this.getInputStream();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  this.getInputStream();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  this.getInputStream();  }	  long    available    =    0;    InputStream    input    =    this.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	93	None	replace
4	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  this.getInputStream();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  this.getInputStream();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  this.getInputStream();  }	  long    available    =    0;    InputStream    input    =    this.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	93	None	replace
5	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  this.getInputStream();  }  else  {  skip(input,  numToSkip);  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  this.getInputStream();  }  else  {  skip(input,  numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  this.getInputStream();  }  else  {  skip(input,  numToSkip);  }	  long    available    =    0;    InputStream    input    =    this.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	93	None	replace
6	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  this.getInputStream();  }  else  {  skip(input,  numToSkip);  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  this.getInputStream();  }  else  {  skip(input,  numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  this.getInputStream();  }  else  {  skip(input,  numToSkip);  }	  long    available    =    0;    InputStream    input    =    this.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	93	None	replace
7	[BUG]  [BUGGY]  int  available  =  input.available  +  numToSkip;  [CE]  cannot  find  symbol  available  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.available  +  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.available  +  numToSkip;	  long    available    =    input.available    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	115	None	replace
8	[BUG]  [BUGGY]  Long  available  =  input.available  +  numToSkip;  [CE]  cannot  find  symbol  available  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.available  +  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.available  +  numToSkip;	  long    available    =    input.available    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	115	None	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  +  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  input.available()  +  numToSkip;	  long    available    =    input.available    +    numToSkip;    	compilable	  [FE]  AssertionError  	115	3	replace
10	[BUG]  [BUGGY]  long  available  =  input.available()  +  numToSkip;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  +  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available()  +  numToSkip;	  long    available    =    input.available    +    numToSkip;    	compilable	  [FE]  AssertionError  	115	3	replace
11	[BUG]  [BUGGY]  long  available  =  input.readUTF(numToSkip);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readUTF(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readUTF(numToSkip);	  long    available    =    input.readUTF();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
12	[BUG]  [BUGGY]  Long  available  =  input.readUTF();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.readUTF();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.readUTF();	  long    available    =    input.readUTF();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
13	[BUG]  [BUGGY]  int  available  =  input.readUTF();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.readUTF();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.readUTF();	  long    available    =    input.readUTF();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
14	[BUG]  [BUGGY]  InputStream  input  =  this.input.read();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.read();	  long    available    =    input.read();    InputStream    input    =    this.input.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	45	None	replace
15	[BUG]  [BUGGY]  int  available  =  input.read();  InputStream  input  =  this.input.read();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.read();  InputStream  input  =  this.input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.read();  InputStream  input  =  this.input.read();	  long    available    =    input.read();    InputStream    input    =    this.input.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	45	None	replace
16	[BUG]  [BUGGY]  Input  input  =  this.input.read();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Input  input  =  this.input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Input  input  =  this.input.read();	  long    available    =    input.read();    InputStream    input    =    this.input.read();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
17	[BUG]  [BUGGY]  long  available  =  this.input.read();  InputStream  input  =  input.read();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  this.input.read();  InputStream  input  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  this.input.read();  InputStream  input  =  input.read();	  long    available    =    input.read();    InputStream    input    =    this.input.read();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	45	None	replace
18	[BUG]  [BUGGY]  long  available  =  input.available  *  numToSkip  +  1;  [CE]  cannot  find  symbol  available  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  *  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  *  numToSkip  +  1;	  long    available    =    input.available    *    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	63	None	replace
19	[BUG]  [BUGGY]  int  available  =  input.available  *  numToSkip;  [CE]  cannot  find  symbol  available  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.available  *  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.available  *  numToSkip;	  long    available    =    input.available    *    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	63	None	replace
20	[BUG]  [BUGGY]  Integer  numToSkip  =  input.read(buffer,  0,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  numToSkip  =  input.read(buffer,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  numToSkip  =  input.read(buffer,  0,  numToSkip);	  long    available    =    input.read();    int    numToSkip    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	136	None	replace
21	[BUG]  [BUGGY]  Integer  available  =  input.readInt();  int  numToSkip  =  input.read(buffer,  0,  numToSkip);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  available  =  input.readInt();  int  numToSkip  =  input.read(buffer,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  available  =  input.readInt();  int  numToSkip  =  input.read(buffer,  0,  numToSkip);	  long    available    =    input.read();    int    numToSkip    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
22	[BUG]  [BUGGY]  long  available  =  input.read();  int  numToSkip  =  input.skip(input,  0,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read();  int  numToSkip  =  input.skip(input,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read();  int  numToSkip  =  input.skip(input,  0,  numToSkip);	  long    available    =    input.read();    int    numToSkip    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	136	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	int  available  =  input.read();	  int    available    =    input.available;    	compilable	  [FE]  AssertionError  	105	3	replace
24	[BUG]  [BUGGY]  int  available  =  input.read();  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.read();	  int    available    =    input.available;    	compilable	  [FE]  AssertionError  	105	3	replace
25	[BUG]  [BUGGY]  int  available  =  input.length;  [CE]  cannot  find  symbol  length  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.length;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.length;	  int    available    =    input.available;    	non-compiled	[CE]  cannot  find  symbol  length	105	None	replace
26	[BUG]  [BUGGY]  int  available  =  input.getVersion();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.getVersion();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.getVersion();	  int    available    =    input.available;    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
27	[BUG]  [BUGGY]  int  available  =  input.readLine();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.readLine();	  int    available    =    input.available;    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
28	[BUG]  [BUGGY]  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  input.readInput();	  long    available    =    0;    InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	91	None	replace
29	[BUG]  [BUGGY]  int  available  =  0;  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  InputStream  input  =  input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  0;  InputStream  input  =  input.readInput();	  long    available    =    0;    InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	91	None	replace
30	[BUG]  [BUGGY]  InputStream  input  =  outputStream.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  outputStream.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  outputStream.readInput();	  long    available    =    0;    InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	91	None	replace
31	[BUG]  [BUGGY]  long  available  =  input.getAverageNumber(numToSkip);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAverageNumber(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAverageNumber(numToSkip);	  long    available    =    input.getAverageNumber();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
32	[BUG]  [BUGGY]  long  available  =  input.getAverageNumber()  +  numToSkip;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAverageNumber()  +  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAverageNumber()  +  numToSkip;	  long    available    =    input.getAverageNumber();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
33	[BUG]  [BUGGY]  long  available  =  input.getAverageNumber()  -  1;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAverageNumber()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAverageNumber()  -  1;	  long    available    =    input.getAverageNumber();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
34	[BUG]  [BUGGY]  long  available  =  input.getAverageNumber()  +  1;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAverageNumber()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAverageNumber()  +  1;	  long    available    =    input.getAverageNumber();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
35	[BUG]  [BUGGY]  long  available  =  input.getAverageNumber()  -  numToSkip;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAverageNumber()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAverageNumber()  -  numToSkip;	  long    available    =    input.getAverageNumber();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
36	[BUG]  [BUGGY]  Long  available  =  input.getAverageNumber();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.getAverageNumber();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.getAverageNumber();	  long    available    =    input.getAverageNumber();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
37	[BUG]  [BUGGY]  long  available  =  input  ==  null?  input.readLine()  :  0;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input  ==  null?  input.readLine()  :  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input  ==  null?  input.readLine()  :  0;	  long    available    =    input!=    null?    input.readLine()    :    0;    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
38	[BUG]  [BUGGY]  long  available  =  input!=  null?  this.input.readLine()  :  0;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  this.input.readLine()  :  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  this.input.readLine()  :  0;	  long    available    =    input!=    null?    input.readLine()    :    0;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	34	None	replace
39	[BUG]  [BUGGY]  long  available  =  input!=  null?  output.readLine()  :  0;  [CE]  cannot  find  symbol  output  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  output.readLine()  :  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  output.readLine()  :  0;	  long    available    =    input!=    null?    input.readLine()    :    0;    	non-compiled	[CE]  cannot  find  symbol  output	34	None	replace
40	[BUG]  [BUGGY]  Long  available  =  input!=  null?  input.readLine()  :  0;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input!=  null?  input.readLine()  :  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input!=  null?  input.readLine()  :  0;	  long    available    =    input!=    null?    input.readLine()    :    0;    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
41	[BUG]  [BUGGY]  long  available  =  input!=  null?  0x7F?  input.readLine()  :  0;  [CE]  :  expected  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  0x7F?  input.readLine()  :  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  0x7F?  input.readLine()  :  0;	  long    available    =    input!=    null?    input.readLine()    :    0;    	non-compiled	[CE]  :  expected	34	None	replace
42	[BUG]  [BUGGY]  long  available  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readInt();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
43	[BUG]  [BUGGY]  long  available  =  input.available  +  1;  int  numToSkip  =  input.readInt();  [CE]  cannot  find  symbol  available  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  1;  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  1;  int  numToSkip  =  input.readInt();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol  available	6	None	replace
44	[BUG]  [BUGGY]  long  available  =  input.availableNumber()  +  1;  int  numToSkip  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableNumber()  +  1;  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableNumber()  +  1;  int  numToSkip  =  input.readInt();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
45	[BUG]  [BUGGY]  long  available  =  input.availableNumber();  int  numToSkip  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableNumber();  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableNumber();  int  numToSkip  =  input.readInt();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
46	[BUG]  [BUGGY]  long  available  =  input.availableOffset();  int  numToSkip  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableOffset();  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableOffset();  int  numToSkip  =  input.readInt();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
47	[BUG]  [BUGGY]  long  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  numToSkip  =  input.size();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  numToSkip  =  input.size();	  int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	129	None	replace
48	[BUG]  [BUGGY]  int  numToSkip  =  input.size()  -  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.size()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.size()  -  1;	  int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	129	None	replace
49	[BUG]  [BUGGY]  int  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.length();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.length();	  int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	129	None	replace
50	[BUG]  [BUGGY]  int  numToSkip  =  input.size()  +  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.size()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.size()  +  1;	  int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	129	None	replace
51	[BUG]  [BUGGY]  int  numToSkip  =  input.read(buffer,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.read(buffer,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.read(buffer,  numToSkip);	  int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	129	None	replace
52	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInput(numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.readInput(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.readInput(numToSkip);	  InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	82	None	replace
53	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInput(this.buffer,  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.readInput(this.buffer,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.readInput(this.buffer,  numToSkip);	  InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	82	None	replace
54	[BUG]  [BUGGY]  InputStream  input  =  this.input.readFully(numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.readFully(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.readFully(numToSkip);	  InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	82	None	replace
55	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInput(this.buffersize,  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.readInput(this.buffersize,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.readInput(this.buffersize,  numToSkip);	  InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	82	None	replace
56	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInput(INPUT_SIZE);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.readInput(INPUT_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.readInput(INPUT_SIZE);	  InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	82	None	replace
57	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInput(input);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.readInput(input);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.readInput(input);	  InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	82	None	replace
58	[BUG]  [BUGGY]  int  available  =  input.available  /  numToSkip  +  1;  [CE]  cannot  find  symbol  available  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.available  /  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.available  /  numToSkip  +  1;	  int    available    =    input.available    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	109	None	replace
59	[BUG]  [BUGGY]  int  available  =  input.length  /  numToSkip;  [CE]  cannot  find  symbol  length  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.length  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.length  /  numToSkip;	  int    available    =    input.available    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  length	109	None	replace
60	[BUG]  [BUGGY]  int  available  =  input.getVersion()  /  numToSkip;  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.getVersion()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.getVersion()  /  numToSkip;	  int    available    =    input.available    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
61	[BUG]  [BUGGY]  int  available  =  numToSkip  /  input.available;  [CE]  cannot  find  symbol  available  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  numToSkip  /  input.available;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  numToSkip  /  input.available;	  int    available    =    input.available    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	109	None	replace
62	[BUG]  [BUGGY]  Long  available  =  input.availableToInt()  -  numToSkip;  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableToInt()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableToInt()  -  numToSkip;	  Long    available    =    input.availableToInt();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
63	[BUG]  [BUGGY]  Integer  available  =  input.availableToInt();  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  available  =  input.availableToInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  available  =  input.availableToInt();	  Long    available    =    input.availableToInt();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
64	[BUG]  [BUGGY]  Long  available  =  input.availableToLong();  [CE]  cannot  find  symbol  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableToLong();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableToLong();	  Long    available    =    input.availableToInt();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
65	[BUG]  [BUGGY]  Long  available  =  input.availableToInt()  +  numToSkip;  [CE]  cannot  find  symbol  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableToInt()  +  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableToInt()  +  numToSkip;	  Long    available    =    input.availableToInt();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
66	[BUG]  [BUGGY]  Long  available  =  input.availableToInt()  -  1;  [CE]  cannot  find  symbol  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableToInt()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableToInt()  -  1;	  Long    available    =    input.availableToInt();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
67	[BUG]  [BUGGY]  int  available  =  0L;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  0L;	  int    available    =    0;    	non-compiled	[CE]  possible  loss  of  precision	27	None	replace
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  Integer.MAX_VALUE;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	int  available  =  Integer.MAX_VALUE;	  int    available    =    0;    	compilable	  [FE]  AssertionError  	27	3	replace
69	[BUG]  [BUGGY]  int  available  =  Integer.MAX_VALUE;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  Integer.MAX_VALUE;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  Integer.MAX_VALUE;	  int    available    =    0;    	compilable	  [FE]  AssertionError  	27	3	replace
70	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	int  available  =  1;	  int    available    =    0;    	compilable	  [FE]  AssertionError  	27	3	replace
71	[BUG]  [BUGGY]  int  available  =  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  1;	  int    available    =    0;    	compilable	  [FE]  AssertionError  	27	3	replace
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  Integer.MIN_VALUE;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	int  available  =  Integer.MIN_VALUE;	  int    available    =    0;    	compilable	  [FE]  AssertionError  	27	3	replace
73	[BUG]  [BUGGY]  int  available  =  Integer.MIN_VALUE;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  Integer.MIN_VALUE;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  Integer.MIN_VALUE;	  int    available    =    0;    	compilable	  [FE]  AssertionError  	27	3	replace
74	[BUG]  [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  available  =  0;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  available  =  0;	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input,    numToSkip);    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	21	None	replace
75	[BUG]  [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input,    numToSkip);    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	21	None	replace
76	[BUG]  [BUGGY]  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  available  =  0;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  available  =  0;	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input,    numToSkip);    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	21	None	replace
77	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  available  =  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  available  =  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  available  =  0;  }	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input,    numToSkip);    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	21	None	replace
78	[BUG]  [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip  +  1);  available  =  0;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip  +  1);  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  InputStreamInputStream(input,  numToSkip  +  1);  available  =  0;	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input,    numToSkip);    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	21	None	replace
79	[BUG]  [BUGGY]  long  available  =  input.available()  -  numToSkip;  long  available  =  input.available()  -  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  -  numToSkip;  long  available  =  input.available()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    -    numToSkip;    long  available  =  input.available()  -  numToSkip;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	97	None	add
80	[BUG]  [BUGGY]  long  available  =  input.available()  -  numToSkip;  Long  available  =  input.available()  -  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  -  numToSkip;  Long  available  =  input.available()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    -    numToSkip;    Long  available  =  input.available()  -  numToSkip;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	97	None	add
81	[BUG]  [BUGGY]  long  available  =  input.available()  -  numToSkip;  int  numToSkip  =  input.available()  -  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  -  numToSkip;  int  numToSkip  =  input.available()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    -    numToSkip;    int  numToSkip  =  input.available()  -  numToSkip;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	97	None	add
82	[BUG]  [BUGGY]  long  available  =  input.available()  -  numToSkip;  int  available  =  input.available()  -  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  -  numToSkip;  int  available  =  input.available()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    -    numToSkip;    int  available  =  input.available()  -  numToSkip;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	97	None	add
83	[BUG]  [BUGGY]  long  available  =  input.available()  -  numToSkip;  InputStream  input  =  input.available()  -  numToSkip;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  -  numToSkip;  InputStream  input  =  input.available()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    -    numToSkip;    InputStream  input  =  input.available()  -  numToSkip;	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	97	None	add
84	[BUG]  [BUGGY]  long  available  =  input.available()  -  numToSkip;  int  numToSkip  =  input.available();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  -  numToSkip;  int  numToSkip  =  input.available();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    -    numToSkip;    int  numToSkip  =  input.available();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	97	None	add
85	[BUG]  [BUGGY]  long  available  =  input.available()  -  numToSkip;  short  available  =  input.available()  -  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  -  numToSkip;  short  available  =  input.available()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    -    numToSkip;    short  available  =  input.available()  -  numToSkip;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	97	None	add
86	[BUG]  [BUGGY]  long  available  =  input.available()  -  numToSkip;  int  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  -  numToSkip;  int  numToSkip  =  input.length();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    -    numToSkip;    int  numToSkip  =  input.length();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	97	None	add
87	[BUG]  [BUGGY]  long  available  =  input.available  +  1;  int  numToSkip  =  input.readLine();  [CE]  cannot  find  symbol  available  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  1;  int  numToSkip  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  1;  int  numToSkip  =  input.readLine();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol  available	7	None	replace
88	[BUG]  [BUGGY]  long  available  =  input.availableNumber()  +  1;  int  numToSkip  =  input.readLine();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableNumber()  +  1;  int  numToSkip  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableNumber()  +  1;  int  numToSkip  =  input.readLine();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
89	[BUG]  [BUGGY]  long  available  =  input.available();  int  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available();  int  numToSkip  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available();  int  numToSkip  =  input.readLine();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.readLine();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	7	None	replace
90	[BUG]  [BUGGY]  Integer  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  numToSkip  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  numToSkip  =  input.readLine();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.readLine();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	7	None	replace
91	[BUG]  [BUGGY]  long  available  =  System.currentTimeMillis();  long  available  =  System.currentTimeMillis();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis();  long  available  =  System.currentTimeMillis();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    System.currentTimeMillis();    long  available  =  System.currentTimeMillis();	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	28	None	add
92	[BUG]  [BUGGY]  long  available  =  System.currentTimeMillis();  int  available  =  System.currentTimeMillis();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis();  int  available  =  System.currentTimeMillis();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    System.currentTimeMillis();    int  available  =  System.currentTimeMillis();	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	28	None	add
93	[BUG]  [BUGGY]  long  available  =  System.currentTimeMillis();  InputStream  input  =  System.currentTimeMillis();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis();  InputStream  input  =  System.currentTimeMillis();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    System.currentTimeMillis();    InputStream  input  =  System.currentTimeMillis();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	28	None	add
94	[BUG]  [BUGGY]  long  available  =  System.currentTimeMillis();  Long  available  =  System.currentTimeMillis();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis();  Long  available  =  System.currentTimeMillis();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    System.currentTimeMillis();    Long  available  =  System.currentTimeMillis();	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	28	None	add
95	[BUG]  [BUGGY]  long  available  =  System.currentTimeMillis();  InputStream  input  =  System.currentTimeMillis();  available  =  System.currentTimeMillis();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis();  InputStream  input  =  System.currentTimeMillis();  available  =  System.currentTimeMillis();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    System.currentTimeMillis();    InputStream  input  =  System.currentTimeMillis();  available  =  System.currentTimeMillis();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	28	None	add
96	[BUG]  [BUGGY]  long  available  =  System.currentTimeMillis();  long  available  =  System.currentTimeMillis();  numToSkip  =  0;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis();  long  available  =  System.currentTimeMillis();  numToSkip  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    System.currentTimeMillis();    long  available  =  System.currentTimeMillis();  numToSkip  =  0;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	28	None	add
97	[BUG]  [BUGGY]  long  available  =  System.currentTimeMillis();  InputStream  input  =  System.currentTimeMillis();  numToSkip  =  input.length();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis();  InputStream  input  =  System.currentTimeMillis();  numToSkip  =  input.length();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    System.currentTimeMillis();    InputStream  input  =  System.currentTimeMillis();  numToSkip  =  input.length();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	28	None	add
98	[BUG]  [BUGGY]  long  available  =  System.currentTimeMillis();  short  available  =  System.currentTimeMillis();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis();  short  available  =  System.currentTimeMillis();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    System.currentTimeMillis();    short  available  =  System.currentTimeMillis();	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	28	None	add
99	[BUG]  [BUGGY]  long  available  =  0L;  long  available  =  0L;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L;  long  available  =  0L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    0L;    long  available  =  0L;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	24	None	add
100	[BUG]  [BUGGY]  long  available  =  0L;  Long  available  =  0L;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L;  Long  available  =  0L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    0L;    Long  available  =  0L;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	24	None	add
101	[BUG]  [BUGGY]  long  available  =  0L;  InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0L;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L;  InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    0L;    InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0L;	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	24	None	add
102	[BUG]  [BUGGY]  long  available  =  0L;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    0L;    InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	24	None	add
103	[BUG]  [BUGGY]  long  available  =  0L;  InputStream  input  =  this.input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L;  InputStream  input  =  this.input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    0L;    InputStream  input  =  this.input.readInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	24	None	add
104	[BUG]  [BUGGY]  long  available  =  0L;  int  available  =  0L;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L;  int  available  =  0L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    0L;    int  available  =  0L;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	24	None	add
105	[BUG]  [BUGGY]  long  available  =  0L;  InputStream  input  =  this.input.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L;  InputStream  input  =  this.input.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    0L;    InputStream  input  =  this.input.getInputStream();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	24	None	add
106	[BUG]  [BUGGY]  long  available  =  0L;  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L;  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    0L;    InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip);	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	24	None	add
107	[BUG]  [BUGGY]  long  available  =  input.available()  /  numToSkip;  long  available  =  input.available()  /  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  numToSkip;  long  available  =  input.available()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    /    numToSkip;    long  available  =  input.available()  /  numToSkip;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	139	None	add
108	[BUG]  [BUGGY]  long  available  =  input.available()  /  numToSkip;  Long  available  =  input.available()  /  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  numToSkip;  Long  available  =  input.available()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    /    numToSkip;    Long  available  =  input.available()  /  numToSkip;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	139	None	add
109	[BUG]  [BUGGY]  long  available  =  input.available()  /  numToSkip;  int  numToSkip  =  input.available()  /  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  numToSkip;  int  numToSkip  =  input.available()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    /    numToSkip;    int  numToSkip  =  input.available()  /  numToSkip;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	139	None	add
110	[BUG]  [BUGGY]  long  available  =  input.available()  /  numToSkip;  int  available  =  input.available()  /  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  numToSkip;  int  available  =  input.available()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    /    numToSkip;    int  available  =  input.available()  /  numToSkip;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	139	None	add
111	[BUG]  [BUGGY]  long  available  =  input.available()  /  numToSkip;  InputStream  input  =  input.available()  /  numToSkip;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  numToSkip;  InputStream  input  =  input.available()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    /    numToSkip;    InputStream  input  =  input.available()  /  numToSkip;	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	139	None	add
112	[BUG]  [BUGGY]  long  available  =  input.available()  /  numToSkip;  short  available  =  input.available()  /  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  numToSkip;  short  available  =  input.available()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    /    numToSkip;    short  available  =  input.available()  /  numToSkip;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	139	None	add
113	[BUG]  [BUGGY]  long  available  =  input.available()  /  numToSkip;  int  numToSkip  =  input.available()  -  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  numToSkip;  int  numToSkip  =  input.available()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    /    numToSkip;    int  numToSkip  =  input.available()  -  numToSkip;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	139	None	add
114	[BUG]  [BUGGY]  long  available  =  input.available()  /  numToSkip;  int  numToSkip  =  input.available()  %  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  numToSkip;  int  numToSkip  =  input.available()  %  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    /    numToSkip;    int  numToSkip  =  input.available()  %  numToSkip;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	139	None	add
115	[BUG]  [BUGGY]  long  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  numToSkip  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  numToSkip  =  input.read();	  int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	78	None	replace
116	[BUG]  [BUGGY]  int  numToSkip  =  input.readFully(numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.readFully(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.readFully(numToSkip);	  int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	78	None	replace
117	[BUG]  [BUGGY]  int  numToSkip  =  input.read(buffer);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.read(buffer);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.read(buffer);	  int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	78	None	replace
118	[BUG]  [BUGGY]  long  available  =  input.getVersion()  *  numToSkip;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getVersion()  *  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getVersion()  *  numToSkip;	  long    available    =    input.getVersion()    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
119	[BUG]  [BUGGY]  long  available  =  input.getVersion()  /  numToSkip  +  1;  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getVersion()  /  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getVersion()  /  numToSkip  +  1;	  long    available    =    input.getVersion()    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
120	[BUG]  [BUGGY]  long  available  =  input.getVersion()  +  numToSkip;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getVersion()  +  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getVersion()  +  numToSkip;	  long    available    =    input.getVersion()    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
121	[BUG]  [BUGGY]  long  available  =  numToSkip.getVersion()  /  input;  [CE]  long  cannot  be  dereferenced  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip.getVersion()  /  input;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip.getVersion()  /  input;	  long    available    =    input.getVersion()    /    numToSkip;    	non-compiled	[CE]  long  cannot  be  dereferenced	64	None	replace
122	[BUG]  [BUGGY]  Long  available  =  input.getVersion()  /  numToSkip;  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.getVersion()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.getVersion()  /  numToSkip;	  long    available    =    input.getVersion()    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
123	[BUG]  [BUGGY]  InputStream  input  =  this.inputStream.read();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.inputStream.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.inputStream.read();	  long    available    =    input.read();    InputStream    input    =    this.inputStream.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	118	None	replace
124	[BUG]  [BUGGY]  int  available  =  input.read();  InputStream  input  =  this.inputStream.read();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.read();  InputStream  input  =  this.inputStream.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.read();  InputStream  input  =  this.inputStream.read();	  long    available    =    input.read();    InputStream    input    =    this.inputStream.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	118	None	replace
125	[BUG]  [BUGGY]  input  =  this.inputStream.read();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  input  =  this.inputStream.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	input  =  this.inputStream.read();	  long    available    =    input.read();    InputStream    input    =    this.inputStream.read();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	118	None	replace
126	[BUG]  [BUGGY]  long  available  =  this.inputStream.read();  InputStream  input  =  input.read();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  this.inputStream.read();  InputStream  input  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  this.inputStream.read();  InputStream  input  =  input.read();	  long    available    =    input.read();    InputStream    input    =    this.inputStream.read();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	118	None	replace
127	[BUG]  [BUGGY]  long  available  =  this.inputStream.read();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  this.inputStream.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  this.inputStream.read();	  long    available    =    input.read();    InputStream    input    =    this.inputStream.read();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	118	None	replace
128	[BUG]  [BUGGY]  int  available  =  input.read();  InputStream  input  =  getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.read();  InputStream  input  =  getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.read();  InputStream  input  =  getInputStream();	  long    available    =    input.read();    InputStream    input    =    getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	41	None	replace
129	[BUG]  [BUGGY]  n  =  input.read();  InputStream  input  =  getInputStream();  [CE]  cannot  find  symbol  n  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  n  =  input.read();  InputStream  input  =  getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	n  =  input.read();  InputStream  input  =  getInputStream();	  long    available    =    input.read();    InputStream    input    =    getInputStream();    	non-compiled	[CE]  cannot  find  symbol  n	41	None	replace
130	[BUG]  [BUGGY]  ImmutableInputStream  input  =  getInputStream();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  ImmutableInputStream  input  =  getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	ImmutableInputStream  input  =  getInputStream();	  long    available    =    input.read();    InputStream    input    =    getInputStream();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
131	[BUG]  [BUGGY]  long  available  =  input.availableToLong(numToSkip  +  1L);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToLong(numToSkip  +  1L);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToLong(numToSkip  +  1L);	  long    available    =    numToSkip    +    1L;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
132	[BUG]  [BUGGY]  long  available  =  input.availableToSkip  +  1L;  [CE]  cannot  find  symbol  availableToSkip  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToSkip  +  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToSkip  +  1L;	  long    available    =    numToSkip    +    1L;    	non-compiled	[CE]  cannot  find  symbol  availableToSkip	14	None	replace
133	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1L  +  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  numToSkip  +  1L  +  1L;	  long    available    =    numToSkip    +    1L;    	compilable	  [FE]  AssertionError  	14	3	replace
134	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1L  +  1L;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1L  +  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  +  1L  +  1L;	  long    available    =    numToSkip    +    1L;    	compilable	  [FE]  AssertionError  	14	3	replace
135	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  2;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  numToSkip  +  2;	  long    available    =    numToSkip    +    1L;    	compilable	  [FE]  AssertionError  	14	3	replace
136	[BUG]  [BUGGY]  long  available  =  numToSkip  +  2;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  2;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  +  2;	  long    available    =    numToSkip    +    1L;    	compilable	  [FE]  AssertionError  	14	3	replace
137	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  +  1L;  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  +  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  +  1L;	  long    available    =    numToSkip    +    1L;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
138	[BUG]  [BUGGY]  long  available  =  0L;  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L;  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0L;  int  numToSkip  =  input.readInt();	  long    available    =    0;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	146	None	replace
139	[BUG]  [BUGGY]  Integer  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  numToSkip  =  input.readInt();	  long    available    =    0;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	146	None	replace
140	[BUG]  [BUGGY]  long  available  =  0l;  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0l;  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0l;  int  numToSkip  =  input.readInt();	  long    available    =    0;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	146	None	replace
141	[BUG]  [BUGGY]  long  available  =  0;  int  numToSkip  =  input.readFully(numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0;  int  numToSkip  =  input.readFully(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0;  int  numToSkip  =  input.readFully(numToSkip);	  long    available    =    0;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	146	None	replace
142	[BUG]  [BUGGY]  long  available  =  0;  short  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0;  short  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0;  short  numToSkip  =  input.readInt();	  long    available    =    0;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	146	None	replace
143	[BUG]  [BUGGY]  long  available  =  input.length  -  numToSkip  +  1;  [CE]  cannot  find  symbol  length  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.length  -  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.length  -  numToSkip  +  1;	  long    available    =    input.length    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  length	50	None	replace
144	[BUG]  [BUGGY]  long  available  =  input.length  /  numToSkip;  [CE]  cannot  find  symbol  length  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.length  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.length  /  numToSkip;	  long    available    =    input.length    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  length	50	None	replace
145	[BUG]  [BUGGY]  long  available  =  numToSkip  -  input.length;  [CE]  cannot  find  symbol  length  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  -  input.length;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  -  input.length;	  long    available    =    input.length    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  length	50	None	replace
146	[BUG]  [BUGGY]  long  available  =  input.getLength()  -  numToSkip;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getLength()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getLength()  -  numToSkip;	  long    available    =    input.length    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
147	[BUG]  [BUGGY]  long  available  =  input.length  -  numToSkip,  buffersize;  [CE]  cannot  find  symbol  length  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.length  -  numToSkip,  buffersize;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.length  -  numToSkip,  buffersize;	  long    available    =    input.length    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  length	50	None	replace
148	[BUG]  [BUGGY]  long  available  =  input.length  -  1;  [CE]  cannot  find  symbol  length  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.length  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.length  -  1;	  long    available    =    input.length;    	non-compiled	[CE]  cannot  find  symbol  length	86	None	replace
149	[BUG]  [BUGGY]  long  available  =  input.getLength();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getLength();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getLength();	  long    available    =    input.length;    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
150	[BUG]  [BUGGY]  long  available  =  input.length  -  2;  [CE]  cannot  find  symbol  length  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.length  -  2;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.length  -  2;	  long    available    =    input.length;    	non-compiled	[CE]  cannot  find  symbol  length	86	None	replace
151	[BUG]  [BUGGY]  long  available  =  input.available  /  2;  [CE]  cannot  find  symbol  available  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  /  2;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  /  2;	  long    available    =    input.available    /    1;    	non-compiled	[CE]  cannot  find  symbol  available	15	None	replace
152	[BUG]  [BUGGY]  long  available  =  input.available  /  1L;  [CE]  cannot  find  symbol  available  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  /  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  /  1L;	  long    available    =    input.available    /    1;    	non-compiled	[CE]  cannot  find  symbol  available	15	None	replace
153	[BUG]  [BUGGY]  long  available  =  input.available  /  3;  [CE]  cannot  find  symbol  available  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  /  3;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  /  3;	  long    available    =    input.available    /    1;    	non-compiled	[CE]  cannot  find  symbol  available	15	None	replace
154	[BUG]  [BUGGY]  long  available  =  input.available  /  4;  [CE]  cannot  find  symbol  available  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  /  4;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  /  4;	  long    available    =    input.available    /    1;    	non-compiled	[CE]  cannot  find  symbol  available	15	None	replace
155	[BUG]  [BUGGY]  long  available  =  input.length  /  1;  [CE]  cannot  find  symbol  length  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.length  /  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.length  /  1;	  long    available    =    input.available    /    1;    	non-compiled	[CE]  cannot  find  symbol  length	15	None	replace
156	[BUG]  [BUGGY]  long  available  =  input.available  /  10;  [CE]  cannot  find  symbol  available  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  /  10;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  /  10;	  long    available    =    input.available    /    1;    	non-compiled	[CE]  cannot  find  symbol  available	15	None	replace
157	[BUG]  [BUGGY]  long  available  =  this.numToSkip  /  input.available;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  this.numToSkip  /  input.available;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  this.numToSkip  /  input.available;	  long    available    =    input.available    /    this.numToSkip;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	141	None	replace
158	[BUG]  [BUGGY]  long  available  =  input.available  *  this.numToSkip;  [CE]  cannot  find  symbol  available  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  *  this.numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  *  this.numToSkip;	  long    available    =    input.available    /    this.numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	141	None	replace
159	[BUG]  [BUGGY]  long  available  =  this.input.available  /  input.numToSkip;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  this.input.available  /  input.numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  this.input.available  /  input.numToSkip;	  long    available    =    input.available    /    this.numToSkip;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	141	None	replace
160	[BUG]  [BUGGY]  long  available  =  input.available  /  this.numToSkip  +  1;  [CE]  cannot  find  symbol  available  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  /  this.numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  /  this.numToSkip  +  1;	  long    available    =    input.available    /    this.numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	141	None	replace
161	[BUG]  [BUGGY]  Long  available  =  input.available  /  this.numToSkip;  [CE]  cannot  find  symbol  available  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.available  /  this.numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.available  /  this.numToSkip;	  long    available    =    input.available    /    this.numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	141	None	replace
162	[BUG]  [BUGGY]  int  available  =  input.available  /  this.numToSkip;  [CE]  cannot  find  symbol  available  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.available  /  this.numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.available  /  this.numToSkip;	  long    available    =    input.available    /    this.numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	141	None	replace
163	[BUG]  [BUGGY]  int  available  =  input.availableToInt()  -  numToSkip;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.availableToInt()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.availableToInt()  -  numToSkip;	  int    available    =    input.availableToInt();    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
164	[BUG]  [BUGGY]  int  available  =  input.availableToInt()  +  numToSkip;  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.availableToInt()  +  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.availableToInt()  +  numToSkip;	  int    available    =    input.availableToInt();    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
165	[BUG]  [BUGGY]  int  available  =  input.availableToInt()  -  1;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.availableToInt()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.availableToInt()  -  1;	  int    available    =    input.availableToInt();    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
166	[BUG]  [BUGGY]  int  available  =  input.availableToInt()  *  numToSkip;  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.availableToInt()  *  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.availableToInt()  *  numToSkip;	  int    available    =    input.availableToInt();    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
167	[BUG]  [BUGGY]  int  available  =  input.availableToInt()  +  1;  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.availableToInt()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.availableToInt()  +  1;	  int    available    =    input.availableToInt();    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
168	[BUG]  [BUGGY]  long  available  =  input.readLine()  *  numToSkip  -  1;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  *  numToSkip  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  *  numToSkip  -  1;	  long    available    =    input.readLine()    -    1;    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
169	[BUG]  [BUGGY]  long  available  =  input.readLine()  -  1L;  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  -  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  -  1L;	  long    available    =    input.readLine()    -    1;    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
170	[BUG]  [BUGGY]  long  available  =  input.readLine()  *  1;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  *  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  *  1;	  long    available    =    input.readLine()    -    1;    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
171	[BUG]  [BUGGY]  long  available  =  input.readLine()  /  1;  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  /  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  /  1;	  long    available    =    input.readLine()    -    1;    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
172	[BUG]  [BUGGY]  long  available  =  input.availableLong()  *  numToSkip;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  *  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  *  numToSkip;	  long    available    =    input.availableLong()    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
173	[BUG]  [BUGGY]  Long  available  =  input.availableLong()  +  numToSkip;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableLong()  +  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableLong()  +  numToSkip;	  long    available    =    input.availableLong()    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
174	[BUG]  [BUGGY]  long  available  =  input.availableInt()  +  numToSkip;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableInt()  +  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableInt()  +  numToSkip;	  long    available    =    input.availableLong()    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
175	[BUG]  [BUGGY]  long  available  =  input.availableLong()  +  numtoSkip;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  +  numtoSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  +  numtoSkip;	  long    available    =    input.availableLong()    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
176	[BUG]  [BUGGY]  int  available  =  input.read();  InputStream  input  =  this.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.read();  InputStream  input  =  this.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.read();  InputStream  input  =  this.getInputStream();	  long    available    =    input.read();    InputStream    input    =    this.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	42	None	replace
177	[BUG]  [BUGGY]  n  =  input.read();  InputStream  input  =  this.getInputStream();  [CE]  cannot  find  symbol  n  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  n  =  input.read();  InputStream  input  =  this.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	n  =  input.read();  InputStream  input  =  this.getInputStream();	  long    available    =    input.read();    InputStream    input    =    this.getInputStream();    	non-compiled	[CE]  cannot  find  symbol  n	42	None	replace
178	[BUG]  [BUGGY]  long  available  =  this.read();  InputStream  input  =  this.getInputStream();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  this.read();  InputStream  input  =  this.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  this.read();  InputStream  input  =  this.getInputStream();	  long    available    =    input.read();    InputStream    input    =    this.getInputStream();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	42	None	replace
179	[BUG]  [BUGGY]  input  =  this.getInputStream();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  input  =  this.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	input  =  this.getInputStream();	  long    available    =    input.read();    InputStream    input    =    this.getInputStream();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	42	None	replace
180	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  1L;	  long    available    =    1;    	compilable	  [FE]  AssertionError  	31	3	replace
181	[BUG]  [BUGGY]  long  available  =  1L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  1L;	  long    available    =    1;    	compilable	  [FE]  AssertionError  	31	3	replace
182	[BUG]  [BUGGY]  long  available  =  input.readFully(numToSkip,  0);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readFully(numToSkip,  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readFully(numToSkip,  0);	  long    available    =    input.readFully(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
183	[BUG]  [BUGGY]  long  available  =  input.readFully(numToSkip,  buffersize);  [CE]  cannot  find  symbol  buffersize  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readFully(numToSkip,  buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readFully(numToSkip,  buffersize);	  long    available    =    input.readFully(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffersize	57	None	replace
184	[BUG]  [BUGGY]  long  available  =  input.readFully(numToSkip  +  1);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readFully(numToSkip  +  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readFully(numToSkip  +  1);	  long    available    =    input.readFully(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
185	[BUG]  [BUGGY]  Long  available  =  input.readFully(numToSkip);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.readFully(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.readFully(numToSkip);	  long    available    =    input.readFully(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
186	[BUG]  [BUGGY]  long  available  =  input.readFully(0,  numToSkip);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readFully(0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readFully(0,  numToSkip);	  long    available    =    input.readFully(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
187	[BUG]  [BUGGY]  long  available  =  input.readFully(numToSkip,  n);  [CE]  cannot  find  symbol  n  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readFully(numToSkip,  n);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readFully(numToSkip,  n);	  long    available    =    input.readFully(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  n	57	None	replace
188	[BUG]  [BUGGY]  InputStream  input  =  this.input.getInputStream(numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.getInputStream(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.getInputStream(numToSkip);	  InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	83	None	replace
189	[BUG]  [BUGGY]  InputStream  input  =  this.input.getInputStream(),  numToSkip);  [CE]  ';'  expected  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.getInputStream(),  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.getInputStream(),  numToSkip);	  InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  ';'  expected	83	None	replace
190	[BUG]  [BUGGY]  InputStream  input  =  this.input.getOutputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.getOutputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.getOutputStream();	  InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	83	None	replace
191	[BUG]  [BUGGY]  InputStream  input  =  this.input.getInputStream(),  numToSkip;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.getInputStream(),  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.getInputStream(),  numToSkip;	  InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	83	None	replace
192	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.readInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.readInputStream();	  InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	83	None	replace
193	[BUG]  [BUGGY]  InputStream  input  =  this.input.getInputStream()  -  1;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.getInputStream()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.getInputStream()  -  1;	  InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	83	None	replace
194	[BUG]  [BUGGY]  long  available  =  input.availableLong()  -  numToSkip  +  1;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  -  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  -  numToSkip  +  1;	  long    available    =    input.availableLong()    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
195	[BUG]  [BUGGY]  Long  available  =  input.availableLong()  -  numToSkip;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableLong()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableLong()  -  numToSkip;	  long    available    =    input.availableLong()    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
196	[BUG]  [BUGGY]  long  available  =  input.availableInt()  -  numToSkip;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableInt()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableInt()  -  numToSkip;	  long    available    =    input.availableLong()    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
197	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  *  numToSkip;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  *  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  *  numToSkip;	  long    available    =    input.availableToInt()    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
198	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  -  numToSkip  +  1;  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  -  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  -  numToSkip  +  1;	  long    available    =    input.availableToInt()    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
199	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  -  numToSkip,  buffersize;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  -  numToSkip,  buffersize;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  -  numToSkip,  buffersize;	  long    available    =    input.availableToInt()    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
200	[BUG]  [BUGGY]  long  available  =  input.readFully(num);  [CE]  cannot  find  symbol  num  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readFully(num);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readFully(num);	  long    available    =    input.readFully(this);    	non-compiled	[CE]  cannot  find  symbol  num	61	None	replace
201	[BUG]  [BUGGY]  long  available  =  input.readFully(false);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readFully(false);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readFully(false);	  long    available    =    input.readFully(this);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
202	[BUG]  [BUGGY]  long  available  =  input.readFully(numSkip);  [CE]  cannot  find  symbol  numSkip  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readFully(numSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readFully(numSkip);	  long    available    =    input.readFully(this);    	non-compiled	[CE]  cannot  find  symbol  numSkip	61	None	replace
203	[BUG]  [BUGGY]  int  available  =  input.readFully(this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.readFully(this);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.readFully(this);	  long    available    =    input.readFully(this);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	61	None	replace
204	[BUG]  [BUGGY]  long  available  =  input.readFully(true);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readFully(true);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readFully(true);	  long    available    =    input.readFully(this);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
205	[BUG]  [BUGGY]  Long  available  =  input.available  /  numToSkip  +  1;  [CE]  cannot  find  symbol  available  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.available  /  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.available  /  numToSkip  +  1;	  Long    available    =    input.available    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	65	None	replace
206	[BUG]  [BUGGY]  Integer  available  =  input.available  /  numToSkip;  [CE]  cannot  find  symbol  available  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  available  =  input.available  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  available  =  input.available  /  numToSkip;	  Long    available    =    input.available    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	65	None	replace
207	[BUG]  [BUGGY]  Long  available  =  input.available  *  numToSkip;  [CE]  cannot  find  symbol  available  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.available  *  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.available  *  numToSkip;	  Long    available    =    input.available    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	65	None	replace
208	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1L;  long  available  =  numToSkip  +  1L;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1L;  long  available  =  numToSkip  +  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    +    1L;    long  available  =  numToSkip  +  1L;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	13	None	add
209	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1L;  Long  available  =  numToSkip  +  1L;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1L;  Long  available  =  numToSkip  +  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    +    1L;    Long  available  =  numToSkip  +  1L;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	13	None	add
210	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1L;  int  available  =  numToSkip  +  1L;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1L;  int  available  =  numToSkip  +  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    +    1L;    int  available  =  numToSkip  +  1L;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	13	None	add
211	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1L;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1L;  int  numToSkip  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    +    1L;    int  numToSkip  =  input.read();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	13	None	add
212	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1L;  int  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1L;  int  numToSkip  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    +    1L;    int  numToSkip  =  input.readLine();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	13	None	add
213	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1L;  short  available  =  numToSkip  +  1L;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1L;  short  available  =  numToSkip  +  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    +    1L;    short  available  =  numToSkip  +  1L;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	13	None	add
214	[BUG]  [BUGGY]  InputStream  input  =  getInputStream(numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  getInputStream(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  getInputStream(numToSkip);	  InputStream    input    =    getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	77	None	replace
215	[BUG]  [BUGGY]  InputStream  input  =  getInputStream(input);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  getInputStream(input);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  getInputStream(input);	  InputStream    input    =    getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	77	None	replace
216	[BUG]  [BUGGY]  InputStream  input  =  getInputStream(),  numToSkip);  [CE]  ';'  expected  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  getInputStream(),  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  getInputStream(),  numToSkip);	  InputStream    input    =    getInputStream();    	non-compiled	[CE]  ';'  expected	77	None	replace
217	[BUG]  [BUGGY]  InputStream  input  =  getInputStream(),  numToSkip;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  getInputStream(),  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  getInputStream(),  numToSkip;	  InputStream    input    =    getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	77	None	replace
218	[BUG]  [BUGGY]  InputStream  input  =  getInputStream().readLine();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  getInputStream().readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  getInputStream().readLine();	  InputStream    input    =    getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	77	None	replace
219	[BUG]  [BUGGY]  long  available  =  input.readUTF();  int  numToSkip  =  input.readInt();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readUTF();  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readUTF();  int  numToSkip  =  input.readInt();	  long    available    =    input.read();    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
220	[BUG]  [BUGGY]  long  available  =  input.readFully();  int  numToSkip  =  input.readInt();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readFully();  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readFully();  int  numToSkip  =  input.readInt();	  long    available    =    input.read();    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
221	[BUG]  [BUGGY]  long  available  =  input.read();  numToSkip  =  input.readInt();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read();  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read();  numToSkip  =  input.readInt();	  long    available    =    input.read();    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
222	[BUG]  [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip);	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	20	None	replace
223	[BUG]  [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip,  0);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip,  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip,  0);	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	20	None	replace
224	[BUG]  [BUGGY]  int  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip);	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	20	None	replace
225	[BUG]  [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  0);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  0);	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	20	None	replace
226	[BUG]  [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip  +  1);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip  +  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip  +  1);	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	20	None	replace
227	[BUG]  [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip,  buffersize);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip,  buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip,  buffersize);	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	20	None	replace
228	[BUG]  [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip,  skipped);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip,  skipped);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip,  skipped);	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	20	None	replace
229	[BUG]  [BUGGY]  InputStream  input  =  input.readLine();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  input.readLine();	  long    available    =    0;    InputStream    input    =    input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
230	[BUG]  [BUGGY]  int  available  =  0;  InputStream  input  =  input.readLine();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  InputStream  input  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  0;  InputStream  input  =  input.readLine();	  long    available    =    0;    InputStream    input    =    input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
231	[BUG]  [BUGGY]  InputStream  input  =  this.input.readLine();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.readLine();	  long    available    =    0;    InputStream    input    =    input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
232	[BUG]  [BUGGY]  InputStream  input  =  output.readLine();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  output.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  output.readLine();	  long    available    =    0;    InputStream    input    =    input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
233	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip,  n);  [CE]  cannot  find  symbol  n  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip,  n);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip,  n);	  long    available    =    input.availableLong(numToSkip,    buffersize);    	non-compiled	[CE]  cannot  find  symbol  n	74	None	replace
234	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip,  SKIP_BUF_SIZE);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip,  SKIP_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip,  SKIP_BUF_SIZE);	  long    available    =    input.availableLong(numToSkip,    buffersize);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
235	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip,  COPY_BUF_SIZE);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip,  COPY_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip,  COPY_BUF_SIZE);	  long    available    =    input.availableLong(numToSkip,    buffersize);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
236	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip,  c);  [CE]  cannot  find  symbol  c  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip,  c);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip,  c);	  long    available    =    input.availableLong(numToSkip,    buffersize);    	non-compiled	[CE]  cannot  find  symbol  c	74	None	replace
237	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip,  NEGATING_BUF_SIZE);  [CE]  cannot  find  symbol  NEGATING_BUF_SIZE  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip,  NEGATING_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip,  NEGATING_BUF_SIZE);	  long    available    =    input.availableLong(numToSkip,    buffersize);    	non-compiled	[CE]  cannot  find  symbol  NEGATING_BUF_SIZE	74	None	replace
238	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip,  NEGATING_BACK_SIZE);  [CE]  cannot  find  symbol  NEGATING_BACK_SIZE  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip,  NEGATING_BACK_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip,  NEGATING_BACK_SIZE);	  long    available    =    input.availableLong(numToSkip,    buffersize);    	non-compiled	[CE]  cannot  find  symbol  NEGATING_BACK_SIZE	74	None	replace
239	[BUG]  [BUGGY]  Integer  available  =  input.available;  [CE]  cannot  find  symbol  available  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  available  =  input.available;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  available  =  input.available;	  Long    available    =    input.available;    	non-compiled	[CE]  cannot  find  symbol  available	104	None	replace
240	[BUG]  [BUGGY]  Long  available  =  input.getAverageMillis();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.getAverageMillis();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.getAverageMillis();	  Long    available    =    input.available;    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
241	[BUG]  [BUGGY]  Long  available  =  input.getVersion();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.getVersion();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.getVersion();	  Long    available    =    input.available;    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
242	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  System.currentTimeMillis()  +  1;	  long    available    =    System.currentTimeMillis();    	compilable	  [FE]  AssertionError  	29	3	replace
243	[BUG]  [BUGGY]  long  available  =  System.currentTimeMillis()  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  System.currentTimeMillis()  +  1;	  long    available    =    System.currentTimeMillis();    	compilable	  [FE]  AssertionError  	29	3	replace
244	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  System.currentTimeMillis()  -  1;	  long    available    =    System.currentTimeMillis();    	compilable	  [FE]  AssertionError  	29	3	replace
245	[BUG]  [BUGGY]  long  available  =  System.currentTimeMillis()  -  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  System.currentTimeMillis()  -  1;	  long    available    =    System.currentTimeMillis();    	compilable	  [FE]  AssertionError  	29	3	replace
246	[BUG]  [BUGGY]  long  available  =  input.currentTimeMillis();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.currentTimeMillis();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.currentTimeMillis();	  long    available    =    System.currentTimeMillis();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
247	[BUG]  [BUGGY]  long  available  =  System.currentTimeMillis()  -  input.getVersion();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis()  -  input.getVersion();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  System.currentTimeMillis()  -  input.getVersion();	  long    available    =    System.currentTimeMillis();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
248	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis()  /  1000;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  System.currentTimeMillis()  /  1000;	  long    available    =    System.currentTimeMillis();    	compilable	  [FE]  AssertionError  	29	3	replace
249	[BUG]  [BUGGY]  long  available  =  System.currentTimeMillis()  /  1000;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis()  /  1000;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  System.currentTimeMillis()  /  1000;	  long    available    =    System.currentTimeMillis();    	compilable	  [FE]  AssertionError  	29	3	replace
250	[BUG]  [BUGGY]  long  available  =  input.readLine()  &  0xFFFF,  numToSkip;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  &  0xFFFF,  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  &  0xFFFF,  numToSkip;	  long    available    =    input.readLine()    &    0xFFFF;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
251	[BUG]  [BUGGY]  long  available  =  input.readLine()  -  0xFFFF;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  -  0xFFFF;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  -  0xFFFF;	  long    available    =    input.readLine()    &    0xFFFF;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
252	[BUG]  [BUGGY]  long  available  =  input.readLine()  &  0xFFFFL;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  &  0xFFFFL;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  &  0xFFFFL;	  long    available    =    input.readLine()    &    0xFFFF;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
253	[BUG]  [BUGGY]  long  available  =  input.readLine()  &  0xFFFF  +  1;  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  &  0xFFFF  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  &  0xFFFF  +  1;	  long    available    =    input.readLine()    &    0xFFFF;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
254	[BUG]  [BUGGY]  Long  available  =  input.readLine()  &  0xFFFF;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.readLine()  &  0xFFFF;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.readLine()  &  0xFFFF;	  long    available    =    input.readLine()    &    0xFFFF;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
255	[BUG]  [BUGGY]  long  available  =  input.readLine()  &  0xFFF;  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  &  0xFFF;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  &  0xFFF;	  long    available    =    input.readLine()    &    0xFFFF;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
256	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  2;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  numToSkip  /  2;	  long    available    =    numToSkip    /    1;    	compilable	  [FE]  AssertionError  	134	3	replace
257	[BUG]  [BUGGY]  long  available  =  numToSkip  /  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  2;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  /  2;	  long    available    =    numToSkip    /    1;    	compilable	  [FE]  AssertionError  	134	3	replace
258	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  numToSkip  -  1;	  long    available    =    numToSkip    /    1;    	compilable	  [FE]  AssertionError  	134	3	replace
259	[BUG]  [BUGGY]  long  available  =  numToSkip  -  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  -  1;	  long    available    =    numToSkip    /    1;    	compilable	  [FE]  AssertionError  	134	3	replace
260	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  numToSkip  /  1L;	  long    available    =    numToSkip    /    1;    	compilable	  [FE]  AssertionError  	134	2	replace
261	[BUG]  [BUGGY]  long  available  =  numToSkip  /  1L;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  /  1L;	  long    available    =    numToSkip    /    1;    	compilable	  [FE]  AssertionError  	134	2	replace
262	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  4;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  numToSkip  /  4;	  long    available    =    numToSkip    /    1;    	compilable	  [FE]  AssertionError  	134	3	replace
263	[BUG]  [BUGGY]  long  available  =  numToSkip  /  4;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  4;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  /  4;	  long    available    =    numToSkip    /    1;    	compilable	  [FE]  AssertionError  	134	3	replace
264	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  /  1;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  /  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  /  1;	  long    available    =    input.availableToInt()    +    1;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
265	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  *  1;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  *  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  *  1;	  long    available    =    input.availableToInt()    +    1;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
266	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  *  numToSkip  +  1;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  *  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  *  numToSkip  +  1;	  long    available    =    input.availableToInt()    +    1;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
267	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  *  1000  +  1;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  *  1000  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  *  1000  +  1;	  long    available    =    input.availableToInt()    +    1;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
268	[BUG]  [BUGGY]  InputStream  input  =  getInput(),  numToSkip;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  getInput(),  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  getInput(),  numToSkip;	  InputStream    input    =    getInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
269	[BUG]  [BUGGY]  InputStream  input  =  this.getInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.getInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.getInput();	  InputStream    input    =    getInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
270	[BUG]  [BUGGY]  InputStream  input  =  getInput(),  numToSkip);  [CE]  ';'  expected  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  getInput(),  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  getInput(),  numToSkip);	  InputStream    input    =    getInput();    	non-compiled	[CE]  ';'  expected	110	None	replace
271	[BUG]  [BUGGY]  InputStream  input  =  getInput().getChars(0,  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  getInput().getChars(0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  getInput().getChars(0,  numToSkip);	  InputStream    input    =    getInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
272	[BUG]  [BUGGY]  InputStream  input  =  getInput().getOutputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  getInput().getOutputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  getInput().getOutputStream();	  InputStream    input    =    getInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
273	[BUG]  [BUGGY]  InputStream  input  =  getInput().getChars(numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  getInput().getChars(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  getInput().getChars(numToSkip);	  InputStream    input    =    getInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
274	[BUG]  [BUGGY]  Integer  available  =  input.readInt();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  available  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  available  =  input.readInt();	  long    available    =    input.read();    int    available    =    input.read();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
275	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  available  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	Integer  available  =  input.read();	  long    available    =    input.read();    int    available    =    input.read();    	compilable	  [FE]  AssertionError  	39	3	replace
276	[BUG]  [BUGGY]  Integer  available  =  input.read();  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  available  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  available  =  input.read();	  long    available    =    input.read();    int    available    =    input.read();    	compilable	  [FE]  AssertionError  	39	3	replace
277	[BUG]  [BUGGY]  boolean  available  =  input.read();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  boolean  available  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	boolean  available  =  input.read();	  long    available    =    input.read();    int    available    =    input.read();    	non-compiled	[CE]  incompatible  types	39	None	replace
278	[BUG]  [BUGGY]  short  available  =  input.read();  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  short  available  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	short  available  =  input.read();	  long    available    =    input.read();    int    available    =    input.read();    	non-compiled	[CE]  possible  loss  of  precision	39	None	replace
279	[BUG]  [BUGGY]  InputStream  input  =(InputStream)this.input.readLine();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =(InputStream)this.input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =(InputStream)this.input.readLine();	  InputStream    input    =(InputStream)input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	112	None	replace
280	[BUG]  [BUGGY]  InputStream  input  =(InputStream)this.available.readLine();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =(InputStream)this.available.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =(InputStream)this.available.readLine();	  InputStream    input    =(InputStream)input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	112	None	replace
281	[BUG]  [BUGGY]  InputStream  input  =(InputStream)in.readLine();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =(InputStream)in.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =(InputStream)in.readLine();	  InputStream    input    =(InputStream)input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	112	None	replace
282	[BUG]  [BUGGY]  InputStream  input  =(InputStream)input.readLine()  +  1;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =(InputStream)input.readLine()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =(InputStream)input.readLine()  +  1;	  InputStream    input    =(InputStream)input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	112	None	replace
283	[BUG]  [BUGGY]  InputStream  input  =(InputStream)getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =(InputStream)getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =(InputStream)getInputStream();	  InputStream    input    =(InputStream)input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	112	None	replace
284	[BUG]  [BUGGY]  InputStream  input  =(InputStream)input.readLine()  *  numToSkip;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =(InputStream)input.readLine()  *  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =(InputStream)input.readLine()  *  numToSkip;	  InputStream    input    =(InputStream)input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	112	None	replace
285	[BUG]  [BUGGY]  long  available  =  input.readFully()  -  numToSkip;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readFully()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readFully()  -  numToSkip;	  long    available    =    input.readFully();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
286	[BUG]  [BUGGY]  Long  available  =  input.readFully();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.readFully();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.readFully();	  long    available    =    input.readFully();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
287	[BUG]  [BUGGY]  int  available  =  input.readFully();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.readFully();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.readFully();	  long    available    =    input.readFully();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
288	[BUG]  [BUGGY]  long  available  =  input.readFully()  &&  numToSkip;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readFully()  &&  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readFully()  &&  numToSkip;	  long    available    =    input.readFully();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
289	[BUG]  [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip);	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	19	None	replace
290	[BUG]  [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip,  0);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip,  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip,  0);	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	19	None	replace
291	[BUG]  [BUGGY]  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip);	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	19	None	replace
292	[BUG]  [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip,  buffersize);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip,  buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip,  buffersize);	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	19	None	replace
293	[BUG]  [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip,  skipped);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip,  skipped);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip,  skipped);	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	19	None	replace
294	[BUG]  [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  0);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  InputStreamInputStream(input.readLine(),  0);	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	19	None	replace
295	[BUG]  [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip,  false);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip,  false);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip,  false);	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	19	None	replace
296	[BUG]  [BUGGY]  long  available  =  input.read(COPY_BUF_SIZE);  [CE]  no  suitable  method  found  for  read(int)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(COPY_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(COPY_BUF_SIZE);	  long    available    =    input.read(buffersize);    	non-compiled	[CE]  no  suitable  method  found  for  read(int)	106	None	replace
297	[BUG]  [BUGGY]  long  available  =  input.read(numToSkip);  [CE]  no  suitable  method  found  for  read(long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(numToSkip);	  long    available    =    input.read(buffersize);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	106	None	replace
298	[BUG]  [BUGGY]  long  available  =  input.read(chunk);  [CE]  cannot  find  symbol  chunk  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(chunk);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(chunk);	  long    available    =    input.read(buffersize);    	non-compiled	[CE]  cannot  find  symbol  chunk	106	None	replace
299	[BUG]  [BUGGY]  long  available  =  input.read(buffer);  [CE]  cannot  find  symbol  buffer  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(buffer);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(buffer);	  long    available    =    input.read(buffersize);    	non-compiled	[CE]  cannot  find  symbol  buffer	106	None	replace
300	[BUG]  [BUGGY]  long  available  =  input.read(0L);  [CE]  no  suitable  method  found  for  read(long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(0L);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(0L);	  long    available    =    input.read(buffersize);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	106	None	replace
301	[BUG]  [BUGGY]  long  available  =  input.read(this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(this);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(this);	  long    available    =    input.read(buffersize);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	106	None	replace
302	[BUG]  [BUGGY]  long  available  =  input.availableInt()  -  1;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableInt()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableInt()  -  1;	  long    available    =    input.availableInt();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
303	[BUG]  [BUGGY]  long  available  =  input.availableInt()  /  numToSkip;  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableInt()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableInt()  /  numToSkip;	  long    available    =    input.availableInt();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
304	[BUG]  [BUGGY]  Long  available  =  input.availableInt();  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableInt();	  long    available    =    input.availableInt();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
305	[BUG]  [BUGGY]  long  available  =  input.availableInt()  +  1;  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableInt()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableInt()  +  1;	  long    available    =    input.availableInt();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
306	[BUG]  [BUGGY]  long  available  =  input.availableLong()  /  numToSkip  +  1;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  /  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  /  numToSkip  +  1;	  long    available    =    input.availableLong()    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
307	[BUG]  [BUGGY]  Long  available  =  input.availableLong()  /  numToSkip;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableLong()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableLong()  /  numToSkip;	  long    available    =    input.availableLong()    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
308	[BUG]  [BUGGY]  long  available  =  numToSkip.availableLong()  /  input;  [CE]  long  cannot  be  dereferenced  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip.availableLong()  /  input;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip.availableLong()  /  input;	  long    available    =    input.availableLong()    /    numToSkip;    	non-compiled	[CE]  long  cannot  be  dereferenced	53	None	replace
309	[BUG]  [BUGGY]  long  available  =  input.read()  -  numToSkip;  long  available  =  input.read()  -  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  -  numToSkip;  long  available  =  input.read()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.read()    -    numToSkip;    long  available  =  input.read()  -  numToSkip;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	47	None	add
310	[BUG]  [BUGGY]  long  available  =  input.read()  -  numToSkip;  Long  available  =  input.read()  -  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  -  numToSkip;  Long  available  =  input.read()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.read()    -    numToSkip;    Long  available  =  input.read()  -  numToSkip;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	47	None	add
311	[BUG]  [BUGGY]  long  available  =  input.read()  -  numToSkip;  int  available  =  input.read()  -  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  -  numToSkip;  int  available  =  input.read()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.read()    -    numToSkip;    int  available  =  input.read()  -  numToSkip;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	47	None	add
312	[BUG]  [BUGGY]  long  available  =  input.read()  -  numToSkip;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  -  numToSkip;  int  numToSkip  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.read()    -    numToSkip;    int  numToSkip  =  input.read();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	47	None	add
313	[BUG]  [BUGGY]  long  available  =  input.read()  -  numToSkip;  short  available  =  input.read()  -  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  -  numToSkip;  short  available  =  input.read()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.read()    -    numToSkip;    short  available  =  input.read()  -  numToSkip;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	47	None	add
314	[BUG]  [BUGGY]  long  available  =  input.read()  -  numToSkip;  int  numToSkip  =  input.read()  +  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  -  numToSkip;  int  numToSkip  =  input.read()  +  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.read()    -    numToSkip;    int  numToSkip  =  input.read()  +  numToSkip;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	47	None	add
315	[BUG]  [BUGGY]  long  available  =  input.read()  -  numToSkip;  int  numToSkip  =  input.read()  *  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  -  numToSkip;  int  numToSkip  =  input.read()  *  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.read()    -    numToSkip;    int  numToSkip  =  input.read()  *  numToSkip;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	47	None	add
316	[BUG]  [BUGGY]  long  available  =  input.read()  -  numToSkip;  InputStream  input  =  getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  -  numToSkip;  InputStream  input  =  getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.read()    -    numToSkip;    InputStream  input  =  getInputStream();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	47	None	add
317	[BUG]  [BUGGY]  long  available  =  1;  long  available  =  1;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1;  long  available  =  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    1;    long  available  =  1;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	30	None	add
318	[BUG]  [BUGGY]  long  available  =  1;  InputStream  input  =  this.input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1;  InputStream  input  =  this.input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    1;    InputStream  input  =  this.input.readInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	30	None	add
319	[BUG]  [BUGGY]  long  available  =  1;  InputStream  input  =  this.input.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1;  InputStream  input  =  this.input.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    1;    InputStream  input  =  this.input.getInputStream();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	30	None	add
320	[BUG]  [BUGGY]  long  available  =  1;  InputStream  input  =  new  ByteArrayInputStream(numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1;  InputStream  input  =  new  ByteArrayInputStream(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    1;    InputStream  input  =  new  ByteArrayInputStream(numToSkip);	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	30	None	add
321	[BUG]  [BUGGY]  long  available  =  1;  InputStream  input  =  this.input.readInput(numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1;  InputStream  input  =  this.input.readInput(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    1;    InputStream  input  =  this.input.readInput(numToSkip);	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	30	None	add
322	[BUG]  [BUGGY]  long  available  =  1;  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1;  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    1;    InputStream  input  =  new  ByteArrayInputStream(input.readLine());	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	30	None	add
323	[BUG]  [BUGGY]  long  available  =  1;  int  available  =  1;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1;  int  available  =  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    1;    int  available  =  1;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	30	None	add
324	[BUG]  [BUGGY]  long  available  =  1;  InputStream  input  =  this.input.getOutputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1;  InputStream  input  =  this.input.getOutputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    1;    InputStream  input  =  this.input.getOutputStream();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	30	None	add
325	[BUG]  [BUGGY]  long  available  =  input.readLine()  *  numToSkip;  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  *  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  *  numToSkip;	  long    available    =    input.readLine()    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
326	[BUG]  [BUGGY]  long  available  =  input.readLine()  /  numToSkip;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  /  numToSkip;	  long    available    =    input.readLine()    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
327	[BUG]  [BUGGY]  long  available  =  input.readLine()  +  this.numToSkip;  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  +  this.numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  +  this.numToSkip;	  long    available    =    input.readLine()    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
328	[BUG]  [BUGGY]  Long  available  =  input.readLine()  +  numToSkip;  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.readLine()  +  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.readLine()  +  numToSkip;	  long    available    =    input.readLine()    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
329	[BUG]  [BUGGY]  long  available  =  input.readLine()  +  numToSkip,  buffersize;  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  +  numToSkip,  buffersize;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  +  numToSkip,  buffersize;	  long    available    =    input.readLine()    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
330	[BUG]  [BUGGY]  long  available  =  input.getAstRoot(COPY_BUF_SIZE  +  numToSkip,  buffersize);  [CE]  cannot  find  symbol  buffersize  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAstRoot(COPY_BUF_SIZE  +  numToSkip,  buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAstRoot(COPY_BUF_SIZE  +  numToSkip,  buffersize);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE    +    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffersize	125	None	replace
331	[BUG]  [BUGGY]  long  available  =  input.getAstRoot(COPY_BUF_SIZE  /  numToSkip);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAstRoot(COPY_BUF_SIZE  /  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAstRoot(COPY_BUF_SIZE  /  numToSkip);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE    +    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
332	[BUG]  [BUGGY]  long  available  =  input.getAstRoot(COPY_BUF_SIZE  *  numToSkip);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAstRoot(COPY_BUF_SIZE  *  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAstRoot(COPY_BUF_SIZE  *  numToSkip);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE    +    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
333	[BUG]  [BUGGY]  int  available  =  input.getAstRoot(COPY_BUF_SIZE  +  numToSkip);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.getAstRoot(COPY_BUF_SIZE  +  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.getAstRoot(COPY_BUF_SIZE  +  numToSkip);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE    +    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
334	[BUG]  [BUGGY]  long  available  =  input.getAstRoot(COPY_BUF_SIZE  -  numToSkip);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAstRoot(COPY_BUF_SIZE  -  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAstRoot(COPY_BUF_SIZE  -  numToSkip);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE    +    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
335	[BUG]  [BUGGY]  Long  available  =  input.getAstRoot(COPY_BUF_SIZE  +  numToSkip);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.getAstRoot(COPY_BUF_SIZE  +  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.getAstRoot(COPY_BUF_SIZE  +  numToSkip);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE    +    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
336	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	Integer  available  =  0;	  long    available    =    0;    int    available    =    0;    	compilable	  [FE]  AssertionError  	89	3	replace
337	[BUG]  [BUGGY]  Integer  available  =  0;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  available  =  0;	  long    available    =    0;    int    available    =    0;    	compilable	  [FE]  AssertionError  	89	3	replace
338	[BUG]  [BUGGY]  short  available  =  0;  int  available  =  0;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  short  available  =  0;  int  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	short  available  =  0;  int  available  =  0;	  long    available    =    0;    int    available    =    0;    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	89	None	replace
339	[BUG]  [BUGGY]  Long  available  =  input.read();  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.read();	  long    available    =    input.read();    Long    available    =    input.read();    	non-compiled	[CE]  incompatible  types	40	None	replace
340	[BUG]  [BUGGY]  InputStream  input  =  input.read();  Long  available  =  input.read();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  input.read();  Long  available  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  input.read();  Long  available  =  input.read();	  long    available    =    input.read();    Long    available    =    input.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	40	None	replace
341	[BUG]  [BUGGY]  int  available  =  input.read();  Long  available  =  input.read();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.read();  Long  available  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.read();  Long  available  =  input.read();	  long    available    =    input.read();    Long    available    =    input.read();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	40	None	replace
342	[BUG]  [BUGGY]  InputStream  input  =  input.read();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  input.read();	  long    available    =    input.read();    InputStream    input    =    input.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	117	None	replace
343	[BUG]  [BUGGY]  int  available  =  input.read();  InputStream  input  =  input.read();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.read();  InputStream  input  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.read();  InputStream  input  =  input.read();	  long    available    =    input.read();    InputStream    input    =    input.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	117	None	replace
344	[BUG]  [BUGGY]  n  =  input.read();  InputStream  input  =  input.read();  [CE]  cannot  find  symbol  n  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  n  =  input.read();  InputStream  input  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	n  =  input.read();  InputStream  input  =  input.read();	  long    available    =    input.read();    InputStream    input    =    input.read();    	non-compiled	[CE]  cannot  find  symbol  n	117	None	replace
345	[BUG]  [BUGGY]  long  available  =  input  ==  null?  input.readLine()  :  numToSkip;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input  ==  null?  input.readLine()  :  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input  ==  null?  input.readLine()  :  numToSkip;	  long    available    =    input!=    null?    input.readLine()    :    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
346	[BUG]  [BUGGY]  long  available  =  input!=  null?  input.readLine()  :  0L;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  input.readLine()  :  0L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  input.readLine()  :  0L;	  long    available    =    input!=    null?    input.readLine()    :    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
347	[BUG]  [BUGGY]  long  available  =  input!=  null?  this.input.readLine()  :  numToSkip;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  this.input.readLine()  :  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  this.input.readLine()  :  numToSkip;	  long    available    =    input!=    null?    input.readLine()    :    numToSkip;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	32	None	replace
348	[BUG]  [BUGGY]  long  available  =  input.available  -  numToSkip  +  2;  [CE]  cannot  find  symbol  available  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  -  numToSkip  +  2;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  -  numToSkip  +  2;	  long    available    =    input.available    -    numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	10	None	replace
349	[BUG]  [BUGGY]  long  available  =  input.getVersion()  -  numToSkip  +  1;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getVersion()  -  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getVersion()  -  numToSkip  +  1;	  long    available    =    input.available    -    numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
350	[BUG]  [BUGGY]  long  available  =  input.available  -  numToSkip  +  1L;  [CE]  cannot  find  symbol  available  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  -  numToSkip  +  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  -  numToSkip  +  1L;	  long    available    =    input.available    -    numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	10	None	replace
351	[BUG]  [BUGGY]  long  available  =  input.available  -  numToSkip  +  3;  [CE]  cannot  find  symbol  available  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  -  numToSkip  +  3;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  -  numToSkip  +  3;	  long    available    =    input.available    -    numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	10	None	replace
352	[BUG]  [BUGGY]  Long  available  =  input.available  -  numToSkip  +  1;  [CE]  cannot  find  symbol  available  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.available  -  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.available  -  numToSkip  +  1;	  long    available    =    input.available    -    numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	10	None	replace
353	[BUG]  [BUGGY]  long  available  =  input.read(this.buffer,  0,  numToSkip);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(this.buffer,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(this.buffer,  0,  numToSkip);	  long    available    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	130	None	replace
354	[BUG]  [BUGGY]  long  available  =  input.read(data,  0,  numToSkip);  [CE]  cannot  find  symbol  data  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(data,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(data,  0,  numToSkip);	  long    available    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  data	130	None	replace
355	[BUG]  [BUGGY]  long  available  =  input.read(buffer,  0,  numToSkip  +  1);  [CE]  cannot  find  symbol  buffer  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(buffer,  0,  numToSkip  +  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(buffer,  0,  numToSkip  +  1);	  long    available    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffer	130	None	replace
356	[BUG]  [BUGGY]  long  available  =  input.read(SKIP_BUF_SIZE,  0,  numToSkip);  [CE]  no  suitable  method  found  for  read(int,int,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(SKIP_BUF_SIZE,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(SKIP_BUF_SIZE,  0,  numToSkip);	  long    available    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  no  suitable  method  found  for  read(int,int,long)	130	None	replace
357	[BUG]  [BUGGY]  long  available  =  input.read(buff,  0,  numToSkip);  [CE]  cannot  find  symbol  buff  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(buff,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(buff,  0,  numToSkip);	  long    available    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buff	130	None	replace
358	[BUG]  [BUGGY]  long  available  =  input.read(BUFFER,  0,  numToSkip);  [CE]  cannot  find  symbol  BUFFER  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(BUFFER,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(BUFFER,  0,  numToSkip);	  long    available    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  BUFFER	130	None	replace
359	[BUG]  [BUGGY]  int  available  =  numToSkip  +  1;  int  numToSkip  =  numToSkip  +  1;  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  numToSkip  +  1;  int  numToSkip  =  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  numToSkip  +  1;  int  numToSkip  =  numToSkip  +  1;	  long    available    =    numToSkip    +    1;    long    numToSkip    =    numToSkip    +    1;    	non-compiled	[CE]  possible  loss  of  precision	4	None	replace
360	[BUG]  [BUGGY]  int  available  =  numToSkip  +  1;  long  numToSkip  =  numToSkip  +  1;  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  numToSkip  +  1;  long  numToSkip  =  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  numToSkip  +  1;  long  numToSkip  =  numToSkip  +  1;	  long    available    =    numToSkip    +    1;    long    numToSkip    =    numToSkip    +    1;    	non-compiled	[CE]  possible  loss  of  precision	4	None	replace
361	[BUG]  [BUGGY]  long  available  =  input.available  +  1;  long  numToSkip  =  input.available  +  1;  [CE]  cannot  find  symbol  available  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  1;  long  numToSkip  =  input.available  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  1;  long  numToSkip  =  input.available  +  1;	  long    available    =    numToSkip    +    1;    long    numToSkip    =    numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	4	None	replace
362	[BUG]  [BUGGY]  long  numToSkip  =  numToSkip  +  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  numToSkip  =  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  numToSkip  =  numToSkip  +  1;	  long    available    =    numToSkip    +    1;    long    numToSkip    =    numToSkip    +    1;    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	4	None	replace
363	[BUG]  [BUGGY]  long  available  =  input  ==  null?  input.readLine()  :  -input.readLine();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input  ==  null?  input.readLine()  :  -input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input  ==  null?  input.readLine()  :  -input.readLine();	  long    available    =    input!=    null?    input.readLine()    :    -input.readLine();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
364	[BUG]  [BUGGY]  long  available  =  input!=  null?  this.input.readLine()  :  -input.readLine();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  this.input.readLine()  :  -input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  this.input.readLine()  :  -input.readLine();	  long    available    =    input!=    null?    input.readLine()    :    -input.readLine();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	120	None	replace
365	[BUG]  [BUGGY]  long  available  =  input!=  null?  output.readLine()  :  -input.readLine();  [CE]  cannot  find  symbol  output  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  output.readLine()  :  -input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  output.readLine()  :  -input.readLine();	  long    available    =    input!=    null?    input.readLine()    :    -input.readLine();    	non-compiled	[CE]  cannot  find  symbol  output	120	None	replace
366	[BUG]  [BUGGY]  long  available  =  input!=  null?  0  :  input.readLine()  :  -input.readLine();  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  0  :  input.readLine()  :  -input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  0  :  input.readLine()  :  -input.readLine();	  long    available    =    input!=    null?    input.readLine()    :    -input.readLine();    	non-compiled	[CE]  ';'  expected	120	None	replace
367	[BUG]  [BUGGY]  long  available  =  input!=  null?  -1  :  -input.readLine();  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  -1  :  -input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  -1  :  -input.readLine();	  long    available    =    input!=    null?    input.readLine()    :    -input.readLine();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
368	[BUG]  [BUGGY]  Integer  available  =  input.readInt();  int  numToSkip  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  available  =  input.readInt();  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  available  =  input.readInt();  int  numToSkip  =  input.readInt();	  long    available    =    input.read();    int    numToSkip    =    input.read();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
369	[BUG]  [BUGGY]  Integer  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  numToSkip  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  numToSkip  =  input.read();	  long    available    =    input.read();    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	43	None	replace
370	[BUG]  [BUGGY]  long  available  =  input.read();  int  numToSkip  =  input.read(0,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read();  int  numToSkip  =  input.read(0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read();  int  numToSkip  =  input.read(0,  numToSkip);	  long    available    =    input.read();    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	43	None	replace
371	[BUG]  [BUGGY]  long  available  =  input.getNumberOfSkips()  +  1;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getNumberOfSkips()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getNumberOfSkips()  +  1;	  long    available    =    input.numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
372	[BUG]  [BUGGY]  long  available  =  input.getNumberOfFractions()  +  1;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getNumberOfFractions()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getNumberOfFractions()  +  1;	  long    available    =    input.numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
373	[BUG]  [BUGGY]  long  available  =  input.availableNumberOfLines  +  1;  [CE]  cannot  find  symbol  availableNumberOfLines  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableNumberOfLines  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableNumberOfLines  +  1;	  long    available    =    input.numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol  availableNumberOfLines	116	None	replace
374	[BUG]  [BUGGY]  int  numToSkip  =  input.read(this.buffer,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.read(this.buffer,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.read(this.buffer,  numToSkip);	  int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	113	None	replace
375	[BUG]  [BUGGY]  long  numToSkip  =  input.read(buffersize);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  numToSkip  =  input.read(buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  numToSkip  =  input.read(buffersize);	  int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	113	None	replace
376	[BUG]  [BUGGY]  int  numToSkip  =  input.read(data,  buffersize);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.read(data,  buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.read(data,  buffersize);	  int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	113	None	replace
377	[BUG]  [BUGGY]  int  numToSkip  =  input.read(buffer,  0);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.read(buffer,  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.read(buffer,  0);	  int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	113	None	replace
378	[BUG]  [BUGGY]  long  available  =  input.readLine()  -  numToSkip  +  1;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  -  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  -  numToSkip  +  1;	  long    available    =    input.readLine()    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
379	[BUG]  [BUGGY]  Long  available  =  input.readLine()  -  numToSkip;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.readLine()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.readLine()  -  numToSkip;	  long    available    =    input.readLine()    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
380	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip  -  numToSkip,  buffersize);  [CE]  cannot  find  symbol  buffersize  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip  -  numToSkip,  buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip  -  numToSkip,  buffersize);	  long    available    =    input.availableLong(numToSkip    -    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffersize	76	None	replace
381	[BUG]  [BUGGY]  long  available  =  input.availableLong(0,  numToSkip  -  numToSkip);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(0,  numToSkip  -  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(0,  numToSkip  -  numToSkip);	  long    available    =    input.availableLong(numToSkip    -    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
382	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip  -  numToSkip  +  1);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip  -  numToSkip  +  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip  -  numToSkip  +  1);	  long    available    =    input.availableLong(numToSkip    -    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
383	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip,  numToSkip  -  numToSkip);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip,  numToSkip  -  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip,  numToSkip  -  numToSkip);	  long    available    =    input.availableLong(numToSkip    -    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
384	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip  *  numToSkip);  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip  *  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip  *  numToSkip);	  long    available    =    input.availableLong(numToSkip    -    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
385	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip  +  numToSkip);  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip  +  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip  +  numToSkip);	  long    available    =    input.availableLong(numToSkip    -    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
386	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  *  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  input.available()  *  numToSkip;	  long    available    =    input.available()    /    numToSkip;    	compilable	  [FE]  AssertionError  	140	3	replace
387	[BUG]  [BUGGY]  long  available  =  input.available()  *  numToSkip;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  *  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available()  *  numToSkip;	  long    available    =    input.available()    /    numToSkip;    	compilable	  [FE]  AssertionError  	140	3	replace
388	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  input.available()  /  numToSkip  +  1;	  long    available    =    input.available()    /    numToSkip;    	compilable	  [FE]  AssertionError  	140	3	replace
389	[BUG]  [BUGGY]  long  available  =  input.available()  /  numToSkip  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available()  /  numToSkip  +  1;	  long    available    =    input.available()    /    numToSkip;    	compilable	  [FE]  AssertionError  	140	3	replace
390	[BUG]  [BUGGY]  int  available  =  input.available()  /  numToSkip;  [CE]  possible  loss  of  precision  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.available()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.available()  /  numToSkip;	  long    available    =    input.available()    /    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	140	None	replace
391	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  numToSkip  *  2;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  input.available()  /  numToSkip  *  2;	  long    available    =    input.available()    /    numToSkip;    	compilable	  [FE]  AssertionError  	140	3	replace
392	[BUG]  [BUGGY]  long  available  =  input.available()  /  numToSkip  *  2;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  numToSkip  *  2;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available()  /  numToSkip  *  2;	  long    available    =    input.available()    /    numToSkip;    	compilable	  [FE]  AssertionError  	140	3	replace
393	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  numToSkip  +  2;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  input.available()  /  numToSkip  +  2;	  long    available    =    input.available()    /    numToSkip;    	compilable	  [FE]  AssertionError  	140	3	replace
394	[BUG]  [BUGGY]  long  available  =  input.available()  /  numToSkip  +  2;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  numToSkip  +  2;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available()  /  numToSkip  +  2;	  long    available    =    input.available()    /    numToSkip;    	compilable	  [FE]  AssertionError  	140	3	replace
395	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  *  numToSkip  -  1;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  *  numToSkip  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  *  numToSkip  -  1;	  long    available    =    input.availableToInt()    -    1;    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
396	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  -  1L;  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  -  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  -  1L;	  long    available    =    input.availableToInt()    -    1;    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
397	[BUG]  [BUGGY]  short  available  =  0;  int  available  =  input.read();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  short  available  =  0;  int  available  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	short  available  =  0;  int  available  =  input.read();	  long    available    =    0;    int    available    =    input.read();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	94	None	replace
398	[BUG]  [BUGGY]  int  numToSkip  =  input.read(buffersize,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.read(buffersize,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.read(buffersize,  numToSkip);	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	99	None	replace
399	[BUG]  [BUGGY]  long  available  =  input.available  +  1;  int  numToSkip  =  input.read(buffersize);  [CE]  cannot  find  symbol  available  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  1;  int  numToSkip  =  input.read(buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  1;  int  numToSkip  =  input.read(buffersize);	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  cannot  find  symbol  available	99	None	replace
400	[BUG]  [BUGGY]  Integer  numToSkip  =  input.read(buffersize);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  numToSkip  =  input.read(buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  numToSkip  =  input.read(buffersize);	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	99	None	replace
401	[BUG]  [BUGGY]  long  available  =  input.read(numToSkip  +  1);  int  numToSkip  =  input.read(buffersize);  [CE]  no  suitable  method  found  for  read(long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(numToSkip  +  1);  int  numToSkip  =  input.read(buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(numToSkip  +  1);  int  numToSkip  =  input.read(buffersize);	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	99	None	replace
402	[BUG]  [BUGGY]  long  available  =  input.read(numToSkip,  0);  [CE]  no  suitable  method  found  for  read(long,int)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(numToSkip,  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(numToSkip,  0);	  long    available    =    input.read(buffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  read(long,int)	131	None	replace
403	[BUG]  [BUGGY]  long  available  =  input.read(this.buffer,  0);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(this.buffer,  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(this.buffer,  0);	  long    available    =    input.read(buffer,    0);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	131	None	replace
404	[BUG]  [BUGGY]  long  available  =  input.read(data,  0);  [CE]  cannot  find  symbol  data  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(data,  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(data,  0);	  long    available    =    input.read(buffer,    0);    	non-compiled	[CE]  cannot  find  symbol  data	131	None	replace
405	[BUG]  [BUGGY]  long  available  =  input.read(0,  numToSkip);  [CE]  no  suitable  method  found  for  read(int,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(0,  numToSkip);	  long    available    =    input.read(buffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  read(int,long)	131	None	replace
406	[BUG]  [BUGGY]  long  available  =  input.read(buff,  0);  [CE]  cannot  find  symbol  buff  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(buff,  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(buff,  0);	  long    available    =    input.read(buffer,    0);    	non-compiled	[CE]  cannot  find  symbol  buff	131	None	replace
407	[BUG]  [BUGGY]  long  available  =  input.getAstRoot(SKIP_BUF_SIZE);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAstRoot(SKIP_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAstRoot(SKIP_BUF_SIZE);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
408	[BUG]  [BUGGY]  long  available  =  input.getAstRoot(COPY_BUF_SIZE,  buffersize);  [CE]  cannot  find  symbol  buffersize  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAstRoot(COPY_BUF_SIZE,  buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAstRoot(COPY_BUF_SIZE,  buffersize);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE);    	non-compiled	[CE]  cannot  find  symbol  buffersize	123	None	replace
409	[BUG]  [BUGGY]  long  available  =  input.getAstRoot(COPY_BUF_SIZE,  n);  [CE]  cannot  find  symbol  n  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAstRoot(COPY_BUF_SIZE,  n);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAstRoot(COPY_BUF_SIZE,  n);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE);    	non-compiled	[CE]  cannot  find  symbol  n	123	None	replace
410	[BUG]  [BUGGY]  int  available  =  input.availableInt();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.availableInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.availableInt();	  int    available    =    input.availableLong();    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
411	[BUG]  [BUGGY]  int  available  =  input.availableLong()  -  numToSkip;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.availableLong()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.availableLong()  -  numToSkip;	  int    available    =    input.availableLong();    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
412	[BUG]  [BUGGY]  int  available  =  input.availableLong()  +  numToSkip;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.availableLong()  +  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.availableLong()  +  numToSkip;	  int    available    =    input.availableLong();    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
413	[BUG]  [BUGGY]  Integer  available  =  input.availableLong();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  available  =  input.availableLong();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  available  =  input.availableLong();	  int    available    =    input.availableLong();    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
414	[BUG]  [BUGGY]  int  available  =  input.availableLong()  /  numToSkip;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.availableLong()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.availableLong()  /  numToSkip;	  int    available    =    input.availableLong();    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
415	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  /  numToSkip  +  1;  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  /  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  /  numToSkip  +  1;	  long    available    =    input.availableToInt()    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
416	[BUG]  [BUGGY]  long  available  =  numToSkip.availableToInt()  /  input;  [CE]  long  cannot  be  dereferenced  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip.availableToInt()  /  input;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip.availableToInt()  /  input;	  long    available    =    input.availableToInt()    /    numToSkip;    	non-compiled	[CE]  long  cannot  be  dereferenced	70	None	replace
417	[BUG]  [BUGGY]  Long  available  =  input.availableToInt()  /  numToSkip;  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableToInt()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableToInt()  /  numToSkip;	  long    available    =    input.availableToInt()    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
418	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  /  numToSkip,  buffersize;  [CE]  cannot  find  symbol  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  /  numToSkip,  buffersize;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  /  numToSkip,  buffersize;	  long    available    =    input.availableToInt()    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
419	[BUG]  [BUGGY]  long  available  =  input.availableToLong(numToSkip);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToLong(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToLong(numToSkip);	  long    available    =    numToSkip    +    1;    long    available    =    numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
420	[BUG]  [BUGGY]  int  available  =  numToSkip  +  1;  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  numToSkip  +  1;	  long    available    =    numToSkip    +    1;    long    available    =    numToSkip    +    1;    	non-compiled	[CE]  possible  loss  of  precision	1	None	replace
421	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  *  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  numToSkip  *  1;	  long    available    =    numToSkip    +    1;    long    available    =    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	1	2	replace
422	[BUG]  [BUGGY]  long  available  =  numToSkip  *  1;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  *  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  *  1;	  long    available    =    numToSkip    +    1;    long    available    =    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	1	2	replace
423	[BUG]  [BUGGY]  int  available  =  input.read();  InputStream  input  =  this.input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.read();  InputStream  input  =  this.input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.read();  InputStream  input  =  this.input.readInput();	  long    available    =    input.read();    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	44	None	replace
424	[BUG]  [BUGGY]  long  available  =  this.input.read();  InputStream  input  =  input.readInput();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  this.input.read();  InputStream  input  =  input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  this.input.read();  InputStream  input  =  input.readInput();	  long    available    =    input.read();    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	44	None	replace
425	[BUG]  [BUGGY]  input  =  this.input.readInput();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  input  =  this.input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	input  =  this.input.readInput();	  long    available    =    input.read();    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	44	None	replace
426	[BUG]  [BUGGY]  Input  input  =  this.input.readInput();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Input  input  =  this.input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Input  input  =  this.input.readInput();	  long    available    =    input.read();    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
427	[BUG]  [BUGGY]  long  available  =  input.availableLong()  *  1;  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  *  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  *  1;	  long    available    =    input.availableLong()    -    1;    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
428	[BUG]  [BUGGY]  long  available  =  input.availableLong()  /  1;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  /  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  /  1;	  long    available    =    input.availableLong()    -    1;    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
429	[BUG]  [BUGGY]  long  available  =  input.availableLong()  *  numToSkip  -  1;  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  *  numToSkip  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  *  numToSkip  -  1;	  long    available    =    input.availableLong()    -    1;    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
430	[BUG]  [BUGGY]  long  available  =  input.availableLong()  +  1;  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  +  1;	  long    available    =    input.availableLong()    -    1;    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
431	[BUG]  [BUGGY]  long  available  =  input.availableLong()  *  2  -  1;  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  *  2  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  *  2  -  1;	  long    available    =    input.availableLong()    -    1;    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
432	[BUG]  [BUGGY]  long  available  =  input.available  +  numToSkip  +  2;  [CE]  cannot  find  symbol  available  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  numToSkip  +  2;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  numToSkip  +  2;	  long    available    =    input.available    +    numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	132	None	replace
433	[BUG]  [BUGGY]  long  available  =  input.available  +  numToSkip  +  4;  [CE]  cannot  find  symbol  available  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  numToSkip  +  4;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  numToSkip  +  4;	  long    available    =    input.available    +    numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	132	None	replace
434	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  -  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  input.available()  -  numToSkip  +  1;	  long    available    =    input.available()    -    numToSkip;    	compilable	  [FE]  AssertionError  	98	3	replace
435	[BUG]  [BUGGY]  long  available  =  input.available()  -  numToSkip  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  -  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available()  -  numToSkip  +  1;	  long    available    =    input.available()    -    numToSkip;    	compilable	  [FE]  AssertionError  	98	3	replace
436	[BUG]  [BUGGY]  int  available  =  input.available()  -  numToSkip;  [CE]  possible  loss  of  precision  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.available()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.available()  -  numToSkip;	  long    available    =    input.available()    -    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	98	None	replace
437	[BUG]  [BUGGY]  long  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  numToSkip  =  input.readInt();	  int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	79	None	replace
438	[BUG]  [BUGGY]  int  numToSkip  =  input.readInt()  +  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.readInt()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.readInt()  +  1;	  int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	79	None	replace
439	[BUG]  [BUGGY]  short  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  short  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	short  numToSkip  =  input.readInt();	  int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	79	None	replace
440	[BUG]  [BUGGY]  Long  available  =  input!=  null?  null  :  input.readLine();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input!=  null?  null  :  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input!=  null?  null  :  input.readLine();	  Long    available    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
441	[BUG]  [BUGGY]  Integer  available  =  input.readLine();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  available  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  available  =  input.readLine();	  Long    available    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
442	[BUG]  [BUGGY]  Long  available  =  input.readLine(),  numToSkip;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.readLine(),  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.readLine(),  numToSkip;	  Long    available    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
443	[BUG]  [BUGGY]  Long  available  =  input.readLine()  -  1;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.readLine()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.readLine()  -  1;	  Long    available    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
444	[BUG]  [BUGGY]  long  available  =  input.available  +  1L;  [CE]  cannot  find  symbol  available  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  1L;	  long    available    =    input.available    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	9	None	replace
445	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  input.read()  +  1;	  long    available    =    input.available    +    1;    	compilable	  [FE]  AssertionError  	9	3	replace
446	[BUG]  [BUGGY]  long  available  =  input.read()  +  1;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read()  +  1;	  long    available    =    input.available    +    1;    	compilable	  [FE]  AssertionError  	9	3	replace
447	[BUG]  [BUGGY]  long  available  =  input.available  -  1;  [CE]  cannot  find  symbol  available  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  -  1;	  long    available    =    input.available    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	9	None	replace
448	[BUG]  [BUGGY]  long  available  =  input.available  +  2;  [CE]  cannot  find  symbol  available  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  2;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  2;	  long    available    =    input.available    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	9	None	replace
449	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L  *  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  0L  *  numToSkip;	  long    available    =    0L;    	compilable	  [FE]  AssertionError  	25	3	replace
450	[BUG]  [BUGGY]  long  available  =  0L  *  numToSkip;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L  *  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0L  *  numToSkip;	  long    available    =    0L;    	compilable	  [FE]  AssertionError  	25	3	replace
451	[BUG]  [BUGGY]  long  available  =  0L  ||  numToSkip  >  0L;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L  ||  numToSkip  >  0L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0L  ||  numToSkip  >  0L;	  long    available    =    0L;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	25	None	replace
452	[BUG]  [BUGGY]  long  available  =  0L  +  input.readLine();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L  +  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0L  +  input.readLine();	  long    available    =    0L;    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
453	[BUG]  [BUGGY]  long  available  =  0L  ||  numToSkip  <  0L;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L  ||  numToSkip  <  0L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0L  ||  numToSkip  <  0L;	  long    available    =    0L;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	25	None	replace
454	[BUG]  [BUGGY]  long  available  =  0L  ||  numToSkip  >=  0L;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L  ||  numToSkip  >=  0L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0L  ||  numToSkip  >=  0L;	  long    available    =    0L;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	25	None	replace
455	[BUG]  [BUGGY]  int  available  =  0;  InputStream  input  =  this.input.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  InputStream  input  =  this.input.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  0;  InputStream  input  =  this.input.getInputStream();	  long    available    =    0;    InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	23	None	replace
456	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  this.input.getInputStream();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  this.input.getInputStream();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  this.input.getInputStream();  }	  long    available    =    0;    InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	23	None	replace
457	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  this.input.getInputStream();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  this.input.getInputStream();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  this.input.getInputStream();  }	  long    available    =    0;    InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	23	None	replace
458	[BUG]  [BUGGY]  long  available  =  input.read(buffer,  numToSkip  +  1);  [CE]  cannot  find  symbol  buffer  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(buffer,  numToSkip  +  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(buffer,  numToSkip  +  1);	  long    available    =    input.read(buffer,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffer	59	None	replace
459	[BUG]  [BUGGY]  long  available  =  input.read(data,  numToSkip);  [CE]  cannot  find  symbol  data  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(data,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(data,  numToSkip);	  long    available    =    input.read(buffer,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  data	59	None	replace
460	[BUG]  [BUGGY]  long  available  =  input.read(this.buffer,  numToSkip);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(this.buffer,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(this.buffer,  numToSkip);	  long    available    =    input.read(buffer,    numToSkip);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	59	None	replace
461	[BUG]  [BUGGY]  long  available  =  input.read(buff,  numToSkip);  [CE]  cannot  find  symbol  buff  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(buff,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(buff,  numToSkip);	  long    available    =    input.read(buffer,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buff	59	None	replace
462	[BUG]  [BUGGY]  InputStream  input  =  input.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  input.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  input.getInputStream();	  long    available    =    0;    InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	90	None	replace
463	[BUG]  [BUGGY]  int  available  =  0;  InputStream  input  =  input.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  InputStream  input  =  input.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  0;  InputStream  input  =  input.getInputStream();	  long    available    =    0;    InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	90	None	replace
464	[BUG]  [BUGGY]  InputStream  input  =  this.inputStream.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.inputStream.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.inputStream.getInputStream();	  long    available    =    0;    InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	90	None	replace
465	[BUG]  [BUGGY]  InputStream  input  =  outputStream.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  outputStream.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  outputStream.getInputStream();	  long    available    =    0;    InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	90	None	replace
466	[BUG]  [BUGGY]  long  available  =  input.available  +  1;  int  numToSkip  =  input.read(buffer,  0,  numToSkip);  [CE]  cannot  find  symbol  available  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  1;  int  numToSkip  =  input.read(buffer,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  1;  int  numToSkip  =  input.read(buffer,  0,  numToSkip);	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  available	143	None	replace
467	[BUG]  [BUGGY]  long  available  =  input.available();  int  numToSkip  =  input.read(buffer,  0,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available();  int  numToSkip  =  input.read(buffer,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available();  int  numToSkip  =  input.read(buffer,  0,  numToSkip);	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	143	None	replace
468	[BUG]  [BUGGY]  int  numToSkip  =  input.read(buffer,  0,  numToSkip  +  1);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.read(buffer,  0,  numToSkip  +  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.read(buffer,  0,  numToSkip  +  1);	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	143	None	replace
469	[BUG]  [BUGGY]  InputStream  available  =  input!=  null?  null  :  input.readInput();  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input!=  null?  null  :  input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input!=  null?  null  :  input.readInput();	  InputStream    available    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
470	[BUG]  [BUGGY]  InputStream  available  =  input  ==  null?  null  :  input.readInput();  [CE]  cannot  find  symbol  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input  ==  null?  null  :  input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input  ==  null?  null  :  input.readInput();	  InputStream    available    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
471	[BUG]  [BUGGY]  InputStream  available  =  this.input.readInput();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  this.input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  this.input.readInput();	  InputStream    available    =    input.readInput();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	81	None	replace
472	[BUG]  [BUGGY]  InputStream  available  =  input.readFully(this.buffersize,  numToSkip);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input.readFully(this.buffersize,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input.readFully(this.buffersize,  numToSkip);	  InputStream    available    =    input.readInput();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	81	None	replace
473	[BUG]  [BUGGY]  InputStream  available  =  input.readFully(numToSkip);  [CE]  cannot  find  symbol  [FE]                                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input.readFully(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input.readFully(numToSkip);	  InputStream    available    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
474	[BUG]  [BUGGY]  InputStream  available  =  input.readInput(),  numToSkip;  [CE]  cannot  find  symbol  [FE]                                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input.readInput(),  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input.readInput(),  numToSkip;	  InputStream    available    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
475	[BUG]  [BUGGY]  long  available  =  input.getAstRoot(COPY_BUF_SIZE,  numToSkip  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAstRoot(COPY_BUF_SIZE,  numToSkip  +  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAstRoot(COPY_BUF_SIZE,  numToSkip  +  1);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
476	[BUG]  [BUGGY]  int  available  =  input.getAstRoot(COPY_BUF_SIZE,  numToSkip);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.getAstRoot(COPY_BUF_SIZE,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.getAstRoot(COPY_BUF_SIZE,  numToSkip);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
477	[BUG]  [BUGGY]  long  available  =  input.getAstRoot(COPY_BUF_SIZE,  SKIP_BUF_SIZE);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAstRoot(COPY_BUF_SIZE,  SKIP_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAstRoot(COPY_BUF_SIZE,  SKIP_BUF_SIZE);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
478	[BUG]  [BUGGY]  long  available  =  COPY_BUF_SIZE.getAstRoot(input,  numToSkip);  [CE]  int  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  COPY_BUF_SIZE.getAstRoot(input,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  COPY_BUF_SIZE.getAstRoot(input,  numToSkip);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE,    numToSkip);    	non-compiled	[CE]  int  cannot  be  dereferenced	124	None	replace
479	[BUG]  [BUGGY]  Long  available  =  input.getAstRoot(COPY_BUF_SIZE,  numToSkip);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.getAstRoot(COPY_BUF_SIZE,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.getAstRoot(COPY_BUF_SIZE,  numToSkip);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
480	[BUG]  [BUGGY]  long  available  =  input.getAstRoot(COPY_BUF_SIZE,  0);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAstRoot(COPY_BUF_SIZE,  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAstRoot(COPY_BUF_SIZE,  0);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
481	[BUG]  [BUGGY]  long  available  =  input.length  +  2;  [CE]  cannot  find  symbol  length  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.length  +  2;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.length  +  2;	  long    available    =    input.length    +    1;    	non-compiled	[CE]  cannot  find  symbol  length	11	None	replace
482	[BUG]  [BUGGY]  long  available  =  input.length  +  1L;  [CE]  cannot  find  symbol  length  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.length  +  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.length  +  1L;	  long    available    =    input.length    +    1;    	non-compiled	[CE]  cannot  find  symbol  length	11	None	replace
483	[BUG]  [BUGGY]  long  available  =  input.length  +  3;  [CE]  cannot  find  symbol  length  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.length  +  3;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.length  +  3;	  long    available    =    input.length    +    1;    	non-compiled	[CE]  cannot  find  symbol  length	11	None	replace
484	[BUG]  [BUGGY]  Integer  numToSkip  =  input.getNumberOfLinks();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  numToSkip  =  input.getNumberOfLinks();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  numToSkip  =  input.getNumberOfLinks();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	142	None	replace
485	[BUG]  [BUGGY]  long  available  =  input.available  +  1;  int  numToSkip  =  input.getNumberOfLinks();  [CE]  cannot  find  symbol  available  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  1;  int  numToSkip  =  input.getNumberOfLinks();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  1;  int  numToSkip  =  input.getNumberOfLinks();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  cannot  find  symbol  available	142	None	replace
486	[BUG]  [BUGGY]  long  available  =  input.numToSkip  +  1;  int  numToSkip  =  input.getNumberOfLinks();  [CE]  cannot  find  symbol  numToSkip  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.numToSkip  +  1;  int  numToSkip  =  input.getNumberOfLinks();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.numToSkip  +  1;  int  numToSkip  =  input.getNumberOfLinks();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  cannot  find  symbol  numToSkip	142	None	replace
487	[BUG]  [BUGGY]  long  available  =  input.getOffset();  int  numToSkip  =  input.getNumberOfLinks();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getOffset();  int  numToSkip  =  input.getNumberOfLinks();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getOffset();  int  numToSkip  =  input.getNumberOfLinks();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
488	[BUG]  [BUGGY]  long  available  =  input.getNumberOfLinks();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getNumberOfLinks();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getNumberOfLinks();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
489	[BUG]  [BUGGY]  long  available  =  input.availableNumberOfLinks();  int  numToSkip  =  input.getNumberOfLinks();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableNumberOfLinks();  int  numToSkip  =  input.getNumberOfLinks();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableNumberOfLinks();  int  numToSkip  =  input.getNumberOfLinks();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
490	[BUG]  [BUGGY]  Long  available  =  input.getVersion()  -  numToSkip;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.getVersion()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.getVersion()  -  numToSkip;	  long    available    =    input.getVersion()    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
491	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  -  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  input.read()  -  numToSkip  +  1;	  long    available    =    input.read()    -    numToSkip;    	compilable	  [FE]  AssertionError  	48	3	replace
492	[BUG]  [BUGGY]  long  available  =  input.read()  -  numToSkip  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  -  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read()  -  numToSkip  +  1;	  long    available    =    input.read()    -    numToSkip;    	compilable	  [FE]  AssertionError  	48	3	replace
493	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  *  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  input.read()  *  numToSkip;	  long    available    =    input.read()    -    numToSkip;    	compilable	  [FE]  AssertionError  	48	3	replace
494	[BUG]  [BUGGY]  long  available  =  input.read()  *  numToSkip;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  *  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read()  *  numToSkip;	  long    available    =    input.read()    -    numToSkip;    	compilable	  [FE]  AssertionError  	48	3	replace
495	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  input.read()  /  numToSkip;	  long    available    =    input.read()    -    numToSkip;    	compilable	  [FE]  AssertionError  	48	3	replace
496	[BUG]  [BUGGY]  long  available  =  input.read()  /  numToSkip;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read()  /  numToSkip;	  long    available    =    input.read()    -    numToSkip;    	compilable	  [FE]  AssertionError  	48	3	replace
497	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  +  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  input.read()  +  numToSkip;	  long    available    =    input.read()    -    numToSkip;    	compilable	  [FE]  AssertionError  	48	3	replace
498	[BUG]  [BUGGY]  long  available  =  input.read()  +  numToSkip;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  +  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read()  +  numToSkip;	  long    available    =    input.read()    -    numToSkip;    	compilable	  [FE]  AssertionError  	48	3	replace
499	[BUG]  [BUGGY]  Integer  available  =  numToSkip  +  1;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  available  =  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  available  =  numToSkip  +  1;	  long    available    =    numToSkip    +    1;    int    available    =    numToSkip    +    1;    	non-compiled	[CE]  incompatible  types	5	None	replace
500	[BUG]  [BUGGY]  int  available  =  numToSkip;  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  numToSkip;	  long    available    =    numToSkip    +    1;    int    available    =    numToSkip    +    1;    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
501	[BUG]  [BUGGY]  int  available  =  0;  int  available  =  0;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  int  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int    available    =    0;    int  available  =  0;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	26	None	add
502	[BUG]  [BUGGY]  int  available  =  0;  Int  available  =  0;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  Int  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int    available    =    0;    Int  available  =  0;	  	non-compiled	[CE]  cannot  find  symbol	26	None	add
503	[BUG]  [BUGGY]  int  available  =  0;  int  available  =  0;  this.buffersize  =  input.read(numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  int  available  =  0;  this.buffersize  =  input.read(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int    available    =    0;    int  available  =  0;  this.buffersize  =  input.read(numToSkip);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	26	None	add
504	[BUG]  [BUGGY]  int  available  =  0;  int  available  =  0;  this.numToSkip  =  input.read(numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  int  available  =  0;  this.numToSkip  =  input.read(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int    available    =    0;    int  available  =  0;  this.numToSkip  =  input.read(numToSkip);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	26	None	add
505	[BUG]  [BUGGY]  int  available  =  0;  int  available  =  0;  input.skip(numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  int  available  =  0;  input.skip(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int    available    =    0;    int  available  =  0;  input.skip(numToSkip);	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	26	None	add
506	[BUG]  [BUGGY]  int  available  =  0;  int  available  =  0;  this.numToSkip  =  input.getNumberOfFields();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  int  available  =  0;  this.numToSkip  =  input.getNumberOfFields();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int    available    =    0;    int  available  =  0;  this.numToSkip  =  input.getNumberOfFields();	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	26	None	add
507	[BUG]  [BUGGY]  int  available  =  0;  int  available  =  0;  this.numToSkip  =  input.getNumberOfFractions();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  int  available  =  0;  this.numToSkip  =  input.getNumberOfFractions();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int    available    =    0;    int  available  =  0;  this.numToSkip  =  input.getNumberOfFractions();	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	26	None	add
508	[BUG]  [BUGGY]  int  available  =  0;  int  available  =  0;  this.numToSkip  =  input.getLowerCase();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  int  available  =  0;  this.numToSkip  =  input.getLowerCase();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int    available    =    0;    int  available  =  0;  this.numToSkip  =  input.getLowerCase();	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	26	None	add
509	[BUG]  [BUGGY]  Long  available  =  input.availableLong(),  numToSkip;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableLong(),  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableLong(),  numToSkip;	  Long    available    =    input.availableLong();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
510	[BUG]  [BUGGY]  int  available  =  input.read()  -  numToSkip;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.read()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.read()  -  numToSkip;	  int    available    =    input.available    -    numToSkip;    	non-compiled	[CE]  possible  loss  of  precision	96	None	replace
511	[BUG]  [BUGGY]  int  available  =  input.length  -  numToSkip;  [CE]  cannot  find  symbol  length  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.length  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.length  -  numToSkip;	  int    available    =    input.available    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  length	96	None	replace
512	[BUG]  [BUGGY]  int  available  =  input.available  -  numToSkip  +  1;  [CE]  cannot  find  symbol  available  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.available  -  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.available  -  numToSkip  +  1;	  int    available    =    input.available    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	96	None	replace
513	[BUG]  [BUGGY]  int  available  =  input.getVersion()  -  numToSkip;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.getVersion()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.getVersion()  -  numToSkip;	  int    available    =    input.available    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
514	[BUG]  [BUGGY]  int  available  =  numToSkip  -  input.available;  [CE]  cannot  find  symbol  available  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  numToSkip  -  input.available;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  numToSkip  -  input.available;	  int    available    =    input.available    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	96	None	replace
515	[BUG]  [BUGGY]  int  available  =  input.readInt()  -  numToSkip;  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.readInt()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.readInt()  -  numToSkip;	  int    available    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
516	[BUG]  [BUGGY]  int  available  =  this.input.readInt();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  this.input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  this.input.readInt();	  int    available    =    input.readInt();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	80	None	replace
517	[BUG]  [BUGGY]  int  available  =  input.readInt()  -  1;  [CE]  cannot  find  symbol  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.readInt()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.readInt()  -  1;	  int    available    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
518	[BUG]  [BUGGY]  int  available  =  input.readInt(numToSkip);  [CE]  cannot  find  symbol  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.readInt(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.readInt(numToSkip);	  int    available    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
519	[BUG]  [BUGGY]  int  available  =  0;  Long  available  =  0;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  Long  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  0;  Long  available  =  0;	  long    available    =    0;    Long    available    =    0;    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	95	None	replace
520	[BUG]  [BUGGY]  int  available  =  0;  Integer  available  =  0;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  Integer  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  0;  Integer  available  =  0;	  long    available    =    0;    Long    available    =    0;    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	95	None	replace
521	[BUG]  [BUGGY]  int  available  =  0;  long  available  =  0;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  long  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  0;  long  available  =  0;	  long    available    =    0;    Long    available    =    0;    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	95	None	replace
522	[BUG]  [BUGGY]  long  available  =  input.available();  long  available  =  input.available();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available();  long  available  =  input.available();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available();    long  available  =  input.available();	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	148	None	add
523	[BUG]  [BUGGY]  long  available  =  input.available();  int  available  =  input.available();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available();  int  available  =  input.available();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available();    int  available  =  input.available();	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	148	None	add
524	[BUG]  [BUGGY]  long  available  =  input.available();  InputStream  input  =  this.input.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available();  InputStream  input  =  this.input.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available();    InputStream  input  =  this.input.getInputStream();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	148	None	add
525	[BUG]  [BUGGY]  long  available  =  input.available();  InputStream  input  =  this.input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available();  InputStream  input  =  this.input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available();    InputStream  input  =  this.input.readInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	148	None	add
526	[BUG]  [BUGGY]  long  available  =  input.available();  Long  available  =  input.available();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available();  Long  available  =  input.available();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available();    Long  available  =  input.available();	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	148	None	add
527	[BUG]  [BUGGY]  long  available  =  input.available();  InputStream  input  =  this.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available();  InputStream  input  =  this.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available();    InputStream  input  =  this.getInputStream();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	148	None	add
528	[BUG]  [BUGGY]  long  available  =  input.available();  InputStream  input  =  this.input.getOutputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available();  InputStream  input  =  this.input.getOutputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available();    InputStream  input  =  this.input.getOutputStream();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	148	None	add
529	[BUG]  [BUGGY]  long  available  =  input.available();  InputStream  input  =  getInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available();  InputStream  input  =  getInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available();    InputStream  input  =  getInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	148	None	add
530	[BUG]  [BUGGY]  InputStream  available  =  input!=  null?  null  :  input.readInt();  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input!=  null?  null  :  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input!=  null?  null  :  input.readInt();	  InputStream    available    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
531	[BUG]  [BUGGY]  InputStream  available  =  this.input.readInt();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  this.input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  this.input.readInt();	  InputStream    available    =    input.readInt();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	111	None	replace
532	[BUG]  [BUGGY]  InputStream  available  =  input.readInt()  -  numToSkip;  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input.readInt()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input.readInt()  -  numToSkip;	  InputStream    available    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
533	[BUG]  [BUGGY]  InputStream  available  =  input.readInt()  -  1;  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input.readInt()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input.readInt()  -  1;	  InputStream    available    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
534	[BUG]  [BUGGY]  InputStream  available  =  input.readInt(),  numToSkip;  [CE]  cannot  find  symbol  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input.readInt(),  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input.readInt(),  numToSkip;	  InputStream    available    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
535	[BUG]  [BUGGY]  InputStream  available  =  input.readInt()  &  0xff;  [CE]  cannot  find  symbol  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input.readInt()  &  0xff;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input.readInt()  &  0xff;	  InputStream    available    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
536	[BUG]  [BUGGY]  long  available  =  input.readLine()  +  1L;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  +  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  +  1L;	  long    available    =    input.readLine()    +    1;    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
537	[BUG]  [BUGGY]  long  available  =  input.availableLong(0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(0);	  long    available    =    input.availableLong(0L);    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
538	[BUG]  [BUGGY]  long  available  =  input.availableLong(0L,  numToSkip);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(0L,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(0L,  numToSkip);	  long    available    =    input.availableLong(0L);    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
539	[BUG]  [BUGGY]  long  available  =  input.availableLong(0L  -  numToSkip);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(0L  -  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(0L  -  numToSkip);	  long    available    =    input.availableLong(0L);    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
540	[BUG]  [BUGGY]  long  available  =  input.availableLong(1);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(1);	  long    available    =    input.availableLong(0L);    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
541	[BUG]  [BUGGY]  long  available  =  input.availableLong(0L)+  numToSkip;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(0L)+  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(0L)+  numToSkip;	  long    available    =    input.availableLong(0L);    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
542	[BUG]  [BUGGY]  long  available  =  input.availableLong(0L),  numToSkip);  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(0L),  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(0L),  numToSkip);	  long    available    =    input.availableLong(0L);    	non-compiled	[CE]  ';'  expected	147	None	replace
543	[BUG]  [BUGGY]  long  available  =  input.availableLong(0,  numToSkip  +  1);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(0,  numToSkip  +  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(0,  numToSkip  +  1);	  long    available    =    input.availableLong(0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
544	[BUG]  [BUGGY]  long  available  =  input.availableLong(0,  numToSkip,  buffersize);  [CE]  cannot  find  symbol  buffersize  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(0,  numToSkip,  buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(0,  numToSkip,  buffersize);	  long    available    =    input.availableLong(0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffersize	75	None	replace
545	[BUG]  [BUGGY]  long  available  =  input.availableLong(0,  numToSkip-1);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(0,  numToSkip-1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(0,  numToSkip-1);	  long    available    =    input.availableLong(0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
546	[BUG]  [BUGGY]  long  available  =  input.availableLong(0,  numToSkip).longValue();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(0,  numToSkip).longValue();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(0,  numToSkip).longValue();	  long    available    =    input.availableLong(0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
547	[BUG]  [BUGGY]  Long  available  =  input.availableLong(0,  numToSkip);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableLong(0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableLong(0,  numToSkip);	  long    available    =    input.availableLong(0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
548	[BUG]  [BUGGY]  long  available  =  numToSkip  /  1;  long  available  =  numToSkip  /  1;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  1;  long  available  =  numToSkip  /  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    /    1;    long  available  =  numToSkip  /  1;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	133	None	add
549	[BUG]  [BUGGY]  long  available  =  numToSkip  /  1;  Long  available  =  numToSkip  /  1;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  1;  Long  available  =  numToSkip  /  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    /    1;    Long  available  =  numToSkip  /  1;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	133	None	add
550	[BUG]  [BUGGY]  long  available  =  numToSkip  /  1;  long  numToSkip  /  1;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  1;  long  numToSkip  /  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    /    1;    long  numToSkip  /  1;	  	non-compiled	[CE]  ';'  expected	133	None	add
551	[BUG]  [BUGGY]  long  available  =  numToSkip  /  1;  int  available  =  numToSkip  /  1;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  1;  int  available  =  numToSkip  /  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    /    1;    int  available  =  numToSkip  /  1;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	133	None	add
552	[BUG]  [BUGGY]  long  available  =  numToSkip  /  1;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  1;  int  numToSkip  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    /    1;    int  numToSkip  =  input.read();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	133	None	add
553	[BUG]  [BUGGY]  long  available  =  numToSkip  /  1;  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  1;  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    /    1;    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	133	None	add
554	[BUG]  [BUGGY]  long  available  =  numToSkip  /  1;  int  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  1;  int  numToSkip  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    /    1;    int  numToSkip  =  input.readLine();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	133	None	add
555	[BUG]  [BUGGY]  long  available  =  numToSkip  /  1;  int  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  1;  int  numToSkip  =  input.length();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    /    1;    int  numToSkip  =  input.length();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	133	None	add
556	[BUG]  [BUGGY]  long  available  =  input.available  +  1;  int  numToSkip  =  input.read();  [CE]  cannot  find  symbol  available  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  1;  int  numToSkip  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  1;  int  numToSkip  =  input.read();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.read();    	non-compiled	[CE]  cannot  find  symbol  available	3	None	replace
557	[BUG]  [BUGGY]  long  available  =  input.availableNumber()  +  1;  int  numToSkip  =  input.read();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableNumber()  +  1;  int  numToSkip  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableNumber()  +  1;  int  numToSkip  =  input.read();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.read();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
558	[BUG]  [BUGGY]  long  available  =  input.available();  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available();  int  numToSkip  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available();  int  numToSkip  =  input.read();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	3	None	replace
559	[BUG]  [BUGGY]  long  available  =  input.availableNumber();  int  numToSkip  =  input.read();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableNumber();  int  numToSkip  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableNumber();  int  numToSkip  =  input.read();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.read();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
560	[BUG]  [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  0;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  0;	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine());    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	18	None	replace
561	[BUG]  [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  ByteArrayInputStream(input.readLine());	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine());    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	18	None	replace
562	[BUG]  [BUGGY]  int  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  0;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  0;	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine());    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	18	None	replace
563	[BUG]  [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  1;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  1;	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine());    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	18	None	replace
564	[BUG]  [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(numToSkip.readLine());  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  ByteArrayInputStream(numToSkip.readLine());  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  ByteArrayInputStream(numToSkip.readLine());	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine());    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	18	None	replace
565	[BUG]  [BUGGY]  Long  available  =  input.availableLong(numToSkip,  0);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableLong(numToSkip,  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableLong(numToSkip,  0);	  Long    available    =    input.availableLong(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
566	[BUG]  [BUGGY]  Integer  available  =  input.availableLong(numToSkip);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  available  =  input.availableLong(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  available  =  input.availableLong(numToSkip);	  Long    available    =    input.availableLong(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
567	[BUG]  [BUGGY]  Long  available  =  input.availableLong(numToSkip  +  1);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableLong(numToSkip  +  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableLong(numToSkip  +  1);	  Long    available    =    input.availableLong(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
568	[BUG]  [BUGGY]  Long  available  =  input.availableLong(numToSkip,  buffersize);  [CE]  cannot  find  symbol  buffersize  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableLong(numToSkip,  buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableLong(numToSkip,  buffersize);	  Long    available    =    input.availableLong(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffersize	101	None	replace
569	[BUG]  [BUGGY]  int  available  =  input.availableLong(numToSkip,  0);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.availableLong(numToSkip,  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.availableLong(numToSkip,  0);	  int    available    =    input.availableLong(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
570	[BUG]  [BUGGY]  int  available  =  input.availableLong(numToSkip,  buffersize);  [CE]  cannot  find  symbol  buffersize  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.availableLong(numToSkip,  buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.availableLong(numToSkip,  buffersize);	  int    available    =    input.availableLong(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffersize	102	None	replace
571	[BUG]  [BUGGY]  int  available  =  input.availableLong(0,  numToSkip);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.availableLong(0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.availableLong(0,  numToSkip);	  int    available    =    input.availableLong(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
572	[BUG]  [BUGGY]  int  available  =  input.availableInt(numToSkip);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.availableInt(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.availableInt(numToSkip);	  int    available    =    input.availableLong(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
573	[BUG]  [BUGGY]  int  available  =  input.availableLong(numToSkip  +  1);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.availableLong(numToSkip  +  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.availableLong(numToSkip  +  1);	  int    available    =    input.availableLong(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
574	[BUG]  [BUGGY]  int  available  =  input.availableLong(numToSkip  -  numToSkip);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.availableLong(numToSkip  -  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.availableLong(numToSkip  -  numToSkip);	  int    available    =    input.availableLong(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
575	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip  +  2);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip  +  2);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip  +  2);	  long    available    =    input.availableLong(numToSkip    +    1);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
576	[BUG]  [BUGGY]  long  available  =  input.availableInt(numToSkip  +  1);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableInt(numToSkip  +  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableInt(numToSkip  +  1);	  long    available    =    input.availableLong(numToSkip    +    1);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
577	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip  /  1);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip  /  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip  /  1);	  long    available    =    input.availableLong(numToSkip    +    1);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
578	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip  +  3);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip  +  3);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip  +  3);	  long    available    =    input.availableLong(numToSkip    +    1);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
579	[BUG]  [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0;	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input.readLine());    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	17	None	replace
580	[BUG]  [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine());  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine());  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  InputStreamInputStream(input.readLine());	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input.readLine());    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	17	None	replace
581	[BUG]  [BUGGY]  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0;	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input.readLine());    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	17	None	replace
582	[BUG]  [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip);  available  =  0;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip);  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip);  available  =  0;	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input.readLine());    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	17	None	replace
583	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip,  0,  numToSkip);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip,  0,  numToSkip);	  long    available    =    input.availableLong(numToSkip,    0);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
584	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip,  1);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip,  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip,  1);	  long    available    =    input.availableLong(numToSkip,    0);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
585	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip,  -1);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip,  -1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip,  -1);	  long    available    =    input.availableLong(numToSkip,    0);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
586	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip,  null);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip,  null);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip,  null);	  long    available    =    input.availableLong(numToSkip,    0);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
587	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip,  2);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip,  2);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip,  2);	  long    available    =    input.availableLong(numToSkip,    0);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
588	[BUG]  [BUGGY]  long  available  =  input.read(COPY_BUF_SIZE,  numToSkip);  [CE]  no  suitable  method  found  for  read(int,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(COPY_BUF_SIZE,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(COPY_BUF_SIZE,  numToSkip);	  long    available    =    input.read(buffersize,    numToSkip);    	non-compiled	[CE]  no  suitable  method  found  for  read(int,long)	107	None	replace
589	[BUG]  [BUGGY]  long  available  =  input.read(SKIP_BUF_SIZE,  numToSkip);  [CE]  no  suitable  method  found  for  read(int,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(SKIP_BUF_SIZE,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(SKIP_BUF_SIZE,  numToSkip);	  long    available    =    input.read(buffersize,    numToSkip);    	non-compiled	[CE]  no  suitable  method  found  for  read(int,long)	107	None	replace
590	[BUG]  [BUGGY]  long  available  =  input.read(CHIP_BUF_SIZE,  numToSkip);  [CE]  cannot  find  symbol  CHIP_BUF_SIZE  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(CHIP_BUF_SIZE,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(CHIP_BUF_SIZE,  numToSkip);	  long    available    =    input.read(buffersize,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  CHIP_BUF_SIZE	107	None	replace
591	[BUG]  [BUGGY]  long  available  =  input.read(lowerBuffer,  numToSkip);  [CE]  cannot  find  symbol  lowerBuffer  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(lowerBuffer,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(lowerBuffer,  numToSkip);	  long    available    =    input.read(buffersize,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  lowerBuffer	107	None	replace
592	[BUG]  [BUGGY]  long  available  =  input.read(chunk,  numToSkip);  [CE]  cannot  find  symbol  chunk  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(chunk,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(chunk,  numToSkip);	  long    available    =    input.read(buffersize,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  chunk	107	None	replace
593	[BUG]  [BUGGY]  long  available  =  input.available  /  numToSkip  +  2;  [CE]  cannot  find  symbol  available  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  /  numToSkip  +  2;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  /  numToSkip  +  2;	  long    available    =    input.available    /    numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	62	None	replace
594	[BUG]  [BUGGY]  long  available  =  input.available  /  numToSkip  +  1L;  [CE]  cannot  find  symbol  available  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  /  numToSkip  +  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  /  numToSkip  +  1L;	  long    available    =    input.available    /    numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	62	None	replace
595	[BUG]  [BUGGY]  long  available  =  input.available  /  numToSkip  +  3;  [CE]  cannot  find  symbol  available  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  /  numToSkip  +  3;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  /  numToSkip  +  3;	  long    available    =    input.available    /    numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	62	None	replace
596	[BUG]  [BUGGY]  long  available  =  input.available  /  numToSkip  +  4;  [CE]  cannot  find  symbol  available  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  /  numToSkip  +  4;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  /  numToSkip  +  4;	  long    available    =    input.available    /    numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	62	None	replace
597	[BUG]  [BUGGY]  long  available  =  input.length();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.length();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.length();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
598	[BUG]  [BUGGY]  long  available  =  input.available  +  1;  int  numToSkip  =  input.length();  [CE]  cannot  find  symbol  available  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  1;  int  numToSkip  =  input.length();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  1;  int  numToSkip  =  input.length();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  available	8	None	replace
599	[BUG]  [BUGGY]  Integer  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  numToSkip  =  input.length();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  numToSkip  =  input.length();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.length();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	8	None	replace
600	[BUG]  [BUGGY]  long  available  =  input.availableNumber()  +  1;  int  numToSkip  =  input.length();  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableNumber()  +  1;  int  numToSkip  =  input.length();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableNumber()  +  1;  int  numToSkip  =  input.length();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
601	[BUG]  [BUGGY]  long  available  =  input.length()  +  1;  int  numToSkip  =  input.length();  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.length()  +  1;  int  numToSkip  =  input.length();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.length()  +  1;  int  numToSkip  =  input.length();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
602	[BUG]  [BUGGY]  Integer  available  =  input.available  -  numToSkip;  [CE]  cannot  find  symbol  available  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  available  =  input.available  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  available  =  input.available  -  numToSkip;	  Long    available    =    input.available    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	49	None	replace
603	[BUG]  [BUGGY]  InputStream  input  =  input.available  -  numToSkip;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  input.available  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  input.available  -  numToSkip;	  Long    available    =    input.available    -    numToSkip;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	49	None	replace
604	[BUG]  [BUGGY]  long  available  =  numToSkip  /  input.length;  [CE]  cannot  find  symbol  length  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  input.length;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  /  input.length;	  long    available    =    numToSkip    /    input.available;    	non-compiled	[CE]  cannot  find  symbol  length	66	None	replace
605	[BUG]  [BUGGY]  long  available  =  numToSkip  /  input.getVersion();  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  input.getVersion();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  /  input.getVersion();	  long    available    =    numToSkip    /    input.available;    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
606	[BUG]  [BUGGY]  long  available  =  numToSkip  /  input.getCharacterEncoding();  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  input.getCharacterEncoding();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  /  input.getCharacterEncoding();	  long    available    =    numToSkip    /    input.available;    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
607	[BUG]  [BUGGY]  long  available  =  input  /  numToSkip.available;  [CE]  long  cannot  be  dereferenced  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input  /  numToSkip.available;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input  /  numToSkip.available;	  long    available    =    numToSkip    /    input.available;    	non-compiled	[CE]  long  cannot  be  dereferenced	66	None	replace
608	[BUG]  [BUGGY]  long  available  =  numToSkip  *  input.available;  [CE]  cannot  find  symbol  available  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  *  input.available;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  *  input.available;	  long    available    =    numToSkip    /    input.available;    	non-compiled	[CE]  cannot  find  symbol  available	66	None	replace
609	[BUG]  [BUGGY]  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input,    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	22	None	replace
610	[BUG]  [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip,  buffersize);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip,  buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  InputStreamInputStream(input,  numToSkip,  buffersize);	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input,    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	22	None	replace
611	[BUG]  [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip  +  1);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip  +  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  InputStreamInputStream(input,  numToSkip  +  1);	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input,    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	22	None	replace
612	[BUG]  [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip,  0);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip,  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  InputStreamInputStream(input,  numToSkip,  0);	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input,    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	22	None	replace
613	[BUG]  [BUGGY]  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip,  buffersize);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip,  buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip,  buffersize);	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input,    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	22	None	replace
614	[BUG]  [BUGGY]  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip,  skipped);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip,  skipped);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip,  skipped);	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input,    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	22	None	replace
615	[BUG]  [BUGGY]  int  numToSkip  =  input.read(buffer,  0,  available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.read(buffer,  0,  available);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.read(buffer,  0,  available);	  int    numToSkip    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	126	None	replace
616	[BUG]  [BUGGY]  int  numToSkip  =  input.read(buffer,  0,  numToSkip,  0);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.read(buffer,  0,  numToSkip,  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.read(buffer,  0,  numToSkip,  0);	  int    numToSkip    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	126	None	replace
617	[BUG]  [BUGGY]  long  numToSkip  =  input.read(buffer,  0,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  numToSkip  =  input.read(buffer,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  numToSkip  =  input.read(buffer,  0,  numToSkip);	  int    numToSkip    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	126	None	replace
618	[BUG]  [BUGGY]  int  numToSkip  =  input.read(buffer,  0,  this.available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.read(buffer,  0,  this.available);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.read(buffer,  0,  this.available);	  int    numToSkip    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	126	None	replace
619	[BUG]  [BUGGY]  int  numToSkip  =  input.read(buffer,  0,  numToSkip,  buffersize);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.read(buffer,  0,  numToSkip,  buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.read(buffer,  0,  numToSkip,  buffersize);	  int    numToSkip    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	126	None	replace
620	[BUG]  [BUGGY]  long  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  numToSkip  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  numToSkip  =  input.readLine();	  int    numToSkip    =    input.readLine();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	128	None	replace
621	[BUG]  [BUGGY]  int  numToSkip  =  input.readLine()  +  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.readLine()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.readLine()  +  1;	  int    numToSkip    =    input.readLine();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	128	None	replace
622	[BUG]  [BUGGY]  int  numToSkip  =  input.readFully();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.readFully();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.readFully();	  int    numToSkip    =    input.readLine();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	128	None	replace
623	[BUG]  [BUGGY]  int  numToSkip  =  input.readLine()  *  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.readLine()  *  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.readLine()  *  numToSkip;	  int    numToSkip    =    input.readLine();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	128	None	replace
624	[BUG]  [BUGGY]  int  available  =  input.read();  long  available  =  input.read();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.read();  long  available  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.read();  long  available  =  input.read();	  long    available    =    input.read();    long    available    =    input.read();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	38	None	replace
625	[BUG]  [BUGGY]  long  available  =  0L;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L;  int  numToSkip  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0L;  int  numToSkip  =  input.read();	  long    available    =    0;    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	145	None	replace
626	[BUG]  [BUGGY]  long  available  =  0;  int  numToSkip  =  input.read(buffer,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0;  int  numToSkip  =  input.read(buffer,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0;  int  numToSkip  =  input.read(buffer,  numToSkip);	  long    available    =    0;    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	145	None	replace
627	[BUG]  [BUGGY]  long  available  =  0;  int  numToSkip  =  input.read(buffersize,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0;  int  numToSkip  =  input.read(buffersize,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0;  int  numToSkip  =  input.read(buffersize,  numToSkip);	  long    available    =    0;    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	145	None	replace
628	[BUG]  [BUGGY]  long  available  =  0;  int  numToSkip  =  input.read(buffersize);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0;  int  numToSkip  =  input.read(buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0;  int  numToSkip  =  input.read(buffersize);	  long    available    =    0;    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	145	None	replace
629	[BUG]  [BUGGY]  long  available  =  input  ==  null?  input.readLine()  :  -1;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input  ==  null?  input.readLine()  :  -1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input  ==  null?  input.readLine()  :  -1;	  long    available    =    input!=    null?    input.readLine()    :    -1;    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
630	[BUG]  [BUGGY]  long  available  =  input!=  null?  this.input.readLine()  :  -1;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  this.input.readLine()  :  -1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  this.input.readLine()  :  -1;	  long    available    =    input!=    null?    input.readLine()    :    -1;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	37	None	replace
631	[BUG]  [BUGGY]  long  available  =  input!=  null?  output.readLine()  :  -1;  [CE]  cannot  find  symbol  output  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  output.readLine()  :  -1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  output.readLine()  :  -1;	  long    available    =    input!=    null?    input.readLine()    :    -1;    	non-compiled	[CE]  cannot  find  symbol  output	37	None	replace
632	[BUG]  [BUGGY]  long  available  =  input!=  null?  0  :  input.readLine()  :  -1;  [CE]  ';'  expected  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  0  :  input.readLine()  :  -1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  0  :  input.readLine()  :  -1;	  long    available    =    input!=    null?    input.readLine()    :    -1;    	non-compiled	[CE]  ';'  expected	37	None	replace
633	[BUG]  [BUGGY]  long  available  =  input!=  null?  -1.readLine()  :  -1;  [CE]  :  expected  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  -1.readLine()  :  -1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  -1.readLine()  :  -1;	  long    available    =    input!=    null?    input.readLine()    :    -1;    	non-compiled	[CE]  :  expected	37	None	replace
634	[BUG]  [BUGGY]  long  available  =  input.availableLong()  -(input.availableLong()  -  numToSkip);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  -(input.availableLong()  -  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  -(input.availableLong()  -  numToSkip);	  long    available    =    input.availableLong()    -(input.availableLong());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
635	[BUG]  [BUGGY]  long  available  =  input.availableLong()  -(numToSkip.availableLong());  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  -(numToSkip.availableLong());  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  -(numToSkip.availableLong());	  long    available    =    input.availableLong()    -(input.availableLong());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
636	[BUG]  [BUGGY]  long  available  =  input.availableLong()  -(input.availableLong()  +  1);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  -(input.availableLong()  +  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  -(input.availableLong()  +  1);	  long    available    =    input.availableLong()    -(input.availableLong());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
637	[BUG]  [BUGGY]  long  available  =  input.availableLong()  -(input.availableLong()  *  numToSkip);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  -(input.availableLong()  *  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  -(input.availableLong()  *  numToSkip);	  long    available    =    input.availableLong()    -(input.availableLong());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
638	[BUG]  [BUGGY]  long  available  =  input.availableLong()  -(Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  -(Integer.MAX_VALUE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  -(Integer.MAX_VALUE);	  long    available    =    input.availableLong()    -(input.availableLong());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
639	[BUG]  [BUGGY]  long  available  =  input.availableLong()  -(input.availableLong()  +  numToSkip);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  -(input.availableLong()  +  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  -(input.availableLong()  +  numToSkip);	  long    available    =    input.availableLong()    -(input.availableLong());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
640	[BUG]  [BUGGY]  long  numToSkip  =  input.getNumberOfLinks();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  numToSkip  =  input.getNumberOfLinks();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  numToSkip  =  input.getNumberOfLinks();	  int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	127	None	replace
641	[BUG]  [BUGGY]  int  numToSkip  =  input.getNumberOfLinks()  +  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.getNumberOfLinks()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.getNumberOfLinks()  +  1;	  int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	127	None	replace
642	[BUG]  [BUGGY]  int  numToSkip  =  input.getNumberOfLinks(numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.getNumberOfLinks(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.getNumberOfLinks(numToSkip);	  int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	127	None	replace
643	[BUG]  [BUGGY]  int  numToSkip  =  input.getNumberOfLinks()  -  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.getNumberOfLinks()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.getNumberOfLinks()  -  1;	  int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	127	None	replace
644	[BUG]  [BUGGY]  int  numToSkip  =  input.getUpperOfLinks();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.getUpperOfLinks();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.getUpperOfLinks();	  int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	127	None	replace
645	[BUG]  [BUGGY]  long  available  =  input.availableBytes();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableBytes();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableBytes();	  long    available    =    input.available();    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
646	[BUG]  [BUGGY]  long  available  =  input.availableAsInt();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableAsInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableAsInt();	  long    available    =    input.available();    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
647	[BUG]  [BUGGY]  Integer  available  =  0;  long  available  =  0;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  available  =  0;  long  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  available  =  0;  long  available  =  0;	  long    available    =    0;    long    available    =    0;    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	16	None	replace
648	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	Long  available  =  numToSkip  +  1;	  long    available    =    numToSkip    +    1;    Long    available    =    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	2	3	replace
649	[BUG]  [BUGGY]  Long  available  =  numToSkip  +  1;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  numToSkip  +  1;	  long    available    =    numToSkip    +    1;    Long    available    =    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	2	3	replace
650	[BUG]  [BUGGY]  long  available  =  input.getAverageMillis()  -  numToSkip;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAverageMillis()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAverageMillis()  -  numToSkip;	  long    available    =    input.getAverageMillis();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
651	[BUG]  [BUGGY]  long  available  =  input.getAverageMillis()  +  numToSkip;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAverageMillis()  +  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAverageMillis()  +  numToSkip;	  long    available    =    input.getAverageMillis();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
652	[BUG]  [BUGGY]  long  available  =  input.getAverageMillis()  /  numToSkip;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAverageMillis()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAverageMillis()  /  numToSkip;	  long    available    =    input.getAverageMillis();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
653	[BUG]  [BUGGY]  long  available  =  input.getAverageMillis()  +  1;  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAverageMillis()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAverageMillis()  +  1;	  long    available    =    input.getAverageMillis();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
654	[BUG]  [BUGGY]  long  available  =  input.getAverageMillis()  *  numToSkip;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAverageMillis()  *  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAverageMillis()  *  numToSkip;	  long    available    =    input.getAverageMillis();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
655	[BUG]  [BUGGY]  long  available  =  input.getAverageMillis(),  numToSkip;  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAverageMillis(),  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAverageMillis(),  numToSkip;	  long    available    =    input.getAverageMillis();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
656	[BUG]  [BUGGY]  long  available  =  input.length  +  1;  int  numToSkip  =  input.size();  [CE]  cannot  find  symbol  length  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.length  +  1;  int  numToSkip  =  input.size();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.length  +  1;  int  numToSkip  =  input.size();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.size();    	non-compiled	[CE]  cannot  find  symbol  length	100	None	replace
657	[BUG]  [BUGGY]  long  available  =  input.numToSkip  +  1;  int  numToSkip  =  input.size();  [CE]  cannot  find  symbol  numToSkip  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.numToSkip  +  1;  int  numToSkip  =  input.size();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.numToSkip  +  1;  int  numToSkip  =  input.size();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.size();    	non-compiled	[CE]  cannot  find  symbol  numToSkip	100	None	replace
658	[BUG]  [BUGGY]  long  available  =  input.available  +  1;  int  numToSkip  =  input.size();  [CE]  cannot  find  symbol  available  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  1;  int  numToSkip  =  input.size();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  1;  int  numToSkip  =  input.size();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.size();    	non-compiled	[CE]  cannot  find  symbol  available	100	None	replace
659	[BUG]  [BUGGY]  long  available  =  input.availableNumber()  +  1;  int  numToSkip  =  input.size();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableNumber()  +  1;  int  numToSkip  =  input.size();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableNumber()  +  1;  int  numToSkip  =  input.size();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.size();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
660	[BUG]  [BUGGY]  Integer  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  numToSkip  =  input.size();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  numToSkip  =  input.size();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	100	None	replace
661	[BUG]  [BUGGY]  long  available  =  input.length();  int  numToSkip  =  input.size();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.length();  int  numToSkip  =  input.size();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.length();  int  numToSkip  =  input.size();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.size();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
662	[BUG]  [BUGGY]  long  available  =  input.availableLong(this.buffersize,  numToSkip);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(this.buffersize,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(this.buffersize,  numToSkip);	  long    available    =    input.availableLong(this.buffersize);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	103	None	replace
663	[BUG]  [BUGGY]  long  available  =  input.availableLong(COPY_BUF_SIZE);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(COPY_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(COPY_BUF_SIZE);	  long    available    =    input.availableLong(this.buffersize);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
664	[BUG]  [BUGGY]  long  available  =  this.buffersize.availableLong(input);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  this.buffersize.availableLong(input);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  this.buffersize.availableLong(input);	  long    available    =    input.availableLong(this.buffersize);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	103	None	replace
665	[BUG]  [BUGGY]  int  available  =  input.availableLong(this.buffersize);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.availableLong(this.buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.availableLong(this.buffersize);	  long    available    =    input.availableLong(this.buffersize);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	103	None	replace
666	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip,  this.buffersize);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip,  this.buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip,  this.buffersize);	  long    available    =    input.availableLong(this.buffersize);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	103	None	replace
667	[BUG]  [BUGGY]  long  available  =  input.readLine(),  numToSkip  +  1;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine(),  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine(),  numToSkip  +  1;	  long    available    =    input.readLine(),    numToSkip;    	non-compiled	[CE]  ';'  expected	121	None	replace
668	[BUG]  [BUGGY]  long  available  =  input.readLine(),  0;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine(),  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine(),  0;	  long    available    =    input.readLine(),    numToSkip;    	non-compiled	[CE]  <identifier>  expected	121	None	replace
669	[BUG]  [BUGGY]  long  available  =  input.readLine(),  numToSkip-1;  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine(),  numToSkip-1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine(),  numToSkip-1;	  long    available    =    input.readLine(),    numToSkip;    	non-compiled	[CE]  ';'  expected	121	None	replace
670	[BUG]  [BUGGY]  long  available  =  input.readLine(),  0,  numToSkip;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine(),  0,  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine(),  0,  numToSkip;	  long    available    =    input.readLine(),    numToSkip;    	non-compiled	[CE]  <identifier>  expected	121	None	replace
671	[BUG]  [BUGGY]  long  available  =  input.readLine(),  numToSkip  +  2;  [CE]  ';'  expected  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine(),  numToSkip  +  2;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine(),  numToSkip  +  2;	  long    available    =    input.readLine(),    numToSkip;    	non-compiled	[CE]  ';'  expected	121	None	replace
672	[BUG]  [BUGGY]  long  available  =  input.readLine(),  this.numToSkip;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine(),  this.numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine(),  this.numToSkip;	  long    available    =    input.readLine(),    numToSkip;    	non-compiled	[CE]  <identifier>  expected	121	None	replace
673	[BUG]  [BUGGY]  long  available  =  input.read();  int  numToSkip  =  input.skip(numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read();  int  numToSkip  =  input.skip(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read();  int  numToSkip  =  input.skip(numToSkip);	  long    available    =    input.read();    int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	138	None	replace
674	[BUG]  [BUGGY]  long  available  =  input.read();  int  numToSkip  =  input.read(buffersize,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read();  int  numToSkip  =  input.read(buffersize,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read();  int  numToSkip  =  input.read(buffersize,  numToSkip);	  long    available    =    input.read();    int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	138	None	replace
675	[BUG]  [BUGGY]  Integer  available  =  input.readInt();  int  numToSkip  =  input.read(buffersize);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  available  =  input.readInt();  int  numToSkip  =  input.read(buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  available  =  input.readInt();  int  numToSkip  =  input.read(buffersize);	  long    available    =    input.read();    int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
676	[BUG]  [BUGGY]  long  available  =  input.available  /  numToSkip  *  SKIP_BUF_SIZE  +  1;  [CE]  cannot  find  symbol  available  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  /  numToSkip  *  SKIP_BUF_SIZE  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  /  numToSkip  *  SKIP_BUF_SIZE  +  1;	  long    available    =    input.available    /    numToSkip    *    SKIP_BUF_SIZE;    	non-compiled	[CE]  cannot  find  symbol  available	108	None	replace
677	[BUG]  [BUGGY]  long  available  =  input.available  *  numToSkip  *  SKIP_BUF_SIZE;  [CE]  cannot  find  symbol  available  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  *  numToSkip  *  SKIP_BUF_SIZE;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  *  numToSkip  *  SKIP_BUF_SIZE;	  long    available    =    input.available    /    numToSkip    *    SKIP_BUF_SIZE;    	non-compiled	[CE]  cannot  find  symbol  available	108	None	replace
678	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  numToSkip  *  SKIP_BUF_SIZE;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  numToSkip  /  numToSkip  *  SKIP_BUF_SIZE;	  long    available    =    input.available    /    numToSkip    *    SKIP_BUF_SIZE;    	compilable	  [FE]  AssertionError  	108	3	replace
679	[BUG]  [BUGGY]  long  available  =  numToSkip  /  numToSkip  *  SKIP_BUF_SIZE;  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  numToSkip  *  SKIP_BUF_SIZE;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  /  numToSkip  *  SKIP_BUF_SIZE;	  long    available    =    input.available    /    numToSkip    *    SKIP_BUF_SIZE;    	compilable	  [FE]  AssertionError  	108	3	replace
680	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  SKIP_BUF_SIZE  *  SKIP_BUF_SIZE;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  numToSkip  /  SKIP_BUF_SIZE  *  SKIP_BUF_SIZE;	  long    available    =    input.available    /    numToSkip    *    SKIP_BUF_SIZE;    	compilable	  [FE]  AssertionError  	108	3	replace
681	[BUG]  [BUGGY]  long  available  =  numToSkip  /  SKIP_BUF_SIZE  *  SKIP_BUF_SIZE;  [FE]  AssertionError  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  SKIP_BUF_SIZE  *  SKIP_BUF_SIZE;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  /  SKIP_BUF_SIZE  *  SKIP_BUF_SIZE;	  long    available    =    input.available    /    numToSkip    *    SKIP_BUF_SIZE;    	compilable	  [FE]  AssertionError  	108	3	replace
682	[BUG]  [BUGGY]  Long  available  =  input.available  /  numToSkip  *  SKIP_BUF_SIZE;  [CE]  cannot  find  symbol  available  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.available  /  numToSkip  *  SKIP_BUF_SIZE;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.available  /  numToSkip  *  SKIP_BUF_SIZE;	  long    available    =    input.available    /    numToSkip    *    SKIP_BUF_SIZE;    	non-compiled	[CE]  cannot  find  symbol  available	108	None	replace
683	[BUG]  [BUGGY]  int  numToSkip  =  input.readInt(0);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.readInt(0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.readInt(0);	  int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	79	None	replace
684	[BUG]  [BUGGY]  long  available  =  System.currentTimeMillis();  InputStream  available  =  System.currentTimeMillis();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis();  InputStream  available  =  System.currentTimeMillis();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    System.currentTimeMillis();    InputStream  available  =  System.currentTimeMillis();	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	28	None	add
685	[BUG]  [BUGGY]  long  available  =  System.currentTimeMillis();  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis();  int  numToSkip  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    System.currentTimeMillis();    int  numToSkip  =  input.read();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	28	None	add
686	[BUG]  [BUGGY]  long  available  =  System.currentTimeMillis();  int  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis();  int  numToSkip  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    System.currentTimeMillis();    int  numToSkip  =  input.readLine();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	28	None	add
687	[BUG]  [BUGGY]  long  available  =  System.currentTimeMillis();  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis();  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    System.currentTimeMillis();    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	28	None	add
688	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1;  int  numToSkip  =  input.read(buffersize,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1;  int  numToSkip  =  input.read(buffersize,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  +  1;  int  numToSkip  =  input.read(buffersize,  numToSkip);	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	99	None	replace
689	[BUG]  [BUGGY]  long  available  =  input.available  +  1L;  int  numToSkip  =  input.read(buffersize);  [CE]  cannot  find  symbol  available  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  1L;  int  numToSkip  =  input.read(buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  1L;  int  numToSkip  =  input.read(buffersize);	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  cannot  find  symbol  available	99	None	replace
690	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInput(this.buffersize);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.readInput(this.buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.readInput(this.buffersize);	  InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	82	None	replace
691	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInput(buffersize,  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.readInput(buffersize,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.readInput(buffersize,  numToSkip);	  InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	82	None	replace
692	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  available  =  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  available  =  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  available  =  0;  }	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input,    numToSkip);    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	21	None	replace
693	[BUG]  [BUGGY]  long  available  =  input.length  +  numToSkip;  [CE]  cannot  find  symbol  length  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.length  +  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.length  +  numToSkip;	  long    available    =    input.length;    	non-compiled	[CE]  cannot  find  symbol  length	86	None	replace
694	[BUG]  [BUGGY]  Long  available  =  input.availableLong(this.buffersize);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableLong(this.buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableLong(this.buffersize);	  Long    available    =    input.availableLong(numToSkip);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	101	None	replace
695	[BUG]  [BUGGY]  Long  available  =  input.availableLong(0L);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableLong(0L);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableLong(0L);	  Long    available    =    input.availableLong(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
696	[BUG]  [BUGGY]  long  available  =  input.available  +  1L;  int  numToSkip  =  input.size();  [CE]  cannot  find  symbol  available  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  1L;  int  numToSkip  =  input.size();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  1L;  int  numToSkip  =  input.size();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.size();    	non-compiled	[CE]  cannot  find  symbol  available	100	None	replace
697	[BUG]  [BUGGY]  int  numToSkip  =  input.getNumberOfLinks(0,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.getNumberOfLinks(0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.getNumberOfLinks(0,  numToSkip);	  int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	127	None	replace
698	[BUG]  [BUGGY]  int  available  =  input.read();  int  available  =  input.read();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.read();  int  available  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.read();  int  available  =  input.read();	  long    available    =    input.read();    long    available    =    input.read();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	38	None	replace
699	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  4;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  numToSkip  +  4;	  long    available    =    numToSkip    +    1;    long    available    =    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	1	3	replace
700	[BUG]  [BUGGY]  long  available  =  numToSkip  +  4;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  4;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  +  4;	  long    available    =    numToSkip    +    1;    long    available    =    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	1	3	replace
701	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  3;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  numToSkip  +  3;	  long    available    =    numToSkip    +    1;    long    available    =    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	1	3	replace
702	[BUG]  [BUGGY]  long  available  =  numToSkip  +  3;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  3;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  +  3;	  long    available    =    numToSkip    +    1;    long    available    =    numToSkip    +    1;    	compilable	  [FE]  AssertionError  	1	3	replace
703	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip  -  input.length);  [CE]  cannot  find  symbol  length  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip  -  input.length);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip  -  input.length);	  long    available    =    input.availableLong(numToSkip    -    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  length	76	None	replace
704	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip  -  input.getMillis());  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip  -  input.getMillis());  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip  -  input.getMillis());	  long    available    =    input.availableLong(numToSkip    -    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
705	[BUG]  [BUGGY]  Long  available  =  input.availableLong(numToSkip  -  numToSkip);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableLong(numToSkip  -  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableLong(numToSkip  -  numToSkip);	  long    available    =    input.availableLong(numToSkip    -    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
706	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip  -  input.getVersion());  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip  -  input.getVersion());  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip  -  input.getVersion());	  long    available    =    input.availableLong(numToSkip    -    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
707	[BUG]  [BUGGY]  int  available  =  input.available  -  1;  [CE]  cannot  find  symbol  available  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.available  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.available  -  1;	  int    available    =    input.available;    	non-compiled	[CE]  cannot  find  symbol  available	105	None	replace
708	[BUG]  [BUGGY]  long  available  =  input!=  null?  input.readLine()  :  -numToSkip;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  input.readLine()  :  -numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  input.readLine()  :  -numToSkip;	  long    available    =    input!=    null?    input.readLine()    :    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
709	[BUG]  [BUGGY]  long  available  =  input!=  null?  input.readLine()  :  voidToSkip;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  input.readLine()  :  voidToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  input.readLine()  :  voidToSkip;	  long    available    =    input!=    null?    input.readLine()    :    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
710	[BUG]  [BUGGY]  int  available  =  input.availableToInt()  -  0;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.availableToInt()  -  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.availableToInt()  -  0;	  int    available    =    input.availableToInt();    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
711	[BUG]  [BUGGY]  long  available  =  input.read(COPY_BUF_SIZE,  0,  numToSkip);  [CE]  no  suitable  method  found  for  read(int,int,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(COPY_BUF_SIZE,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(COPY_BUF_SIZE,  0,  numToSkip);	  long    available    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  no  suitable  method  found  for  read(int,int,long)	130	None	replace
712	[BUG]  [BUGGY]  long  available  =  input.read(Buffer,  0,  numToSkip);  [CE]  cannot  find  symbol  Buffer  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(Buffer,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(Buffer,  0,  numToSkip);	  long    available    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  Buffer	130	None	replace
713	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  -  1l;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  -  1l;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  -  1l;	  long    available    =    input.availableToInt()    -    1;    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
714	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  *  -  1;  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  *  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  *  -  1;	  long    available    =    input.availableToInt()    -    1;    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
715	[BUG]  [BUGGY]  long  available  =  COPY_BUF_SIZE.getAstRoot(input  +  numToSkip);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  COPY_BUF_SIZE.getAstRoot(input  +  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  COPY_BUF_SIZE.getAstRoot(input  +  numToSkip);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE    +    numToSkip);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	125	None	replace
716	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1L;  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1L;  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    +    1L;    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	13	None	add
717	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1L;  int  numToSkip  =  input.read(buffersize);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1L;  int  numToSkip  =  input.read(buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    +    1L;    int  numToSkip  =  input.read(buffersize);	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	13	None	add
718	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1L;  InputStream  input  =  this.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1L;  InputStream  input  =  this.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    +    1L;    InputStream  input  =  this.getInputStream();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	13	None	add
719	[BUG]  [BUGGY]  long  available  =  input.length  -  0;  [CE]  cannot  find  symbol  length  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.length  -  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.length  -  0;	  long    available    =    input.length    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  length	50	None	replace
720	[BUG]  [BUGGY]  Long  available  =  input!=  null?  input.readLine()  :  -1;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input!=  null?  input.readLine()  :  -1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input!=  null?  input.readLine()  :  -1;	  long    available    =    input!=    null?    input.readLine()    :    -1;    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
721	[BUG]  [BUGGY]  long  available  =  input!=  null?  input.readLine()  :  -1L;  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  input.readLine()  :  -1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  input.readLine()  :  -1L;	  long    available    =    input!=    null?    input.readLine()    :    -1;    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
722	[BUG]  [BUGGY]  InputStream  available  =  input.read();  int  numToSkip  =  input.read(buffersize,  numToSkip);  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input.read();  int  numToSkip  =  input.read(buffersize,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input.read();  int  numToSkip  =  input.read(buffersize,  numToSkip);	  long    available    =    input.read();    int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  incompatible  types	138	None	replace
723	[BUG]  [BUGGY]  long  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip  +  1);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip  +  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip  +  1);	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	20	None	replace
724	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  -  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  input.available()  -  0;	  long    available    =    input.available()    -    numToSkip;    	compilable	  [FE]  AssertionError  	98	3	replace
725	[BUG]  [BUGGY]  long  available  =  input.available()  -  0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  -  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available()  -  0;	  long    available    =    input.available()    -    numToSkip;    	compilable	  [FE]  AssertionError  	98	3	replace
726	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  -  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  input.read()  -  0;	  long    available    =    input.read()    -    numToSkip;    	compilable	  [FE]  AssertionError  	48	3	replace
727	[BUG]  [BUGGY]  long  available  =  input.read()  -  0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  -  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read()  -  0;	  long    available    =    input.read()    -    numToSkip;    	compilable	  [FE]  AssertionError  	48	3	replace
728	[BUG]  [BUGGY]  long  available  =  input.read(SKIP_BUF_SIZE);  [CE]  no  suitable  method  found  for  read(int)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(SKIP_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(SKIP_BUF_SIZE);	  long    available    =    input.read(buffersize);    	non-compiled	[CE]  no  suitable  method  found  for  read(int)	106	None	replace
729	[BUG]  [BUGGY]  long  available  =  input.read(COPY_BUF_SIZE  -  numToSkip);  [CE]  no  suitable  method  found  for  read(long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(COPY_BUF_SIZE  -  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(COPY_BUF_SIZE  -  numToSkip);	  long    available    =    input.read(buffersize);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	106	None	replace
730	[BUG]  [BUGGY]  long  available  =  input.read(COPY_BUF_SIZE  +  numToSkip);  [CE]  no  suitable  method  found  for  read(long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(COPY_BUF_SIZE  +  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(COPY_BUF_SIZE  +  numToSkip);	  long    available    =    input.read(buffersize);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	106	None	replace
731	[BUG]  [BUGGY]  long  available  =  input.availableLong(0,  numToSkip).availableLong();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(0,  numToSkip).availableLong();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(0,  numToSkip).availableLong();	  long    available    =    input.availableLong(0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
732	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  0;  }	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine());    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	18	None	replace
733	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  0;  }	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine());    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	18	None	replace
734	[BUG]  [BUGGY]  InputStream  available  =  input.available  -  numToSkip;  [CE]  cannot  find  symbol  available  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input.available  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input.available  -  numToSkip;	  Long    available    =    input.available    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	49	None	replace
735	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.available()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	Long  available  =  input.available()  -  numToSkip;	  Long    available    =    input.available    -    numToSkip;    	compilable	  [FE]  AssertionError  	49	3	replace
736	[BUG]  [BUGGY]  Long  available  =  input.available()  -  numToSkip;  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.available()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.available()  -  numToSkip;	  Long    available    =    input.available    -    numToSkip;    	compilable	  [FE]  AssertionError  	49	3	replace
737	[BUG]  [BUGGY]  long  available  =  input.available  +  1L;  int  numToSkip  =  input.read();  [CE]  cannot  find  symbol  available  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  1L;  int  numToSkip  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  1L;  int  numToSkip  =  input.read();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.read();    	non-compiled	[CE]  cannot  find  symbol  available	3	None	replace
738	[BUG]  [BUGGY]  int  available  =  input.available  /  numToSkip  *  SKIP_BUF_SIZE;  [CE]  cannot  find  symbol  available  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.available  /  numToSkip  *  SKIP_BUF_SIZE;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.available  /  numToSkip  *  SKIP_BUF_SIZE;	  int    available    =    input.available    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	109	None	replace
739	[BUG]  [BUGGY]  long  available  =  input.readLine()  -  0;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  -  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  -  0;	  long    available    =    input.readLine()    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
740	[BUG]  [BUGGY]  int  available  =  input.readLine()  &  0xFFFF;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.readLine()  &  0xFFFF;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.readLine()  &  0xFFFF;	  long    available    =    input.readLine()    &    0xFFFF;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
741	[BUG]  [BUGGY]  Long  available  =  input.availableLong()  -  1;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableLong()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableLong()  -  1;	  Long    available    =    input.availableLong();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
742	[BUG]  [BUGGY]  Long  available  =  input.available  +  1;  [CE]  cannot  find  symbol  available  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.available  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.available  +  1;	  long    available    =    input.available    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	9	None	replace
743	[BUG]  [BUGGY]  int  available  =  input.available  +  1;  [CE]  cannot  find  symbol  available  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.available  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.available  +  1;	  long    available    =    input.available    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	9	None	replace
744	[BUG]  [BUGGY]  long  available  =  input.available  +  1l;  [CE]  cannot  find  symbol  available  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  1l;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  1l;	  long    available    =    input.available    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	9	None	replace
745	[BUG]  [BUGGY]  CheckInputStream  available  =  input.read();  InputStream  input  =  getInputStream();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  CheckInputStream  available  =  input.read();  InputStream  input  =  getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	CheckInputStream  available  =  input.read();  InputStream  input  =  getInputStream();	  long    available    =    input.read();    InputStream    input    =    getInputStream();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
746	[BUG]  [BUGGY]  long  available  =  input.availableLong(2);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(2);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(2);	  long    available    =    input.availableLong(0L);    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
747	[BUG]  [BUGGY]  Long  available  =  input.availableLong(0);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableLong(0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableLong(0);	  long    available    =    input.availableLong(0L);    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
748	[BUG]  [BUGGY]  long  available  =  input.length  *  1;  [CE]  cannot  find  symbol  length  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.length  *  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.length  *  1;	  long    available    =    input.length    +    1;    	non-compiled	[CE]  cannot  find  symbol  length	11	None	replace
749	[BUG]  [BUGGY]  long  available  =  input.read()  -  numToSkip;  InputStream  input  =  input.read()  -  numToSkip;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  -  numToSkip;  InputStream  input  =  input.read()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.read()    -    numToSkip;    InputStream  input  =  input.read()  -  numToSkip;	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	47	None	add
750	[BUG]  [BUGGY]  long  available  =  input.read()  -  numToSkip;  Integer  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  -  numToSkip;  Integer  numToSkip  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.read()    -    numToSkip;    Integer  numToSkip  =  input.read();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	47	None	add
751	[BUG]  [BUGGY]  long  available  =  input.read()  -  numToSkip;  InputStream  input  =  input.read();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  -  numToSkip;  InputStream  input  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.read()    -    numToSkip;    InputStream  input  =  input.read();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	47	None	add
752	[BUG]  [BUGGY]  long  available  =  input.available  /  8;  [CE]  cannot  find  symbol  available  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  /  8;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  /  8;	  long    available    =    input.available    /    1;    	non-compiled	[CE]  cannot  find  symbol  available	15	None	replace
753	[BUG]  [BUGGY]  long  available  =  input.readLine();  int  numToSkip  =  input.readLine();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine();  int  numToSkip  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine();  int  numToSkip  =  input.readLine();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
754	[BUG]  [BUGGY]  long  available  =  input.available  +  1L;  int  numToSkip  =  input.readLine();  [CE]  cannot  find  symbol  available  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  1L;  int  numToSkip  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  1L;  int  numToSkip  =  input.readLine();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol  available	7	None	replace
755	[BUG]  [BUGGY]  n  =  input.read();  InputStream  input  =  this.inputStream.read();  [CE]  cannot  find  symbol  n  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  n  =  input.read();  InputStream  input  =  this.inputStream.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	n  =  input.read();  InputStream  input  =  this.inputStream.read();	  long    available    =    input.read();    InputStream    input    =    this.inputStream.read();    	non-compiled	[CE]  cannot  find  symbol  n	118	None	replace
756	[BUG]  [BUGGY]  long  available  =  this.inputStream.read();  InputStream  input  =  this.inputStream.read();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  this.inputStream.read();  InputStream  input  =  this.inputStream.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  this.inputStream.read();  InputStream  input  =  this.inputStream.read();	  long    available    =    input.read();    InputStream    input    =    this.inputStream.read();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	118	None	replace
757	[BUG]  [BUGGY]  long  available  =  input.version.getVersion();  [CE]  cannot  find  symbol  version  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.version.getVersion();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.version.getVersion();	  long    available    =    input.getVersion();    	non-compiled	[CE]  cannot  find  symbol  version	84	None	replace
758	[BUG]  [BUGGY]  long  available  =  input.getVersion(),  numToSkip;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getVersion(),  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getVersion(),  numToSkip;	  long    available    =    input.getVersion();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
759	[BUG]  [BUGGY]  long  available  =  input.available  +  1L;  int  numToSkip  =  input.readInt();  [CE]  cannot  find  symbol  available  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  1L;  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  1L;  int  numToSkip  =  input.readInt();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol  available	6	None	replace
760	[BUG]  [BUGGY]  long  available  =  input.readInt();  int  numToSkip  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readInt();  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readInt();  int  numToSkip  =  input.readInt();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
761	[BUG]  [BUGGY]  long  available  =  input.readLine()  +  0;  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  +  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  +  0;	  long    available    =    input.readLine()    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
762	[BUG]  [BUGGY]  long  available  =  input.readLine(),  voidToSkip;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine(),  voidToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine(),  voidToSkip;	  long    available    =    input.readLine(),    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
763	[BUG]  [BUGGY]  long  available  =  input.readLine(),  -1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine(),  -1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine(),  -1;	  long    available    =    input.readLine(),    numToSkip;    	non-compiled	[CE]  <identifier>  expected	121	None	replace
764	[BUG]  [BUGGY]  long  available  =  input.getNumberOfLinks()  +  1;  int  numToSkip  =  input.getNumberOfLinks();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getNumberOfLinks()  +  1;  int  numToSkip  =  input.getNumberOfLinks();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getNumberOfLinks()  +  1;  int  numToSkip  =  input.getNumberOfLinks();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
765	[BUG]  [BUGGY]  long  available  =  0L;  InputStream  input  =  input.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L;  InputStream  input  =  input.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    0L;    InputStream  input  =  input.getInputStream();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	24	None	add
766	[BUG]  [BUGGY]  long  available  =  0L;  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L;  InputStream  input  =  input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    0L;    InputStream  input  =  input.readInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	24	None	add
767	[BUG]  [BUGGY]  long  available  =  0L;  InputStream  input  =  this.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L;  InputStream  input  =  this.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    0L;    InputStream  input  =  this.getInputStream();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	24	None	add
768	[BUG]  [BUGGY]  long  available  =  0L;  InputStream  input  =  this.input.readInt();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L;  InputStream  input  =  this.input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    0L;    InputStream  input  =  this.input.readInt();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	24	None	add
769	[BUG]  [BUGGY]  long  available  =  0L;  InputStream  input  =  input.readLine();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L;  InputStream  input  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    0L;    InputStream  input  =  input.readLine();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	24	None	add
770	[BUG]  [BUGGY]  long  available  =  1;  InputStream  input  =  input.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1;  InputStream  input  =  input.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    1;    InputStream  input  =  input.getInputStream();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	30	None	add
771	[BUG]  [BUGGY]  long  available  =  1;  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1;  InputStream  input  =  input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    1;    InputStream  input  =  input.readInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	30	None	add
772	[BUG]  [BUGGY]  long  available  =  1;  InputStream  input  =  input.readLine();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1;  InputStream  input  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    1;    InputStream  input  =  input.readLine();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	30	None	add
773	[BUG]  [BUGGY]  long  available  =  1;  InputStream  input  =  this.input.readInt();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1;  InputStream  input  =  this.input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    1;    InputStream  input  =  this.input.readInt();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	30	None	add
774	[BUG]  [BUGGY]  long  available  =  1;  InputStream  available  =  input.readLine();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1;  InputStream  available  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    1;    InputStream  available  =  input.readLine();	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	30	None	add
775	[BUG]  [BUGGY]  long  available  =  1;  int  available  =  0;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1;  int  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    1;    int  available  =  0;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	30	None	add
776	[BUG]  [BUGGY]  long  available  =  1;  int  available  =  input.read();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1;  int  available  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    1;    int  available  =  input.read();	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	30	None	add
777	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  0;  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  0;  numToSkip++)  {  available  =  input.skip(numToSkip);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  0;  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  0;  numToSkip++)  {  available  =  input.skip(numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  0;  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  0;  numToSkip++)  {  available  =  input.skip(numToSkip);  }	  long    available    =    0;    int    available    =    input.read();    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
778	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  0;  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  0;  numToSkip++)  {  available  +=  input.skip(numToSkip);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  0;  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  0;  numToSkip++)  {  available  +=  input.skip(numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  0;  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  0;  numToSkip++)  {  available  +=  input.skip(numToSkip);  }	  long    available    =    0;    int    available    =    input.read();    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
779	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  0;  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip--)  {  available  =  input.skip(numToSkip);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  0;  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip--)  {  available  =  input.skip(numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  0;  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip--)  {  available  =  input.skip(numToSkip);  }	  long    available    =    0;    int    available    =    input.read();    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
780	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  0;  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  0;  numToSkip  +=  SKIP_BUF_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  0;  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  0;  numToSkip  +=  SKIP_BUF_SIZE)  {  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  0;  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  0;  numToSkip  +=  SKIP_BUF_SIZE)  {	  long    available    =    0;    int    available    =    input.read();    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
781	[BUG]  [BUGGY]  int  numToSkip  =  input.readOnly();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.readOnly();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.readOnly();	  int    numToSkip    =    input.readLine();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	128	None	replace
782	[BUG]  [BUGGY]  long  available  =  input.available()  /  numToSkip;  InputStream  available  =  input.available()  /  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  numToSkip;  InputStream  available  =  input.available()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    /    numToSkip;    InputStream  available  =  input.available()  /  numToSkip;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	139	None	add
783	[BUG]  [BUGGY]  long  available  =  input.available()  /  numToSkip;  int  numToSkip  =  input.available();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  numToSkip;  int  numToSkip  =  input.available();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    /    numToSkip;    int  numToSkip  =  input.available();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	139	None	add
784	[BUG]  [BUGGY]  long  available  =  input.available()  /  numToSkip;  Integer  numToSkip  =  input.available()  /  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  numToSkip;  Integer  numToSkip  =  input.available()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    /    numToSkip;    Integer  numToSkip  =  input.available()  /  numToSkip;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	139	None	add
785	[BUG]  [BUGGY]  long  available  =  input.read(COPY_BUF_SIZE,  0);  [CE]  no  suitable  method  found  for  read(int,int)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(COPY_BUF_SIZE,  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(COPY_BUF_SIZE,  0);	  long    available    =    input.read(buffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  read(int,int)	131	None	replace
786	[BUG]  [BUGGY]  long  available  =  input.read(dataBuffer,  0);  [CE]  cannot  find  symbol  dataBuffer  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(dataBuffer,  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(dataBuffer,  0);	  long    available    =    input.read(buffer,    0);    	non-compiled	[CE]  cannot  find  symbol  dataBuffer	131	None	replace
787	[BUG]  [BUGGY]  long  available  =  numToSkip  /  1;  long  numToSkip  =  numToSkip  /  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  1;  long  numToSkip  =  numToSkip  /  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    /    1;    long  numToSkip  =  numToSkip  /  1;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	133	None	add
788	[BUG]  [BUGGY]  long  available  =  numToSkip  /  1;  Long  numToSkip  =  numToSkip  /  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  1;  Long  numToSkip  =  numToSkip  /  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    /    1;    Long  numToSkip  =  numToSkip  /  1;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	133	None	add
789	[BUG]  [BUGGY]  long  available  =  numToSkip  /  1;  long  available  =  numToSkip  /  2;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  1;  long  available  =  numToSkip  /  2;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    /    1;    long  available  =  numToSkip  /  2;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	133	None	add
790	[BUG]  [BUGGY]  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip  +  1);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip  +  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip  +  1);	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input,    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	22	None	replace
791	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  0;  numToSkip++)  {  available  +=  input.skip(numToSkip);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  0;  numToSkip++)  {  available  +=  input.skip(numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  0;  numToSkip++)  {  available  +=  input.skip(numToSkip);  }	  long    available    =    input.read();    int    available    =    input.read();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
792	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  0;  numToSkip++)  {  available  =  input.skip(numToSkip);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  0;  numToSkip++)  {  available  =  input.skip(numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  0;  numToSkip++)  {  available  =  input.skip(numToSkip);  }	  long    available    =    input.read();    int    available    =    input.read();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
793	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  0;  numToSkip  +=  SKIP_BUF_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  0;  numToSkip  +=  SKIP_BUF_SIZE)  {  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  int  available  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  0;  numToSkip  +=  SKIP_BUF_SIZE)  {	  long    available    =    input.read();    int    available    =    input.read();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
794	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  int  available  =  input.read();  }  else  {  skip(input,  numToSkip);  }  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  int  available  =  input.read();  }  else  {  skip(input,  numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  int  available  =  input.read();  }  else  {  skip(input,  numToSkip);  }	  long    available    =    input.read();    int    available    =    input.read();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	39	None	replace
795	[BUG]  [BUGGY]  long  available  =  input.availableLong(this.buffersize  +  numToSkip);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(this.buffersize  +  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(this.buffersize  +  numToSkip);	  long    available    =    input.availableLong(this.buffersize);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	103	None	replace
796	[BUG]  [BUGGY]  Integer  available  =  0;  Long  available  =  0;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  available  =  0;  Long  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  available  =  0;  Long  available  =  0;	  long    available    =    0;    Long    available    =    0;    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	95	None	replace
797	[BUG]  [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip  +  1);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip  +  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip  +  1);	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	19	None	replace
798	[BUG]  [BUGGY]  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip,  buffersize);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip,  buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip,  buffersize);	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	19	None	replace
799	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  +  0;  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  +  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  +  0;	  long    available    =    input.availableToInt()    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
800	[BUG]  [BUGGY]  InputStream  available  =  input.readInt(this.buffersize,  numToSkip);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input.readInt(this.buffersize,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input.readInt(this.buffersize,  numToSkip);	  InputStream    available    =    input.readInt();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	111	None	replace
801	[BUG]  [BUGGY]  InputStream  available  =  input.readInt(this.buffersize);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input.readInt(this.buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input.readInt(this.buffersize);	  InputStream    available    =    input.readInt();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	111	None	replace
802	[BUG]  [BUGGY]  InputStream  available  =  input.readInt(UTF_8);  [CE]  cannot  find  symbol  UTF_8  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input.readInt(UTF_8);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input.readInt(UTF_8);	  InputStream    available    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol  UTF_8	111	None	replace
803	[BUG]  [BUGGY]  InputStream  available  =  input.readInt(0);  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input.readInt(0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input.readInt(0);	  InputStream    available    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
804	[BUG]  [BUGGY]  long  available  =  input.availableLong()  -  0;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  -  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  -  0;	  long    available    =    input.availableLong()    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
805	[BUG]  [BUGGY]  short  available  =  0;  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  short  available  =  0;  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	short  available  =  0;  int  numToSkip  =  input.readInt();	  long    available    =    0;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	146	None	replace
806	[BUG]  [BUGGY]  long  available  =  0;  Integer  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0;  Integer  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0;  Integer  numToSkip  =  input.readInt();	  long    available    =    0;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	146	None	replace
807	[BUG]  [BUGGY]  int  available  =  input.getAverageNumber();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.getAverageNumber();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.getAverageNumber();	  long    available    =    input.getAverageNumber();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
808	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1;  int  numToSkip  =  numToSkip  +  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1;  int  numToSkip  =  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  +  1;  int  numToSkip  =  numToSkip  +  1;	  long    available    =    numToSkip    +    1;    long    numToSkip    =    numToSkip    +    1;    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	4	None	replace
809	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1;  short  numToSkip  =  numToSkip  +  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1;  short  numToSkip  =  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  +  1;  short  numToSkip  =  numToSkip  +  1;	  long    available    =    numToSkip    +    1;    long    numToSkip    =    numToSkip    +    1;    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	4	None	replace
810	[BUG]  [BUGGY]  Long  available  =  input.getAstRoot(COPY_BUF_SIZE);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.getAstRoot(COPY_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.getAstRoot(COPY_BUF_SIZE);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
811	[BUG]  [BUGGY]  int  available  =  input.getAstRoot(COPY_BUF_SIZE);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.getAstRoot(COPY_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.getAstRoot(COPY_BUF_SIZE);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
812	[BUG]  [BUGGY]  int  available  =(input  ==  null)?  0  :  input.length;  [CE]  cannot  find  symbol  length  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =(input  ==  null)?  0  :  input.length;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =(input  ==  null)?  0  :  input.length;	  int    available    =    0;    	non-compiled	[CE]  cannot  find  symbol  length	27	None	replace
813	[BUG]  [BUGGY]  int  available  =(input  ==  null)?  0  :  input.readLine();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =(input  ==  null)?  0  :  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =(input  ==  null)?  0  :  input.readLine();	  int    available    =    0;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
814	[BUG]  [BUGGY]  int  available  =(input  ==  null)?  0  :  input.length();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =(input  ==  null)?  0  :  input.length();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =(input  ==  null)?  0  :  input.length();	  int    available    =    0;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
815	[BUG]  [BUGGY]  long  available  =  input.available()  -  numToSkip;  long  numToSkip  =  input.available()  -  numToSkip;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  -  numToSkip;  long  numToSkip  =  input.available()  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    -    numToSkip;    long  numToSkip  =  input.available()  -  numToSkip;	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	97	None	add
816	[BUG]  [BUGGY]  long  available  =  input.available()  -  numToSkip;  Integer  numToSkip  =  input.available();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  -  numToSkip;  Integer  numToSkip  =  input.available();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    -    numToSkip;    Integer  numToSkip  =  input.available();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	97	None	add
817	[BUG]  [BUGGY]  long  available  =  input.available()  -  numToSkip;  InputStream  input  =  input.available();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  -  numToSkip;  InputStream  input  =  input.available();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    -    numToSkip;    InputStream  input  =  input.available();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	97	None	add
818	[BUG]  [BUGGY]  long  available  =  input.available();  InputStream  input  =  input.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available();  InputStream  input  =  input.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available();    InputStream  input  =  input.getInputStream();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	148	None	add
819	[BUG]  [BUGGY]  long  available  =  input.available();  InputStream  input  =  input.available();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available();  InputStream  input  =  input.available();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available();    InputStream  input  =  input.available();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	148	None	add
820	[BUG]  [BUGGY]  long  available  =  input.available();  int  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available();  int  numToSkip  =  input.length();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available();    int  numToSkip  =  input.length();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	148	None	add
821	[BUG]  [BUGGY]  long  available  =  input.available();  int  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available();  int  numToSkip  =  input.size();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available();    int  numToSkip  =  input.size();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	148	None	add
822	[BUG]  [BUGGY]  long  available  =  this.input.read();  InputStream  input  =  this.input.readInput();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  this.input.read();  InputStream  input  =  this.input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  this.input.read();  InputStream  input  =  this.input.readInput();	  long    available    =    input.read();    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	44	None	replace
823	[BUG]  [BUGGY]  n  =  this.input.readInput();  [CE]  cannot  find  symbol  n  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  n  =  this.input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	n  =  this.input.readInput();	  long    available    =    input.read();    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  cannot  find  symbol  n	44	None	replace
824	[BUG]  [BUGGY]  long  available  =  input.numToSkip  /  1;  [CE]  cannot  find  symbol  numToSkip  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.numToSkip  /  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.numToSkip  /  1;	  long    available    =    numToSkip    /    1;    	non-compiled	[CE]  cannot  find  symbol  numToSkip	134	None	replace
825	[BUG]  [BUGGY]  long  available  =  input.length();  int  numToSkip  =  input.length();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.length();  int  numToSkip  =  input.length();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.length();  int  numToSkip  =  input.length();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
826	[BUG]  [BUGGY]  int  available  =  input.readFully(numToSkip);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.readFully(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.readFully(numToSkip);	  long    available    =    input.readFully(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
827	[BUG]  [BUGGY]  n  =  input.read();  [CE]  cannot  find  symbol  n  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  n  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	n  =  input.read();	  long    available    =    input.read();    InputStream    input    =    input.read();    	non-compiled	[CE]  cannot  find  symbol  n	117	None	replace
828	[BUG]  [BUGGY]  long  available  =  this.input.read();  InputStream  input  =  this.input.read();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  this.input.read();  InputStream  input  =  this.input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  this.input.read();  InputStream  input  =  this.input.read();	  long    available    =    input.read();    InputStream    input    =    this.input.read();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	45	None	replace
829	[BUG]  [BUGGY]  long  available  =  this.input.read();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  this.input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  this.input.read();	  long    available    =    input.read();    InputStream    input    =    this.input.read();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	45	None	replace
830	[BUG]  [BUGGY]  n  =  input.read();  InputStream  input  =  this.input.read();  [CE]  cannot  find  symbol  n  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  n  =  input.read();  InputStream  input  =  this.input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	n  =  input.read();  InputStream  input  =  this.input.read();	  long    available    =    input.read();    InputStream    input    =    this.input.read();    	non-compiled	[CE]  cannot  find  symbol  n	45	None	replace
831	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  numToSkip  +  4;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  input.available()  /  numToSkip  +  4;	  long    available    =    input.available()    /    numToSkip;    	compilable	  [FE]  AssertionError  	140	3	replace
832	[BUG]  [BUGGY]  long  available  =  input.available()  /  numToSkip  +  4;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  numToSkip  +  4;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available()  /  numToSkip  +  4;	  long    available    =    input.available()    /    numToSkip;    	compilable	  [FE]  AssertionError  	140	3	replace
833	[BUG]  [BUGGY]  InputStream  input  =(input  ==  null)?  this.input.getInputStream()  :  input;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =(input  ==  null)?  this.input.getInputStream()  :  input;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =(input  ==  null)?  this.input.getInputStream()  :  input;	  InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	83	None	replace
834	[BUG]  [BUGGY]  InputStream  input  =(input!=  null)?  this.input.getInputStream()  :  input;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =(input!=  null)?  this.input.getInputStream()  :  input;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =(input!=  null)?  this.input.getInputStream()  :  input;	  InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	83	None	replace
835	[BUG]  [BUGGY]  InputStream  input  =  this.input.getInputStream(this.buffersize);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.getInputStream(this.buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.getInputStream(this.buffersize);	  InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	83	None	replace
836	[BUG]  [BUGGY]  long  available  =  input.available  /  numToSkip  *  CHIP_BUF_SIZE;  [CE]  cannot  find  symbol  available  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  /  numToSkip  *  CHIP_BUF_SIZE;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  /  numToSkip  *  CHIP_BUF_SIZE;	  long    available    =    input.available    /    numToSkip    *    SKIP_BUF_SIZE;    	non-compiled	[CE]  cannot  find  symbol  available	108	None	replace
837	[BUG]  [BUGGY]  long  available  =  input.available  /  numToSkip  *  SKIP_BUF_SIZE  +  4;  [CE]  cannot  find  symbol  available  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  /  numToSkip  *  SKIP_BUF_SIZE  +  4;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  /  numToSkip  *  SKIP_BUF_SIZE  +  4;	  long    available    =    input.available    /    numToSkip    *    SKIP_BUF_SIZE;    	non-compiled	[CE]  cannot  find  symbol  available	108	None	replace
838	[BUG]  [BUGGY]  Long  available  =  input.read(COPY_BUF_SIZE,  numToSkip);  [CE]  no  suitable  method  found  for  read(int,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.read(COPY_BUF_SIZE,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.read(COPY_BUF_SIZE,  numToSkip);	  long    available    =    input.read(buffersize,    numToSkip);    	non-compiled	[CE]  no  suitable  method  found  for  read(int,long)	107	None	replace
839	[BUG]  [BUGGY]  int  available  =  input.read(buffer,  numToSkip);  [CE]  cannot  find  symbol  buffer  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.read(buffer,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.read(buffer,  numToSkip);	  long    available    =    input.read(buffersize,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffer	107	None	replace
840	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.available();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	int  available  =  input.available();	  long    available    =    input.available();    	compilable	  [FE]  AssertionError  	149	3	replace
841	[BUG]  [BUGGY]  int  available  =  input.available();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.available();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.available();	  long    available    =    input.available();    	compilable	  [FE]  AssertionError  	149	3	replace
842	[BUG]  [BUGGY]  if(input!=  null)  {  available  =  0;  InputStream  input  =  input.readLine();  }  [CE]  cannot  find  symbol  available  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  available  =  0;  InputStream  input  =  input.readLine();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  available  =  0;  InputStream  input  =  input.readLine();  }	  long    available    =    0;    InputStream    input    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol  available	92	None	replace
843	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  input.readLine();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  input.readLine();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  input.readLine();  }	  long    available    =    0;    InputStream    input    =    input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
844	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  input.readLine();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  input.readLine();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  input.readLine();  }	  long    available    =    0;    InputStream    input    =    input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
845	[BUG]  [BUGGY]  int  numToSkip  =  input.read(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.read(available);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.read(available);	  int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	113	None	replace
846	[BUG]  [BUGGY]  int  numToSkip  =  input.read(buffersize,  0);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.read(buffersize,  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.read(buffersize,  0);	  int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	113	None	replace
847	[BUG]  [BUGGY]  int  available  =  0;  InputStream  available  =  0;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  InputStream  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int    available    =    0;    InputStream  available  =  0;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	26	None	add
848	[BUG]  [BUGGY]  int  available  =  0;  boolean  available  =  0;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  boolean  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int    available    =    0;    boolean  available  =  0;	  	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	26	None	add
849	[BUG]  [BUGGY]  long  available  =  input.available  +  numToSkip  +  1L;  [CE]  cannot  find  symbol  available  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  numToSkip  +  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  numToSkip  +  1L;	  long    available    =    input.available    +    numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	132	None	replace
850	[BUG]  [BUGGY]  Long  available  =  input.available  +  numToSkip  +  1;  [CE]  cannot  find  symbol  available  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.available  +  numToSkip  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.available  +  numToSkip  +  1;	  long    available    =    input.available    +    numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	132	None	replace
851	[BUG]  [BUGGY]  long  available  =  input.getAverageMillis(numToSkip);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAverageMillis(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAverageMillis(numToSkip);	  long    available    =    input.getAverageMillis();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
852	[BUG]  [BUGGY]  InputStream  input  =(InputStream)input.readLine()  -  1;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =(InputStream)input.readLine()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =(InputStream)input.readLine()  -  1;	  InputStream    input    =(InputStream)input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	112	None	replace
853	[BUG]  [BUGGY]  InputStream  input  =(InputStream)input.readLine()  +  numToSkip;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =(InputStream)input.readLine()  +  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =(InputStream)input.readLine()  +  numToSkip;	  InputStream    input    =(InputStream)input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	112	None	replace
854	[BUG]  [BUGGY]  int  available  =  input.read();  Integer  available  =  input.read();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.read();  Integer  available  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.read();  Integer  available  =  input.read();	  long    available    =    input.read();    Long    available    =    input.read();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	40	None	replace
855	[BUG]  [BUGGY]  Integer  available  =  input.read();  Long  available  =  input.read();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Integer  available  =  input.read();  Long  available  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Integer  available  =  input.read();  Long  available  =  input.read();	  long    available    =    input.read();    Long    available    =    input.read();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	40	None	replace
856	[BUG]  [BUGGY]  long  available  =  input!=  null?  input.readFully()  :  numToSkip;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  input.readFully()  :  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  input.readFully()  :  numToSkip;	  long    available    =    input.readFully();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
857	[BUG]  [BUGGY]  long  available  =  input!=  null?  input.readFully()  :  _input.readFully();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  input.readFully()  :  _input.readFully();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  input.readFully()  :  _input.readFully();	  long    available    =    input.readFully();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
858	[BUG]  [BUGGY]  long  available  =  input!=  null?  input.readFully()  :  -input.readFully();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  input.readFully()  :  -input.readFully();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  input.readFully()  :  -input.readFully();	  long    available    =    input.readFully();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
859	[BUG]  [BUGGY]  long  available  =  0L  +  input.getChars(numToSkip);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L  +  input.getChars(numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0L  +  input.getChars(numToSkip);	  long    available    =    0L;    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
860	[BUG]  [BUGGY]  long  available  =  0L  +  input.getVersion();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L  +  input.getVersion();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0L  +  input.getVersion();	  long    available    =    0L;    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
861	[BUG]  [BUGGY]  long  available  =  0L  +  input.length;  [CE]  cannot  find  symbol  length  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L  +  input.length;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0L  +  input.length;	  long    available    =    0L;    	non-compiled	[CE]  cannot  find  symbol  length	25	None	replace
862	[BUG]  [BUGGY]  long  available  =  input.availableLong()  -  1l;  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  -  1l;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  -  1l;	  long    available    =    input.availableLong()    -    1;    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
863	[BUG]  [BUGGY]  long  available  =  input.readLine();  int  numToSkip  =  input.readInt();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine();  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine();  int  numToSkip  =  input.readInt();	  long    available    =    input.read();    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
864	[BUG]  [BUGGY]  long  available  =  input.read();  int  numToSkip  =  input.readInt(0);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read();  int  numToSkip  =  input.readInt(0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read();  int  numToSkip  =  input.readInt(0);	  long    available    =    input.read();    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	137	None	replace
865	[BUG]  [BUGGY]  long  available  =  input  *  numToSkip.available;  [CE]  long  cannot  be  dereferenced  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input  *  numToSkip.available;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input  *  numToSkip.available;	  long    available    =    numToSkip    /    input.available;    	non-compiled	[CE]  long  cannot  be  dereferenced	66	None	replace
866	[BUG]  [BUGGY]  InputStream  available  =  input.readLine();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input.readLine();	  Long    available    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
867	[BUG]  [BUGGY]  Long  available  =  input.readLine()  &  0xff;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.readLine()  &  0xff;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.readLine()  &  0xff;	  Long    available    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
868	[BUG]  [BUGGY]  int  numToSkip  =  input.read(buffer,  0,  numToSkip,  SKIP_BUF_SIZE);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.read(buffer,  0,  numToSkip,  SKIP_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.read(buffer,  0,  numToSkip,  SKIP_BUF_SIZE);	  int    numToSkip    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	126	None	replace
869	[BUG]  [BUGGY]  int  available  =  input.availableLong()  -  1;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.availableLong()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.availableLong()  -  1;	  int    available    =    input.availableLong();    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
870	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  -  0;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  -  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  -  0;	  long    available    =    input.availableToInt()    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
871	[BUG]  [BUGGY]  InputStream  input  =  getInputStream(INIT_SIZE);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  getInputStream(INIT_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  getInputStream(INIT_SIZE);	  InputStream    input    =    getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	77	None	replace
872	[BUG]  [BUGGY]  InputStream  input  =  getInputStream(INITIAL_SIZE);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  getInputStream(INITIAL_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  getInputStream(INITIAL_SIZE);	  InputStream    input    =    getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	77	None	replace
873	[BUG]  [BUGGY]  InputStream  input  =  getInputStream(INPUT_SIZE);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  getInputStream(INPUT_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  getInputStream(INPUT_SIZE);	  InputStream    input    =    getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	77	None	replace
874	[BUG]  [BUGGY]  InputStream  available  =  input!=  null?  null.readInput()  :  input.readInput();  [CE]  <null>  cannot  be  dereferenced  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input!=  null?  null.readInput()  :  input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input!=  null?  null.readInput()  :  input.readInput();	  InputStream    available    =    input.readInput();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	81	None	replace
875	[BUG]  [BUGGY]  InputStream  available  =  input.readFully();  [CE]  cannot  find  symbol  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input.readFully();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input.readFully();	  InputStream    available    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
876	[BUG]  [BUGGY]  int  available  =  input!=  null?  input.readInt()  :  0;  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input!=  null?  input.readInt()  :  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input!=  null?  input.readInt()  :  0;	  int    available    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
877	[BUG]  [BUGGY]  int  available  =  input.readInt(COPY_BUF_SIZE);  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.readInt(COPY_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.readInt(COPY_BUF_SIZE);	  int    available    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
878	[BUG]  [BUGGY]  int  available  =  input!=  null?  input.readInt()  :  -1;  [CE]  cannot  find  symbol  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input!=  null?  input.readInt()  :  -1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input!=  null?  input.readInt()  :  -1;	  int    available    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
879	[BUG]  [BUGGY]  InputStream  available  =  input.available;  [CE]  cannot  find  symbol  available  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input.available;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input.available;	  Long    available    =    input.available;    	non-compiled	[CE]  cannot  find  symbol  available	104	None	replace
880	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0;  }	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input.readLine());    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	17	None	replace
881	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0;  }	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input.readLine());    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	17	None	replace
882	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  input.readInput();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  input.readInput();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  input.readInput();  }	  long    available    =    0;    InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	91	None	replace
883	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  input  =  input.readInput();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  input  =  input.readInput();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  for(int  i  =  0;  i  <  numToSkip;  i++)  {  input  =  input.readInput();  }	  long    available    =    0;    InputStream    input    =    input.readInput();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
884	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  input.readInput();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  input.readInput();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  input.readInput();  }	  long    available    =    0;    InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	91	None	replace
885	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip,  KEY_BUF_SIZE);  [CE]  cannot  find  symbol  KEY_BUF_SIZE  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip,  KEY_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip,  KEY_BUF_SIZE);	  long    available    =    input.availableLong(numToSkip,    buffersize);    	non-compiled	[CE]  cannot  find  symbol  KEY_BUF_SIZE	74	None	replace
886	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip,  chPtr);  [CE]  cannot  find  symbol  chPtr  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip,  chPtr);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip,  chPtr);	  long    available    =    input.availableLong(numToSkip,    buffersize);    	non-compiled	[CE]  cannot  find  symbol  chPtr	74	None	replace
887	[BUG]  [BUGGY]  InputStream  input  =  getInput().inputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  getInput().inputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  getInput().inputStream();	  InputStream    input    =    getInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
888	[BUG]  [BUGGY]  InputStream  input  =  getInput().readLine();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  getInput().readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  getInput().readLine();	  InputStream    input    =    getInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
889	[BUG]  [BUGGY]  InputStream  input  =  getOutput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  getOutput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  getOutput();	  InputStream    input    =    getInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
890	[BUG]  [BUGGY]  InputStream  input  =  getInput(input);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  getInput(input);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  getInput(input);	  InputStream    input    =    getInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
891	[BUG]  [BUGGY]  if(input!=  null)  {  available  =  0;  InputStream  input  =  this.input.getInputStream();  }  [CE]  cannot  find  symbol  available  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  available  =  0;  InputStream  input  =  this.input.getInputStream();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  available  =  0;  InputStream  input  =  this.input.getInputStream();  }	  long    available    =    0;    InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  cannot  find  symbol  available	23	None	replace
892	[BUG]  [BUGGY]  if(input!=  null)  {  available  =  0;  InputStream  input  =  this.input.getInputStream();  }  else  {  skip(input,  numToSkip);  }  [CE]  cannot  find  symbol  available  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  available  =  0;  InputStream  input  =  this.input.getInputStream();  }  else  {  skip(input,  numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  available  =  0;  InputStream  input  =  this.input.getInputStream();  }  else  {  skip(input,  numToSkip);  }	  long    available    =    0;    InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  cannot  find  symbol  available	23	None	replace
893	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1L  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  numToSkip  +  1L  +  1;	  long    available    =    numToSkip    +    1L;    	compilable	  [FE]  AssertionError  	14	3	replace
894	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1L  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1L  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  +  1L  +  1;	  long    available    =    numToSkip    +    1L;    	compilable	  [FE]  AssertionError  	14	3	replace
895	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1L  +  input.getVersion();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1L  +  input.getVersion();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  +  1L  +  input.getVersion();	  long    available    =    numToSkip    +    1L;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
896	[BUG]  [BUGGY]  long  available  =  input.read();  int  numToSkip  =  input.read(buffer,  0,  numToSkip  +  1);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read();  int  numToSkip  =  input.read(buffer,  0,  numToSkip  +  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read();  int  numToSkip  =  input.read(buffer,  0,  numToSkip  +  1);	  long    available    =    input.read();    int    numToSkip    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	136	None	replace
897	[BUG]  [BUGGY]  long  available  =  input.readUTF(buffersize);  [CE]  cannot  find  symbol  buffersize  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readUTF(buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readUTF(buffersize);	  long    available    =    input.readUTF();    	non-compiled	[CE]  cannot  find  symbol  buffersize	60	None	replace
898	[BUG]  [BUGGY]  long  available  =  input.getUTF();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getUTF();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getUTF();	  long    available    =    input.readUTF();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
899	[BUG]  [BUGGY]  long  available  =  inputStream.readUTF();  [CE]  cannot  find  symbol  inputStream  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  inputStream.readUTF();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  inputStream.readUTF();	  long    available    =    input.readUTF();    	non-compiled	[CE]  cannot  find  symbol  inputStream	60	None	replace
900	[BUG]  [BUGGY]  long  available  =  System.currentTimeMillis()  +  input.getVersion();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis()  +  input.getVersion();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  System.currentTimeMillis()  +  input.getVersion();	  long    available    =    System.currentTimeMillis();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
901	[BUG]  [BUGGY]  long  available  =  input.getTime();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getTime();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getTime();	  long    available    =    System.currentTimeMillis();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
902	[BUG]  [BUGGY]  Long  available  =  input!=  null?  input.readLine()  :  -input.readLine();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input!=  null?  input.readLine()  :  -input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input!=  null?  input.readLine()  :  -input.readLine();	  long    available    =    input!=    null?    input.readLine()    :    -input.readLine();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
903	[BUG]  [BUGGY]  long  available  =  input.readFully(chunks);  [CE]  cannot  find  symbol  chunks  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readFully(chunks);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readFully(chunks);	  long    available    =    input.readFully(this);    	non-compiled	[CE]  cannot  find  symbol  chunks	61	None	replace
904	[BUG]  [BUGGY]  long  available  =  input.readFully(n);  [CE]  cannot  find  symbol  n  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readFully(n);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readFully(n);	  long    available    =    input.readFully(this);    	non-compiled	[CE]  cannot  find  symbol  n	61	None	replace
905	[BUG]  [BUGGY]  long  available  =  input.availableLong()  -(input!=  null?  0  :  input.availableLong());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  -(input!=  null?  0  :  input.availableLong());  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  -(input!=  null?  0  :  input.availableLong());	  long    available    =    input.availableLong()    -(input.availableLong());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
906	[BUG]  [BUGGY]  long  available  =  input.availableLong()  -(input  ==  null?  0  :  input.availableLong());  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  -(input  ==  null?  0  :  input.availableLong());  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  -(input  ==  null?  0  :  input.availableLong());	  long    available    =    input.availableLong()    -(input.availableLong());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
907	[BUG]  [BUGGY]  Long  available  =  input.availableLong()  -(input.availableLong());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.availableLong()  -(input.availableLong());  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.availableLong()  -(input.availableLong());	  long    available    =    input.availableLong()    -(input.availableLong());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
908	[BUG]  [BUGGY]  long  available  =  input.getNumberOfLinks()  +  1;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getNumberOfLinks()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getNumberOfLinks()  +  1;	  long    available    =    input.numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
909	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip,  _bufferSize);  [CE]  cannot  find  symbol  _bufferSize  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip,  _bufferSize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip,  _bufferSize);	  long    available    =    input.availableLong(numToSkip,    buffersize);    	non-compiled	[CE]  cannot  find  symbol  _bufferSize	74	None	replace
910	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  *  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  numToSkip  *  1L;	  long    available    =    numToSkip    +    1L;    	compilable	  [FE]  AssertionError  	14	2	replace
911	[BUG]  [BUGGY]  long  available  =  numToSkip  *  1L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  *  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  *  1L;	  long    available    =    numToSkip    +    1L;    	compilable	  [FE]  AssertionError  	14	2	replace
912	[BUG]  [BUGGY]  long  available  =  input.numToSkip  +  1L;  [CE]  cannot  find  symbol  numToSkip  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.numToSkip  +  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.numToSkip  +  1L;	  long    available    =    numToSkip    +    1L;    	non-compiled	[CE]  cannot  find  symbol  numToSkip	14	None	replace
913	[BUG]  [BUGGY]  long  available  =  input.readFully(numToSkip,  _buffersize);  [CE]  cannot  find  symbol  _buffersize  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readFully(numToSkip,  _buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readFully(numToSkip,  _buffersize);	  long    available    =    input.readFully(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  _buffersize	57	None	replace
914	[BUG]  [BUGGY]  long  available  =  input.readFully(numToSkip)-  1;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readFully(numToSkip)-  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readFully(numToSkip)-  1;	  long    available    =    input.readFully(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
915	[BUG]  [BUGGY]  Long  available  =  input.available  -  0;  [CE]  cannot  find  symbol  available  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.available  -  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.available  -  0;	  Long    available    =    input.available    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	49	None	replace
916	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.readInput();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.readInput();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.readInput();  }	  long    available    =    input.read();    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	44	None	replace
917	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.readInput();  }  else  {  return  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.readInput();  }  else  {  return  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.readInput();  }  else  {  return  0;  }	  long    available    =    input.read();    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	44	None	replace
918	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.readInput();  }  else  {  skip(input,  numToSkip);  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.readInput();  }  else  {  skip(input,  numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.readInput();  }  else  {  skip(input,  numToSkip);  }	  long    available    =    input.read();    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	44	None	replace
919	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.readInput();  }  else  {  return  0L;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.readInput();  }  else  {  return  0L;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.readInput();  }  else  {  return  0L;  }	  long    available    =    input.read();    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	44	None	replace
920	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.readInput();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip  -=  0;  [CE]  ')'  expected  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.readInput();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip  -=  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.readInput();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip  -=  0;	  long    available    =    input.read();    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  ')'  expected	44	None	replace
921	[BUG]  [BUGGY]  InputStream  available  =  input.readInt(COPY_BUF_SIZE);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input.readInt(COPY_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input.readInt(COPY_BUF_SIZE);	  InputStream    available    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
922	[BUG]  [BUGGY]  long  numToSkip  =  input.getNumberOfLinks()  +  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  numToSkip  =  input.getNumberOfLinks()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  numToSkip  =  input.getNumberOfLinks()  +  1;	  long    available    =    numToSkip    +    1;    long    numToSkip    =    numToSkip    +    1;    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	4	None	replace
923	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.available()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	Long  available  =  input.available()  /  numToSkip;	  Long    available    =    input.available    /    numToSkip;    	compilable	  [FE]  AssertionError  	65	3	replace
924	[BUG]  [BUGGY]  Long  available  =  input.available()  /  numToSkip;  [FE]  AssertionError  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.available()  /  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.available()  /  numToSkip;	  Long    available    =    input.available    /    numToSkip;    	compilable	  [FE]  AssertionError  	65	3	replace
925	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  input.read()  -  1;	  long    available    =    input.read()    -    numToSkip;    	compilable	  [FE]  AssertionError  	48	3	replace
926	[BUG]  [BUGGY]  long  available  =  input.read()  -  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read()  -  1;	  long    available    =    input.read()    -    numToSkip;    	compilable	  [FE]  AssertionError  	48	3	replace
927	[BUG]  [BUGGY]  long  available  =  input.read()  -  this.numToSkip;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  -  this.numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read()  -  this.numToSkip;	  long    available    =    input.read()    -    numToSkip;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	48	None	replace
928	[BUG]  [BUGGY]  long  available  =  input.getAverageMillis()  -  1;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAverageMillis()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAverageMillis()  -  1;	  long    available    =    input.getAverageMillis();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
929	[BUG]  [BUGGY]  long  available  =  input.read(LCURLY_BUF_SIZE,  numToSkip);  [CE]  cannot  find  symbol  LCURLY_BUF_SIZE  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(LCURLY_BUF_SIZE,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(LCURLY_BUF_SIZE,  numToSkip);	  long    available    =    input.read(buffersize,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  LCURLY_BUF_SIZE	107	None	replace
930	[BUG]  [BUGGY]  long  available  =  input.read(this,  numToSkip);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(this,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(this,  numToSkip);	  long    available    =    input.read(buffersize,    numToSkip);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	107	None	replace
931	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  }	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input,    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	22	None	replace
932	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  }	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input,    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	22	None	replace
933	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  this.input.getInputStream();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  this.input.getInputStream();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  0;  InputStream  input  =  this.input.getInputStream();  }	  long    available    =    0;    InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	23	None	replace
934	[BUG]  [BUGGY]  byte  available  =  0;  InputStream  input  =  this.input.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  byte  available  =  0;  InputStream  input  =  this.input.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	byte  available  =  0;  InputStream  input  =  this.input.getInputStream();	  long    available    =    0;    InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	23	None	replace
935	[BUG]  [BUGGY]  InputStream  available  =  input!=  null?  input.readInput()  :  new  FileInputStream(input);  [CE]  cannot  find  symbol  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input!=  null?  input.readInput()  :  new  FileInputStream(input);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input!=  null?  input.readInput()  :  new  FileInputStream(input);	  InputStream    available    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
936	[BUG]  [BUGGY]  InputStream  available  =  input.readInput(buffersize,  numToSkip);  [CE]  cannot  find  symbol  buffersize  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input.readInput(buffersize,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input.readInput(buffersize,  numToSkip);	  InputStream    available    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol  buffersize	81	None	replace
937	[BUG]  [BUGGY]  InputStream  available  =  input!=  null?  input.readInput()  :  _input.readInput();  [CE]  cannot  find  symbol  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input!=  null?  input.readInput()  :  _input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input!=  null?  input.readInput()  :  _input.readInput();	  InputStream    available    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
938	[BUG]  [BUGGY]  InputStream  available  =  input!=  null?  input.readInput()  :  byteArray.readInput();  [CE]  cannot  find  symbol  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input!=  null?  input.readInput()  :  byteArray.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input!=  null?  input.readInput()  :  byteArray.readInput();	  InputStream    available    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
939	[BUG]  [BUGGY]  InputStream  available  =  input.readInput(buffer,  numToSkip);  [CE]  cannot  find  symbol  buffer  [FE]                                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  available  =  input.readInput(buffer,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  available  =  input.readInput(buffer,  numToSkip);	  InputStream    available    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol  buffer	81	None	replace
940	[BUG]  [BUGGY]  long  available  =  input.read(input,  numToSkip);  [CE]  no  suitable  method  found  for  read(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(input,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(input,  numToSkip);	  long    available    =    input.read(buffer,    numToSkip);    	non-compiled	[CE]  no  suitable  method  found  for  read(InputStream,long)	59	None	replace
941	[BUG]  [BUGGY]  long  available  =  1;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1;  int  numToSkip  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    1;    int  numToSkip  =  input.read();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	30	None	add
942	[BUG]  [BUGGY]  long  available  =  1;  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1;  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    1;    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	30	None	add
943	[BUG]  [BUGGY]  long  available  =  1;  int  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  1;  int  numToSkip  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    1;    int  numToSkip  =  input.readLine();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	30	None	add
944	[BUG]  [BUGGY]  int  available  =  input.availableLong(numToSkip  -  1);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.availableLong(numToSkip  -  1);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.availableLong(numToSkip  -  1);	  int    available    =    input.availableLong(numToSkip);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
945	[BUG]  [BUGGY]  long  available  =  input.available  -  numToSkip  *  1;  [CE]  cannot  find  symbol  available  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  -  numToSkip  *  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  -  numToSkip  *  1;	  long    available    =    input.available    -    numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol  available	10	None	replace
946	[BUG]  [BUGGY]  long  available  =  input.read();  int  numToSkip  =  input.read(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read();  int  numToSkip  =  input.read(available);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read();  int  numToSkip  =  input.read(available);	  long    available    =    input.read();    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	43	None	replace
947	[BUG]  [BUGGY]  long  available  =  input.readLine();  int  numToSkip  =  input.read();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine();  int  numToSkip  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine();  int  numToSkip  =  input.read();	  long    available    =    input.read();    int    numToSkip    =    input.read();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
948	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readLine();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readLine();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readLine();  }	  long    available    =    0;    InputStream    input    =    input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
949	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readLine();  }  else  {  return  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readLine();  }  else  {  return  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readLine();  }  else  {  return  0;  }	  long    available    =    0;    InputStream    input    =    input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
950	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readLine();  }  else  {  switch(input.readLine())  {  case  COPY_BUF_SIZE:  return  0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readLine();  }  else  {  switch(input.readLine())  {  case  COPY_BUF_SIZE:  return  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readLine();  }  else  {  switch(input.readLine())  {  case  COPY_BUF_SIZE:  return  0;  }	  long    available    =    0;    InputStream    input    =    input.readLine();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
951	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readLine();  }  else  {  skip(input,  numToSkip);  return  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readLine();  }  else  {  skip(input,  numToSkip);  return  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readLine();  }  else  {  skip(input,  numToSkip);  return  0;  }	  long    available    =    0;    InputStream    input    =    input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
952	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  /  numToSkip  *  SKIP_BUF_SIZE;  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  /  numToSkip  *  SKIP_BUF_SIZE;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  /  numToSkip  *  SKIP_BUF_SIZE;	  long    available    =    input.availableToInt()    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
953	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  /  this.numToSkip;  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  /  this.numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  /  this.numToSkip;	  long    available    =    input.availableToInt()    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
954	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1;  int  numToSkip  =  input.read(buffer,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1;  int  numToSkip  =  input.read(buffer,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  +  1;  int  numToSkip  =  input.read(buffer,  numToSkip);	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	3	None	replace
955	[BUG]  [BUGGY]  long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.read();  [CE]  cannot  find  symbol  available  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.read();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.read();    	non-compiled	[CE]  cannot  find  symbol  available	3	None	replace
956	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1;  int  numToSkip  =  input.read(buffer);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1;  int  numToSkip  =  input.read(buffer);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  +  1;  int  numToSkip  =  input.read(buffer);	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	3	None	replace
957	[BUG]  [BUGGY]  int  numToSkip  =  input.read(input);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  numToSkip  =  input.read(input);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  numToSkip  =  input.read(input);	  int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	113	None	replace
958	[BUG]  [BUGGY]  long  available  =  input.availableLong()  -  1L;  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  -  1L;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  -  1L;	  long    available    =    input.availableLong()    -    1;    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
959	[BUG]  [BUGGY]  long  available  =  input.available  /  SKIP_BUF_SIZE  *  numToSkip;  [CE]  cannot  find  symbol  available  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  /  SKIP_BUF_SIZE  *  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  /  SKIP_BUF_SIZE  *  numToSkip;	  long    available    =    input.available    /    numToSkip    *    SKIP_BUF_SIZE;    	non-compiled	[CE]  cannot  find  symbol  available	108	None	replace
960	[BUG]  [BUGGY]  long  available  =  input!=  null?  input.getChars()  :  0;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  input.getChars()  :  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  input.getChars()  :  0;	  long    available    =    input!=    null?    input.readLine()    :    0;    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
961	[BUG]  [BUGGY]  long  available  =  input.readLine()  &  0xFFFF_SIZE;  [CE]  underscores  in  literals  are  not  supported  in  -source  1.5  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  &  0xFFFF_SIZE;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  &  0xFFFF_SIZE;	  long    available    =    input.readLine()    &    0xFFFF;    	non-compiled	[CE]  underscores  in  literals  are  not  supported  in  -source  1.5	122	None	replace
962	[BUG]  [BUGGY]  long  available  =  input.readLine()  &  0xFFFFF;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  &  0xFFFFF;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  &  0xFFFFF;	  long    available    =    input.readLine()    &    0xFFFF;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
963	[BUG]  [BUGGY]  long  available  =  input.readLine()  &  0xFFFF  +  input.length;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine()  &  0xFFFF  +  input.length;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine()  &  0xFFFF  +  input.length;	  long    available    =    input.readLine()    &    0xFFFF;    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
964	[BUG]  [BUGGY]  long  available  =  input.available();  InputStream  input  =  input.openStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available();  InputStream  input  =  input.openStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available();    InputStream  input  =  input.openStream();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	148	None	add
965	[BUG]  [BUGGY]  long  available  =  input.available();  int  numToSkip  =  input.available();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available();  int  numToSkip  =  input.available();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available();    int  numToSkip  =  input.available();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	148	None	add
966	[BUG]  [BUGGY]  long  available  =  numToSkip  /  1;  int  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  1;  int  numToSkip  =  input.size();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    /    1;    int  numToSkip  =  input.size();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	133	None	add
967	[BUG]  [BUGGY]  long  available  =  numToSkip  /  1;  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  1;  InputStream  input  =  input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    /    1;    InputStream  input  =  input.readInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	133	None	add
968	[BUG]  [BUGGY]  long  available  =  input.getVersion()  /  this.numToSkip;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getVersion()  /  this.numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getVersion()  /  this.numToSkip;	  long    available    =    input.getVersion()    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
969	[BUG]  [BUGGY]  long  available  =  input.available()  /  this.numToSkip;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  /  this.numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available()  /  this.numToSkip;	  long    available    =    input.available()    /    numToSkip;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	140	None	replace
970	[BUG]  [BUGGY]  Long  available  =  input.getAverageLimit();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.getAverageLimit();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.getAverageLimit();	  Long    available    =    input.available;    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
971	[BUG]  [BUGGY]  if(input!=  null)  {  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  available  =  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  available  =  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  available  =  0;  }	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input,    numToSkip);    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	21	None	replace
972	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  available  =  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  available  =  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input,  numToSkip);  available  =  0;  }	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input,    numToSkip);    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	21	None	replace
973	[BUG]  [BUGGY]  long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.readInt();  [CE]  cannot  find  symbol  available  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.readInt();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol  available	6	None	replace
974	[BUG]  [BUGGY]  long  available  =  input.available  +  numToSkip  +  1;  int  numToSkip  =  input.readInt();  [CE]  cannot  find  symbol  available  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  numToSkip  +  1;  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  numToSkip  +  1;  int  numToSkip  =  input.readInt();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol  available	6	None	replace
975	[BUG]  [BUGGY]  long  available  =  input.available();  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available();  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available();  int  numToSkip  =  input.readInt();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	6	None	replace
976	[BUG]  [BUGGY]  long  available  =  input.availableOffset()  +  1;  int  numToSkip  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableOffset()  +  1;  int  numToSkip  =  input.readInt();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableOffset()  +  1;  int  numToSkip  =  input.readInt();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
977	[BUG]  [BUGGY]  long  available  =  input.availableLong()  /  this.numToSkip;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  /  this.numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  /  this.numToSkip;	  long    available    =    input.availableLong()    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
978	[BUG]  [BUGGY]  int  available  =  input.available  /  numToSkip  *  numToSkip;  [CE]  cannot  find  symbol  available  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.available  /  numToSkip  *  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.available  /  numToSkip  *  numToSkip;	  int    available    =    input.available    /    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  available	109	None	replace
979	[BUG]  [BUGGY]  long  available  =  numToSkip  /  input.getChars(0,  numToSkip);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  input.getChars(0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  /  input.getChars(0,  numToSkip);	  long    available    =    numToSkip    /    input.available;    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
980	[BUG]  [BUGGY]  long  available  =  numToSkip  /  input.getChars();  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  /  input.getChars();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  /  input.getChars();	  long    available    =    numToSkip    /    input.available;    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
981	[BUG]  [BUGGY]  long  available  =  input.getBooleanValue();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getBooleanValue();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getBooleanValue();	  long    available    =    input.length;    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
982	[BUG]  [BUGGY]  long  available  =  input.size  -  numToSkip;  [CE]  cannot  find  symbol  size  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.size  -  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.size  -  numToSkip;	  long    available    =    input.length    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  size	50	None	replace
983	[BUG]  [BUGGY]  long  available  =  input.getAstRoot(numToSkip,  COPY_BUF_SIZE);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAstRoot(numToSkip,  COPY_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAstRoot(numToSkip,  COPY_BUF_SIZE);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
984	[BUG]  [BUGGY]  long  available  =  input.getAstRoot(INPUT_SIZE,  numToSkip);  [CE]  cannot  find  symbol  INPUT_SIZE  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAstRoot(INPUT_SIZE,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAstRoot(INPUT_SIZE,  numToSkip);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  INPUT_SIZE	124	None	replace
985	[BUG]  [BUGGY]  long  available  =  input.getAstRoot(input,  numToSkip);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAstRoot(input,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAstRoot(input,  numToSkip);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
986	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  available  =  input.read();  }  else  {  skip(input,  numToSkip);  }  [CE]  cannot  find  symbol  available  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  available  =  input.read();  }  else  {  skip(input,  numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  available  =  input.read();  }  else  {  skip(input,  numToSkip);  }	  long    available    =    input.read();    int    available    =    input.read();    	non-compiled	[CE]  cannot  find  symbol  available	39	None	replace
987	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  available  =  input.read();  }  else  {  System.arraycopy(input,  0,  available,  0,  input.length);  }  [CE]  cannot  find  symbol  available  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  available  =  input.read();  }  else  {  System.arraycopy(input,  0,  available,  0,  input.length);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  available  =  input.read();  }  else  {  System.arraycopy(input,  0,  available,  0,  input.length);  }	  long    available    =    input.read();    int    available    =    input.read();    	non-compiled	[CE]  cannot  find  symbol  available	39	None	replace
988	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  available  =  input.read();  }  else  {  skip(input,  numToSkip);  return  0;  }  [CE]  cannot  find  symbol  available  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  available  =  input.read();  }  else  {  skip(input,  numToSkip);  return  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  available  =  input.read();  }  else  {  skip(input,  numToSkip);  return  0;  }	  long    available    =    input.read();    int    available    =    input.read();    	non-compiled	[CE]  cannot  find  symbol  available	39	None	replace
989	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  available  =  input.read();  }  else  {  return  0;  }  [CE]  cannot  find  symbol  available  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  available  =  input.read();  }  else  {  return  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  available  =  input.read();  }  else  {  return  0;  }	  long    available    =    input.read();    int    available    =    input.read();    	non-compiled	[CE]  cannot  find  symbol  available	39	None	replace
990	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  available  =  input.read();  }  else  {  buffersize  =  input.read();  }  [CE]  cannot  find  symbol  buffersize  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  available  =  input.read();  }  else  {  buffersize  =  input.read();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  available  =  input.read();  }  else  {  buffersize  =  input.read();  }	  long    available    =    input.read();    int    available    =    input.read();    	non-compiled	[CE]  cannot  find  symbol  buffersize	39	None	replace
991	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  this.getInputStream();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  this.getInputStream();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  0;  InputStream  input  =  this.getInputStream();  }	  long    available    =    0;    InputStream    input    =    this.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	93	None	replace
992	[BUG]  [BUGGY]  byte  available  =  0;  InputStream  input  =  this.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  byte  available  =  0;  InputStream  input  =  this.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	byte  available  =  0;  InputStream  input  =  this.getInputStream();	  long    available    =    0;    InputStream    input    =    this.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	93	None	replace
993	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  this.getInputStream();  }  else  {  System.arraycopy(input,  0,  input,  0,  numToSkip);  input  =  input;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  this.getInputStream();  }  else  {  System.arraycopy(input,  0,  input,  0,  numToSkip);  input  =  input;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  0;  InputStream  input  =  this.getInputStream();  }  else  {  System.arraycopy(input,  0,  input,  0,  numToSkip);  input  =  input;  }	  long    available    =    0;    InputStream    input    =    this.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	93	None	replace
994	[BUG]  [BUGGY]  long  available  =  System.currentTimeMillis()  -  input.getStartTime();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis()  -  input.getStartTime();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  System.currentTimeMillis()  -  input.getStartTime();	  long    available    =    1;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
995	[BUG]  [BUGGY]  long  available  =  input.readLine(),  -numToSkip;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readLine(),  -numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readLine(),  -numToSkip;	  long    available    =    input.readLine(),    numToSkip;    	non-compiled	[CE]  <identifier>  expected	121	None	replace
996	[BUG]  [BUGGY]  int  available  =(input!=  null)?  0  :  input.length;  [CE]  cannot  find  symbol  length  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =(input!=  null)?  0  :  input.length;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =(input!=  null)?  0  :  input.length;	  int    available    =    0;    	non-compiled	[CE]  cannot  find  symbol  length	27	None	replace
997	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	add	long  available  =  input.available()  -  1;	  long    available    =    input.available();    	compilable	  [FE]  AssertionError  	149	2	replace
998	[BUG]  [BUGGY]  long  available  =  input.available()  -  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available()  -  1;	  long    available    =    input.available();    	compilable	  [FE]  AssertionError  	149	2	replace
999	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  input.read();  }  else  {  return  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  input.read();  }  else  {  return  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  input.read();  }  else  {  return  0;  }	  long    available    =    input.read();    InputStream    input    =    input.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	117	None	replace
1000	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  input.read();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  input.read();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  input.read();  }	  long    available    =    input.read();    InputStream    input    =    input.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	117	None	replace
1001	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  input.read();  }  else  {  switch(input.read())  {  case  COPY_BUF_SIZE:  return  0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  input.read();  }  else  {  switch(input.read())  {  case  COPY_BUF_SIZE:  return  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  input.read();  }  else  {  switch(input.read())  {  case  COPY_BUF_SIZE:  return  0;  }	  long    available    =    input.read();    InputStream    input    =    input.read();    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
1002	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  input.read();  }  else  {  skip(input,  numToSkip);  return  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  input.read();  }  else  {  skip(input,  numToSkip);  return  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  input.read();  }  else  {  skip(input,  numToSkip);  return  0;  }	  long    available    =    input.read();    InputStream    input    =    input.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	117	None	replace
1003	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip  -=  0;  numToSkip  -=  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip  -=  0;  numToSkip  -=  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip  -=  0;  numToSkip  -=	  long    available    =    input.read();    InputStream    input    =    input.read();    	non-compiled	[CE]  ')'  expected	117	None	replace
1004	[BUG]  [BUGGY]  InputStream  input  =  getInputStream()  -  1;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  getInputStream()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  getInputStream()  -  1;	  InputStream    input    =    getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	77	None	replace
1005	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  0;  }	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine());    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	18	None	replace
1006	[BUG]  [BUGGY]  if(input!=  null)  {  int  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  int  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  int  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine());  available  =  0;  }	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine());    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	18	None	replace
1007	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip);  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip);  }	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	19	None	replace
1008	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip);  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine(),  numToSkip);  }	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	19	None	replace
1009	[BUG]  [BUGGY]  long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.read(buffersize);  [CE]  cannot  find  symbol  available  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.read(buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.read(buffersize);	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  cannot  find  symbol  available	99	None	replace
1010	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip);  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  long  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip);  }	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	20	None	replace
1011	[BUG]  [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip);  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(numToSkip  >  0)  {  int  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip);  }	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	20	None	replace
1012	[BUG]  [BUGGY]  byte  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  byte  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	byte  available  =  0;  InputStream  input  =  new  ByteArrayInputStream(input.readLine(),  numToSkip);	  long    available    =    0;    InputStream    input    =    new    ByteArrayInputStream(input.readLine(),    numToSkip);    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	20	None	replace
1013	[BUG]  [BUGGY]  long  available  =  System.currentTimeMillis();  int  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  System.currentTimeMillis();  int  numToSkip  =  input.size();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    System.currentTimeMillis();    int  numToSkip  =  input.size();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	28	None	add
1014	[BUG]  [BUGGY]  long  available  =  input.availableLong()  +  0;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  +  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  +  0;	  long    available    =    input.availableLong()    +    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
1015	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.inputStream.read();  }  else  {  return  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.inputStream.read();  }  else  {  return  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.inputStream.read();  }  else  {  return  0;  }	  long    available    =    input.read();    InputStream    input    =    this.inputStream.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	118	None	replace
1016	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.inputStream.read();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.inputStream.read();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.inputStream.read();  }	  long    available    =    input.read();    InputStream    input    =    this.inputStream.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	118	None	replace
1017	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.inputStream.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip  -=  0;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.inputStream.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip  -=  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.inputStream.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip  -=  0;	  long    available    =    input.read();    InputStream    input    =    this.inputStream.read();    	non-compiled	[CE]  ')'  expected	118	None	replace
1018	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.inputStream.read();  }  else  {  return  0L;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.inputStream.read();  }  else  {  return  0L;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.inputStream.read();  }  else  {  return  0L;  }	  long    available    =    input.read();    InputStream    input    =    this.inputStream.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	118	None	replace
1019	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.inputStream.read();  }  else  {  skip(input,  numToSkip);  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.inputStream.read();  }  else  {  skip(input,  numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.inputStream.read();  }  else  {  skip(input,  numToSkip);  }	  long    available    =    input.read();    InputStream    input    =    this.inputStream.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	118	None	replace
1020	[BUG]  [BUGGY]  long  available  =  input.read(input,  0);  [CE]  no  suitable  method  found  for  read(InputStream,int)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(input,  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(input,  0);	  long    available    =    input.read(buffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  read(InputStream,int)	131	None	replace
1021	[BUG]  [BUGGY]  long  available  =  input.read(input,  0,  numToSkip);  [CE]  no  suitable  method  found  for  read(InputStream,int,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(input,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(input,  0,  numToSkip);	  long    available    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  no  suitable  method  found  for  read(InputStream,int,long)	130	None	replace
1022	[BUG]  [BUGGY]  Long  available  =  input.read(buffer,  0,  numToSkip);  [CE]  cannot  find  symbol  buffer  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  Long  available  =  input.read(buffer,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	Long  available  =  input.read(buffer,  0,  numToSkip);	  long    available    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffer	130	None	replace
1023	[BUG]  [BUGGY]  long  available  =  input.read(this,  0,  numToSkip);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(this,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(this,  0,  numToSkip);	  long    available    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	130	None	replace
1024	[BUG]  [BUGGY]  long  available  =  input!=  null?  input.getChars()  :  -1;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input!=  null?  input.getChars()  :  -1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input!=  null?  input.getChars()  :  -1;	  long    available    =    input!=    null?    input.readLine()    :    -1;    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
1025	[BUG]  [BUGGY]  long  available  =  input.size()  +  1;  int  numToSkip  =  input.getNumberOfLinks();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.size()  +  1;  int  numToSkip  =  input.getNumberOfLinks();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.size()  +  1;  int  numToSkip  =  input.getNumberOfLinks();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
1026	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1;  int  numToSkip  =  input.getNumberOfLinks()  +  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1;  int  numToSkip  =  input.getNumberOfLinks()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  numToSkip  +  1;  int  numToSkip  =  input.getNumberOfLinks()  +  1;	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	142	None	replace
1027	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  *  2  +  1;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  *  2  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  *  2  +  1;	  long    available    =    input.availableToInt()    +    1;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
1028	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readInput();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readInput();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readInput();  }	  long    available    =    0;    InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	91	None	replace
1029	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readInput();  }  else  {  skip(input,  numToSkip);  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readInput();  }  else  {  skip(input,  numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readInput();  }  else  {  skip(input,  numToSkip);  }	  long    available    =    0;    InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	91	None	replace
1030	[BUG]  [BUGGY]  byte  available  =  0;  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  byte  available  =  0;  InputStream  input  =  input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	byte  available  =  0;  InputStream  input  =  input.readInput();	  long    available    =    0;    InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	91	None	replace
1031	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readInput();  }  else  {  return  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readInput();  }  else  {  return  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.readInput();  }  else  {  return  0;  }	  long    available    =    0;    InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	91	None	replace
1032	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.getInputStream();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.getInputStream();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  0;  InputStream  input  =  input.getInputStream();  }	  long    available    =    0;    InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	90	None	replace
1033	[BUG]  [BUGGY]  if(input!=  null)  {  int  available  =  0;  InputStream  input  =  input.getInputStream();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  int  available  =  0;  InputStream  input  =  input.getInputStream();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  int  available  =  0;  InputStream  input  =  input.getInputStream();  }	  long    available    =    0;    InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	90	None	replace
1034	[BUG]  [BUGGY]  byte  available  =  0;  InputStream  input  =  input.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  byte  available  =  0;  InputStream  input  =  input.getInputStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	byte  available  =  0;  InputStream  input  =  input.getInputStream();	  long    available    =    0;    InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	90	None	replace
1035	[BUG]  [BUGGY]  long  available  =  input.size()  +  1;  int  numToSkip  =  input.size();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.size()  +  1;  int  numToSkip  =  input.size();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.size()  +  1;  int  numToSkip  =  input.size();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.size();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
1036	[BUG]  [BUGGY]  long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.size();  [CE]  cannot  find  symbol  available  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.size();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.size();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.size();    	non-compiled	[CE]  cannot  find  symbol  available	100	None	replace
1037	[BUG]  [BUGGY]  long  available  =  input.getMillis();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getMillis();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getMillis();	  long    available    =    System.currentTimeMillis();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
1038	[BUG]  [BUGGY]  long  available  =  input.available()  -  numToSkip;  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  -  numToSkip;  int  numToSkip  =  input.read();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    -    numToSkip;    int  numToSkip  =  input.read();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	97	None	add
1039	[BUG]  [BUGGY]  long  available  =  input.available()  -  numToSkip;  int  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available()  -  numToSkip;  int  numToSkip  =  input.size();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.available()    -    numToSkip;    int  numToSkip  =  input.size();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	97	None	add
1040	[BUG]  [BUGGY]  long  available  =  input.readFully(COPY_BUF_SIZE);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readFully(COPY_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readFully(COPY_BUF_SIZE);	  long    available    =    input.readFully(this);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
1041	[BUG]  [BUGGY]  long  available  =  input.readFully(null);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.readFully(null);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.readFully(null);	  long    available    =    input.readFully(this);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
1042	[BUG]  [BUGGY]  boolean  available  =  input.read();  int  numToSkip  =  input.read(buffer,  0,  numToSkip);  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  boolean  available  =  input.read();  int  numToSkip  =  input.read(buffer,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	boolean  available  =  input.read();  int  numToSkip  =  input.read(buffer,  0,  numToSkip);	  long    available    =    input.read();    int    numToSkip    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  incompatible  types	136	None	replace
1043	[BUG]  [BUGGY]  long  available  =  input.availableLong(0L  +  numToSkip);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(0L  +  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(0L  +  numToSkip);	  long    available    =    input.availableLong(0L);    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
1044	[BUG]  [BUGGY]  long  available  =  input.availableLong(numToSkip  -  0);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(numToSkip  -  0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(numToSkip  -  0);	  long    available    =    input.availableLong(numToSkip    -    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
1045	[BUG]  [BUGGY]  long  available  =  input.getMillis()  +  1;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getMillis()  +  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getMillis()  +  1;	  long    available    =    input.numToSkip    +    1;    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
1046	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.read();  }  else  {  return  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.read();  }  else  {  return  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.read();  }  else  {  return  0;  }	  long    available    =    input.read();    InputStream    input    =    this.input.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	45	None	replace
1047	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.read();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.read();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.read();  }	  long    available    =    input.read();    InputStream    input    =    this.input.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	45	None	replace
1048	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip  -=  0;  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip  -=  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.read();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip  -=  0;	  long    available    =    input.read();    InputStream    input    =    this.input.read();    	non-compiled	[CE]  ')'  expected	45	None	replace
1049	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.read();  }  else  {  skip(input,  numToSkip);  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.read();  }  else  {  skip(input,  numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.read();  }  else  {  skip(input,  numToSkip);  }	  long    available    =    input.read();    InputStream    input    =    this.input.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	45	None	replace
1050	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.read();  }  else  {  return  0L;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.read();  }  else  {  return  0L;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.input.read();  }  else  {  return  0L;  }	  long    available    =    input.read();    InputStream    input    =    this.input.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	45	None	replace
1051	[BUG]  [BUGGY]  long  available  =  input.getVersion()  -  1;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getVersion()  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getVersion()  -  1;	  long    available    =    input.getVersion();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
1052	[BUG]  [BUGGY]  long  available  =  input.availableLong(0,  numToSkip)+  1;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong(0,  numToSkip)+  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong(0,  numToSkip)+  1;	  long    available    =    input.availableLong(0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
1053	[BUG]  [BUGGY]  long  available  =  input.getAstRoot(numToSkip  +  COPY_BUF_SIZE);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAstRoot(numToSkip  +  COPY_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAstRoot(numToSkip  +  COPY_BUF_SIZE);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE    +    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
1054	[BUG]  [BUGGY]  long  available  =  input.getAstRoot(input,  numToSkip  +  COPY_BUF_SIZE);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getAstRoot(input,  numToSkip  +  COPY_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getAstRoot(input,  numToSkip  +  COPY_BUF_SIZE);	  long    available    =    input.getAstRoot(COPY_BUF_SIZE    +    numToSkip);    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
1055	[BUG]  [BUGGY]  int  available  =  input.readInt()  &  0xff;  [CE]  cannot  find  symbol  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  input.readInt()  &  0xff;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int  available  =  input.readInt()  &  0xff;	  int    available    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
1056	[BUG]  [BUGGY]  InputStream  input  =  getInput().getAstRoot(COPY_BUF_SIZE);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  getInput().getAstRoot(COPY_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  getInput().getAstRoot(COPY_BUF_SIZE);	  InputStream    input    =    getInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
1057	[BUG]  [BUGGY]  long  available  =  input.availableToInt()  *  2  -  1;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableToInt()  *  2  -  1;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableToInt()  *  2  -  1;	  long    available    =    input.availableToInt()    -    1;    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
1058	[BUG]  [BUGGY]  InputStream  input  =(InputStream)input.readLine()  &  0xff;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =(InputStream)input.readLine()  &  0xff;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =(InputStream)input.readLine()  &  0xff;	  InputStream    input    =(InputStream)input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	112	None	replace
1059	[BUG]  [BUGGY]  long  available  =  input.read(LCURLY_BUF_SIZE);  [CE]  cannot  find  symbol  LCURLY_BUF_SIZE  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(LCURLY_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(LCURLY_BUF_SIZE);	  long    available    =    input.read(buffersize);    	non-compiled	[CE]  cannot  find  symbol  LCURLY_BUF_SIZE	106	None	replace
1060	[BUG]  [BUGGY]  long  available  =  input.read(data);  [CE]  cannot  find  symbol  data  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read(data);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read(data);	  long    available    =    input.read(buffersize);    	non-compiled	[CE]  cannot  find  symbol  data	106	None	replace
1061	[BUG]  [BUGGY]  int  available  =  0;  InputStream  input  =  input.readInput();  int  available  =  0;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  InputStream  input  =  input.readInput();  int  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int    available    =    0;    InputStream  input  =  input.readInput();  int  available  =  0;	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	26	None	add
1062	[BUG]  [BUGGY]  int  available  =  0;  InputStream  input  =  input.readLine();  int  available  =  0;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  InputStream  input  =  input.readLine();  int  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int    available    =    0;    InputStream  input  =  input.readLine();  int  available  =  0;	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	26	None	add
1063	[BUG]  [BUGGY]  int  available  =  0;  InputStream  input  =  input.getInputStream();  int  available  =  0;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  InputStream  input  =  input.getInputStream();  int  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int    available    =    0;    InputStream  input  =  input.getInputStream();  int  available  =  0;	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	26	None	add
1064	[BUG]  [BUGGY]  int  available  =  0;  InputStream  input  =  input.read();  int  available  =  0;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  InputStream  input  =  input.read();  int  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int    available    =    0;    InputStream  input  =  input.read();  int  available  =  0;	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	26	None	add
1065	[BUG]  [BUGGY]  int  available  =  0;  InputStream  input  =  input.readFully();  int  available  =  0;  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  int  available  =  0;  InputStream  input  =  input.readFully();  int  available  =  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	int    available    =    0;    InputStream  input  =  input.readFully();  int  available  =  0;	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	26	None	add
1066	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0;  }	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input.readLine());    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	17	None	replace
1067	[BUG]  [BUGGY]  if(input!=  null)  {  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  int  available  =  0;  InputStream  input  =  new  InputStreamInputStream(input.readLine());  available  =  0;  }	  long    available    =    0;    InputStream    input    =    new    InputStreamInputStream(input.readLine());    available    =    0;    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	17	None	replace
1068	[BUG]  [BUGGY]  long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.readLine();  [CE]  cannot  find  symbol  available  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.readLine();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol  available	7	None	replace
1069	[BUG]  [BUGGY]  long  available  =  input.available  -  numToSkip  +  1;  int  numToSkip  =  input.readLine();  [CE]  cannot  find  symbol  available  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  -  numToSkip  +  1;  int  numToSkip  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  -  numToSkip  +  1;  int  numToSkip  =  input.readLine();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol  available	7	None	replace
1070	[BUG]  [BUGGY]  long  available  =  input.read();  int  numToSkip  =  input.read(buffer,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read();  int  numToSkip  =  input.read(buffer,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.read();  int  numToSkip  =  input.read(buffer,  numToSkip);	  long    available    =    input.read();    int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	138	None	replace
1071	[BUG]  [BUGGY]  boolean  available  =  input.read();  int  numToSkip  =  input.read(buffersize);  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  boolean  available  =  input.read();  int  numToSkip  =  input.read(buffersize);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	boolean  available  =  input.read();  int  numToSkip  =  input.read(buffersize);	  long    available    =    input.read();    int    numToSkip    =    input.read(buffersize);    	non-compiled	[CE]  incompatible  types	138	None	replace
1072	[BUG]  [BUGGY]  long  available  =  this.input.readFully();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  this.input.readFully();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  this.input.readFully();	  long    available    =    input.readFully();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	58	None	replace
1073	[BUG]  [BUGGY]  long  available  =  input.getVersion()  -  0;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getVersion()  -  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getVersion()  -  0;	  long    available    =    input.getVersion()    -    numToSkip;    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
1074	[BUG]  [BUGGY]  long  available  =  0L;  int  numToSkip  =  input.readLine();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0L;  int  numToSkip  =  input.readLine();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    0L;    int  numToSkip  =  input.readLine();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	24	None	add
1075	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1L;  int  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1L;  int  numToSkip  =  input.size();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    +    1L;    int  numToSkip  =  input.size();	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	13	None	add
1076	[BUG]  [BUGGY]  long  available  =  numToSkip  +  1L;  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  numToSkip  +  1L;  InputStream  input  =  input.readInput();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    numToSkip    +    1L;    InputStream  input  =  input.readInput();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	13	None	add
1077	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.getInputStream();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.getInputStream();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.getInputStream();  }	  long    available    =    input.read();    InputStream    input    =    this.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	42	None	replace
1078	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.getInputStream();  }  else  {  return  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.getInputStream();  }  else  {  return  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.getInputStream();  }  else  {  return  0;  }	  long    available    =    input.read();    InputStream    input    =    this.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	42	None	replace
1079	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.getInputStream();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip  -=  0;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.getInputStream();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip  -=  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.getInputStream();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip  -=  0;	  long    available    =    input.read();    InputStream    input    =    this.getInputStream();    	non-compiled	[CE]  ')'  expected	42	None	replace
1080	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.getInputStream();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  available;  numToSkip++)  {  input  =  input.skip(numToSkip);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.getInputStream();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  available;  numToSkip++)  {  input  =  input.skip(numToSkip);  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  this.getInputStream();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  available;  numToSkip++)  {  input  =  input.skip(numToSkip);  }	  long    available    =    input.read();    InputStream    input    =    this.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1081	[BUG]  [BUGGY]  long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.read(buffer,  0,  numToSkip);  [CE]  cannot  find  symbol  available  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.read(buffer,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.read(buffer,  0,  numToSkip);	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.read(buffer,    0,    numToSkip);    	non-compiled	[CE]  cannot  find  symbol  available	143	None	replace
1082	[BUG]  [BUGGY]  long  available  =  input.availableLong()  -(InputStream.availableLong());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.availableLong()  -(InputStream.availableLong());  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.availableLong()  -(InputStream.availableLong());	  long    available    =    input.availableLong()    -(input.availableLong());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1083	[BUG]  [BUGGY]  long  available  =  input.read()  -  numToSkip;  int  numToSkip  =  input.read(buffer,  0,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.read()  -  numToSkip;  int  numToSkip  =  input.read(buffer,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long    available    =    input.read()    -    numToSkip;    int  numToSkip  =  input.read(buffer,  0,  numToSkip);	  	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	47	None	add
1084	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInput(buffer,  numToSkip);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.readInput(buffer,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.readInput(buffer,  numToSkip);	  InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	82	None	replace
1085	[BUG]  [BUGGY]  long  available  =  0;  int  numToSkip  =  input.readInt(0);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0;  int  numToSkip  =  input.readInt(0);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0;  int  numToSkip  =  input.readInt(0);	  long    available    =    0;    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	146	None	replace
1086	[BUG]  [BUGGY]  long  available  =  0;  int  numToSkip  =  input.read(buffer,  0,  numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  0;  int  numToSkip  =  input.read(buffer,  0,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  0;  int  numToSkip  =  input.read(buffer,  0,  numToSkip);	  long    available    =    0;    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	145	None	replace
1087	[BUG]  [BUGGY]  long  available  =  input.getBytes(COPY_BUF_SIZE);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getBytes(COPY_BUF_SIZE);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getBytes(COPY_BUF_SIZE);	  long    available    =    input.readUTF();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
1088	[BUG]  [BUGGY]  long  available  =  input.getBytes(COPY_BUF_SIZE).readUTF();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getBytes(COPY_BUF_SIZE).readUTF();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getBytes(COPY_BUF_SIZE).readUTF();	  long    available    =    input.readUTF();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
1089	[BUG]  [BUGGY]  long  available  =  input.getBytes(COPY_BUF_SIZE,  numToSkip);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getBytes(COPY_BUF_SIZE,  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getBytes(COPY_BUF_SIZE,  numToSkip);	  long    available    =    input.readUTF();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
1090	[BUG]  [BUGGY]  long  available  =  input.getBytes(COPY_BUF_SIZE  +  numToSkip);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getBytes(COPY_BUF_SIZE  +  numToSkip);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getBytes(COPY_BUF_SIZE  +  numToSkip);	  long    available    =    input.readUTF();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
1091	[BUG]  [BUGGY]  long  available  =  input.getBytes(CodingConvention.UTF_8);  [CE]  cannot  find  symbol  CodingConvention  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getBytes(CodingConvention.UTF_8);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getBytes(CodingConvention.UTF_8);	  long    available    =    input.readUTF();    	non-compiled	[CE]  cannot  find  symbol  CodingConvention	60	None	replace
1092	[BUG]  [BUGGY]  long  available  =  input.getBytes(COPY_BUF_SIZE)+  input.readUTF();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.getBytes(COPY_BUF_SIZE)+  input.readUTF();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.getBytes(COPY_BUF_SIZE)+  input.readUTF();	  long    available    =    input.readUTF();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
1093	[BUG]  [BUGGY]  long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.length();  [CE]  cannot  find  symbol  available  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.length();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	long  available  =  input.available  +  numToSkip;  int  numToSkip  =  input.length();	  long    available    =    numToSkip    +    1;    int    numToSkip    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  available	8	None	replace
1094	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  getInputStream();  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  getInputStream();  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  getInputStream();  }	  long    available    =    input.read();    InputStream    input    =    getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	41	None	replace
1095	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  getInputStream();  }  else  {  return  0;  }  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  getInputStream();  }  else  {  return  0;  }  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  getInputStream();  }  else  {  return  0;  }	  long    available    =    input.read();    InputStream    input    =    getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	41	None	replace
1096	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  getInputStream();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip  -=  0;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  getInputStream();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip  -=  0;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  getInputStream();  }  else  {  for(int  numToSkip  =  0;  numToSkip  >  0;  numToSkip  -=  0;	  long    available    =    input.read();    InputStream    input    =    getInputStream();    	non-compiled	[CE]  ')'  expected	41	None	replace
1097	[BUG]  [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  getInputStream();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  available;  numToSkip  +=  numToSkip;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  getInputStream();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  available;  numToSkip  +=  numToSkip;  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	if(input!=  null)  {  long  available  =  input.read();  InputStream  input  =  getInputStream();  }  else  {  for(int  numToSkip  =  0;  numToSkip  <  available;  numToSkip  +=  numToSkip;	  long    available    =    input.read();    InputStream    input    =    getInputStream();    	non-compiled	[CE]  ')'  expected	41	None	replace
1098	[BUG]  [BUGGY]  InputStream  input  =  this.input.getInputStream(input);  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.getInputStream(input);  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.getInputStream(input);	  InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	83	None	replace
1099	[BUG]  [BUGGY]  InputStream  input  =  this.input.openStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {      [BUGGY]  InputStream  input  =  this.input.openStream();  [BUGGY]      while  (numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	95	95	2	replace	InputStream  input  =  this.input.openStream();	  InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	83	None	replace
