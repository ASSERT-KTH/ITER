bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  0)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while  (available  <  0)  {	  while    (available    >    0)    {    	compilable	  [FE]  AssertionError  	2	3	replace
2	[BUG]  [BUGGY]  while  (available  <  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  0)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  0)  {	  while    (available    >    0)    {    	compilable	  [FE]  AssertionError  	2	3	replace
3	[BUG]  [BUGGY]  while  (available  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  =  0)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  =  0)  {	  while    (available    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >=  0)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while  (available  >=  0)  {	  while    (available    >    0)    {    	compilable	  [FE]  AssertionError  	2	2	replace
5	[BUG]  [BUGGY]  while  (available  >=  0)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >=  0)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  >=  0)  {	  while    (available    >    0)    {    	compilable	  [FE]  AssertionError  	2	2	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (numToSkip  <  available)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while  (numToSkip  <  available)  {	  while    (numToSkip    <    0)    {    	compilable	  [FE]  AssertionError  	8	3	replace
7	[BUG]  [BUGGY]  while  (numToSkip  <  available)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (numToSkip  <  available)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (numToSkip  <  available)  {	  while    (numToSkip    <    0)    {    	compilable	  [FE]  AssertionError  	8	3	replace
8	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  while  (available  <  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  numToSkip)  {  while  (available  <  numToSkip)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip)    {    while  (available  <  numToSkip)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
9	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  long  available  =  numToSkip;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  numToSkip)  {  long  available  =  numToSkip;  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip)    {    long  available  =  numToSkip;	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
10	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  long  skipped  =  input.skip(numToSkip);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  numToSkip)  {  long  skipped  =  input.skip(numToSkip);  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip)    {    long  skipped  =  input.skip(numToSkip);	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
11	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  int  numToSkip  =  input.length();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  numToSkip)  {  int  numToSkip  =  input.length();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip)    {    int  numToSkip  =  input.length();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
12	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  long  available  =  input.available();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  numToSkip)  {  long  available  =  input.available();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip)    {    long  available  =  input.available();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
13	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  int  numToSkip  =  input.read();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  numToSkip)  {  int  numToSkip  =  input.read();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip)    {    int  numToSkip  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
14	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  InputStream  input  =  getInput();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  numToSkip)  {  InputStream  input  =  getInput();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip)    {    InputStream  input  =  getInput();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
15	[BUG]  [BUGGY]  int  numToSkip  =  input.length();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  int  numToSkip  =  input.length();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.length();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
16	[BUG]  [BUGGY]  int  numToSkip  =  input.read();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  int  numToSkip  =  input.read();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.read();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
17	[BUG]  [BUGGY]  InputStream  input  =  input.readInput();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  InputStream  input  =  input.readInput();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.readInput();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
18	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInput();  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  InputStream  input  =  this.input.readInput();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  this.input.readInput();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
19	[BUG]  [BUGGY]  int  numToSkip  =  input.readInt();  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  int  numToSkip  =  input.readInt();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.readInt();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
20	[BUG]  [BUGGY]  InputStream  input  =  getInputStream();  [CE]  illegal  start  of  type  [FE]                          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  InputStream  input  =  getInputStream();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  getInputStream();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
21	[BUG]  [BUGGY]  int  numToSkip  =  input.size();  [CE]  illegal  start  of  type  [FE]                            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  int  numToSkip  =  input.size();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.size();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  numToSkip  -  1)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  numToSkip  -  1)  {	  while(available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	6	2	replace
23	[BUG]  [BUGGY]  while(available  >  numToSkip  -  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  numToSkip  -  1)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip  -  1)  {	  while(available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	6	2	replace
24	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  <  =  numToSkip)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {	  while(available    >    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >=  numToSkip)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >=  numToSkip)  {	  while(available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	6	2	replace
26	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >=  numToSkip)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  numToSkip)  {	  while(available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	6	2	replace
27	[BUG]  [BUGGY]  while(available  >  numToSkip  &&  available  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  numToSkip  &&  available  <  =  0)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip  &&  available  <  =  0)  {	  while(available    >    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
28	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  ==  numToSkip)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  ==  numToSkip)  {	  while(available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	6	2	replace
29	[BUG]  [BUGGY]  while(available  ==  numToSkip)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  ==  numToSkip)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  ==  numToSkip)  {	  while(available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	6	2	replace
30	[BUG]  [BUGGY]  while(numToSkip  >  1)  {  while(numToSkip  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  >  1)  {  while(numToSkip  >  1)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    1)    {    while(numToSkip  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
31	[BUG]  [BUGGY]  while(numToSkip  >  1)  {  long  skipped  =  input.skip(numToSkip);  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  >  1)  {  long  skipped  =  input.skip(numToSkip);  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    1)    {    long  skipped  =  input.skip(numToSkip);	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
32	[BUG]  [BUGGY]  while(numToSkip  >  1)  {  int  numToSkip  =  input.length();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  >  1)  {  int  numToSkip  =  input.length();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    1)    {    int  numToSkip  =  input.length();	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
33	[BUG]  [BUGGY]  while(numToSkip  >  1)  {  int  numToSkip  =  input.read();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  >  1)  {  int  numToSkip  =  input.read();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    1)    {    int  numToSkip  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
34	[BUG]  [BUGGY]  while(numToSkip  >  1)  {  long  numToSkip  >  1)  {  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  >  1)  {  long  numToSkip  >  1)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    1)    {    long  numToSkip  >  1)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
35	[BUG]  [BUGGY]  while(numToSkip  >  1)  {  int  numToSkip  =  input.readInt();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  >  1)  {  int  numToSkip  =  input.readInt();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    1)    {    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
36	[BUG]  [BUGGY]  while(numToSkip  >  1)  {  int  numToSkip  =  input.size();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  >  1)  {  int  numToSkip  =  input.size();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    1)    {    int  numToSkip  =  input.size();	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
37	[BUG]  [BUGGY]  while(numToSkip  >  1)  {  long  numToSkip  =  input.length();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  >  1)  {  long  numToSkip  =  input.length();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    1)    {    long  numToSkip  =  input.length();	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while  (available  <  numToSkip  ||  available  >  0)  {	  while    (available    <    numToSkip)    {    	compilable	  [FE]  AssertionError  	4	2	replace
39	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  numToSkip  ||  available  >  0)  {	  while    (available    <    numToSkip)    {    	compilable	  [FE]  AssertionError  	4	2	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while  (available  <  numToSkip  ||  available  >  numToSkip)  {	  while    (available    <    numToSkip)    {    	compilable	  [FE]  AssertionError  	4	3	replace
41	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  numToSkip  ||  available  >  numToSkip)  {	  while    (available    <    numToSkip)    {    	compilable	  [FE]  AssertionError  	4	3	replace
42	[BUG]  [BUGGY]  while  (numToSkip  <  0)  {  while  (numToSkip  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (numToSkip  <  0)  {  while  (numToSkip  <  0)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    0)    {    while  (numToSkip  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
43	[BUG]  [BUGGY]  while  (numToSkip  <  0)  {  long  skipped  =  input.skip(numToSkip);  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (numToSkip  <  0)  {  long  skipped  =  input.skip(numToSkip);  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    0)    {    long  skipped  =  input.skip(numToSkip);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
44	[BUG]  [BUGGY]  while  (numToSkip  <  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (numToSkip  <  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    0)    {    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
45	[BUG]  [BUGGY]  while  (numToSkip  <  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  >=  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (numToSkip  <  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  >=  0)  {  break;  }  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    0)    {    long  skipped  =  input.skip(numToSkip);  if  (skipped  >=  0)  {  break;  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
46	[BUG]  [BUGGY]  while  (numToSkip  <  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  <  0)  {  break;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (numToSkip  <  0)  {  long  skipped  =  input.skip(numToSkip);  if  (skipped  <  0)  {  break;  }  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    0)    {    long  skipped  =  input.skip(numToSkip);  if  (skipped  <  0)  {  break;  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
47	[BUG]  [BUGGY]  while  (numToSkip  <  0)  {  int  numToSkip  =  input.length();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (numToSkip  <  0)  {  int  numToSkip  =  input.length();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    0)    {    int  numToSkip  =  input.length();	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
48	[BUG]  [BUGGY]  while  (numToSkip  <  0)  {  int  numToSkip  =  input.read();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (numToSkip  <  0)  {  int  numToSkip  =  input.read();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    0)    {    int  numToSkip  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
49	[BUG]  [BUGGY]  while  (numToSkip  <  0)  {  int  numToSkip  =  input.readInt();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (numToSkip  <  0)  {  int  numToSkip  =  input.readInt();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    0)    {    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
50	[BUG]  [BUGGY]  while  (available  >  0)  {  while  (available  >  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >  0)  {  while  (available  >  0)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >    0)    {    while  (available  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
51	[BUG]  [BUGGY]  while  (available  >  0)  {  long  available  =  input.available();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >  0)  {  long  available  =  input.available();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >    0)    {    long  available  =  input.available();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
52	[BUG]  [BUGGY]  while  (available  >  0)  {  long  available  =  numToSkip;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >  0)  {  long  available  =  numToSkip;  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >    0)    {    long  available  =  numToSkip;	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
53	[BUG]  [BUGGY]  while  (available  >  0)  {  InputStream  input  =  getInput();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >  0)  {  InputStream  input  =  getInput();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >    0)    {    InputStream  input  =  getInput();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
54	[BUG]  [BUGGY]  while  (available  >  0)  {  int  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >  0)  {  int  available  =  input.read();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >    0)    {    int  available  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
55	[BUG]  [BUGGY]  while  (available  >  0)  {  InputStream  input  =  this.input.readInput();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >  0)  {  InputStream  input  =  this.input.readInput();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >    0)    {    InputStream  input  =  this.input.readInput();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
56	[BUG]  [BUGGY]  while  (available  >  0)  {  InputStream  input  =  this.input.getInputStream();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >  0)  {  InputStream  input  =  this.input.getInputStream();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >    0)    {    InputStream  input  =  this.input.getInputStream();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
57	[BUG]  [BUGGY]  while  (available  >  0)  {  int  available  =  input.read(numToSkip);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >  0)  {  int  available  =  input.read(numToSkip);  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >    0)    {    int  available  =  input.read(numToSkip);	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
58	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  while(available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  numToSkip)  {  while(available  >  numToSkip)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip)    {    while(available  >  numToSkip)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
59	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  long  available  >  numToSkip)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  numToSkip)  {  long  available  >  numToSkip)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip)    {    long  available  >  numToSkip)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
60	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  long  available  =  numToSkip;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  numToSkip)  {  long  available  =  numToSkip;  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip)    {    long  available  =  numToSkip;	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
61	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  int  available  =  input.read(numToSkip);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  numToSkip)  {  int  available  =  input.read(numToSkip);  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip)    {    int  available  =  input.read(numToSkip);	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
62	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  int  numToSkip  =  input.length();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  numToSkip)  {  int  numToSkip  =  input.length();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip)    {    int  numToSkip  =  input.length();	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
63	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  int  available  =  input.readInt();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  numToSkip)  {  int  available  =  input.readInt();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip)    {    int  available  =  input.readInt();	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
64	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  int  numToSkip  =  input.read();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  numToSkip)  {  int  numToSkip  =  input.read();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip)    {    int  numToSkip  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
65	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  int  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  numToSkip)  {  int  available  =  input.read();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip)    {    int  available  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
66	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  1)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  1)  {	  while(numToSkip    >    1)    {    	compilable	  [FE]  AssertionError  	11	2	replace
67	[BUG]  [BUGGY]  while(available  >  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  1)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {	  while(numToSkip    >    1)    {    	compilable	  [FE]  AssertionError  	11	2	replace
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  <  1)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(numToSkip  <  1)  {	  while(numToSkip    >    1)    {    	compilable	  [FE]  AssertionError  	11	3	replace
69	[BUG]  [BUGGY]  while(numToSkip  <  1)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  <  1)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  1)  {	  while(numToSkip    >    1)    {    	compilable	  [FE]  AssertionError  	11	3	replace
70	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  >=  1)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(numToSkip  >=  1)  {	  while(numToSkip    >    1)    {    	compilable	  [FE]  AssertionError  	11	2	replace
71	[BUG]  [BUGGY]  while(numToSkip  >=  1)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  >=  1)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >=  1)  {	  while(numToSkip    >    1)    {    	compilable	  [FE]  AssertionError  	11	2	replace
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  >  available)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(numToSkip  >  available)  {	  while(numToSkip    >    1)    {    	compilable	  [FE]  AssertionError  	11	3	replace
73	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  >  available)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  available)  {	  while(numToSkip    >    1)    {    	compilable	  [FE]  AssertionError  	11	3	replace
74	[BUG]  [BUGGY]  while  (numToSkip  <  0)  {  int  numToSkip  =  input.read(available);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (numToSkip  <  0)  {  int  numToSkip  =  input.read(available);  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    0)    {    int  numToSkip  =  input.read(available);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
75	[BUG]  [BUGGY]  while  (numToSkip  <  0)  {  long  available  =  input.readLine();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (numToSkip  <  0)  {  long  available  =  input.readLine();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    0)    {    long  available  =  input.readLine();	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
76	[BUG]  [BUGGY]  while  (numToSkip  <  0)  {  int  numToSkip  =  input.size();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (numToSkip  <  0)  {  int  numToSkip  =  input.size();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    0)    {    int  numToSkip  =  input.size();	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
77	[BUG]  [BUGGY]  while  (numToSkip  <  0)  {  InputStream  input  =  getInput();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (numToSkip  <  0)  {  InputStream  input  =  getInput();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    0)    {    InputStream  input  =  getInput();	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
78	[BUG]  [BUGGY]  while  (numToSkip  <  0)  {  long  numToSkip  =  input.read(available);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (numToSkip  <  0)  {  long  numToSkip  =  input.read(available);  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    0)    {    long  numToSkip  =  input.read(available);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
79	[BUG]  [BUGGY]  while(numToSkip  >  1)  {  int  numToSkip  =  input.read(available);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  >  1)  {  int  numToSkip  =  input.read(available);  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    1)    {    int  numToSkip  =  input.read(available);	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
80	[BUG]  [BUGGY]  while(numToSkip  >  1)  {  long  available  =  input.readLine();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  >  1)  {  long  available  =  input.readLine();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    1)    {    long  available  =  input.readLine();	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
81	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  long  numToSkip  =  input.skip(available);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  numToSkip)  {  long  numToSkip  =  input.skip(available);  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip)    {    long  numToSkip  =  input.skip(available);	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
82	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  long  numToSkip  =  input.length();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  numToSkip)  {  long  numToSkip  =  input.length();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip)    {    long  numToSkip  =  input.length();	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
83	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  long  numToSkip  =  input.read(available);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  numToSkip)  {  long  numToSkip  =  input.read(available);  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip)    {    long  numToSkip  =  input.read(available);	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
84	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  long  numToSkip  =  input.read();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  numToSkip)  {  long  numToSkip  =  input.read();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip)    {    long  numToSkip  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
85	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  long  available  =  input.readLine();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  numToSkip)  {  long  available  =  input.readLine();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip)    {    long  available  =  input.readLine();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
86	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  long  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  numToSkip)  {  long  available  =  input.read();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip)    {    long  available  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
87	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  long  numToSkip  =  input.read(available);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  numToSkip)  {  long  numToSkip  =  input.read(available);  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip)    {    long  numToSkip  =  input.read(available);	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
88	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  int  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  numToSkip)  {  int  available  =  input.read();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip)    {    int  available  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
89	[BUG]  [BUGGY]  while  (available  >  0)  {  long  available  =  input.readLine();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >  0)  {  long  available  =  input.readLine();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >    0)    {    long  available  =  input.readLine();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
90	[BUG]  [BUGGY]  while  (available  >  0)  {  long  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >  0)  {  long  available  =  input.read();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >    0)    {    long  available  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
91	[BUG]  [BUGGY]  while  (available  >  0)  {  InputStream  input  =  input.readInput();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >  0)  {  InputStream  input  =  input.readInput();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >    0)    {    InputStream  input  =  input.readInput();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
92	[BUG]  [BUGGY]  while  (available  >  0)  {  InputStream  input  =  input.readLine();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >  0)  {  InputStream  input  =  input.readLine();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >    0)    {    InputStream  input  =  input.readLine();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
93	[BUG]  [BUGGY]  InputStream  input  =  input.getInputStream();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  InputStream  input  =  input.getInputStream();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.getInputStream();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
94	[BUG]  [BUGGY]  InputStream  input  =  input.readLine();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  InputStream  input  =  input.readLine();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.readLine();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
95	[BUG]  [BUGGY]  InputStream  input  =  input.readInt();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  InputStream  input  =  input.readInt();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.readInt();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
96	[BUG]  [BUGGY]  int  n  =  input.read(available);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  int  n  =  input.read(available);  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  n  =  input.read(available);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
97	[BUG]  [BUGGY]  int  numToSkip  =  input.read(available);  [CE]  illegal  start  of  type  [FE]                        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  int  numToSkip  =  input.read(available);  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.read(available);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
98	[BUG]  [BUGGY]  while  (available  >  0)  {  int  numToSkip  =  input.size();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >  0)  {  int  numToSkip  =  input.size();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >    0)    {    int  numToSkip  =  input.size();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
99	[BUG]  [BUGGY]  while  (available  >  0)  {  int  numToSkip  =  input.read();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >  0)  {  int  numToSkip  =  input.read();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >    0)    {    int  numToSkip  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
100	[BUG]  [BUGGY]  while  (available  >  0)  {  int  numToSkip  =  input.getSize();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >  0)  {  int  numToSkip  =  input.getSize();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >    0)    {    int  numToSkip  =  input.getSize();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
101	[BUG]  [BUGGY]  while  (available  >  0)  {  long  available  =  0;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >  0)  {  long  available  =  0;  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >    0)    {    long  available  =  0;	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
102	[BUG]  [BUGGY]  while  (available  >  0)  {  int  numToSkip  =  input.readInt();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >  0)  {  int  numToSkip  =  input.readInt();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >    0)    {    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
103	[BUG]  [BUGGY]  while  (available  >  0)  {  int  numToSkip  =  input.length();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  >  0)  {  int  numToSkip  =  input.length();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >    0)    {    int  numToSkip  =  input.length();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
104	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  While(available  >  numToSkip)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  numToSkip)  {  While(available  >  numToSkip)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip)    {    While(available  >  numToSkip)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
105	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  int  numToSkip  =  input.size();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  numToSkip)  {  int  numToSkip  =  input.size();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip)    {    int  numToSkip  =  input.size();	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
106	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  long  -  numToSkip)  {  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  numToSkip)  {  long  -  numToSkip)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip)    {    long  -  numToSkip)  {	  	non-compiled	[CE]  not  a  statement	5	None	add
107	[BUG]  [BUGGY]  while  (numToSkip  <  0)  {  long  skipped  =  input.skip(available);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (numToSkip  <  0)  {  long  skipped  =  input.skip(available);  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    0)    {    long  skipped  =  input.skip(available);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
108	[BUG]  [BUGGY]  while  (numToSkip  <  0)  {  long  numToSkip  =  input.size();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (numToSkip  <  0)  {  long  numToSkip  =  input.size();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    0)    {    long  numToSkip  =  input.size();	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
109	[BUG]  [BUGGY]  while(numToSkip  >  1)  {  int  numToSkip  =  input.getNumberOfLinks();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  >  1)  {  int  numToSkip  =  input.getNumberOfLinks();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    1)    {    int  numToSkip  =  input.getNumberOfLinks();	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
110	[BUG]  [BUGGY]  while(numToSkip  >  1)  {  long  skipped  =  input.skip(numToSkip);  while(numToSkip  >  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  >  1)  {  long  skipped  =  input.skip(numToSkip);  while(numToSkip  >  1)  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    1)    {    long  skipped  =  input.skip(numToSkip);  while(numToSkip  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
111	[BUG]  [BUGGY]  while(numToSkip  >  1)  {  int  numToSkip  =  input.getLength();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  >  1)  {  int  numToSkip  =  input.getLength();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    1)    {    int  numToSkip  =  input.getLength();	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
112	[BUG]  [BUGGY]  while(numToSkip  >  1)  {  int  numToSkip  =  input.getNumberOfItems();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(numToSkip  >  1)  {  int  numToSkip  =  input.getNumberOfItems();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    1)    {    int  numToSkip  =  input.getNumberOfItems();	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
113	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  long  numToSkip  =  input.read();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  numToSkip)  {  long  numToSkip  =  input.read();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip)    {    long  numToSkip  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
114	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  long  numToSkip  =  input.available();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  numToSkip)  {  long  numToSkip  =  input.available();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip)    {    long  numToSkip  =  input.available();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
115	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  int  numToSkip  =  input.getSize();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  numToSkip)  {  int  numToSkip  =  input.getSize();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip)    {    int  numToSkip  =  input.getSize();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
116	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  long  numToSkip  =  input.length();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while  (available  <  numToSkip)  {  long  numToSkip  =  input.length();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip)    {    long  numToSkip  =  input.length();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
117	[BUG]  [BUGGY]  int  numToSkip  =  input.getNumberOfLinks();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  int  numToSkip  =  input.getNumberOfLinks();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.getNumberOfLinks();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
118	[BUG]  [BUGGY]  int  n  =  input.read();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  int  n  =  input.read();  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  n  =  input.read();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
119	[BUG]  [BUGGY]  while(available  >  numToSkip  &&  input.isVersion())  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;    [BUGGY]  while(available  >  numToSkip  &&  input.isVersion())  {  [BUGGY]    long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip  &&  input.isVersion())  {	  while(available    >    numToSkip)    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
