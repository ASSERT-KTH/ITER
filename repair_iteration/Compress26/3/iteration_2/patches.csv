bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  long  numToSkip  =  input.getNumberOfItems();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  numToSkip  =  input.getNumberOfItems();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  numToSkip  =  input.getNumberOfItems();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.getNumberOfItems();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
2	[BUG]  [BUGGY]  int  numToSkip  =  input.getNumberOfItems();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.getNumberOfItems();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.getNumberOfItems();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.getNumberOfItems();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
3	[BUG]  [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.getNumberOfItems();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.getNumberOfItems();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  0)  {  int  numToSkip  =  input.getNumberOfItems();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.getNumberOfItems();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	112	None	replace
4	[BUG]  [BUGGY]  while(numToSkip  <  1)  {  int  numToSkip  =  input.getNumberOfItems();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  1)  {  int  numToSkip  =  input.getNumberOfItems();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  1)  {  int  numToSkip  =  input.getNumberOfItems();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.getNumberOfItems();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	112	None	replace
5	[BUG]  [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.getNumberOfItems();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.getNumberOfItems();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  int  numToSkip  =  input.getNumberOfItems();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.getNumberOfItems();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	112	None	replace
6	[BUG]  [BUGGY]  Integer  numToSkip  =  input.getNumberOfItems();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  Integer  numToSkip  =  input.getNumberOfItems();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	Integer  numToSkip  =  input.getNumberOfItems();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.getNumberOfItems();    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
7	[BUG]  [BUGGY]  while  (available  <  =  0  ||  available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  =  0  ||  available  >  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  =  0  ||  available  >  numToSkip)  {	  while    (available    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  while  (available  <  =  0  ||  available  >=  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  =  0  ||  available  >=  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  =  0  ||  available  >=  numToSkip)  {	  while    (available    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  while  (available  <  =  0  ||  input.skip  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  =  0  ||  input.skip  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  =  0  ||  input.skip  >  0)  {	  while    (available    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  long  numToSkip  =  input.skip(available);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  numToSkip  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  numToSkip  =  input.skip(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.skip(available);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
11	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  long  numToSkip  =  input.skip(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  long  numToSkip  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  long  numToSkip  =  input.skip(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.skip(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	81	None	replace
12	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  long  numToSkip  =  input.skip(available);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  long  numToSkip  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  long  numToSkip  =  input.skip(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.skip(available);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
13	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  long  numToSkip  =  input.skip(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  long  numToSkip  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  numToSkip)  {  long  numToSkip  =  input.skip(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.skip(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	81	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  available  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  numToSkip)  {  available  =  input.skip(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.skip(available);    	compilable	  [FE]  AssertionError  	81	3	replace
15	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  available  =  input.skip(available);  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  available  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  available  =  input.skip(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.skip(available);    	compilable	  [FE]  AssertionError  	81	3	replace
16	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  long  numToSkip  =  input.skip(numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  long  numToSkip  =  input.skip(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  long  numToSkip  =  input.skip(numToSkip);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.skip(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	81	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  numToSkip  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(numToSkip  >  available)  {  numToSkip  =  input.skip(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.skip(available);    	compilable	  [FE]  AssertionError  	81	3	replace
18	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  numToSkip  =  input.skip(available);  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  numToSkip  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  available)  {  numToSkip  =  input.skip(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.skip(available);    	compilable	  [FE]  AssertionError  	81	3	replace
19	[BUG]  [BUGGY]  while(numToSkip  >=  1)  {  while(numToSkip  >=  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  1)  {  while(numToSkip  >=  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >=    1)    {    while(numToSkip  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
20	[BUG]  [BUGGY]  while(numToSkip  >=  1)  {  while(numToSkip  >>  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  1)  {  while(numToSkip  >>  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >=    1)    {    while(numToSkip  >>  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
21	[BUG]  [BUGGY]  while(numToSkip  >=  1)  {  while(numToSkip!=  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  1)  {  while(numToSkip!=  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >=    1)    {    while(numToSkip!=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
22	[BUG]  [BUGGY]  while(numToSkip  >=  1)  {  long  skipped  =  input.skip(numToSkip);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  1)  {  long  skipped  =  input.skip(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >=    1)    {    long  skipped  =  input.skip(numToSkip);	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
23	[BUG]  [BUGGY]  while(numToSkip  >=  1)  {  int  numToSkip  =  input.length();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  1)  {  int  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >=    1)    {    int  numToSkip  =  input.length();	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
24	[BUG]  [BUGGY]  while(numToSkip  >=  1)  {  while(numToSkip  ==  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  1)  {  while(numToSkip  ==  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >=    1)    {    while(numToSkip  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
25	[BUG]  [BUGGY]  while(numToSkip  >=  1)  {  int  numToSkip  =  input.read();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  1)  {  int  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >=    1)    {    int  numToSkip  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
26	[BUG]  [BUGGY]  while(numToSkip  >=  1)  {  int  numToSkip  =  input.readInt();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  1)  {  int  numToSkip  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >=    1)    {    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
27	[BUG]  [BUGGY]  long  available  =  input.readLine();  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  available  =  input.readLine();	  while    (available    <    numToSkip)    {    long    available    =    input.readLine();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
28	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  =  input.readLine();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  =  input.readLine();	  while    (available    <    numToSkip)    {    long    available    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  numToSkip)  {  available  =  input.read();	  while    (available    <    numToSkip)    {    long    available    =    input.readLine();    	compilable	  [FE]  AssertionError  	85	3	replace
30	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  =  input.read();  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  =  input.read();	  while    (available    <    numToSkip)    {    long    available    =    input.readLine();    	compilable	  [FE]  AssertionError  	85	3	replace
31	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  =  input.readFully();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  input.readFully();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  =  input.readFully();	  while    (available    <    numToSkip)    {    long    available    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
32	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  available  =  input.readLine();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  available  =  input.readLine();	  while    (available    <    numToSkip)    {    long    available    =    input.readLine();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
33	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  while  (available  <  numToSkip  ||  available  >  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  while  (available  <  numToSkip  ||  available  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    0)    {    while  (available  <  numToSkip  ||  available  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
34	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  long  available  =  numToSkip;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  long  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    0)    {    long  available  =  numToSkip;	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
35	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  long  available  =  numToSkip  ||  available  >  0)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  long  available  =  numToSkip  ||  available  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    0)    {    long  available  =  numToSkip  ||  available  >  0)  {	  	non-compiled	[CE]  ';'  expected	38	None	add
36	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  long  available  =  input.available();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  long  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    0)    {    long  available  =  input.available();	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
37	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  long  available  =  numToSkip  +  available;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  long  available  =  numToSkip  +  available;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    0)    {    long  available  =  numToSkip  +  available;	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
38	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  InputStream  input  =  getInput();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  InputStream  input  =  getInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    0)    {    InputStream  input  =  getInput();	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
39	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  InputStream  input  =  this.input.getInputStream();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  InputStream  input  =  this.input.getInputStream();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    0)    {    InputStream  input  =  this.input.getInputStream();	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
40	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  InputStream  input  =  this.input.readInput();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  InputStream  input  =  this.input.readInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    0)    {    InputStream  input  =  this.input.readInput();	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
41	[BUG]  [BUGGY]  while(available  >=  numToSkip  &&  input.isVersion())  {  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip  &&  input.isVersion())  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  numToSkip  &&  input.isVersion())  {	  while(available    >    numToSkip    &&    input.isVersion())    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
42	[BUG]  [BUGGY]  while(available  <  numToSkip  &&  input.isVersion())  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip  &&  input.isVersion())  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip  &&  input.isVersion())  {	  while(available    >    numToSkip    &&    input.isVersion())    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
43	[BUG]  [BUGGY]  while(numToSkip  >  available  &&  input.isVersion())  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available  &&  input.isVersion())  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  available  &&  input.isVersion())  {	  while(available    >    numToSkip    &&    input.isVersion())    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
44	[BUG]  [BUGGY]  while(available  ==  numToSkip  &&  input.isVersion())  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip  &&  input.isVersion())  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  ==  numToSkip  &&  input.isVersion())  {	  while(available    >    numToSkip    &&    input.isVersion())    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
45	[BUG]  [BUGGY]  while(available!=  numToSkip  &&  input.isVersion())  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available!=  numToSkip  &&  input.isVersion())  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available!=  numToSkip  &&  input.isVersion())  {	  while(available    >    numToSkip    &&    input.isVersion())    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
46	[BUG]  [BUGGY]  while(available  >  numToSkip  &&  available  <  =  input.isVersion())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  &&  available  <  =  input.isVersion())  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip  &&  available  <  =  input.isVersion())  {	  while(available    >    numToSkip    &&    input.isVersion())    {    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
47	[BUG]  [BUGGY]  long  numToSkip  =  input.length();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  numToSkip  =  input.length();	  while    (available    >    0)    {    int    numToSkip    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
48	[BUG]  [BUGGY]  while  (available  <  0)  {  int  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  int  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  0)  {  int  numToSkip  =  input.length();	  while    (available    >    0)    {    int    numToSkip    =    input.length();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	103	None	replace
49	[BUG]  [BUGGY]  while  (available  >=  0)  {  int  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >=  0)  {  int  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  >=  0)  {  int  numToSkip  =  input.length();	  while    (available    >    0)    {    int    numToSkip    =    input.length();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	103	None	replace
50	[BUG]  [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  0)  {  int  numToSkip  =  input.length();	  while    (available    >    0)    {    int    numToSkip    =    input.length();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	103	None	replace
51	[BUG]  [BUGGY]  long  numToSkip  =  input.size();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  numToSkip  =  input.size();	  while    (numToSkip    <    0)    {    int    numToSkip    =    input.size();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
52	[BUG]  [BUGGY]  while  (available  <  0)  {  int  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  int  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  0)  {  int  numToSkip  =  input.size();	  while    (numToSkip    <    0)    {    int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	76	None	replace
53	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  int  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip)  {  int  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  numToSkip)  {  int  numToSkip  =  input.size();	  while    (numToSkip    <    0)    {    int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	76	None	replace
54	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  long  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip)  {  long  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  numToSkip)  {  long  numToSkip  =  input.size();	  while    (numToSkip    <    0)    {    int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	76	None	replace
55	[BUG]  [BUGGY]  Integer  numToSkip  =  input.size();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  Integer  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	Integer  numToSkip  =  input.size();	  while    (numToSkip    <    0)    {    int    numToSkip    =    input.size();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
56	[BUG]  [BUGGY]  long  available  =  input.read(numToSkip);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  available  =  input.read(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  available  =  input.read(numToSkip);	  while(available    >    numToSkip)    {    int    available    =    input.read(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
57	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  int  available  =  input.read(numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  int  available  =  input.read(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  int  available  =  input.read(numToSkip);	  while(available    >    numToSkip)    {    int    available    =    input.read(numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	61	None	replace
58	[BUG]  [BUGGY]  int  available  =  input.read(numToSkip);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  available  =  input.read(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  available  =  input.read(numToSkip);	  while(available    >    numToSkip)    {    int    available    =    input.read(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
59	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  int  available  =  input.read(numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  int  available  =  input.read(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  numToSkip)  {  int  available  =  input.read(numToSkip);	  while(available    >    numToSkip)    {    int    available    =    input.read(numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	61	None	replace
60	[BUG]  [BUGGY]  while(available  >  0)  {  available  =  input.read(numToSkip);  [CE]  no  suitable  method  found  for  read(long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  =  input.read(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  available  =  input.read(numToSkip);	  while(available    >    numToSkip)    {    int    available    =    input.read(numToSkip);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	61	None	replace
61	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  int  available  =  input.read(0,  numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  int  available  =  input.read(0,  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  int  available  =  input.read(0,  numToSkip);	  while(available    >    numToSkip)    {    int    available    =    input.read(numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	61	None	replace
62	[BUG]  [BUGGY]  while(available  >  1)  {  while(available  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  while(available  >  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    1)    {    while(available  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
63	[BUG]  [BUGGY]  while(available  >  1)  {  int  available  =  input.readInt();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  int  available  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    1)    {    int  available  =  input.readInt();	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
64	[BUG]  [BUGGY]  while(available  >  1)  {  int  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  int  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    1)    {    int  available  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
65	[BUG]  [BUGGY]  while(available  >  1)  {  long  available  >  1)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  long  available  >  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    1)    {    long  available  >  1)  {	  	non-compiled	[CE]  ';'  expected	66	None	add
66	[BUG]  [BUGGY]  while(available  >  1)  {  InputStream  available  =  input.readInput();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  InputStream  available  =  input.readInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    1)    {    InputStream  available  =  input.readInput();	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
67	[BUG]  [BUGGY]  while(available  >  1)  {  int  available  =  input.read(available);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  int  available  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    1)    {    int  available  =  input.read(available);	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
68	[BUG]  [BUGGY]  while(available  >  1)  {  InputStream  input  =  getInput();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  InputStream  input  =  getInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    1)    {    InputStream  input  =  getInput();	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
69	[BUG]  [BUGGY]  while(available  >  1)  {  int  available  =  input.available();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  int  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    1)    {    int  available  =  input.available();	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
70	[BUG]  [BUGGY]  long  numToSkip  =  input.read();  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  numToSkip  =  input.read();	  while    (available    >    0)    {    int    numToSkip    =    input.read();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
71	[BUG]  [BUGGY]  while  (available  <  0)  {  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  int  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  0)  {  int  numToSkip  =  input.read();	  while    (available    >    0)    {    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	99	None	replace
72	[BUG]  [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  0)  {  int  numToSkip  =  input.read();	  while    (available    >    0)    {    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	99	None	replace
73	[BUG]  [BUGGY]  Integer  numToSkip  =  input.read();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  Integer  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	Integer  numToSkip  =  input.read();	  while    (available    >    0)    {    int    numToSkip    =    input.read();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available!=  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available!=  numToSkip)  {	  while(available    >    numToSkip)    {    While(available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	104	3	replace
75	[BUG]  [BUGGY]  while(available!=  numToSkip)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available!=  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available!=  numToSkip)  {	  while(available    >    numToSkip)    {    While(available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	104	3	replace
76	[BUG]  [BUGGY]  while  (available  <  0)  {  InputStream  input  =  input.readLine();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  InputStream  input  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  0)  {  InputStream  input  =  input.readLine();	  while    (available    >    0)    {    InputStream    input    =    input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
77	[BUG]  [BUGGY]  while  (available  >=  0)  {  InputStream  input  =  input.readLine();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >=  0)  {  InputStream  input  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  >=  0)  {  InputStream  input  =  input.readLine();	  while    (available    >    0)    {    InputStream    input    =    input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
78	[BUG]  [BUGGY]  while(numToSkip  <  available)  {  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  available)  {  int  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  available)  {  int  numToSkip  =  input.read();	  while    (available    <    numToSkip)    {    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	13	None	replace
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip)  {  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while  (available  <  numToSkip)  {  numToSkip  =  input.read();	  while    (available    <    numToSkip)    {    int    numToSkip    =    input.read();    	compilable	  [FE]  AssertionError  	13	3	replace
80	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  numToSkip  =  input.read();  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip)  {  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  numToSkip)  {  numToSkip  =  input.read();	  while    (available    <    numToSkip)    {    int    numToSkip    =    input.read();    	compilable	  [FE]  AssertionError  	13	3	replace
81	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip)  {  int  numToSkip  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  numToSkip)  {  int  numToSkip  =  input.readInt();	  while    (available    <    numToSkip)    {    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	13	None	replace
82	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    numToSkip)    {    while  (available  <  numToSkip  ||  available  >  numToSkip)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
83	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  long  available  =  numToSkip;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  long  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    numToSkip)    {    long  available  =  numToSkip;	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
84	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  long  available  =  input.available();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  long  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    numToSkip)    {    long  available  =  input.available();	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
85	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  long  available  =  numToSkip  ||  available  >  numToSkip)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  long  available  =  numToSkip  ||  available  >  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    numToSkip)    {    long  available  =  numToSkip  ||  available  >  numToSkip)  {	  	non-compiled	[CE]  ';'  expected	40	None	add
86	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  InputStream  input  =  getInput();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  InputStream  input  =  getInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    numToSkip)    {    InputStream  input  =  getInput();	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
87	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  long  available  =  numToSkip  ||  available  >  numToSkip);  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  long  available  =  numToSkip  ||  available  >  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    numToSkip)    {    long  available  =  numToSkip  ||  available  >  numToSkip);	  	non-compiled	[CE]  ';'  expected	40	None	add
88	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  InputStream  input  =  this.input.getInputStream();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  InputStream  input  =  this.input.getInputStream();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    numToSkip)    {    InputStream  input  =  this.input.getInputStream();	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
89	[BUG]  [BUGGY]  int  numToSkip  =  input.length()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.length()  -  1;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.length()  -  1;	  int    numToSkip    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
90	[BUG]  [BUGGY]  int  numToSkip  =  available.length();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  available.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  available.length();	  int    numToSkip    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
91	[BUG]  [BUGGY]  int  numToSkip  =  input.length()  -  available;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.length()  -  available;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.length()  -  available;	  int    numToSkip    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
92	[BUG]  [BUGGY]  int  numToSkip  =  input.length()  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.length()  +  1;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.length()  +  1;	  int    numToSkip    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
93	[BUG]  [BUGGY]  int  numToSkip  =  input.length()  +  available;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.length()  +  available;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.length()  +  available;	  int    numToSkip    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
94	[BUG]  [BUGGY]  while(available  <  0)  {  InputStream  input  =  this.input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  0)  {  InputStream  input  =  this.input.readInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  0)  {  InputStream  input  =  this.input.readInput();	  while    (available    >    0)    {    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	55	None	replace
95	[BUG]  [BUGGY]  While(available  >  0)  {  InputStream  input  =  this.input.readInput();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  While(available  >  0)  {  InputStream  input  =  this.input.readInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	While(available  >  0)  {  InputStream  input  =  this.input.readInput();	  while    (available    >    0)    {    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  ';'  expected	55	None	replace
96	[BUG]  [BUGGY]  while(available  <  =  0)  {  InputStream  input  =  this.input.readInput();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  0)  {  InputStream  input  =  this.input.readInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  0)  {  InputStream  input  =  this.input.readInput();	  while    (available    >    0)    {    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
97	[BUG]  [BUGGY]  while(available  <  numToSkip  &&  available  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip  &&  available  <  =  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip  &&  available  <  =  0)  {	  while(available    >    numToSkip    &&    available    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
98	[BUG]  [BUGGY]  while(available  >=  numToSkip  &&  available  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip  &&  available  <  =  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  numToSkip  &&  available  <  =  0)  {	  while(available    >    numToSkip    &&    available    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
99	[BUG]  [BUGGY]  while(available  <  =  numToSkip  &&  available  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip  &&  available  <  =  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip  &&  available  <  =  0)  {	  while(available    >    numToSkip    &&    available    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
100	[BUG]  [BUGGY]  while(available  ==  numToSkip  &&  available  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip  &&  available  <  =  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  ==  numToSkip  &&  available  <  =  0)  {	  while(available    >    numToSkip    &&    available    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
101	[BUG]  [BUGGY]  while(numToSkip  >  available  &&  available  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available  &&  available  <  =  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  available  &&  available  <  =  0)  {	  while(available    >    numToSkip    &&    available    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
102	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  &&  available  <  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  numToSkip  &&  available  <  0)  {	  while(available    >    numToSkip    &&    available    <    =    0)    {    	compilable	  [FE]  AssertionError  	27	3	replace
103	[BUG]  [BUGGY]  while(available  >  numToSkip  &&  available  <  0)  {  [FE]  AssertionError  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  &&  available  <  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip  &&  available  <  0)  {	  while(available    >    numToSkip    &&    available    <    =    0)    {    	compilable	  [FE]  AssertionError  	27	3	replace
104	[BUG]  [BUGGY]  long  numToSkip  =  input.read(available);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  numToSkip  =  input.read(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
105	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  long  numToSkip  =  input.read(available);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  long  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  long  numToSkip  =  input.read(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
106	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  long  numToSkip  =  input.read(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  long  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  numToSkip)  {  long  numToSkip  =  input.read(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.read(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	83	None	replace
107	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  available  =  input.read(available);  [CE]  no  suitable  method  found  for  read(long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  available  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  available  =  input.read(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.read(available);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	83	None	replace
108	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  available  =  input.read(numToSkip);  [CE]  no  suitable  method  found  for  read(long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  available  =  input.read(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  available  =  input.read(numToSkip);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.read(available);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	83	None	replace
109	[BUG]  [BUGGY]  InputStream  input  =  this.input.readLine();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  this.input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  this.input.readLine();	  InputStream    input    =    input.readLine();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
110	[BUG]  [BUGGY]  InputStream  input  =  input.readInputStream();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  input.readInputStream();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.readInputStream();	  InputStream    input    =    input.readLine();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
111	[BUG]  [BUGGY]  InputStream  input  =  input.readFully(available);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  input.readFully(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.readFully(available);	  InputStream    input    =    input.readLine();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
112	[BUG]  [BUGGY]  InputStream  input  =  input.readLine()  -  1;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  input.readLine()  -  1;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.readLine()  -  1;	  InputStream    input    =    input.readLine();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
113	[BUG]  [BUGGY]  InputStream  input  =  input.readFully();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  input.readFully();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.readFully();	  InputStream    input    =    input.readLine();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
114	[BUG]  [BUGGY]  InputStream  input  =  input.read();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.read();	  InputStream    input    =    input.readLine();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
115	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  =  input.length();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  =  input.length();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
116	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  numToSkip  =  input.length();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  numToSkip  =  input.length();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
117	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  +=  input.length();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  +=  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  +=  input.length();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
118	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available  -  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(numToSkip  >  available  -  1)  {	  while(numToSkip    >    available)    {    	compilable	  [FE]  AssertionError  	73	2	replace
119	[BUG]  [BUGGY]  while(numToSkip  >  available  -  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available  -  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  available  -  1)  {	  while(numToSkip    >    available)    {    	compilable	  [FE]  AssertionError  	73	2	replace
120	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  available)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(numToSkip  >=  available)  {	  while(numToSkip    >    available)    {    	compilable	  [FE]  AssertionError  	73	2	replace
121	[BUG]  [BUGGY]  while(numToSkip  >=  available)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  available)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >=  available)  {	  while(numToSkip    >    available)    {    	compilable	  [FE]  AssertionError  	73	2	replace
122	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  available)  {  int  numToSkip  =  input.length();	  while(available    >    numToSkip)    {    int    numToSkip    =    input.length();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	62	None	replace
123	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  long  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  long  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  numToSkip)  {  long  numToSkip  =  input.read();	  while(available    >    numToSkip)    {    long    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	84	None	replace
124	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  long  numToSkip  =  input.read();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  long  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  long  numToSkip  =  input.read();	  while(available    >    numToSkip)    {    long    numToSkip    =    input.read();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
125	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(numToSkip  >  available)  {  numToSkip  =  input.read();	  while(available    >    numToSkip)    {    long    numToSkip    =    input.read();    	compilable	  [FE]  AssertionError  	84	3	replace
126	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  numToSkip  =  input.read();  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  available)  {  numToSkip  =  input.read();	  while(available    >    numToSkip)    {    long    numToSkip    =    input.read();    	compilable	  [FE]  AssertionError  	84	3	replace
127	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  0)  {  numToSkip  =  input.read();	  while(available    >    numToSkip)    {    long    numToSkip    =    input.read();    	compilable	  [FE]  AssertionError  	84	3	replace
128	[BUG]  [BUGGY]  while(available  >  0)  {  numToSkip  =  input.read();  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  numToSkip  =  input.read();	  while(available    >    numToSkip)    {    long    numToSkip    =    input.read();    	compilable	  [FE]  AssertionError  	84	3	replace
129	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  numToSkip)  {  available  =  input.read();	  while(available    >    numToSkip)    {    long    numToSkip    =    input.read();    	compilable	  [FE]  AssertionError  	84	3	replace
130	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  available  =  input.read();  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  available  =  input.read();	  while(available    >    numToSkip)    {    long    numToSkip    =    input.read();    	compilable	  [FE]  AssertionError  	84	3	replace
131	[BUG]  [BUGGY]  long  available  =  input.available();  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  available  =  input.available();	  while    (available    >    0)    {    long    available    =    input.available();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
132	[BUG]  [BUGGY]  while  (available  <  0)  {  long  available  =  input.available();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  long  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  0)  {  long  available  =  input.available();	  while    (available    >    0)    {    long    available    =    input.available();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	51	None	replace
133	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >  0)  {  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while  (available  >  0)  {  available  =  input.read();	  while    (available    >    0)    {    long    available    =    input.available();    	compilable	  [FE]  AssertionError  	51	3	replace
134	[BUG]  [BUGGY]  while  (available  >  0)  {  available  =  input.read();  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >  0)  {  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  >  0)  {  available  =  input.read();	  while    (available    >    0)    {    long    available    =    input.available();    	compilable	  [FE]  AssertionError  	51	3	replace
135	[BUG]  [BUGGY]  while  (available  >=  0)  {  long  available  =  input.available();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >=  0)  {  long  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  >=  0)  {  long  available  =  input.available();	  while    (available    >    0)    {    long    available    =    input.available();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	51	None	replace
136	[BUG]  [BUGGY]  while(available  <  =  0)  {  long  available  =  input.available();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  0)  {  long  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  0)  {  long  available  =  input.available();	  while    (available    >    0)    {    long    available    =    input.available();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
137	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  1)  {	  while(available    >    1)    {    	compilable	  [FE]  AssertionError  	67	3	replace
138	[BUG]  [BUGGY]  while(available  <  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  1)  {	  while(available    >    1)    {    	compilable	  [FE]  AssertionError  	67	3	replace
139	[BUG]  [BUGGY]  while(available  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  1)  {	  while(available    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
140	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >=  1)  {	  while(available    >    1)    {    	compilable	  [FE]  AssertionError  	67	2	replace
141	[BUG]  [BUGGY]  while(available  >=  1)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  1)  {	  while(available    >    1)    {    	compilable	  [FE]  AssertionError  	67	2	replace
142	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  1  &&  available  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  1  &&  available  >  0)  {	  while(available    >    1)    {    	compilable	  [FE]  AssertionError  	67	3	replace
143	[BUG]  [BUGGY]  while(available  <  1  &&  available  >  0)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  1  &&  available  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  1  &&  available  >  0)  {	  while(available    >    1)    {    	compilable	  [FE]  AssertionError  	67	3	replace
144	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  ==  1)  {	  while(available    >    1)    {    	compilable	  [FE]  AssertionError  	67	3	replace
145	[BUG]  [BUGGY]  while(available  ==  1)  {  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  ==  1)  {	  while(available    >    1)    {    	compilable	  [FE]  AssertionError  	67	3	replace
146	[BUG]  [BUGGY]  long  numToSkip  =  input.available();  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  numToSkip  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  numToSkip  =  input.available();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.available();    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
147	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  numToSkip)  {  available  =  input.available();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.available();    	compilable	  [FE]  AssertionError  	114	3	replace
148	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  =  input.available();  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  =  input.available();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.available();    	compilable	  [FE]  AssertionError  	114	3	replace
149	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  numToSkip  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  numToSkip)  {  numToSkip  =  input.available();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.available();    	compilable	  [FE]  AssertionError  	114	3	replace
150	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  numToSkip  =  input.available();  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  numToSkip  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  numToSkip  =  input.available();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.available();    	compilable	  [FE]  AssertionError  	114	3	replace
151	[BUG]  [BUGGY]  while(numToSkip  <  1)  {  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  1)  {  int  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  1)  {  int  numToSkip  =  input.read();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	33	None	replace
152	[BUG]  [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  int  numToSkip  =  input.read();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	33	None	replace
153	[BUG]  [BUGGY]  while(numToSkip  <  1)  {  while(numToSkip  <  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  1)  {  while(numToSkip  <  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    <    1)    {    while(numToSkip  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
154	[BUG]  [BUGGY]  while(numToSkip  <  1)  {  long  skipped  =  input.skip(numToSkip);  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  1)  {  long  skipped  =  input.skip(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    <    1)    {    long  skipped  =  input.skip(numToSkip);	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
155	[BUG]  [BUGGY]  while(numToSkip  <  1)  {  int  numToSkip  =  input.length();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  1)  {  int  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    <    1)    {    int  numToSkip  =  input.length();	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
156	[BUG]  [BUGGY]  while(numToSkip  <  1)  {  int  numToSkip  =  input.readInt();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  1)  {  int  numToSkip  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    <    1)    {    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
157	[BUG]  [BUGGY]  while(numToSkip  <  1)  {  int  numToSkip  =  input.size();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  1)  {  int  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    <    1)    {    int  numToSkip  =  input.size();	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
158	[BUG]  [BUGGY]  while(numToSkip  <  1)  {  long  numToSkip  =  input.length();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  1)  {  long  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    <    1)    {    long  numToSkip  =  input.length();	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
159	[BUG]  [BUGGY]  while(numToSkip  <  1)  {  int  numToSkip  =  input.read(available);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  1)  {  int  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    <    1)    {    int  numToSkip  =  input.read(available);	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
160	[BUG]  [BUGGY]  InputStream  input  =  getInputStream(available);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  getInputStream(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  getInputStream(available);	  InputStream    input    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
161	[BUG]  [BUGGY]  InputStream  input  =  this.getInputStream();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  this.getInputStream();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  this.getInputStream();	  InputStream    input    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
162	[BUG]  [BUGGY]  InputStream  input  =  getInputStream(),  available);  [CE]  ';'  expected  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  getInputStream(),  available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  getInputStream(),  available);	  InputStream    input    =    getInputStream();    	non-compiled	[CE]  ';'  expected	20	None	replace
163	[BUG]  [BUGGY]  InputStream  input  =  getInputStream()  -  available;  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  getInputStream()  -  available;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  getInputStream()  -  available;	  InputStream    input    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
164	[BUG]  [BUGGY]  InputStream  input  =  getInputStream().readLine();  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  getInputStream().readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  getInputStream().readLine();	  InputStream    input    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
165	[BUG]  [BUGGY]  InputStream  input  =  getOutputStream();  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  getOutputStream();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  getOutputStream();	  InputStream    input    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
166	[BUG]  [BUGGY]  long  numToSkip  =  input.getLength();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  numToSkip  =  input.getLength();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  numToSkip  =  input.getLength();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.getLength();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
167	[BUG]  [BUGGY]  int  numToSkip  =  input.getLength();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.getLength();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.getLength();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.getLength();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
168	[BUG]  [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.getLength();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.getLength();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  0)  {  int  numToSkip  =  input.getLength();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.getLength();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	111	None	replace
169	[BUG]  [BUGGY]  while(numToSkip  <  1)  {  int  numToSkip  =  input.getLength();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  1)  {  int  numToSkip  =  input.getLength();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  1)  {  int  numToSkip  =  input.getLength();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.getLength();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	111	None	replace
170	[BUG]  [BUGGY]  while(numToSkip  >=  1)  {  int  numToSkip  =  input.getLength();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  1)  {  int  numToSkip  =  input.getLength();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >=  1)  {  int  numToSkip  =  input.getLength();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.getLength();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	111	None	replace
171	[BUG]  [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.getLength();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.getLength();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  int  numToSkip  =  input.getLength();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.getLength();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	111	None	replace
172	[BUG]  [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  0)  {  int  numToSkip  =  input.size();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	36	None	replace
173	[BUG]  [BUGGY]  while(numToSkip  >=  1)  {  int  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  1)  {  int  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >=  1)  {  int  numToSkip  =  input.size();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	36	None	replace
174	[BUG]  [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  int  numToSkip  =  input.size();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	36	None	replace
175	[BUG]  [BUGGY]  long  numToSkip  =  input.readInt();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  numToSkip  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  numToSkip  =  input.readInt();	  int    numToSkip    =    input.readInt();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
176	[BUG]  [BUGGY]  Integer  numToSkip  =  input.readInt();  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  Integer  numToSkip  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	Integer  numToSkip  =  input.readInt();	  int    numToSkip    =    input.readInt();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
177	[BUG]  [BUGGY]  int  numToSkip  =  input.readInt()  +  1;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.readInt()  +  1;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.readInt()  +  1;	  int    numToSkip    =    input.readInt();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
178	[BUG]  [BUGGY]  int  numToSkip  =  available.readInt();  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  available.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  available.readInt();	  int    numToSkip    =    input.readInt();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
179	[BUG]  [BUGGY]  byte  numToSkip  =  input.readInt();  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  byte  numToSkip  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	byte  numToSkip  =  input.readInt();	  int    numToSkip    =    input.readInt();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
180	[BUG]  [BUGGY]  while(numToSkip  <  0)  {  available  =  input.read(numToSkip);  [CE]  no  suitable  method  found  for  read(long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  0)  {  available  =  input.read(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  0)  {  available  =  input.read(numToSkip);	  while    (numToSkip    <    0)    {    long    numToSkip    =    input.read(available);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	78	None	replace
181	[BUG]  [BUGGY]  while  (available  <  0)  {  long  numToSkip  =  input.read(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  long  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  0)  {  long  numToSkip  =  input.read(available);	  while    (numToSkip    <    0)    {    long    numToSkip    =    input.read(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	78	None	replace
182	[BUG]  [BUGGY]  while  (available  <  0)  {  long  numToSkip  =  input.read(numToSkip);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  long  numToSkip  =  input.read(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  0)  {  long  numToSkip  =  input.read(numToSkip);	  while    (numToSkip    <    0)    {    long    numToSkip    =    input.read(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	78	None	replace
183	[BUG]  [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.read(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  0)  {  int  numToSkip  =  input.read(available);	  while(numToSkip    >    1)    {    int    numToSkip    =    input.read(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	79	None	replace
184	[BUG]  [BUGGY]  while(numToSkip  >=  1)  {  int  numToSkip  =  input.read(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  1)  {  int  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >=  1)  {  int  numToSkip  =  input.read(available);	  while(numToSkip    >    1)    {    int    numToSkip    =    input.read(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	79	None	replace
185	[BUG]  [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.read(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  int  numToSkip  =  input.read(available);	  while(numToSkip    >    1)    {    int    numToSkip    =    input.read(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	79	None	replace
186	[BUG]  [BUGGY]  long  available  =  numToSkip;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  available  =  numToSkip;	  while    (available    >    0)    {    long    available    =    numToSkip;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
187	[BUG]  [BUGGY]  while(available  <  0)  {  long  available  =  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  0)  {  long  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  0)  {  long  available  =  numToSkip;	  while    (available    >    0)    {    long    available    =    numToSkip;    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	52	None	replace
188	[BUG]  [BUGGY]  long  available  =  input.availableToSkip;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  available  =  input.availableToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  available  =  input.availableToSkip;	  while    (available    >    0)    {    long    available    =    numToSkip;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
189	[BUG]  [BUGGY]  long  available  =  input.available  -  numToSkip;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  available  =  input.available  -  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  available  =  input.available  -  numToSkip;	  while    (available    >    0)    {    long    available    =    numToSkip;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
190	[BUG]  [BUGGY]  long  available  =  input.availableToLong();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  available  =  input.availableToLong();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  available  =  input.availableToLong();	  while    (available    >    0)    {    long    available    =    numToSkip;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
191	[BUG]  [BUGGY]  long  available  =  input.availableToLong(numToSkip);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  available  =  input.availableToLong(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  available  =  input.availableToLong(numToSkip);	  while    (available    >    0)    {    long    available    =    numToSkip;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
192	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  skipped  =  input.skip(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  skipped  =  input.skip(numToSkip);	  while(numToSkip    >    1)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
193	[BUG]  [BUGGY]  while(available  >  1)  {  long  skipped  =  input.skip(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  long  skipped  =  input.skip(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  long  skipped  =  input.skip(numToSkip);	  while(numToSkip    >    1)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	31	None	replace
194	[BUG]  [BUGGY]  while(numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  0)  {  long  skipped  =  input.skip(numToSkip);	  while(numToSkip    >    1)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	31	None	replace
195	[BUG]  [BUGGY]  while(available  >  1)  {  short  skipped  =  input.skip(numToSkip);  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  short  skipped  =  input.skip(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  short  skipped  =  input.skip(numToSkip);	  while(numToSkip    >    1)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	31	None	replace
196	[BUG]  [BUGGY]  while(available  >  1)  {  int  skipped  =  input.skip(numToSkip);  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  int  skipped  =  input.skip(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  int  skipped  =  input.skip(numToSkip);	  while(numToSkip    >    1)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	31	None	replace
197	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  long  skipped  =  input.skip(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  long  skipped  =  input.skip(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  available)  {  long  skipped  =  input.skip(numToSkip);	  while(numToSkip    >    1)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	31	None	replace
198	[BUG]  [BUGGY]  while(available  >  1)  {  long  skipped  =  input.skip(0);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  long  skipped  =  input.skip(0);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  long  skipped  =  input.skip(0);	  while(numToSkip    >    1)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	31	None	replace
199	[BUG]  [BUGGY]  long  numToSkip  =  input.getNumberOfLinks();  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  numToSkip  =  input.getNumberOfLinks();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  numToSkip  =  input.getNumberOfLinks();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
200	[BUG]  [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.getNumberOfLinks();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.getNumberOfLinks();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  0)  {  int  numToSkip  =  input.getNumberOfLinks();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	109	None	replace
201	[BUG]  [BUGGY]  while(numToSkip  <  1)  {  int  numToSkip  =  input.getNumberOfLinks();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  1)  {  int  numToSkip  =  input.getNumberOfLinks();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  1)  {  int  numToSkip  =  input.getNumberOfLinks();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	109	None	replace
202	[BUG]  [BUGGY]  while(numToSkip  >=  1)  {  int  numToSkip  =  input.getNumberOfLinks();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  1)  {  int  numToSkip  =  input.getNumberOfLinks();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >=  1)  {  int  numToSkip  =  input.getNumberOfLinks();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	109	None	replace
203	[BUG]  [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.getNumberOfLinks();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.getNumberOfLinks();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  int  numToSkip  =  input.getNumberOfLinks();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	109	None	replace
204	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  InputStream  input  =  getInput();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  InputStream  input  =  getInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  InputStream  input  =  getInput();	  while    (available    <    numToSkip)    {    InputStream    input    =    getInput();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
205	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  input  =  getInput();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  input  =  getInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  input  =  getInput();	  while    (available    <    numToSkip)    {    InputStream    input    =    getInput();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
206	[BUG]  [BUGGY]  InputStream  input  =  getInput();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  getInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  getInput();	  while    (available    <    numToSkip)    {    InputStream    input    =    getInput();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
207	[BUG]  [BUGGY]  long  available  =  0;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  available  =  0;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  available  =  0;	  while    (available    >    0)    {    long    available    =    0;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
208	[BUG]  [BUGGY]  while(available  <  0)  {  long  available  =  0;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  0)  {  long  available  =  0;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  0)  {  long  available  =  0;	  while    (available    >    0)    {    long    available    =    0;    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	101	None	replace
209	[BUG]  [BUGGY]  while(available  <  =  0)  {  long  available  =  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  0)  {  long  available  =  0;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  0)  {  long  available  =  0;	  while    (available    >    0)    {    long    available    =    0;    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
210	[BUG]  [BUGGY]  while(available  >=  0)  {  long  available  =  0;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  0)  {  long  available  =  0;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  0)  {  long  available  =  0;	  while    (available    >    0)    {    long    available    =    0;    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	101	None	replace
211	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  =  0;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  0)  {  available  =  0;	  while    (available    >    0)    {    long    available    =    0;    	compilable	  [FE]  AssertionError  	101	3	replace
212	[BUG]  [BUGGY]  while(available  >  0)  {  available  =  0;  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  =  0;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  available  =  0;	  while    (available    >    0)    {    long    available    =    0;    	compilable	  [FE]  AssertionError  	101	3	replace
213	[BUG]  [BUGGY]  int  numToSkip  =  input.read(available,  numToSkip);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.read(available,  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.read(available,  numToSkip);	  int    numToSkip    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
214	[BUG]  [BUGGY]  int  numToSkip  =  input.read(available,  0);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.read(available,  0);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.read(available,  0);	  int    numToSkip    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
215	[BUG]  [BUGGY]  int  numToSkip  =  input.read(available  +  1);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.read(available  +  1);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.read(available  +  1);	  int    numToSkip    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
216	[BUG]  [BUGGY]  int  numToSkip  =  input.readFully(available);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.readFully(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.readFully(available);	  int    numToSkip    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
217	[BUG]  [BUGGY]  while  (available  <  0)  {  long  skipped  =  input.skip(numToSkip);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  long  skipped  =  input.skip(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  0)  {  long  skipped  =  input.skip(numToSkip);	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	43	None	replace
218	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  skipped  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  skipped  =  input.skip(available);	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
219	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  short  skipped  =  input.skip(numToSkip);  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  short  skipped  =  input.skip(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  short  skipped  =  input.skip(numToSkip);	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	43	None	replace
220	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  while(numToSkip  >  available)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  while(numToSkip  >  available)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    available)    {    while(numToSkip  >  available)  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
221	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  long  numToSkip  >  available)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  long  numToSkip  >  available)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    available)    {    long  numToSkip  >  available)  {	  	non-compiled	[CE]  ';'  expected	72	None	add
222	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  long  available  =  numToSkip;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  long  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    available)    {    long  available  =  numToSkip;	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
223	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.read();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    available)    {    int  numToSkip  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
224	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.readInt();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    available)    {    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
225	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  long  available  =  numToSkip  +  available;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  long  available  =  numToSkip  +  available;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    available)    {    long  available  =  numToSkip  +  available;	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
226	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.read(available);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    available)    {    int  numToSkip  =  input.read(available);	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
227	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  0;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  numToSkip)  {  available  =  0;	  while    (available    <    numToSkip)    {    long    available    =    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
228	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  =  0;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  0;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  =  0;	  while    (available    <    numToSkip)    {    long    available    =    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
229	[BUG]  [BUGGY]  long  available  =  input.availableToMillis(numToSkip);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  available  =  input.availableToMillis(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  available  =  input.availableToMillis(numToSkip);	  while    (available    <    numToSkip)    {    long    available    =    numToSkip;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
230	[BUG]  [BUGGY]  long  available  =  input.availableToInt();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  available  =  input.availableToInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  available  =  input.availableToInt();	  while    (available    <    numToSkip)    {    long    available    =    numToSkip;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
231	[BUG]  [BUGGY]  while  (available  >=  0)  {  while  (available  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >=  0)  {  while  (available  >=  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >=    0)    {    while  (available  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
232	[BUG]  [BUGGY]  while  (available  >=  0)  {  long  available  =  numToSkip;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >=  0)  {  long  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >=    0)    {    long  available  =  numToSkip;	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
233	[BUG]  [BUGGY]  while  (available  >=  0)  {  InputStream  input  =  getInput();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >=  0)  {  InputStream  input  =  getInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >=    0)    {    InputStream  input  =  getInput();	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
234	[BUG]  [BUGGY]  while  (available  >=  0)  {  while  (available!=  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >=  0)  {  while  (available!=  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >=    0)    {    while  (available!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
235	[BUG]  [BUGGY]  while  (available  >=  0)  {  int  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >=  0)  {  int  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >=    0)    {    int  available  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
236	[BUG]  [BUGGY]  while  (available  >=  0)  {  long  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >=  0)  {  long  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >=    0)    {    long  available  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
237	[BUG]  [BUGGY]  long  available  =  input.read();  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  available  =  input.read();	  while    (available    <    numToSkip)    {    long    available    =    input.read();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
238	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  available  =  input.read(buffer,  numToSkip);  [CE]  cannot  find  symbol  buffer  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip)  {  available  =  input.read(buffer,  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  numToSkip)  {  available  =  input.read(buffer,  numToSkip);	  while    (available    <    numToSkip)    {    long    available    =    input.read();    	non-compiled	[CE]  cannot  find  symbol  buffer	86	None	replace
239	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  available  =  input.read();	  while    (available    <    numToSkip)    {    long    available    =    input.read();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
240	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  available  =  input.read(buffersize,  numToSkip);  [CE]  cannot  find  symbol  buffersize  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip)  {  available  =  input.read(buffersize,  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  numToSkip)  {  available  =  input.read(buffersize,  numToSkip);	  while    (available    <    numToSkip)    {    long    available    =    input.read();    	non-compiled	[CE]  cannot  find  symbol  buffersize	86	None	replace
241	[BUG]  [BUGGY]  while(available  <  0)  {  InputStream  input  =  getInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  0)  {  InputStream  input  =  getInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  0)  {  InputStream  input  =  getInput();	  while    (available    >    0)    {    InputStream    input    =    getInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	53	None	replace
242	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip);  while(available  >  numToSkip)  {  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  skipped  =  input.skip(numToSkip);  while(available  >  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  skipped  =  input.skip(numToSkip);  while(available  >  numToSkip)  {	  while(numToSkip    >    1)    {    long    skipped    =    input.skip(numToSkip);    while(numToSkip    >    1)    {    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
243	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip);  while(available  >  0)  {  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  skipped  =  input.skip(numToSkip);  while(available  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  skipped  =  input.skip(numToSkip);  while(available  >  0)  {	  while(numToSkip    >    1)    {    long    skipped    =    input.skip(numToSkip);    while(numToSkip    >    1)    {    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
244	[BUG]  [BUGGY]  int  n  =  input.read(available,  numToSkip);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  n  =  input.read(available,  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  n  =  input.read(available,  numToSkip);	  int    n    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
245	[BUG]  [BUGGY]  int  n  =  input.read(available,  0);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  n  =  input.read(available,  0);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  n  =  input.read(available,  0);	  int    n    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
246	[BUG]  [BUGGY]  int  n  =  input.read(available  *  numToSkip);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  n  =  input.read(available  *  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  n  =  input.read(available  *  numToSkip);	  int    n    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
247	[BUG]  [BUGGY]  long  n  =  input.read(available);  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  n  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  n  =  input.read(available);	  int    n    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
248	[BUG]  [BUGGY]  int  n  =  input.readFully(available);  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  n  =  input.readFully(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  n  =  input.readFully(available);	  int    n    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
249	[BUG]  [BUGGY]  while(numToSkip  <  available)  {  int  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  available)  {  int  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  available)  {  int  numToSkip  =  input.length();	  while    (available    <    numToSkip)    {    int    numToSkip    =    input.length();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	11	None	replace
250	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  int  numToSkip  =  input.length()  +  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip)  {  int  numToSkip  =  input.length()  +  1;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  numToSkip)  {  int  numToSkip  =  input.length()  +  1;	  while    (available    <    numToSkip)    {    int    numToSkip    =    input.length();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	11	None	replace
251	[BUG]  [BUGGY]  while  (available  <  0)  {  int  available  =  input.read();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  int  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  0)  {  int  available  =  input.read();	  while    (available    >    0)    {    int    available    =    input.read();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	54	None	replace
252	[BUG]  [BUGGY]  int  available  =  input.read();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  available  =  input.read();	  while    (available    >    0)    {    int    available    =    input.read();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
253	[BUG]  [BUGGY]  while  (available  >  0)  {  available  =  input.readFully(numToSkip);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >  0)  {  available  =  input.readFully(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  >  0)  {  available  =  input.readFully(numToSkip);	  while    (available    >    0)    {    int    available    =    input.read();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
254	[BUG]  [BUGGY]  long  numToSkip  =  input.getSize();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  numToSkip  =  input.getSize();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  numToSkip  =  input.getSize();	  while    (available    >    0)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
255	[BUG]  [BUGGY]  while  (available  <  0)  {  int  numToSkip  =  input.getSize();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  int  numToSkip  =  input.getSize();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  0)  {  int  numToSkip  =  input.getSize();	  while    (available    >    0)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	100	None	replace
256	[BUG]  [BUGGY]  int  numToSkip  =  input.getSize();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.getSize();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.getSize();	  while    (available    >    0)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
257	[BUG]  [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.getSize();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.getSize();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  0)  {  int  numToSkip  =  input.getSize();	  while    (available    >    0)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	100	None	replace
258	[BUG]  [BUGGY]  Integer  numToSkip  =  input.getSize();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  Integer  numToSkip  =  input.getSize();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	Integer  numToSkip  =  input.getSize();	  while    (available    >    0)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
259	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  available)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  available)  {	  while(available    ==    numToSkip)    {    	compilable	  [FE]  AssertionError  	29	3	replace
260	[BUG]  [BUGGY]  while(available  <  available)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  available)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  available)  {	  while(available    ==    numToSkip)    {    	compilable	  [FE]  AssertionError  	29	3	replace
261	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  int  available  =  input.read();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  int  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  numToSkip)  {  int  available  =  input.read();	  while(available    >    numToSkip)    {    int    available    =    input.read();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	65	None	replace
262	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  int  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  int  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  int  available  =  input.read();	  while(available    >    numToSkip)    {    int    available    =    input.read();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
263	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  available  =  input.readFully(numToSkip);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip)  {  available  =  input.readFully(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  numToSkip)  {  available  =  input.readFully(numToSkip);	  while    (available    <    numToSkip)    {    int    available    =    input.read();    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
264	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(numToSkip  >=  0)  {	  while(numToSkip    >=    1)    {    	compilable	  [FE]  AssertionError  	71	2	replace
265	[BUG]  [BUGGY]  while(numToSkip  >=  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >=  0)  {	  while(numToSkip    >=    1)    {    	compilable	  [FE]  AssertionError  	71	2	replace
266	[BUG]  [BUGGY]  while  (available  <  0)  {  long  available  =  input.read();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  long  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  0)  {  long  available  =  input.read();	  while    (available    >    0)    {    long    available    =    input.read();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	90	None	replace
267	[BUG]  [BUGGY]  while  (available  <  =  0)  {  long  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  =  0)  {  long  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  =  0)  {  long  available  =  input.read();	  while    (available    >    0)    {    long    available    =    input.read();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
268	[BUG]  [BUGGY]  while(numToSkip  <  available)  {  int  numToSkip  =  input.getSize();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  available)  {  int  numToSkip  =  input.getSize();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  available)  {  int  numToSkip  =  input.getSize();	  while    (available    <    numToSkip)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	115	None	replace
269	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  int  numToSkip  =  input.getLength();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip)  {  int  numToSkip  =  input.getLength();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  numToSkip)  {  int  numToSkip  =  input.getLength();	  while    (available    <    numToSkip)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	115	None	replace
270	[BUG]  [BUGGY]  while  (available  <  0)  {  long  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  long  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  0)  {  long  numToSkip  =  input.size();	  while    (numToSkip    <    0)    {    long    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	108	None	replace
271	[BUG]  [BUGGY]  while(numToSkip  <  available)  {  long  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  available)  {  long  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  available)  {  long  numToSkip  =  input.size();	  while    (numToSkip    <    0)    {    long    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	108	None	replace
272	[BUG]  [BUGGY]  while(numToSkip  <  0)  {  available  =  input.size();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  0)  {  available  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  0)  {  available  =  input.size();	  while    (numToSkip    <    0)    {    long    numToSkip    =    input.size();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
273	[BUG]  [BUGGY]  int  numToSkip  =  input.getNumberOfLinks()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.getNumberOfLinks()  +  1;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.getNumberOfLinks()  +  1;	  int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
274	[BUG]  [BUGGY]  int  numToSkip  =  input.getNumberOfLinks(available);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.getNumberOfLinks(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.getNumberOfLinks(available);	  int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
275	[BUG]  [BUGGY]  int  numToSkip  =  input.readLine();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.readLine();	  int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
276	[BUG]  [BUGGY]  int  numToSkip  =  input.getUpperOfLinks();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.getUpperOfLinks();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.getUpperOfLinks();	  int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
277	[BUG]  [BUGGY]  Integer  numToSkip  =  input.getNumberOfLinks();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  Integer  numToSkip  =  input.getNumberOfLinks();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	Integer  numToSkip  =  input.getNumberOfLinks();	  int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
278	[BUG]  [BUGGY]  while(available  <  =  numToSkip  ||  available  >  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip  ||  available  >  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip  ||  available  >  numToSkip)  {	  while(available    <    =    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
279	[BUG]  [BUGGY]  while(numToSkip  <  =  available)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  =  available)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  =  available)  {	  while(available    <    =    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
280	[BUG]  [BUGGY]  while(available  <  =  numToSkip  ||  available  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip  ||  available  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip  ||  available  >  0)  {	  while(available    <    =    numToSkip)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
281	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  &&  available  >  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while  (available  <  numToSkip  &&  available  >  numToSkip)  {	  while    (available    <    numToSkip    ||    available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	41	3	replace
282	[BUG]  [BUGGY]  while  (available  <  numToSkip  &&  available  >  numToSkip)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  &&  available  >  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  numToSkip  &&  available  >  numToSkip)  {	  while    (available    <    numToSkip    ||    available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	41	3	replace
283	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  long  available  =  numToSkip  >  0)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  long  available  =  numToSkip  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  long  available  =  numToSkip  >  0)  {	  while(available    >    numToSkip)    {    long    available    >    numToSkip)    {    	non-compiled	[CE]  ';'  expected	59	None	replace
284	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  long  available  =  numToSkip  +  1;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  long  available  =  numToSkip  +  1;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  long  available  =  numToSkip  +  1;	  while(available    >    numToSkip)    {    long    available    >    numToSkip)    {    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	59	None	replace
285	[BUG]  [BUGGY]  long  available  =  numToSkip  >  0)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  available  =  numToSkip  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  available  =  numToSkip  >  0)  {	  while(available    >    numToSkip)    {    long    available    >    numToSkip)    {    	non-compiled	[CE]  ';'  expected	59	None	replace
286	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  long  available  =  numToSkip;  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  long  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  numToSkip)  {  long  available  =  numToSkip;	  while(available    >    numToSkip)    {    long    available    >    numToSkip)    {    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	59	None	replace
287	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  long  available  =  numToSkip  >  0)  {  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  long  available  =  numToSkip  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  numToSkip)  {  long  available  =  numToSkip  >  0)  {	  while(available    >    numToSkip)    {    long    available    >    numToSkip)    {    	non-compiled	[CE]  ';'  expected	59	None	replace
288	[BUG]  [BUGGY]  InputStream  input  =  this.input.getInputStream();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  this.input.getInputStream();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  this.input.getInputStream();	  InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
289	[BUG]  [BUGGY]  InputStream  input  =  input.getInputStream(available);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  input.getInputStream(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.getInputStream(available);	  InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
290	[BUG]  [BUGGY]  InputStream  input  =  input.getOutputStream();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  input.getOutputStream();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.getOutputStream();	  InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
291	[BUG]  [BUGGY]  InputStream  input  =  this.inputStream.getInputStream();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  this.inputStream.getInputStream();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  this.inputStream.getInputStream();	  InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
292	[BUG]  [BUGGY]  InputStream  input  =  input.openStream();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  input.openStream();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.openStream();	  InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
293	[BUG]  [BUGGY]  while  (available  <  0)  {  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  InputStream  input  =  input.readInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  0)  {  InputStream  input  =  input.readInput();	  while    (available    >    0)    {    InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	91	None	replace
294	[BUG]  [BUGGY]  while  (available  >=  0)  {  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >=  0)  {  InputStream  input  =  input.readInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  >=  0)  {  InputStream  input  =  input.readInput();	  while    (available    >    0)    {    InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	91	None	replace
295	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  long  -  numToSkip)  {  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  long  -  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  long  -  numToSkip)  {	  while(available    >    numToSkip)    {    long    -    numToSkip)    {    	non-compiled	[CE]  not  a  statement	106	None	replace
296	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  long  -  numToSkip)  {  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  long  -  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  numToSkip)  {  long  -  numToSkip)  {	  while(available    >    numToSkip)    {    long    -    numToSkip)    {    	non-compiled	[CE]  not  a  statement	106	None	replace
297	[BUG]  [BUGGY]  long  -  numToSkip)  {  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  -  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  -  numToSkip)  {	  while(available    >    numToSkip)    {    long    -    numToSkip)    {    	non-compiled	[CE]  not  a  statement	106	None	replace
298	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  available  -  numToSkip;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  available  -  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  available  -  numToSkip;	  while(available    >    numToSkip)    {    long    -    numToSkip)    {    	non-compiled	[CE]  not  a  statement	106	None	replace
299	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  long  -=  numToSkip)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  long  -=  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  long  -=  numToSkip)  {	  while(available    >    numToSkip)    {    long    -    numToSkip)    {    	non-compiled	[CE]  ';'  expected	106	None	replace
300	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInt();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  this.input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  this.input.readInt();	  InputStream    input    =    input.readInt();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
301	[BUG]  [BUGGY]  InputStream  input  =  input.readUTF();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  input.readUTF();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.readUTF();	  InputStream    input    =    input.readInt();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
302	[BUG]  [BUGGY]  InputStream  input  =  input.readIO();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  input.readIO();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.readIO();	  InputStream    input    =    input.readInt();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
303	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  while(available  >=  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  while(available  >=  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >=    numToSkip)    {    while(available  >=  numToSkip)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
304	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  while(available!=  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  while(available!=  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >=    numToSkip)    {    while(available!=  numToSkip)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
305	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  while(available  >>  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  while(available  >>  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >=    numToSkip)    {    while(available  >>  numToSkip)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
306	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  long  available  =  input.availableToSkip(numToSkip);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  long  available  =  input.availableToSkip(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >=    numToSkip)    {    long  available  =  input.availableToSkip(numToSkip);	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
307	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  while(available  ==  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  while(available  ==  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >=    numToSkip)    {    while(available  ==  numToSkip)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
308	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  long  available  =  input.available();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  long  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >=    numToSkip)    {    long  available  =  input.available();	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
309	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  long  available  =  input.availableToSkip;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  long  available  =  input.availableToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >=    numToSkip)    {    long  available  =  input.availableToSkip;	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
310	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  &&  available  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while  (available  <  numToSkip  &&  available  >  0)  {	  while    (available    <    numToSkip    ||    available    >    0)    {    	compilable	  [FE]  AssertionError  	39	3	replace
311	[BUG]  [BUGGY]  while  (available  <  numToSkip  &&  available  >  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  &&  available  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  numToSkip  &&  available  >  0)  {	  while    (available    <    numToSkip    ||    available    >    0)    {    	compilable	  [FE]  AssertionError  	39	3	replace
312	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while  (available  <  numToSkip  ||  available  >  1)  {	  while    (available    <    numToSkip    ||    available    >    0)    {    	compilable	  [FE]  AssertionError  	39	2	replace
313	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  1)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  numToSkip  ||  available  >  1)  {	  while    (available    <    numToSkip    ||    available    >    0)    {    	compilable	  [FE]  AssertionError  	39	2	replace
314	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  available  ||  available  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while  (available  <  available  ||  available  >  0)  {	  while    (available    <    numToSkip    ||    available    >    0)    {    	compilable	  [FE]  AssertionError  	39	2	replace
315	[BUG]  [BUGGY]  while  (available  <  available  ||  available  >  0)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  available  ||  available  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  available  ||  available  >  0)  {	  while    (available    <    numToSkip    ||    available    >    0)    {    	compilable	  [FE]  AssertionError  	39	2	replace
316	[BUG]  [BUGGY]  while(available  >  1)  {  long  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  long  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  long  numToSkip  =  input.length();	  while(numToSkip    >    1)    {    long    numToSkip    =    input.length();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	37	None	replace
317	[BUG]  [BUGGY]  while(numToSkip  >  0)  {  long  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  0)  {  long  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  0)  {  long  numToSkip  =  input.length();	  while(numToSkip    >    1)    {    long    numToSkip    =    input.length();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	37	None	replace
318	[BUG]  [BUGGY]  while(available  >  1)  {  numToSkip  =  input.length();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  numToSkip  =  input.length();	  while(numToSkip    >    1)    {    long    numToSkip    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
319	[BUG]  [BUGGY]  while(numToSkip  >=  1)  {  long  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  1)  {  long  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >=  1)  {  long  numToSkip  =  input.length();	  while(numToSkip    >    1)    {    long    numToSkip    =    input.length();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	37	None	replace
320	[BUG]  [BUGGY]  while  (available  <  0)  {  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  int  numToSkip  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  0)  {  int  numToSkip  =  input.readInt();	  while    (available    >    0)    {    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	102	None	replace
321	[BUG]  [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  0)  {  int  numToSkip  =  input.readInt();	  while    (available    >    0)    {    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	102	None	replace
322	[BUG]  [BUGGY]  while  (numToSkip  <  available)  {  while  (numToSkip  <  available)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (numToSkip  <  available)  {  while  (numToSkip  <  available)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    available)    {    while  (numToSkip  <  available)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
323	[BUG]  [BUGGY]  while  (numToSkip  <  available)  {  long  available  =  numToSkip;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (numToSkip  <  available)  {  long  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    available)    {    long  available  =  numToSkip;	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
324	[BUG]  [BUGGY]  while  (numToSkip  <  available)  {  int  numToSkip  =  input.readInt();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (numToSkip  <  available)  {  int  numToSkip  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    available)    {    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
325	[BUG]  [BUGGY]  while  (numToSkip  <  available)  {  long  available  =  numToSkip  +  available;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (numToSkip  <  available)  {  long  available  =  numToSkip  +  available;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    available)    {    long  available  =  numToSkip  +  available;	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
326	[BUG]  [BUGGY]  while  (numToSkip  <  available)  {  InputStream  input  =  getInputStream();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (numToSkip  <  available)  {  InputStream  input  =  getInputStream();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    available)    {    InputStream  input  =  getInputStream();	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
327	[BUG]  [BUGGY]  while  (numToSkip  <  available)  {  long  available  =  input.available();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (numToSkip  <  available)  {  long  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    available)    {    long  available  =  input.available();	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
328	[BUG]  [BUGGY]  while(available  ==  numToSkip)  {  while(available  >=  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip)  {  while(available  >=  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    ==    numToSkip)    {    while(available  >=  numToSkip)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
329	[BUG]  [BUGGY]  while(available  ==  numToSkip)  {  while(available  ==  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip)  {  while(available  ==  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    ==    numToSkip)    {    while(available  ==  numToSkip)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
330	[BUG]  [BUGGY]  while(available  ==  numToSkip)  {  while(available!=  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip)  {  while(available!=  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    ==    numToSkip)    {    while(available!=  numToSkip)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
331	[BUG]  [BUGGY]  while(available  ==  numToSkip)  {  while(available  >>  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip)  {  while(available  >>  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    ==    numToSkip)    {    while(available  >>  numToSkip)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
332	[BUG]  [BUGGY]  while(available  ==  numToSkip)  {  long  available  =  input.availableToSkip(numToSkip);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip)  {  long  available  =  input.availableToSkip(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    ==    numToSkip)    {    long  available  =  input.availableToSkip(numToSkip);	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
333	[BUG]  [BUGGY]  while(available  ==  numToSkip)  {  long  available  =  input.available();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip)  {  long  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    ==    numToSkip)    {    long  available  =  input.available();	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
334	[BUG]  [BUGGY]  while(available  ==  numToSkip)  {  long  available  =  numToSkip;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip)  {  long  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    ==    numToSkip)    {    long  available  =  numToSkip;	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
335	[BUG]  [BUGGY]  while(available  ==  numToSkip)  {  long  available  =  input.availableToSkip;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip)  {  long  available  =  input.availableToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    ==    numToSkip)    {    long  available  =  input.availableToSkip;	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
336	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  long  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  long  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  numToSkip)  {  long  numToSkip  =  input.length();	  while(available    >    numToSkip)    {    long    numToSkip    =    input.length();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	82	None	replace
337	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  numToSkip  =  input.length();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  available)  {  numToSkip  =  input.length();	  while(available    >    numToSkip)    {    long    numToSkip    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
338	[BUG]  [BUGGY]  while(available  >  0)  {  numToSkip  =  input.length();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  numToSkip  =  input.length();	  while(available    >    numToSkip)    {    long    numToSkip    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
339	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  available  =  input.length();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  available  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  available  =  input.length();	  while(available    >    numToSkip)    {    long    numToSkip    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
340	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip  -  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  numToSkip  -  1)  {	  while(available    >    numToSkip    -    1)    {    	compilable	  [FE]  AssertionError  	23	3	replace
341	[BUG]  [BUGGY]  while(available  <  numToSkip  -  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip  -  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip  -  1)  {	  while(available    >    numToSkip    -    1)    {    	compilable	  [FE]  AssertionError  	23	3	replace
342	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip  -  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >=  numToSkip  -  1)  {	  while(available    >    numToSkip    -    1)    {    	compilable	  [FE]  AssertionError  	23	2	replace
343	[BUG]  [BUGGY]  while(available  >=  numToSkip  -  1)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip  -  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  numToSkip  -  1)  {	  while(available    >    numToSkip    -    1)    {    	compilable	  [FE]  AssertionError  	23	2	replace
344	[BUG]  [BUGGY]  while(available  <  =  numToSkip  -  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip  -  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip  -  1)  {	  while(available    >    numToSkip    -    1)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
345	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  *  numToSkip  -  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  numToSkip  *  numToSkip  -  1)  {	  while(available    >    numToSkip    -    1)    {    	compilable	  [FE]  AssertionError  	23	3	replace
346	[BUG]  [BUGGY]  while(available  >  numToSkip  *  numToSkip  -  1)  {  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  *  numToSkip  -  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip  *  numToSkip  -  1)  {	  while(available    >    numToSkip    -    1)    {    	compilable	  [FE]  AssertionError  	23	3	replace
347	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  skipped  =  input.skip(available  +  numToSkip);  [CE]  cannot  find  symbol  skipped  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  skipped  =  input.skip(available  +  numToSkip);	  while    (available    <    numToSkip)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  skipped	10	None	replace
348	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  skipped  =  input.skip(available);  [CE]  cannot  find  symbol  skipped  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  skipped  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  skipped  =  input.skip(available);	  while    (available    <    numToSkip)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  skipped	10	None	replace
349	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  skipped  =  input.skip(available  *  numToSkip);  [CE]  cannot  find  symbol  skipped  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  skipped  =  input.skip(available  *  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  skipped  =  input.skip(available  *  numToSkip);	  while    (available    <    numToSkip)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  skipped	10	None	replace
350	[BUG]  [BUGGY]  while(available  >  numToSkip  -  1)  {  while(available  >  numToSkip  -  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  -  1)  {  while(available  >  numToSkip  -  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip    -    1)    {    while(available  >  numToSkip  -  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
351	[BUG]  [BUGGY]  while(available  >  numToSkip  -  1)  {  long  available  =  numToSkip  -  1;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  -  1)  {  long  available  =  numToSkip  -  1;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip    -    1)    {    long  available  =  numToSkip  -  1;	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
352	[BUG]  [BUGGY]  while(available  >  numToSkip  -  1)  {  long  available  >  numToSkip  -  1)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  -  1)  {  long  available  >  numToSkip  -  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip    -    1)    {    long  available  >  numToSkip  -  1)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
353	[BUG]  [BUGGY]  while(available  >  numToSkip  -  1)  {  long  available  =  numToSkip  -  1)  {  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  -  1)  {  long  available  =  numToSkip  -  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip    -    1)    {    long  available  =  numToSkip  -  1)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
354	[BUG]  [BUGGY]  while(available  >  numToSkip  -  1)  {  int  available  =  input.read(numToSkip);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  -  1)  {  int  available  =  input.read(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip    -    1)    {    int  available  =  input.read(numToSkip);	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
355	[BUG]  [BUGGY]  while(available  >  numToSkip  -  1)  {  long  available  =  input.available();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  -  1)  {  long  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip    -    1)    {    long  available  =  input.available();	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
356	[BUG]  [BUGGY]  while(available  >  numToSkip  -  1)  {  int  available  =  input.readInt();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  -  1)  {  int  available  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip    -    1)    {    int  available  =  input.readInt();	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
357	[BUG]  [BUGGY]  while(available  >  numToSkip  -  1)  {  int  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  -  1)  {  int  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip    -    1)    {    int  available  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
358	[BUG]  [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  int  numToSkip  =  input.length();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.length();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	32	None	replace
359	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInput(available);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  this.input.readInput(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  this.input.readInput(available);	  InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
360	[BUG]  [BUGGY]  InputStream  input  =  this.input.readFully(available);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  this.input.readFully(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  this.input.readFully(available);	  InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
361	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInput(available,  numToSkip);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  this.input.readInput(available,  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  this.input.readInput(available,  numToSkip);	  InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
362	[BUG]  [BUGGY]  InputStream  input  =  this.input.readFully();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  this.input.readFully();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  this.input.readFully();	  InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
363	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInput(),  available);  [CE]  ';'  expected  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  this.input.readInput(),  available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  this.input.readInput(),  available);	  InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  ';'  expected	18	None	replace
364	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInputFully(available);  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  this.input.readInputFully(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  this.input.readInputFully(available);	  InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
365	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  +=  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  numToSkip)  {  available  +=  input.read();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.read();    	compilable	  [FE]  AssertionError  	113	3	replace
366	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  +=  input.read();  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  +=  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  +=  input.read();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.read();    	compilable	  [FE]  AssertionError  	113	3	replace
367	[BUG]  [BUGGY]  Integer  numToSkip  =  input.length();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  Integer  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	Integer  numToSkip  =  input.length();	  while    (numToSkip    <    0)    {    int    numToSkip    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
368	[BUG]  [BUGGY]  while  (available  <  0)  {  int  available  =  input.read(numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  int  available  =  input.read(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  0)  {  int  available  =  input.read(numToSkip);	  while    (available    >    0)    {    int    available    =    input.read(numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	57	None	replace
369	[BUG]  [BUGGY]  while  (available  >  0)  {  available  =  input.read(buffer,  numToSkip);  [CE]  cannot  find  symbol  buffer  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >  0)  {  available  =  input.read(buffer,  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  >  0)  {  available  =  input.read(buffer,  numToSkip);	  while    (available    >    0)    {    int    available    =    input.read(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffer	57	None	replace
370	[BUG]  [BUGGY]  while  (available  >=  0)  {  int  available  =  input.read(numToSkip);  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >=  0)  {  int  available  =  input.read(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  >=  0)  {  int  available  =  input.read(numToSkip);	  while    (available    >    0)    {    int    available    =    input.read(numToSkip);    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	57	None	replace
371	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  numToSkip)  {  available  =  numToSkip;	  while(available    >    numToSkip)    {    long    available    =    numToSkip;    	compilable	  [FE]  AssertionError  	60	3	replace
372	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  =  numToSkip;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  =  numToSkip;	  while(available    >    numToSkip)    {    long    available    =    numToSkip;    	compilable	  [FE]  AssertionError  	60	3	replace
373	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  0)  {  available  =  numToSkip;	  while(available    >    numToSkip)    {    long    available    =    numToSkip;    	compilable	  [FE]  AssertionError  	60	3	replace
374	[BUG]  [BUGGY]  while(available  >  0)  {  available  =  numToSkip;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  available  =  numToSkip;	  while(available    >    numToSkip)    {    long    available    =    numToSkip;    	compilable	  [FE]  AssertionError  	60	3	replace
375	[BUG]  [BUGGY]  long  available  =  input.availableToString(numToSkip);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  available  =  input.availableToString(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  available  =  input.availableToString(numToSkip);	  while(available    >    numToSkip)    {    long    available    =    numToSkip;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
376	[BUG]  [BUGGY]  while  (available  <  0)  {  while  (available  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  while  (available  <  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    0)    {    while  (available  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
377	[BUG]  [BUGGY]  while  (available  <  0)  {  InputStream  input  =  this.input.getInputStream();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  InputStream  input  =  this.input.getInputStream();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    0)    {    InputStream  input  =  this.input.getInputStream();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
378	[BUG]  [BUGGY]  while(available  >  1)  {  available  =  input.readLine();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  available  =  input.readLine();	  while(numToSkip    >    1)    {    long    available    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
379	[BUG]  [BUGGY]  while(available  >  1)  {  long  available  =  input.readLine();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  long  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  long  available  =  input.readLine();	  while(numToSkip    >    1)    {    long    available    =    input.readLine();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	80	None	replace
380	[BUG]  [BUGGY]  while(numToSkip  >  0)  {  available  =  input.readLine();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  0)  {  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  0)  {  available  =  input.readLine();	  while(numToSkip    >    1)    {    long    available    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
381	[BUG]  [BUGGY]  while(available  >  1)  {  numToSkip  =  input.readLine();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  numToSkip  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  numToSkip  =  input.readLine();	  while(numToSkip    >    1)    {    long    available    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
382	[BUG]  [BUGGY]  while(numToSkip  <  1)  {  long  available  =  input.readLine();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  1)  {  long  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  1)  {  long  available  =  input.readLine();	  while(numToSkip    >    1)    {    long    available    =    input.readLine();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	80	None	replace
383	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  available)  {  int  numToSkip  =  input.size();	  while(available    >    numToSkip)    {    int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	105	None	replace
384	[BUG]  [BUGGY]  long  n  =  input.read();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  n  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  n  =  input.read();	  int    n    =    input.read();    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
385	[BUG]  [BUGGY]  int  n  =  input.readInt();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  n  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  n  =  input.readInt();	  int    n    =    input.read();    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
386	[BUG]  [BUGGY]  int  n  =  input.readLine();  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  n  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  n  =  input.readLine();	  int    n    =    input.read();    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
387	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  long  skipped  =  input.skip(available);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip)  {  long  skipped  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  numToSkip)  {  long  skipped  =  input.skip(available);	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(available);    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	107	None	replace
388	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  available  =  input.available();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  available  =  input.available();	  while    (available    <    numToSkip)    {    long    available    =    input.available();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
389	[BUG]  [BUGGY]  long  available  =  input.readInt();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  available  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  available  =  input.readInt();	  while(available    >    numToSkip)    {    int    available    =    input.readInt();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
390	[BUG]  [BUGGY]  int  available  =  input.readInt();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  available  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  available  =  input.readInt();	  while(available    >    numToSkip)    {    int    available    =    input.readInt();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
391	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  int  available  =  input.readInt();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  int  available  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  int  available  =  input.readInt();	  while(available    >    numToSkip)    {    int    available    =    input.readInt();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	63	None	replace
392	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  int  available  =  input.readInt();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  int  available  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  numToSkip)  {  int  available  =  input.readInt();	  while(available    >    numToSkip)    {    int    available    =    input.readInt();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	63	None	replace
393	[BUG]  [BUGGY]  while(available  >  0)  {  available  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  available  =  input.readInt();	  while(available    >    numToSkip)    {    int    available    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
394	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  available  =  input.readUTF();  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  available  =  input.readUTF();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  available  =  input.readUTF();	  while(available    >    numToSkip)    {    int    available    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
395	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  available  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  available  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  available  =  input.readInt();	  while(available    >    numToSkip)    {    int    available    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
396	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  if  (skipped  >=  0)  {  break;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  skipped  =  input.skip(available);  if  (skipped  >=  0)  {  break;  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  skipped  =  input.skip(available);  if  (skipped  >=  0)  {  break;  }	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    if    (skipped    >=    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
397	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  if  (skipped  <  0)  {  break;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  skipped  =  input.skip(available);  if  (skipped  <  0)  {  break;  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  skipped  =  input.skip(available);  if  (skipped  <  0)  {  break;  }	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    if    (skipped    >=    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
398	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip);  if  (skipped  >  0)  {  break;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  skipped  =  input.skip(numToSkip);  if  (skipped  >  0)  {  break;  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  skipped  =  input.skip(numToSkip);  if  (skipped  >  0)  {  break;  }	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    if    (skipped    >=    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
399	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip);  if  (skipped  >=  0)  {  break;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  skipped  =  input.skip(numToSkip);  if  (skipped  >=  0)  {  break;  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  skipped  =  input.skip(numToSkip);  if  (skipped  >=  0)  {  break;  }	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    if    (skipped    >=    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
400	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  if  (skipped  >  0)  {  break;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  skipped  =  input.skip(available);  if  (skipped  >  0)  {  break;  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  skipped  =  input.skip(available);  if  (skipped  >  0)  {  break;  }	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    if    (skipped    >=    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
401	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip);  if  (skipped  <  0)  {  break;  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  skipped  =  input.skip(numToSkip);  if  (skipped  <  0)  {  break;  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  skipped  =  input.skip(numToSkip);  if  (skipped  <  0)  {  break;  }	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    if    (skipped    >=    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
402	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  if  (skipped  ==  0)  {  break;  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  skipped  =  input.skip(available);  if  (skipped  ==  0)  {  break;  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  skipped  =  input.skip(available);  if  (skipped  ==  0)  {  break;  }	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    if    (skipped    >=    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
403	[BUG]  [BUGGY]  int  numToSkip  =  input.size()  -  1;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.size()  -  1;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.size()  -  1;	  int    numToSkip    =    input.size();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
404	[BUG]  [BUGGY]  int  numToSkip  =  input.size()  -  available;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.size()  -  available;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.size()  -  available;	  int    numToSkip    =    input.size();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
405	[BUG]  [BUGGY]  int  numToSkip  =  input.size()  +  1;  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.size()  +  1;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.size()  +  1;	  int    numToSkip    =    input.size();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
406	[BUG]  [BUGGY]  while  (available  <  0)  {  available  =  input.readLine();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  0)  {  available  =  input.readLine();	  while    (numToSkip    <    0)    {    long    available    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
407	[BUG]  [BUGGY]  while  (available  <  0)  {  long  available  =  input.readLine();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  long  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  0)  {  long  available  =  input.readLine();	  while    (numToSkip    <    0)    {    long    available    =    input.readLine();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	75	None	replace
408	[BUG]  [BUGGY]  while  (available  <  =  0)  {  long  available  =  input.readLine();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  =  0)  {  long  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  =  0)  {  long  available  =  input.readLine();	  while    (numToSkip    <    0)    {    long    available    =    input.readLine();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
409	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0  ||  available  >  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while  (available  <  0  ||  available  >  numToSkip)  {	  while    (available    <    0)    {    	compilable	  [FE]  AssertionError  	2	3	replace
410	[BUG]  [BUGGY]  while  (available  <  0  ||  available  >  numToSkip)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0  ||  available  >  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  0  ||  available  >  numToSkip)  {	  while    (available    <    0)    {    	compilable	  [FE]  AssertionError  	2	3	replace
411	[BUG]  [BUGGY]  while  (available  >  0)  {  available  =  input.readLine();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >  0)  {  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  >  0)  {  available  =  input.readLine();	  while    (available    >    0)    {    long    available    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
412	[BUG]  [BUGGY]  while  (available  >=  0)  {  long  available  =  input.readLine();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >=  0)  {  long  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  >=  0)  {  long  available  =  input.readLine();	  while    (available    >    0)    {    long    available    =    input.readLine();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	89	None	replace
413	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    if    (skipped    <    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
414	[BUG]  [BUGGY]  while  (available  >=  0)  {  int  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >=  0)  {  int  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  >=  0)  {  int  numToSkip  =  input.size();	  while    (available    >    0)    {    int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	98	None	replace
415	[BUG]  [BUGGY]  int  numToSkip  =  input.readFully();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.readFully();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.readFully();	  int    numToSkip    =    input.read();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
416	[BUG]  [BUGGY]  while(available  <  =  0)  {  InputStream  input  =  this.input.getInputStream();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  0)  {  InputStream  input  =  this.input.getInputStream();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  0)  {  InputStream  input  =  this.input.getInputStream();	  while    (available    >    0)    {    InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
417	[BUG]  [BUGGY]  While(available  >  0)  {  InputStream  input  =  this.input.getInputStream();  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  While(available  >  0)  {  InputStream  input  =  this.input.getInputStream();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	While(available  >  0)  {  InputStream  input  =  this.input.getInputStream();	  while    (available    >    0)    {    InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  ';'  expected	56	None	replace
418	[BUG]  [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.readInt();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  int  numToSkip  =  input.readInt();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	35	None	replace
419	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  =  input.read(available);  [CE]  no  suitable  method  found  for  read(long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  =  input.read(available);	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.read(available);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	87	None	replace
420	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  numToSkip  =  input.read(available);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  numToSkip  =  input.read(available);	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
421	[BUG]  [BUGGY]  while  (available  <  available)  {  numToSkip  =  input.read(available);  [CE]  no  suitable  method  found  for  read(long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  available)  {  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  available)  {  numToSkip  =  input.read(available);	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.read(available);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	87	None	replace
422	[BUG]  [BUGGY]  long  numToSkip  >  1)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  numToSkip  >  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  numToSkip  >  1)  {	  while(numToSkip    >    1)    {    long    numToSkip    >    1)    {    	non-compiled	[CE]  ';'  expected	34	None	replace
423	[BUG]  [BUGGY]  long  numToSkip  =  input.skip(numToSkip);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  numToSkip  =  input.skip(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  numToSkip  =  input.skip(numToSkip);	  while(numToSkip    >    1)    {    long    numToSkip    >    1)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
424	[BUG]  [BUGGY]  while(numToSkip  <  1)  {  long  numToSkip  >  1)  {  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  1)  {  long  numToSkip  >  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  1)  {  long  numToSkip  >  1)  {	  while(numToSkip    >    1)    {    long    numToSkip    >    1)    {    	non-compiled	[CE]  ';'  expected	34	None	replace
425	[BUG]  [BUGGY]  while(numToSkip  >=  1)  {  long  numToSkip  >  1)  {  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  1)  {  long  numToSkip  >  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >=  1)  {  long  numToSkip  >  1)  {	  while(numToSkip    >    1)    {    long    numToSkip    >    1)    {    	non-compiled	[CE]  ';'  expected	34	None	replace
426	[BUG]  [BUGGY]  InputStream  input  =  this.inputStream.readInput();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  this.inputStream.readInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  this.inputStream.readInput();	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
427	[BUG]  [BUGGY]  InputStream  input  =  IOUtils.readFully(available);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  IOUtils.readFully(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  IOUtils.readFully(available);	  InputStream    input    =    input.readInput();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
428	[BUG]  [BUGGY]  while  (numToSkip  <  available  &&  available  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (numToSkip  <  available  &&  available  <  =  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (numToSkip  <  available  &&  available  <  =  0)  {	  while    (numToSkip    <    available)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
429	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (numToSkip  <  available  -  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while  (numToSkip  <  available  -  1)  {	  while    (numToSkip    <    available)    {    	compilable	  [FE]  AssertionError  	7	3	replace
430	[BUG]  [BUGGY]  while  (numToSkip  <  available  -  1)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (numToSkip  <  available  -  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (numToSkip  <  available  -  1)  {	  while    (numToSkip    <    available)    {    	compilable	  [FE]  AssertionError  	7	3	replace
431	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  int  numToSkip  =  input.read(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip)  {  int  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  numToSkip)  {  int  numToSkip  =  input.read(available);	  while    (numToSkip    <    0)    {    int    numToSkip    =    input.read(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	74	None	replace
432	[BUG]  [BUGGY]  Integer  numToSkip  =  input.read(available);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  Integer  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	Integer  numToSkip  =  input.read(available);	  while    (numToSkip    <    0)    {    int    numToSkip    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
433	[BUG]  [BUGGY]  while(available  >  1)  {  long  numToSkip  >  1)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  long  numToSkip  >  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  long  numToSkip  >  1)  {	  while(numToSkip    >    1)    {    long    numToSkip    >    1)    {    	non-compiled	[CE]  ';'  expected	34	None	replace
434	[BUG]  [BUGGY]  while(available  >  1)  {  long  numToSkip  =  input.getNumberOfLinks();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  long  numToSkip  =  input.getNumberOfLinks();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  long  numToSkip  =  input.getNumberOfLinks();	  while(numToSkip    >    1)    {    long    numToSkip    >    1)    {    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	34	None	replace
435	[BUG]  [BUGGY]  long  numToSkip  =  input.get(numToSkip);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  numToSkip  =  input.get(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  numToSkip  =  input.get(numToSkip);	  while(numToSkip    >    1)    {    long    numToSkip    >    1)    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
436	[BUG]  [BUGGY]  int  n  =  input.readFully();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  n  =  input.readFully();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  n  =  input.readFully();	  int    n    =    input.read();    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
437	[BUG]  [BUGGY]  int  n  =  input.read(buffersize);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  n  =  input.read(buffersize);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  n  =  input.read(buffersize);	  int    n    =    input.read();    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
438	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  short  skipped  =  input.skip(available);  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  short  skipped  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  short  skipped  =  input.skip(available);	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	43	None	replace
439	[BUG]  [BUGGY]  Integer  numToSkip  =  input.getLength();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  Integer  numToSkip  =  input.getLength();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	Integer  numToSkip  =  input.getLength();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.getLength();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
440	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1  &&  numToSkip  >  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  1  &&  numToSkip  >  1)  {	  while(numToSkip    >    1)    {    while(numToSkip    >    1)    {    	compilable	  [FE]  AssertionError  	30	2	replace
441	[BUG]  [BUGGY]  while(available  >  1  &&  numToSkip  >  1)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1  &&  numToSkip  >  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1  &&  numToSkip  >  1)  {	  while(numToSkip    >    1)    {    while(numToSkip    >    1)    {    	compilable	  [FE]  AssertionError  	30	2	replace
442	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1  &&  numToSkip  <  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  1  &&  numToSkip  <  1)  {	  while(numToSkip    >    1)    {    while(numToSkip    >    1)    {    	compilable	  [FE]  AssertionError  	30	3	replace
443	[BUG]  [BUGGY]  while(available  >  1  &&  numToSkip  <  1)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1  &&  numToSkip  <  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1  &&  numToSkip  <  1)  {	  while(numToSkip    >    1)    {    while(numToSkip    >    1)    {    	compilable	  [FE]  AssertionError  	30	3	replace
444	[BUG]  [BUGGY]  while(available  >  1)  {  long  skipped  =  input.skip(available);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  long  skipped  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  long  skipped  =  input.skip(available);	  while(numToSkip    >    1)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	31	None	replace
445	[BUG]  [BUGGY]  while(available  >  1)  {  short  skipped  =  input.skip(available);  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  short  skipped  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  short  skipped  =  input.skip(available);	  while(numToSkip    >    1)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  possible  loss  of  precision	31	None	replace
446	[BUG]  [BUGGY]  while(available  >  1)  {  if(numToSkip  >  1)  {  skipped  =  input.skip(available);  }  [CE]  cannot  find  symbol  skipped  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  if(numToSkip  >  1)  {  skipped  =  input.skip(available);  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  if(numToSkip  >  1)  {  skipped  =  input.skip(available);  }	  while(numToSkip    >    1)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  skipped	31	None	replace
447	[BUG]  [BUGGY]  while(available  <  0)  {  available  =  input.read(numToSkip);  [CE]  no  suitable  method  found  for  read(long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  0)  {  available  =  input.read(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  0)  {  available  =  input.read(numToSkip);	  while    (available    >    0)    {    int    available    =    input.read(numToSkip);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	57	None	replace
448	[BUG]  [BUGGY]  while  (available  >  0)  {  available  =  input.read(buffersize,  numToSkip);  [CE]  cannot  find  symbol  buffersize  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >  0)  {  available  =  input.read(buffersize,  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  >  0)  {  available  =  input.read(buffersize,  numToSkip);	  while    (available    >    0)    {    int    available    =    input.read(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffersize	57	None	replace
449	[BUG]  [BUGGY]  while  (available  >  0)  {  available  =  input.read(buffersize);  [CE]  cannot  find  symbol  buffersize  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >  0)  {  available  =  input.read(buffersize);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  >  0)  {  available  =  input.read(buffersize);	  while    (available    >    0)    {    int    available    =    input.read(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  buffersize	57	None	replace
450	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  long  available  =  input.readLine();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  long  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    available)    {    long  available  =  input.readLine();	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
451	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  long  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  long  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    available)    {    long  available  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
452	[BUG]  [BUGGY]  while(available  >  0)  {  available  =  input.read(available);  [CE]  no  suitable  method  found  for  read(long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  available  =  input.read(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.read(available);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	83	None	replace
453	[BUG]  [BUGGY]  while(available  >  0)  {  numToSkip  =  input.read(available);  [CE]  no  suitable  method  found  for  read(long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  numToSkip  =  input.read(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.read(available);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	83	None	replace
454	[BUG]  [BUGGY]  int  numToSkip  =  input.getNumberOfLinks()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.getNumberOfLinks()  -  1;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.getNumberOfLinks()  -  1;	  int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
455	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  int  numToSkip  =  input.getSize();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  int  numToSkip  =  input.getSize();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  int  numToSkip  =  input.getSize();	  while    (available    <    numToSkip)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	115	None	replace
456	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  int  numToSkip  =  input.getSize();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  int  numToSkip  =  input.getSize();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  int  numToSkip  =  input.getSize();	  while    (available    <    numToSkip)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
457	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available!=  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available!=  1)  {	  while(numToSkip    >=    1)    {    	compilable	  [FE]  AssertionError  	71	2	replace
458	[BUG]  [BUGGY]  while(available!=  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available!=  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available!=  1)  {	  while(numToSkip    >=    1)    {    	compilable	  [FE]  AssertionError  	71	2	replace
459	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  long  skipped  =  input.skip(available);  if  (skipped  >  0)  {  break;  }  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  long  skipped  =  input.skip(available);  if  (skipped  >  0)  {  break;  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  long  skipped  =  input.skip(available);  if  (skipped  >  0)  {  break;  }	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    if    (skipped    >=    0)    {    break;    }    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	45	None	replace
460	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  long  skipped  =  input.skip(available);  if  (skipped  >=  0)  {  break;  }  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  long  skipped  =  input.skip(available);  if  (skipped  >=  0)  {  break;  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  long  skipped  =  input.skip(available);  if  (skipped  >=  0)  {  break;  }	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    if    (skipped    >=    0)    {    break;    }    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	45	None	replace
461	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  int  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  int  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  numToSkip)  {  int  numToSkip  =  input.read();	  while(available    >    numToSkip)    {    int    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	64	None	replace
462	[BUG]  [BUGGY]  while(available  >=  0)  {  InputStream  input  =  this.input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  0)  {  InputStream  input  =  this.input.readInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  0)  {  InputStream  input  =  this.input.readInput();	  while    (available    >    0)    {    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	55	None	replace
463	[BUG]  [BUGGY]  while(available  >  1)  {  InputStream  input  =  this.input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  InputStream  input  =  this.input.readInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  InputStream  input  =  this.input.readInput();	  while    (available    >    0)    {    InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	55	None	replace
464	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  available  -  numToSkip)  {  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  available  -  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  available  -  numToSkip)  {	  while(available    >    numToSkip)    {    long    -    numToSkip)    {    	non-compiled	[CE]  not  a  statement	106	None	replace
465	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  long  available  =  input.readLine();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  long  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    numToSkip)    {    long  available  =  input.readLine();	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
466	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  int  numToSkip  =  input.read();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  int  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    numToSkip)    {    int  numToSkip  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
467	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  long  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  long  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    numToSkip)    {    long  available  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
468	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  int  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  int  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    numToSkip)    {    int  available  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
469	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  long  numToSkip  =  input.read(available);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  long  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    numToSkip)    {    long  numToSkip  =  input.read(available);	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
470	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  long  available  =  input.readLine();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  long  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    0)    {    long  available  =  input.readLine();	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
471	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  long  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  long  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    0)    {    long  available  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
472	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  int  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  int  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    0)    {    int  available  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
473	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  long  numToSkip  =  input.getLastMillis();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  long  numToSkip  =  input.getLastMillis();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    0)    {    long  numToSkip  =  input.getLastMillis();	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
474	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  long  numToSkip  =  input.getAverageMillis();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  long  numToSkip  =  input.getAverageMillis();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    0)    {    long  numToSkip  =  input.getAverageMillis();	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
475	[BUG]  [BUGGY]  while(available  >  0)  {  int  available  =  input.readInt();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  int  available  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  int  available  =  input.readInt();	  while(available    >    numToSkip)    {    int    available    =    input.readInt();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	63	None	replace
476	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  =  input.readInt();	  while(available    >    numToSkip)    {    int    available    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
477	[BUG]  [BUGGY]  while(available  >  0)  {  long  numToSkip  =  input.read();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  long  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  long  numToSkip  =  input.read();	  while(available    >    numToSkip)    {    long    numToSkip    =    input.read();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	84	None	replace
478	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  ==  0)  {	  while(available    ==    numToSkip)    {    	compilable	  [FE]  AssertionError  	29	3	replace
479	[BUG]  [BUGGY]  while(available  ==  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  ==  0)  {	  while(available    ==    numToSkip)    {    	compilable	  [FE]  AssertionError  	29	3	replace
480	[BUG]  [BUGGY]  while(available  >  1)  {  if(input.readLine()  ==  0)  {  available  =  input.readLine();  }  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  if(input.readLine()  ==  0)  {  available  =  input.readLine();  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  if(input.readLine()  ==  0)  {  available  =  input.readLine();  }	  while(numToSkip    >    1)    {    long    available    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
481	[BUG]  [BUGGY]  while(available  >  1)  {  if(input.readLine()  >=  0)  {  available  =  input.readLine();  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  if(input.readLine()  >=  0)  {  available  =  input.readLine();  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  if(input.readLine()  >=  0)  {  available  =  input.readLine();  }	  while(numToSkip    >    1)    {    long    available    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
482	[BUG]  [BUGGY]  InputStream  input  =  input.getInputStream()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  input.getInputStream()  -  1;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.getInputStream()  -  1;	  InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
483	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  numToSkip  =  input.read(available);  [CE]  no  suitable  method  found  for  read(long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  numToSkip  =  input.read(available);	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.read(available);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	87	None	replace
484	[BUG]  [BUGGY]  while(available  >  0  &&  available  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0  &&  available  <  =  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0  &&  available  <  =  0)  {	  while(available    >    numToSkip    &&    available    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
485	[BUG]  [BUGGY]  while(available!=  numToSkip  &&  available  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available!=  numToSkip  &&  available  <  =  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available!=  numToSkip  &&  available  <  =  0)  {	  while(available    >    numToSkip    &&    available    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
486	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  >  numToSkip)  {  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  >  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  >  numToSkip)  {	  while(available    >    numToSkip)    {    long    available    >    numToSkip)    {    	non-compiled	[CE]  not  a  statement	59	None	replace
487	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  numToSkip)  {  available  =  input.available();	  while    (available    <    numToSkip)    {    long    available    =    input.available();    	compilable	  [FE]  AssertionError  	12	3	replace
488	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  available  =  input.available();  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  available  =  input.available();	  while    (available    <    numToSkip)    {    long    available    =    input.available();    	compilable	  [FE]  AssertionError  	12	3	replace
489	[BUG]  [BUGGY]  while(available  >  1  &&  input.nextToken()!=  0)  {  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1  &&  input.nextToken()!=  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1  &&  input.nextToken()!=  0)  {	  while(available    >    1)    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
490	[BUG]  [BUGGY]  while(available  >  1  &&  input.nextToken()  ==  0)  {  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1  &&  input.nextToken()  ==  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1  &&  input.nextToken()  ==  0)  {	  while(available    >    1)    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
491	[BUG]  [BUGGY]  while(available  >  1  &&  input.nextToken()!=  null)  {  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1  &&  input.nextToken()!=  null)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1  &&  input.nextToken()!=  null)  {	  while(available    >    1)    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
492	[BUG]  [BUGGY]  while(available  >  1  &&  input.readLine()!=  0)  {  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1  &&  input.readLine()!=  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1  &&  input.readLine()!=  0)  {	  while(available    >    1)    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
493	[BUG]  [BUGGY]  while(available  >=  0)  {  InputStream  input  =  this.input.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  0)  {  InputStream  input  =  this.input.getInputStream();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  0)  {  InputStream  input  =  this.input.getInputStream();	  while    (available    >    0)    {    InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	56	None	replace
494	[BUG]  [BUGGY]  while(available  >  0)  {  input  =  this.input.getInputStream();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  input  =  this.input.getInputStream();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  input  =  this.input.getInputStream();	  while    (available    >    0)    {    InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	56	None	replace
495	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  while(skipped  >  0)  {  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  skipped  =  input.skip(available);  while(skipped  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  skipped  =  input.skip(available);  while(skipped  >  0)  {	  while(numToSkip    >    1)    {    long    skipped    =    input.skip(numToSkip);    while(numToSkip    >    1)    {    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
496	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  while(numToSkip  >  0)  {  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  skipped  =  input.skip(available);  while(numToSkip  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  skipped  =  input.skip(available);  while(numToSkip  >  0)  {	  while(numToSkip    >    1)    {    long    skipped    =    input.skip(numToSkip);    while(numToSkip    >    1)    {    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
497	[BUG]  [BUGGY]  while(available  >  0)  {  input  =  input.readLine();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  input  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  input  =  input.readLine();	  while    (available    >    0)    {    InputStream    input    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
498	[BUG]  [BUGGY]  while(available  >  1)  {  InputStream  input  =  input.readLine();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  InputStream  input  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  InputStream  input  =  input.readLine();	  while    (available    >    0)    {    InputStream    input    =    input.readLine();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	92	None	replace
499	[BUG]  [BUGGY]  while(available  >  0)  {  long  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  long  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  long  numToSkip  =  input.length();	  while(available    >    numToSkip)    {    long    numToSkip    =    input.length();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	82	None	replace
500	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >  numToSkip  ||  available  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while  (available  >  numToSkip  ||  available  >  0)  {	  while    (available    <    numToSkip    ||    available    >    0)    {    	compilable	  [FE]  AssertionError  	39	2	replace
501	[BUG]  [BUGGY]  while  (available  >  numToSkip  ||  available  >  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >  numToSkip  ||  available  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  >  numToSkip  ||  available  >  0)  {	  while    (available    <    numToSkip    ||    available    >    0)    {    	compilable	  [FE]  AssertionError  	39	2	replace
502	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  1  &&  numToSkip  <  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  1  &&  numToSkip  <  1)  {	  while(numToSkip    <    1)    {    	compilable	  [FE]  AssertionError  	69	3	replace
503	[BUG]  [BUGGY]  while(available  <  1  &&  numToSkip  <  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  1  &&  numToSkip  <  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  1  &&  numToSkip  <  1)  {	  while(numToSkip    <    1)    {    	compilable	  [FE]  AssertionError  	69	3	replace
504	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  0)  {  available  =  input.available();	  while    (available    >    0)    {    long    available    =    input.available();    	compilable	  [FE]  AssertionError  	51	3	replace
505	[BUG]  [BUGGY]  while(available  >  0)  {  available  =  input.available();  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  available  =  input.available();	  while    (available    >    0)    {    long    available    =    input.available();    	compilable	  [FE]  AssertionError  	51	3	replace
506	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  0)  {  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  0)  {  available  =  input.available();	  while    (available    >    0)    {    long    available    =    input.available();    	compilable	  [FE]  AssertionError  	51	3	replace
507	[BUG]  [BUGGY]  while(available  <  0)  {  available  =  input.available();  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  0)  {  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  0)  {  available  =  input.available();	  while    (available    >    0)    {    long    available    =    input.available();    	compilable	  [FE]  AssertionError  	51	3	replace
508	[BUG]  [BUGGY]  while(available  +  numToSkip)  {  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  +  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  +  numToSkip)  {	  while(available    >=    numToSkip)    {    	non-compiled	[CE]  incompatible  types	26	None	replace
509	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  +  numToSkip  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  +  numToSkip  >  0)  {	  while(available    >=    numToSkip)    {    	compilable	  [FE]  AssertionError  	26	2	replace
510	[BUG]  [BUGGY]  while(available  +  numToSkip  >  0)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  +  numToSkip  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  +  numToSkip  >  0)  {	  while(available    >=    numToSkip)    {    	compilable	  [FE]  AssertionError  	26	2	replace
511	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  int  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  int  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  numToSkip)  {  int  numToSkip  =  input.size();	  while(available    >    numToSkip)    {    int    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	105	None	replace
512	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  available  =  input.readLine();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  available  =  input.readLine();	  while    (available    <    numToSkip)    {    long    available    =    input.readLine();    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
513	[BUG]  [BUGGY]  InputStream  input  =  getInputStream(available  +  numToSkip);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  getInputStream(available  +  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  getInputStream(available  +  numToSkip);	  InputStream    input    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
514	[BUG]  [BUGGY]  InputStream  input  =  getReadStream();  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  getReadStream();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  getReadStream();	  InputStream    input    =    getInputStream();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
515	[BUG]  [BUGGY]  while(available  >  1)  {  InputStream  input  =  input.readInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  InputStream  input  =  input.readInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  InputStream  input  =  input.readInput();	  while    (available    >    0)    {    InputStream    input    =    input.readInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	91	None	replace
516	[BUG]  [BUGGY]  while(available  >  0)  {  input  =  input.readInput();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  input  =  input.readInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  input  =  input.readInput();	  while    (available    >    0)    {    InputStream    input    =    input.readInput();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
517	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  skipped  =  input.skip(available);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  skipped  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  skipped  =  input.skip(available);	  while    (available    <    numToSkip)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
518	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  numToSkip)  {  available  =  input.skip(available);	  while    (available    <    numToSkip)    {    long    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	10	3	replace
519	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  =  input.skip(available);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  =  input.skip(available);	  while    (available    <    numToSkip)    {    long    skipped    =    input.skip(numToSkip);    	compilable	  [FE]  AssertionError  	10	3	replace
520	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  skipped  =  input.skip(available);  [CE]  cannot  find  symbol  skipped  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  skipped  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  skipped  =  input.skip(available);	  while    (available    <    numToSkip)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  skipped	10	None	replace
521	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  skipped  =  input.skip(available  +  numToSkip);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  skipped  =  input.skip(available  +  numToSkip);	  while    (available    <    numToSkip)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
522	[BUG]  [BUGGY]  while(available  ==  numToSkip)  {  long  numToSkip  =  input.skip(available);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip)  {  long  numToSkip  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    ==    numToSkip)    {    long  numToSkip  =  input.skip(available);	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
523	[BUG]  [BUGGY]  while(available  ==  numToSkip)  {  long  numToSkip  =  input.available();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip)  {  long  numToSkip  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    ==    numToSkip)    {    long  numToSkip  =  input.available();	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
524	[BUG]  [BUGGY]  while(available  ==  numToSkip)  {  long  numToSkip  =  input.read(available);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip)  {  long  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    ==    numToSkip)    {    long  numToSkip  =  input.read(available);	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
525	[BUG]  [BUGGY]  while(available  ==  numToSkip)  {  int  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip)  {  int  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    ==    numToSkip)    {    int  available  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
526	[BUG]  [BUGGY]  while(available  ==  numToSkip)  {  int  numToSkip  =  input.read();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip)  {  int  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    ==    numToSkip)    {    int  numToSkip  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
527	[BUG]  [BUGGY]  while(available  ==  numToSkip)  {  long  available  =  input.readLine();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip)  {  long  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    ==    numToSkip)    {    long  available  =  input.readLine();	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
528	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  0)  {  available  =  input.skip(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.skip(available);    	compilable	  [FE]  AssertionError  	81	3	replace
529	[BUG]  [BUGGY]  while(available  >  0)  {  available  =  input.skip(available);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  available  =  input.skip(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.skip(available);    	compilable	  [FE]  AssertionError  	81	3	replace
530	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  numToSkip  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  0)  {  numToSkip  =  input.skip(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.skip(available);    	compilable	  [FE]  AssertionError  	81	3	replace
531	[BUG]  [BUGGY]  while(available  >  0)  {  numToSkip  =  input.skip(available);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  numToSkip  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  numToSkip  =  input.skip(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.skip(available);    	compilable	  [FE]  AssertionError  	81	3	replace
532	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  long  available  =  input.readLine();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  long  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >=    numToSkip)    {    long  available  =  input.readLine();	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
533	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  long  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  long  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >=    numToSkip)    {    long  available  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
534	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  long  available  =  input.read(available);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  long  available  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >=    numToSkip)    {    long  available  =  input.read(available);	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
535	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  int  numToSkip  =  input.read(available);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  int  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >=    numToSkip)    {    int  numToSkip  =  input.read(available);	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
536	[BUG]  [BUGGY]  InputStream  input  =  input.readLine()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  input.readLine()  +  1;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.readLine()  +  1;	  InputStream    input    =    input.readLine();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
537	[BUG]  [BUGGY]  InputStream  input  =  input.readInputLine();  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  input.readInputLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.readInputLine();	  InputStream    input    =    input.readLine();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
538	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  InputStream  input  =  getInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  InputStream  input  =  getInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  InputStream  input  =  getInput();	  while    (available    <    numToSkip)    {    InputStream    input    =    getInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	14	None	replace
539	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  InputStream  input  =  getInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  InputStream  input  =  getInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  numToSkip)  {  InputStream  input  =  getInput();	  while    (available    <    numToSkip)    {    InputStream    input    =    getInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	14	None	replace
540	[BUG]  [BUGGY]  int  numToSkip  =  input.size()  +  available;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.size()  +  available;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.size()  +  available;	  int    numToSkip    =    input.size();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
541	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  0)  {  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  0)  {  available  =  numToSkip;	  while    (available    >    0)    {    long    available    =    numToSkip;    	compilable	  [FE]  AssertionError  	52	3	replace
542	[BUG]  [BUGGY]  while(available  <  0)  {  available  =  numToSkip;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  0)  {  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  0)  {  available  =  numToSkip;	  while    (available    >    0)    {    long    available    =    numToSkip;    	compilable	  [FE]  AssertionError  	52	3	replace
543	[BUG]  [BUGGY]  while(available  <  =  0)  {  available  =  numToSkip;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  0)  {  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  0)  {  available  =  numToSkip;	  while    (available    >    0)    {    long    available    =    numToSkip;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
544	[BUG]  [BUGGY]  while(available  >  0)  {  available  =  input.skip;  [CE]  cannot  find  symbol  skip  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  =  input.skip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  available  =  input.skip;	  while    (available    >    0)    {    long    available    =    numToSkip;    	non-compiled	[CE]  cannot  find  symbol  skip	52	None	replace
545	[BUG]  [BUGGY]  while  (available  <  numToSkip)  {  available  =  input.read(buffersize);  [CE]  cannot  find  symbol  buffersize  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip)  {  available  =  input.read(buffersize);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  numToSkip)  {  available  =  input.read(buffersize);	  while    (available    <    numToSkip)    {    int    available    =    input.read();    	non-compiled	[CE]  cannot  find  symbol  buffersize	88	None	replace
546	[BUG]  [BUGGY]  while(available  >=  0)  {  int  numToSkip  =  input.getSize();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  0)  {  int  numToSkip  =  input.getSize();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  0)  {  int  numToSkip  =  input.getSize();	  while    (available    >    0)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	100	None	replace
547	[BUG]  [BUGGY]  while  (numToSkip  <  available)  {  long  available  =  input.readLine();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (numToSkip  <  available)  {  long  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    available)    {    long  available  =  input.readLine();	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
548	[BUG]  [BUGGY]  while  (numToSkip  <  available)  {  int  numToSkip  =  input.read(available);  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (numToSkip  <  available)  {  int  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    available)    {    int  numToSkip  =  input.read(available);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
549	[BUG]  [BUGGY]  while  (numToSkip  <  available)  {  InputStream  input  =  getInput();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (numToSkip  <  available)  {  InputStream  input  =  getInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    available)    {    InputStream  input  =  getInput();	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
550	[BUG]  [BUGGY]  while  (numToSkip  <  available)  {  long  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (numToSkip  <  available)  {  long  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    available)    {    long  available  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
551	[BUG]  [BUGGY]  while(available  >  1)  {  long  available  =  input.available();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  long  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    1)    {    long  available  =  input.available();	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
552	[BUG]  [BUGGY]  while(available  >  1)  {  InputStream  available  =  input.readLine();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  InputStream  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    1)    {    InputStream  available  =  input.readLine();	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
553	[BUG]  [BUGGY]  while(available  >  1)  {  long  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  long  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    1)    {    long  available  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
554	[BUG]  [BUGGY]  while(available  >  0)  {  input  =  getInput();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  input  =  getInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  input  =  getInput();	  while    (available    >    0)    {    InputStream    input    =    getInput();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
555	[BUG]  [BUGGY]  while(available  <  =  0)  {  InputStream  input  =  getInput();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  0)  {  InputStream  input  =  getInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  0)  {  InputStream  input  =  getInput();	  while    (available    >    0)    {    InputStream    input    =    getInput();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
556	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInput(available,  0);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  this.input.readInput(available,  0);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  this.input.readInput(available,  0);	  InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
557	[BUG]  [BUGGY]  InputStream  input  =  this.input.readIO();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  this.input.readIO();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  this.input.readIO();	  InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
558	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  long  numToSkip  =  input.available();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  long  numToSkip  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  long  numToSkip  =  input.available();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.available();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	114	None	replace
559	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  long  numToSkip  =  input.available();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  long  numToSkip  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  long  numToSkip  =  input.available();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.available();    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
560	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  numToSkip  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  numToSkip)  {  numToSkip  =  input.available();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.available();    	compilable	  [FE]  AssertionError  	114	3	replace
561	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  numToSkip  =  input.available();  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  numToSkip  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  numToSkip  =  input.available();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.available();    	compilable	  [FE]  AssertionError  	114	3	replace
562	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  +=  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  numToSkip)  {  available  +=  input.available();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.available();    	compilable	  [FE]  AssertionError  	114	3	replace
563	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  +=  input.available();  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  +=  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  +=  input.available();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.available();    	compilable	  [FE]  AssertionError  	114	3	replace
564	[BUG]  [BUGGY]  while(numToSkip  <  1)  {  long  numToSkip  =  input.getLength();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  1)  {  long  numToSkip  =  input.getLength();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    <    1)    {    long  numToSkip  =  input.getLength();	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
565	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  int  numToSkip  =  input.length();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  int  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  int  numToSkip  =  input.length();	  while    (available    <    numToSkip)    {    int    numToSkip    =    input.length();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
566	[BUG]  [BUGGY]  int  n  =  input.read(available  +  numToSkip);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  n  =  input.read(available  +  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  n  =  input.read(available  +  numToSkip);	  int    n    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
567	[BUG]  [BUGGY]  int  n  =  input.read(available  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  n  =  input.read(available  +  1);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  n  =  input.read(available  +  1);	  int    n    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
568	[BUG]  [BUGGY]  int  n  =  input.read(available,  buffersize);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  n  =  input.read(available,  buffersize);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  n  =  input.read(available,  buffersize);	  int    n    =    input.read(available);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
569	[BUG]  [BUGGY]  int  numToSkip  =  input.readUTF();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.readUTF();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.readUTF();	  int    numToSkip    =    input.read();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
570	[BUG]  [BUGGY]  While(available  >  numToSkip)  {  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  While(available  >  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	While(available  >  numToSkip)  {	  while(available    >    numToSkip)    {    While(available    >    numToSkip)    {    	non-compiled	[CE]  ';'  expected	104	None	replace
571	[BUG]  [BUGGY]  long  skipped  =  input.skip(available);  if(skipped  >  0)  {  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  skipped  =  input.skip(available);  if(skipped  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  skipped  =  input.skip(available);  if(skipped  >  0)  {	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    if    (skipped    ==    0)    {    break;    }    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	44	None	replace
572	[BUG]  [BUGGY]  InputStream  input  =  input.readInt()  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  input.readInt()  -  1;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.readInt()  -  1;	  InputStream    input    =    input.readInt();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
573	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0  -  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  0  -  1)  {	  while(available    >    numToSkip    -    1)    {    	compilable	  [FE]  AssertionError  	23	2	replace
574	[BUG]  [BUGGY]  while(available  >  0  -  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0  -  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0  -  1)  {	  while(available    >    numToSkip    -    1)    {    	compilable	  [FE]  AssertionError  	23	2	replace
575	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  *  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  numToSkip  *  1)  {	  while(available    >    numToSkip    -    1)    {    	compilable	  [FE]  AssertionError  	23	3	replace
576	[BUG]  [BUGGY]  while(available  >  numToSkip  *  1)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  *  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip  *  1)  {	  while(available    >    numToSkip    -    1)    {    	compilable	  [FE]  AssertionError  	23	3	replace
577	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  +  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  numToSkip  +  1)  {	  while(available    >    numToSkip    -    1)    {    	compilable	  [FE]  AssertionError  	23	3	replace
578	[BUG]  [BUGGY]  while(available  >  numToSkip  +  1)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  +  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip  +  1)  {	  while(available    >    numToSkip    -    1)    {    	compilable	  [FE]  AssertionError  	23	3	replace
579	[BUG]  [BUGGY]  while(available  >  0  &&  input.isVersion())  {  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0  &&  input.isVersion())  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0  &&  input.isVersion())  {	  while(available    >    numToSkip    &&    input.isVersion())    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
580	[BUG]  [BUGGY]  while(available  >  numToSkip  &&  input.hasVersion())  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  &&  input.hasVersion())  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip  &&  input.hasVersion())  {	  while(available    >    numToSkip    &&    input.isVersion())    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
581	[BUG]  [BUGGY]  while(available  >  numToSkip  -  input.isVersion())  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  -  input.isVersion())  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip  -  input.isVersion())  {	  while(available    >    numToSkip    &&    input.isVersion())    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
582	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  available  =  numToSkip;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  available  =  numToSkip;	  while(available    >    numToSkip)    {    long    available    =    numToSkip;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
583	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >=  numToSkip)  {  available  =  numToSkip;	  while(available    >    numToSkip)    {    long    available    =    numToSkip;    	compilable	  [FE]  AssertionError  	60	3	replace
584	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  available  =  numToSkip;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  numToSkip)  {  available  =  numToSkip;	  while(available    >    numToSkip)    {    long    available    =    numToSkip;    	compilable	  [FE]  AssertionError  	60	3	replace
585	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  long  numToSkip  =  input.length();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  long  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  long  numToSkip  =  input.length();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.length();    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
586	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  numToSkip  =  input.length();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  numToSkip  =  input.length();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
587	[BUG]  [BUGGY]  while(available  >  numToSkip  -  1)  {  long  available  =  input.readLine();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  -  1)  {  long  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip    -    1)    {    long  available  =  input.readLine();	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
588	[BUG]  [BUGGY]  while(available  >  numToSkip  -  1)  {  long  numToSkip  =  input.readLine();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  -  1)  {  long  numToSkip  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip    -    1)    {    long  numToSkip  =  input.readLine();	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
589	[BUG]  [BUGGY]  while(available  >  numToSkip  -  1)  {  int  numToSkip  =  input.read();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  -  1)  {  int  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip    -    1)    {    int  numToSkip  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
590	[BUG]  [BUGGY]  while(available  >  numToSkip  -  1)  {  long  numToSkip  =  input.read(available);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  -  1)  {  long  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip    -    1)    {    long  numToSkip  =  input.read(available);	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
591	[BUG]  [BUGGY]  while(available  >  numToSkip  -  1)  {  long  numToSkip  =  input.read();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  -  1)  {  long  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip    -    1)    {    long  numToSkip  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
592	[BUG]  [BUGGY]  while(available  >  numToSkip  -  1)  {  long  numToSkip  =  input.length();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  -  1)  {  long  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip    -    1)    {    long  numToSkip  =  input.length();	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
593	[BUG]  [BUGGY]  while  (available  <  0)  {  InputStream  input  =(InputStream)input.readLine();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  InputStream  input  =(InputStream)input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    0)    {    InputStream  input  =(InputStream)input.readLine();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
594	[BUG]  [BUGGY]  while  (available  <  0)  {  InputStream  input  =(InputStream)input.read();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  InputStream  input  =(InputStream)input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    0)    {    InputStream  input  =(InputStream)input.read();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
595	[BUG]  [BUGGY]  int  numToSkip  =  input.readInt(available);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.readInt(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.readInt(available);	  int    numToSkip    =    input.readInt();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
596	[BUG]  [BUGGY]  while(available  >  numberToSkip)  {  [CE]  cannot  find  symbol  numberToSkip  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numberToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numberToSkip)  {	  while(numToSkip    >    available)    {    	non-compiled	[CE]  cannot  find  symbol  numberToSkip	73	None	replace
597	[BUG]  [BUGGY]  while(available  >  0)  {  available  =  input.read(0);  [CE]  no  suitable  method  found  for  read(int)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  =  input.read(0);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  available  =  input.read(0);	  while(available    >    numToSkip)    {    int    available    =    input.read(numToSkip);    	non-compiled	[CE]  no  suitable  method  found  for  read(int)	61	None	replace
598	[BUG]  [BUGGY]  int  available  =  input.read(available);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  available  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  available  =  input.read(available);	  while(available    >    numToSkip)    {    int    available    =    input.read(numToSkip);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
599	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  =  input.read(numToSkip);  [CE]  no  suitable  method  found  for  read(long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  input.read(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  =  input.read(numToSkip);	  while(available    >    numToSkip)    {    int    available    =    input.read(numToSkip);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	61	None	replace
600	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  0)  {  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  0)  {  available  =  input.read();	  while    (available    <    numToSkip)    {    long    available    =    input.read();    	compilable	  [FE]  AssertionError  	86	3	replace
601	[BUG]  [BUGGY]  while(available  <  0)  {  available  =  input.read();  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  0)  {  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  0)  {  available  =  input.read();	  while    (available    <    numToSkip)    {    long    available    =    input.read();    	compilable	  [FE]  AssertionError  	86	3	replace
602	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  numToSkip)  {  available  =  numToSkip;	  while    (available    <    numToSkip)    {    long    available    =    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
603	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  available  =  numToSkip;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  available  =  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  available  =  numToSkip;	  while    (available    <    numToSkip)    {    long    available    =    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
604	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  +=  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  numToSkip)  {  available  +=  numToSkip;	  while    (available    <    numToSkip)    {    long    available    =    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
605	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  +=  numToSkip;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  +=  numToSkip;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  +=  numToSkip;	  while    (available    <    numToSkip)    {    long    available    =    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
606	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  0L;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  numToSkip)  {  available  =  0L;	  while    (available    <    numToSkip)    {    long    available    =    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
607	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  =  0L;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  0L;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  =  0L;	  while    (available    <    numToSkip)    {    long    available    =    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
608	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  0)  {  available  =  0;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  0)  {  available  =  0;	  while    (available    <    numToSkip)    {    long    available    =    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
609	[BUG]  [BUGGY]  while(available  <  0)  {  available  =  0;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  0)  {  available  =  0;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  0)  {  available  =  0;	  while    (available    <    numToSkip)    {    long    available    =    numToSkip;    	compilable	  [FE]  AssertionError  	9	3	replace
610	[BUG]  [BUGGY]  while(available  <  0)  {  long  skipped  =  input.skip(available);  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  0)  {  long  skipped  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  0)  {  long  skipped  =  input.skip(available);	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(available);    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	107	None	replace
611	[BUG]  [BUGGY]  while(available  >  0)  {  int  numToSkip  =  input.readInt(0);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  int  numToSkip  =  input.readInt(0);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  int  numToSkip  =  input.readInt(0);	  while    (available    >    0)    {    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	102	None	replace
612	[BUG]  [BUGGY]  while  (available  >=  0)  {  int  available  =  input.read(buffersize);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >=  0)  {  int  available  =  input.read(buffersize);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >=    0)    {    int  available  =  input.read(buffersize);	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
613	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  int  numToSkip  =  input.length();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  int  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >=  numToSkip)  {  int  numToSkip  =  input.length();	  while(available    >    numToSkip)    {    int    numToSkip    =    input.length();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	62	None	replace
614	[BUG]  [BUGGY]  int  numToSkip  =  input.read(buffer,  numToSkip);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.read(buffer,  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.read(buffer,  numToSkip);	  int    numToSkip    =    input.read();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
615	[BUG]  [BUGGY]  long  available  =  input.availableTo(numToSkip);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  available  =  input.availableTo(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  available  =  input.availableTo(numToSkip);	  while    (available    >    0)    {    long    available    =    numToSkip;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
616	[BUG]  [BUGGY]  long  available  =  input.available;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  available  =  input.available;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  available  =  input.available;	  while    (available    >    0)    {    long    available    =    numToSkip;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
617	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  long  skipped  =  input.skip(numToSkip);  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  long  skipped  =  input.skip(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    numToSkip)    {    long  skipped  =  input.skip(numToSkip);	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
618	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  int  numToSkip  =  input.size();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  int  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    numToSkip)    {    int  numToSkip  =  input.size();	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
619	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  long  numToSkip  =  input.read();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  long  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    numToSkip)    {    long  numToSkip  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
620	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  int  numToSkip  =  input.getSize();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  numToSkip)  {  int  numToSkip  =  input.getSize();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    numToSkip)    {    int  numToSkip  =  input.getSize();	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
621	[BUG]  [BUGGY]  while  (available  <  =  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  =  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  =  0  ||  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while    (available    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
622	[BUG]  [BUGGY]  while  (available  <  =  0  ||  input.isEnabled(WINDOW_SIZE))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  =  0  ||  input.isEnabled(WINDOW_SIZE))  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  =  0  ||  input.isEnabled(WINDOW_SIZE))  {	  while    (available    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
623	[BUG]  [BUGGY]  while  (available  <  =  0  ||  input.isEnabled(Feature.AUTO_CLOSE_SIZE))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  =  0  ||  input.isEnabled(Feature.AUTO_CLOSE_SIZE))  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while  (available  <  =  0  ||  input.isEnabled(Feature.AUTO_CLOSE_SIZE))  {	  while    (available    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
624	[BUG]  [BUGGY]  while(available  >  0)  {  available  =  input.getSize();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  =  input.getSize();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  available  =  input.getSize();	  while    (available    >    0)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
625	[BUG]  [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.getSize();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.getSize();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  int  numToSkip  =  input.getSize();	  while    (available    >    0)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	100	None	replace
626	[BUG]  [BUGGY]  while(available  <  0)  {  skipped  =  input.skip(available);  [CE]  cannot  find  symbol  skipped  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  0)  {  skipped  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  0)  {  skipped  =  input.skip(available);	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  skipped	43	None	replace
627	[BUG]  [BUGGY]  while(available  <  0)  {  skipped  =  input.skip(numToSkip);  [CE]  cannot  find  symbol  skipped  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  0)  {  skipped  =  input.skip(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  0)  {  skipped  =  input.skip(numToSkip);	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  skipped	43	None	replace
628	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  skipped  =  input.skip(available,  numToSkip);  [CE]  cannot  find  symbol  skipped  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  skipped  =  input.skip(available,  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  skipped  =  input.skip(available,  numToSkip);	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  skipped	43	None	replace
629	[BUG]  [BUGGY]  while(available  >  0)  {  available  =  input.length();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  available  =  input.length();	  while    (available    >    0)    {    int    numToSkip    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
630	[BUG]  [BUGGY]  int  numToSkip  =  input.getNumberOfLinks()  -  available;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  numToSkip  =  input.getNumberOfLinks()  -  available;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  numToSkip  =  input.getNumberOfLinks()  -  available;	  int    numToSkip    =    input.getNumberOfLinks();    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
631	[BUG]  [BUGGY]  InputStream  input  =  this.input.readInput(available  +  numToSkip);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  this.input.readInput(available  +  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  this.input.readInput(available  +  numToSkip);	  InputStream    input    =    this.input.readInput();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
632	[BUG]  [BUGGY]  While(available  <  numToSkip)  {  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  While(available  <  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	While(available  <  numToSkip)  {	  while(available    >    numToSkip)    {    While(available    >    numToSkip)    {    	non-compiled	[CE]  ';'  expected	104	None	replace
633	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  1  ||  numToSkip  <  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  1  ||  numToSkip  <  1)  {	  while(numToSkip    <    1)    {    	compilable	  [FE]  AssertionError  	69	3	replace
634	[BUG]  [BUGGY]  while(available  <  1  ||  numToSkip  <  1)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  1  ||  numToSkip  <  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  1  ||  numToSkip  <  1)  {	  while(numToSkip    <    1)    {    	compilable	  [FE]  AssertionError  	69	3	replace
635	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  skipped  =  input.skip(available  -  numToSkip);  [CE]  cannot  find  symbol  skipped  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  skipped  =  input.skip(available  -  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  skipped  =  input.skip(available  -  numToSkip);	  while    (available    <    numToSkip)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  skipped	10	None	replace
636	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  skipped  =  input.skip(numToSkip);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  skipped  =  input.skip(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  skipped  =  input.skip(numToSkip);	  while    (available    <    numToSkip)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
637	[BUG]  [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.getUpperBound();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  0)  {  int  numToSkip  =  input.getUpperBound();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  0)  {  int  numToSkip  =  input.getUpperBound();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.getLength();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	111	None	replace
638	[BUG]  [BUGGY]  long  skipped  =  input.skip(numToSkip);  while(skipped  >  0)  {  [CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  skipped  =  input.skip(numToSkip);  while(skipped  >  0)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  skipped  =  input.skip(numToSkip);  while(skipped  >  0)  {	  while(numToSkip    >    1)    {    long    skipped    =    input.skip(numToSkip);    while(numToSkip    >    1)    {    	non-compiled	[CE]  variable  skipped  is  already  defined  in  method  skip(InputStream,long)	110	None	replace
639	[BUG]  [BUGGY]  while(numToSkip  <  0)  {  numToSkip  =  input.length();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  0)  {  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  0)  {  numToSkip  =  input.length();	  while    (numToSkip    <    0)    {    int    numToSkip    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
640	[BUG]  [BUGGY]  while(available  >  0)  {  available  -  numToSkip)  {  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  -  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  available  -  numToSkip)  {	  while(available    >    numToSkip)    {    long    -    numToSkip)    {    	non-compiled	[CE]  not  a  statement	106	None	replace
641	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  available  -  numToSkip  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  available  -  numToSkip  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  available  -  numToSkip	  while(available    >    numToSkip)    {    long    -    numToSkip)    {    	non-compiled	[CE]  not  a  statement	106	None	replace
642	[BUG]  [BUGGY]  while(available  >  numToSkip  &&  input.getVersion())  {  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  &&  input.getVersion())  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip  &&  input.getVersion())  {	  while(available    >    numToSkip    &&    input.isVersion())    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
643	[BUG]  [BUGGY]  while(available  >  numToSkip  &&  input.canRead())  {  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  &&  input.canRead())  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip  &&  input.canRead())  {	  while(available    >    numToSkip    &&    input.isVersion())    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
644	[BUG]  [BUGGY]  while(available  >  numToSkip  &&  input.readLine())  {  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  &&  input.readLine())  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip  &&  input.readLine())  {	  while(available    >    numToSkip    &&    input.isVersion())    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
645	[BUG]  [BUGGY]  InputStream  input  =  input.getReadStream();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  input.getReadStream();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.getReadStream();	  InputStream    input    =    input.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
646	[BUG]  [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.getNumber();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  int  numToSkip  =  input.getNumber();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    1)    {    int  numToSkip  =  input.getNumber();	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
647	[BUG]  [BUGGY]  while(available  <  =  0)  {  available  =  input.read();  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  0)  {  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  0)  {  available  =  input.read();	  while    (available    >    0)    {    long    available    =    input.read();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
648	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  numToSkip)  {  numToSkip  =  input.read();	  while(available    >    numToSkip)    {    int    numToSkip    =    input.read();    	compilable	  [FE]  AssertionError  	64	3	replace
649	[BUG]  [BUGGY]  while(available  >  numToSkip)  {  numToSkip  =  input.read();  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip)  {  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip)  {  numToSkip  =  input.read();	  while(available    >    numToSkip)    {    int    numToSkip    =    input.read();    	compilable	  [FE]  AssertionError  	64	3	replace
650	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  =  input.readLine();  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  input.readLine();  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  =  input.readLine();  }	  while    (available    <    numToSkip)    {    long    available    =    input.readLine();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
651	[BUG]  [BUGGY]  while(available  <  =  0)  {  available  =  input.available();  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  0)  {  available  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  0)  {  available  =  input.available();	  while    (available    >    0)    {    long    available    =    input.available();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
652	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  int  numToSkip  =  input.size();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  int  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    0)    {    int  numToSkip  =  input.size();	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
653	[BUG]  [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  int  numToSkip  =  input.read();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  numToSkip  ||  available  >  0)  {  int  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    numToSkip    ||    available    >    0)    {    int  numToSkip  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
654	[BUG]  [BUGGY]  while(available  <  =  0)  {  available  =  input.readLine();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  0)  {  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  0)  {  available  =  input.readLine();	  while    (available    >    0)    {    long    available    =    input.readLine();    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
655	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  numToSkip  =  input.available();  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  numToSkip  =  input.available();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  numToSkip  =  input.available();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.available();    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
656	[BUG]  [BUGGY]  While(available  >  0)  {  InputStream  input  =  input.readLine();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  While(available  >  0)  {  InputStream  input  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	While(available  >  0)  {  InputStream  input  =  input.readLine();	  while    (available    >    0)    {    InputStream    input    =    input.readLine();    	non-compiled	[CE]  ';'  expected	92	None	replace
657	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  While(available  >=  numToSkip)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  While(available  >=  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >=    numToSkip)    {    While(available  >=  numToSkip)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
658	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  while(available  <  numToSkip)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  while(available  <  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >=    numToSkip)    {    while(available  <  numToSkip)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
659	[BUG]  [BUGGY]  while(available  >=  numToSkip)  {  long  numToSkip  =  input.read(this);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >=  numToSkip)  {  long  numToSkip  =  input.read(this);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >=    numToSkip)    {    long  numToSkip  =  input.read(this);	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
660	[BUG]  [BUGGY]  short  numToSkip  =  input.readInt();  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  short  numToSkip  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	short  numToSkip  =  input.readInt();	  int    numToSkip    =    input.readInt();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
661	[BUG]  [BUGGY]  while(available  >  1)  {  InputStream  input  =  this.input.getInputStream();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  InputStream  input  =  this.input.getInputStream();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  InputStream  input  =  this.input.getInputStream();	  while    (available    >    0)    {    InputStream    input    =    this.input.getInputStream();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	56	None	replace
662	[BUG]  [BUGGY]  while(available  >  numToSkip  -  1)  {  long  -  available  >  numToSkip  -  1)  {  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  -  1)  {  long  -  available  >  numToSkip  -  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip    -    1)    {    long  -  available  >  numToSkip  -  1)  {	  	non-compiled	[CE]  not  a  statement	22	None	add
663	[BUG]  [BUGGY]  while(available  >  numToSkip  -  1)  {  long  -  available  =  numToSkip  -  1)  {  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  -  1)  {  long  -  available  =  numToSkip  -  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip    -    1)    {    long  -  available  =  numToSkip  -  1)  {	  	non-compiled	[CE]  not  a  statement	22	None	add
664	[BUG]  [BUGGY]  while(available  >  numToSkip  -  1)  {  long  -  available  =  numToSkip  -  1;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  -  1)  {  long  -  available  =  numToSkip  -  1;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip    -    1)    {    long  -  available  =  numToSkip  -  1;	  	non-compiled	[CE]  not  a  statement	22	None	add
665	[BUG]  [BUGGY]  while(available  >  numToSkip  -  1)  {  int  numToSkip  =  input.size();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  -  1)  {  int  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    >    numToSkip    -    1)    {    int  numToSkip  =  input.size();	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
666	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  numToSkip  =  input.getSize();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  numToSkip  =  input.getSize();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  numToSkip  =  input.getSize();	  while    (available    <    numToSkip)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
667	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  =  input.getSize();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  input.getSize();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  =  input.getSize();	  while    (available    <    numToSkip)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
668	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  int  numToSkip  =  input.getSize()  +  1;  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  int  numToSkip  =  input.getSize()  +  1;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  int  numToSkip  =  input.getSize()  +  1;	  while    (available    <    numToSkip)    {    int    numToSkip    =    input.getSize();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	115	None	replace
669	[BUG]  [BUGGY]  while(available  >  1)  {  short  available  =  input.readLine();  [CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  short  available  =  input.readLine();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  short  available  =  input.readLine();	  while(numToSkip    >    1)    {    long    available    =    input.readLine();    	non-compiled	[CE]  variable  available  is  already  defined  in  method  skip(InputStream,long)	80	None	replace
670	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  numToSkip  =  input.read(available);  [CE]  no  suitable  method  found  for  read(long)  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  numToSkip  =  input.read(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.read(available);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	83	None	replace
671	[BUG]  [BUGGY]  while(available  >  0)  {  long  numToSkip  =  input.read(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  long  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  long  numToSkip  =  input.read(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.read(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	83	None	replace
672	[BUG]  [BUGGY]  int  n  =  input.read(COPY_BUF_SIZE);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  n  =  input.read(COPY_BUF_SIZE);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  n  =  input.read(COPY_BUF_SIZE);	  int    n    =    input.read();    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
673	[BUG]  [BUGGY]  int  n  =  input.read(buffer,  numToSkip);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  n  =  input.read(buffer,  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  n  =  input.read(buffer,  numToSkip);	  int    n    =    input.read();    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
674	[BUG]  [BUGGY]  int  n  =  input.read(buffersize,  numToSkip);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  n  =  input.read(buffersize,  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  n  =  input.read(buffersize,  numToSkip);	  int    n    =    input.read();    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
675	[BUG]  [BUGGY]  int  n  =  input.read(BUFFER_SIZE);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  int  n  =  input.read(BUFFER_SIZE);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	int  n  =  input.read(BUFFER_SIZE);	  int    n    =    input.read();    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
676	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  numToSkip  =  input.length();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  numToSkip  =  input.length();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  numToSkip  =  input.length();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.length();    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
677	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  numToSkip  =  input.length();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  numToSkip  =  input.length();  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  numToSkip  =  input.length();  }	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
678	[BUG]  [BUGGY]  while(available  >  1)  {  skipped  =  input.skip(available);  [CE]  cannot  find  symbol  skipped  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  skipped  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  skipped  =  input.skip(available);	  while(numToSkip    >    1)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  skipped	31	None	replace
679	[BUG]  [BUGGY]  while(available  >  1)  {  skipped  =  input.skip(numToSkip);  [CE]  cannot  find  symbol  skipped  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  skipped  =  input.skip(numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  skipped  =  input.skip(numToSkip);	  while(numToSkip    >    1)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  skipped	31	None	replace
680	[BUG]  [BUGGY]  while(available  >  1)  {  skipped  =  input.skip(available  +  numToSkip);  [CE]  cannot  find  symbol  skipped  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  skipped  =  input.skip(available  +  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  skipped  =  input.skip(available  +  numToSkip);	  while(numToSkip    >    1)    {    long    skipped    =    input.skip(numToSkip);    	non-compiled	[CE]  cannot  find  symbol  skipped	31	None	replace
681	[BUG]  [BUGGY]  While(available  >  0)  {  InputStream  input  =  input.readInput();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  While(available  >  0)  {  InputStream  input  =  input.readInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	While(available  >  0)  {  InputStream  input  =  input.readInput();	  while    (available    >    0)    {    InputStream    input    =    input.readInput();    	non-compiled	[CE]  ';'  expected	91	None	replace
682	[BUG]  [BUGGY]  while(available  >  0)  {  numToSkip  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  numToSkip  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  numToSkip  =  input.readInt();	  while    (available    >    0)    {    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
683	[BUG]  [BUGGY]  while(numToSkip  <  0)  {  available  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  0)  {  available  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  0)  {  available  =  input.readInt();	  while    (numToSkip    <    0)    {    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
684	[BUG]  [BUGGY]  while(numToSkip  <  0)  {  numToSkip  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  0)  {  numToSkip  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  0)  {  numToSkip  =  input.readInt();	  while    (numToSkip    <    0)    {    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
685	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  0)  {  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(numToSkip  <  0)  {  available  =  input.read();	  while    (numToSkip    <    0)    {    int    numToSkip    =    input.read();    	compilable	  [FE]  AssertionError  	48	3	replace
686	[BUG]  [BUGGY]  while(numToSkip  <  0)  {  available  =  input.read();  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  0)  {  available  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  0)  {  available  =  input.read();	  while    (numToSkip    <    0)    {    int    numToSkip    =    input.read();    	compilable	  [FE]  AssertionError  	48	3	replace
687	[BUG]  [BUGGY]  while  (available  <  0)  {  int  numToSkip  =  input.getNumber();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  <  0)  {  int  numToSkip  =  input.getNumber();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    <    0)    {    int  numToSkip  =  input.getNumber();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
688	[BUG]  [BUGGY]  while(available  >  0)  {  available  =  input.read(0,  numToSkip);  [CE]  no  suitable  method  found  for  read(int,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  =  input.read(0,  numToSkip);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  available  =  input.read(0,  numToSkip);	  while(available    >    numToSkip)    {    int    available    =    input.read(numToSkip);    	non-compiled	[CE]  no  suitable  method  found  for  read(int,long)	61	None	replace
689	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  numToSkip  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  <  numToSkip)  {  numToSkip  =  input.skip(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.skip(available);    	compilable	  [FE]  AssertionError  	81	3	replace
690	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  numToSkip  =  input.skip(available);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  numToSkip  =  input.skip(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  numToSkip  =  input.skip(available);	  while(available    >    numToSkip)    {    long    numToSkip    =    input.skip(available);    	compilable	  [FE]  AssertionError  	81	3	replace
691	[BUG]  [BUGGY]  while(available  >  1  &&  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1  &&  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1  &&  input.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(available    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	67	None	replace
692	[BUG]  [BUGGY]  while(available  >  1  &&  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [CE]  cannot  find  symbol  Feature  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1  &&  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1  &&  input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE))  {	  while(available    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	67	None	replace
693	[BUG]  [BUGGY]  while(available  >  1  &&  input.isEnabled(Feature.QUOTE_FIELD_NAMES,  available))  {  [CE]  cannot  find  symbol  Feature  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1  &&  input.isEnabled(Feature.QUOTE_FIELD_NAMES,  available))  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1  &&  input.isEnabled(Feature.QUOTE_FIELD_NAMES,  available))  {	  while(available    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	67	None	replace
694	[BUG]  [BUGGY]  while(available  >  1  &&  input.isEnabled(Feature.QUOTE_NULL_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1  &&  input.isEnabled(Feature.QUOTE_NULL_FIELD_NAMES))  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1  &&  input.isEnabled(Feature.QUOTE_NULL_FIELD_NAMES))  {	  while(available    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	67	None	replace
695	[BUG]  [BUGGY]  while(available  >  1  &&  input.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  cannot  find  symbol  Feature  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1  &&  input.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1  &&  input.isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  while(available    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  Feature	67	None	replace
696	[BUG]  [BUGGY]  while  (available  >=  0)  {  int  numToSkip  =  input.read();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >=  0)  {  int  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >=    0)    {    int  numToSkip  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
697	[BUG]  [BUGGY]  while  (available  >=  0)  {  int  numToSkip  =  input.readInt();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (available  >=  0)  {  int  numToSkip  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (available    >=    0)    {    int  numToSkip  =  input.readInt();	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
698	[BUG]  [BUGGY]  InputStream  input  =  input.readLine(),  available);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  InputStream  input  =  input.readLine(),  available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	InputStream  input  =  input.readLine(),  available);	  InputStream    input    =    input.readLine();    	non-compiled	[CE]  ';'  expected	94	None	replace
699	[BUG]  [BUGGY]  while(numToSkip  <  available)  {  long  numToSkip  =  input.read(available);  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  available)  {  long  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  available)  {  long  numToSkip  =  input.read(available);	  while    (numToSkip    <    0)    {    long    numToSkip    =    input.read(available);    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	78	None	replace
700	[BUG]  [BUGGY]  while(numToSkip  <  available)  {  numToSkip  =  input.read(available);  [CE]  no  suitable  method  found  for  read(long)  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  available)  {  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  <  available)  {  numToSkip  =  input.read(available);	  while    (numToSkip    <    0)    {    long    numToSkip    =    input.read(available);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	78	None	replace
701	[BUG]  [BUGGY]  while  (numToSkip  <  available)  {  int  numToSkip  =  input.size();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (numToSkip  <  available)  {  int  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    available)    {    int  numToSkip  =  input.size();	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
702	[BUG]  [BUGGY]  while  (numToSkip  <  available)  {  long  numToSkip  =  input.read();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while  (numToSkip  <  available)  {  long  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while    (numToSkip    <    available)    {    long  numToSkip  =  input.read();	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
703	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  skipped  =  input.skip(available);  if(skipped  >  0)  {  break;  }  [CE]  cannot  find  symbol  skipped  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  skipped  =  input.skip(available);  if(skipped  >  0)  {  break;  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  skipped  =  input.skip(available);  if(skipped  >  0)  {  break;  }	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    if    (skipped    >=    0)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  skipped	45	None	replace
704	[BUG]  [BUGGY]  long  skipped  =  input.read();  if(skipped  <  0)  {  break;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  skipped  =  input.read();  if(skipped  <  0)  {  break;  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  skipped  =  input.read();  if(skipped  <  0)  {  break;  }	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    if    (skipped    >=    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
705	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  skipped  =  input.skip(available);  if(skipped  >=  0)  {  break;  }  [CE]  cannot  find  symbol  skipped  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  skipped  =  input.skip(available);  if(skipped  >=  0)  {  break;  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  skipped  =  input.skip(available);  if(skipped  >=  0)  {  break;  }	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    if    (skipped    >=    0)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  skipped	45	None	replace
706	[BUG]  [BUGGY]  long  skipped  =  input.read();  if(skipped  >  0)  {  break;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  long  skipped  =  input.read();  if(skipped  >  0)  {  break;  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	long  skipped  =  input.read();  if(skipped  >  0)  {  break;  }	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    if    (skipped    ==    0)    {    break;    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
707	[BUG]  [BUGGY]  while(numToSkip  >  1)  {  available  =  input.readInt();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  1)  {  available  =  input.readInt();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  1)  {  available  =  input.readInt();	  while(numToSkip    >    1)    {    int    numToSkip    =    input.readInt();    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
708	[BUG]  [BUGGY]  while(available  >  0)  {  available  =  input.size();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  available  =  input.size();	  while    (available    >    0)    {    int    numToSkip    =    input.size();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
709	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.getNumberOfLinks();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.getNumberOfLinks();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    available)    {    int  numToSkip  =  input.getNumberOfLinks();	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
710	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.read();  while(numToSkip  >  available)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.read();  while(numToSkip  >  available)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    available)    {    int  numToSkip  =  input.read();  while(numToSkip  >  available)  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
711	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.getLength();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.getLength();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    available)    {    int  numToSkip  =  input.getLength();	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
712	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.size();  while(numToSkip  >  available)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.size();  while(numToSkip  >  available)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    available)    {    int  numToSkip  =  input.size();  while(numToSkip  >  available)  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
713	[BUG]  [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.getNumberOfItems();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  available)  {  int  numToSkip  =  input.getNumberOfItems();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >    available)    {    int  numToSkip  =  input.getNumberOfItems();	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
714	[BUG]  [BUGGY]  while(numToSkip  >  0)  {  InputStream  input  =  getInput();  [CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  0)  {  InputStream  input  =  getInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  0)  {  InputStream  input  =  getInput();	  while    (numToSkip    <    0)    {    InputStream    input    =    getInput();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  skip(InputStream,long)	77	None	replace
715	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  skipped  =  input.skip(available);  if(skipped  <  0)  {  break;  }  [CE]  cannot  find  symbol  skipped  [FE]                AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  skipped  =  input.skip(available);  if(skipped  <  0)  {  break;  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  skipped  =  input.skip(available);  if(skipped  <  0)  {  break;  }	  while    (numToSkip    <    0)    {    long    skipped    =    input.skip(numToSkip);    if    (skipped    <    0)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  skipped	46	None	replace
716	[BUG]  [BUGGY]  while(numToSkip  >=  1)  {  long  numToSkip  =  input.getLength();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  1)  {  long  numToSkip  =  input.getLength();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >=    1)    {    long  numToSkip  =  input.getLength();	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
717	[BUG]  [BUGGY]  while(numToSkip  >=  1)  {  while(numToSkip  >=  2)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  1)  {  while(numToSkip  >=  2)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >=    1)    {    while(numToSkip  >=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
718	[BUG]  [BUGGY]  while(numToSkip  >=  1)  {  long  numToSkip  =  input.size();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >=  1)  {  long  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    >=    1)    {    long  numToSkip  =  input.size();	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
719	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  =  0L;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  0)  {  available  =  0L;	  while    (available    >    0)    {    long    available    =    0;    	compilable	  [FE]  AssertionError  	101	3	replace
720	[BUG]  [BUGGY]  while(available  >  0)  {  available  =  0L;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  0)  {  available  =  0L;  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  0)  {  available  =  0L;	  while    (available    >    0)    {    long    available    =    0;    	compilable	  [FE]  AssertionError  	101	3	replace
721	[BUG]  [BUGGY]  while(numToSkip  >  0)  {  long  numToSkip  =  input.size();  [CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  >  0)  {  long  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip  >  0)  {  long  numToSkip  =  input.size();	  while    (numToSkip    <    0)    {    long    numToSkip    =    input.size();    	non-compiled	[CE]  variable  numToSkip  is  already  defined  in  method  skip(InputStream,long)	108	None	replace
722	[BUG]  [BUGGY]  while(available  >  1)  {  numToSkip  =  input.read(available);  [CE]  no  suitable  method  found  for  read(long)  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  1)  {  numToSkip  =  input.read(available);  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  1)  {  numToSkip  =  input.read(available);	  while(numToSkip    >    1)    {    int    numToSkip    =    input.read(available);    	non-compiled	[CE]  no  suitable  method  found  for  read(long)	79	None	replace
723	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  input  =  getInput();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  input  =  getInput();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  input  =  getInput();	  while    (available    <    numToSkip)    {    InputStream    input    =    getInput();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
724	[BUG]  [BUGGY]  while(available  <  numToSkip)  {  available  =  input.read();  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  numToSkip)  {  available  =  input.read();  }  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  numToSkip)  {  available  =  input.read();  }	  while    (available    <    numToSkip)    {    long    available    =    input.read();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
725	[BUG]  [BUGGY]  while(numToSkip  <  1)  {  long  numToSkip  <  1)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  1)  {  long  numToSkip  <  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    <    1)    {    long  numToSkip  <  1)  {	  	non-compiled	[CE]  ';'  expected	68	None	add
726	[BUG]  [BUGGY]  while(numToSkip  <  1)  {  int  numToSkip  =  input.getSize();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  1)  {  int  numToSkip  =  input.getSize();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    <    1)    {    int  numToSkip  =  input.getSize();	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
727	[BUG]  [BUGGY]  while(numToSkip  <  1)  {  While(numToSkip  <  1)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(numToSkip  <  1)  {  While(numToSkip  <  1)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(numToSkip    <    1)    {    While(numToSkip  <  1)  {	  	non-compiled	[CE]  ';'  expected	68	None	add
728	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  ||  available  >  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  numToSkip  ||  available  >  numToSkip)  {	  while(available    >    numToSkip)    {    while(available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	58	3	replace
729	[BUG]  [BUGGY]  while(available  >  numToSkip  ||  available  >  numToSkip)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  ||  available  >  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip  ||  available  >  numToSkip)  {	  while(available    >    numToSkip)    {    while(available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	58	3	replace
730	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  ||  available  <  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	add	while(available  >  numToSkip  ||  available  <  numToSkip)  {	  while(available    >    numToSkip)    {    while(available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	58	3	replace
731	[BUG]  [BUGGY]  while(available  >  numToSkip  ||  available  <  numToSkip)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  >  numToSkip  ||  available  <  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  >  numToSkip  ||  available  <  numToSkip)  {	  while(available    >    numToSkip)    {    while(available    >    numToSkip)    {    	compilable	  [FE]  AssertionError  	58	3	replace
732	[BUG]  [BUGGY]  while(available  ==  numToSkip)  {  While(available  ==  numToSkip)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip)  {  While(available  ==  numToSkip)  {  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    ==    numToSkip)    {    While(available  ==  numToSkip)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
733	[BUG]  [BUGGY]  while(available  ==  numToSkip)  {  int  numToSkip  =  input.getSize();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip)  {  int  numToSkip  =  input.getSize();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    ==    numToSkip)    {    int  numToSkip  =  input.getSize();	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
734	[BUG]  [BUGGY]  while(available  ==  numToSkip)  {  int  numToSkip  =  input.getLength();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip)  {  int  numToSkip  =  input.getLength();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    ==    numToSkip)    {    int  numToSkip  =  input.getLength();	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
735	[BUG]  [BUGGY]  while(available  ==  numToSkip)  {  int  numToSkip  =  input.size();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  ==  numToSkip)  {  int  numToSkip  =  input.size();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available    ==    numToSkip)    {    int  numToSkip  =  input.size();	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
736	[BUG]  [BUGGY]  while(available  <  =  numToSkip)  {  numToSkip  =  input.read();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  static  long  skip(InputStream  input,  long  numToSkip)  throws  IOException  {  long  available  =  numToSkip;      [BUGGY]  while(available  <  =  numToSkip)  {  numToSkip  =  input.read();  [BUGGY]      long  skipped  =  input.skip(numToSkip);  if  (skipped  ==  0)  {  break;  }  numToSkip  -=  skipped;  }  return  available  -  numToSkip;  }  [CLASS]  IOUtils  [METHOD]  skip  [RETURN_TYPE]  long  InputStream  input  long  numToSkip  [VARIABLES]  boolean  int  COPY_BUF_SIZE  SKIP_BUF_SIZE  buffersize  n  InputStream  input  long  available  numToSkip  skipped  	projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java	0.8164965809277261	96	96	2	replace	while(available  <  =  numToSkip)  {  numToSkip  =  input.read();	  while    (available    <    numToSkip)    {    long    numToSkip    =    input.read();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
