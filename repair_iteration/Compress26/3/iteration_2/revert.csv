projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){while(available<numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){longavailable=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){longskipped=input.skip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){intnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){longavailable=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){intnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){InputStreaminput=getInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.readInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=this.input.readInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=getInputStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip&&available<=0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>1){while(numToSkip>1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>1){longskipped=input.skip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>1){intnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>1){intnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>1){longnumToSkip>1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>1){intnumToSkip=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>1){intnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>1){longnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){while(numToSkip<0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){longskipped=input.skip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){longskipped=input.skip(numToSkip);if(skipped==0){break;}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){longskipped=input.skip(numToSkip);if(skipped>=0){break;}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){longskipped=input.skip(numToSkip);if(skipped<0){break;}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){intnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){intnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){intnumToSkip=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){while(available>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){longavailable=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){longavailable=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){InputStreaminput=getInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){intavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){InputStreaminput=this.input.readInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){InputStreaminput=this.input.getInputStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){intavailable=input.read(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){while(available>numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){longavailable>numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){longavailable=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){intavailable=input.read(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){intnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){intavailable=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){intnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){intavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){intnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){longavailable=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){intnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){InputStreaminput=getInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){longnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>1){intnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>1){longavailable=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){longnumToSkip=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){longnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){longnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){longnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){longavailable=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){longavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){longnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){intavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){longavailable=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){longavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){InputStreaminput=input.readInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){InputStreaminput=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.getInputStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intn=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){intnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){intnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){intnumToSkip=input.getSize();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){longavailable=0;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){intnumToSkip=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){intnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){While(available>numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){intnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){long-numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){longskipped=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){longnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>1){intnumToSkip=input.getNumberOfLinks();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>1){longskipped=input.skip(numToSkip);while(numToSkip>1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>1){intnumToSkip=input.getLength();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>1){intnumToSkip=input.getNumberOfItems();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){longnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){longnumToSkip=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){intnumToSkip=input.getSize();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){longnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.getNumberOfLinks();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intn=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip&&input.isVersion()){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longnumToSkip=input.getNumberOfItems();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.getNumberOfItems();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>0){intnumToSkip=input.getNumberOfItems();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<1){intnumToSkip=input.getNumberOfItems();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){intnumToSkip=input.getNumberOfItems();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96IntegernumToSkip=input.getNumberOfItems();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=0||available>numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=0||available>=numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=0||input.skip>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longnumToSkip=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){longnumToSkip=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){longnumToSkip=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){longnumToSkip=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){available=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){longnumToSkip=input.skip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){numToSkip=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=1){while(numToSkip>=1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=1){while(numToSkip>>1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=1){while(numToSkip!=1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=1){longskipped=input.skip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=1){intnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=1){while(numToSkip==1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=1){intnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=1){intnumToSkip=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longavailable=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available=input.readFully();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){available=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>0){while(available<numToSkip||available>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>0){longavailable=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>0){longavailable=numToSkip||available>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>0){longavailable=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>0){longavailable=numToSkip+available;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>0){InputStreaminput=getInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>0){InputStreaminput=this.input.getInputStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>0){InputStreaminput=this.input.readInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip&&input.isVersion()){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip&&input.isVersion()){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available&&input.isVersion()){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip&&input.isVersion()){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available!=numToSkip&&input.isVersion()){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip&&available<=input.isVersion()){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){intnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){intnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>0){intnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){intnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){intnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){longnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96IntegernumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longavailable=input.read(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){intavailable=input.read(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intavailable=input.read(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){intavailable=input.read(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=input.read(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){intavailable=input.read(0,numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){while(available>1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){intavailable=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){intavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){longavailable>1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){InputStreamavailable=input.readInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){intavailable=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){InputStreaminput=getInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){intavailable=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){intnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>0){intnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96IntegernumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available!=numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){InputStreaminput=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){InputStreaminput=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available){intnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){numToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){intnumToSkip=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>numToSkip){while(available<numToSkip||available>numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>numToSkip){longavailable=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>numToSkip){longavailable=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>numToSkip){longavailable=numToSkip||available>numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>numToSkip){InputStreaminput=getInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>numToSkip){longavailable=numToSkip||available>numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>numToSkip){InputStreaminput=this.input.getInputStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.length()-1;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=available.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.length()-available;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.length()+1;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.length()+available;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){InputStreaminput=this.input.readInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96While(available>0){InputStreaminput=this.input.readInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=0){InputStreaminput=this.input.readInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip&&available<=0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip&&available<=0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip&&available<=0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip&&available<=0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available&&available<=0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip&&available<0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){longnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){longnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){available=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){available=input.read(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=this.input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.readInputStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.readFully(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.readLine()-1;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.readFully();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){numToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available+=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available-1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=available){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){intnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){longnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){longnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){numToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){numToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){available=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longavailable=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){longavailable=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){longavailable=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=0){longavailable=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<1&&available>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longnumToSkip=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){numToSkip=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<1){intnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){intnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<1){while(numToSkip<1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<1){longskipped=input.skip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<1){intnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<1){intnumToSkip=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<1){intnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<1){longnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<1){intnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=getInputStream(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=this.getInputStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=getInputStream(),available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=getInputStream()-available;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=getInputStream().readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=getOutputStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longnumToSkip=input.getLength();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.getLength();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>0){intnumToSkip=input.getLength();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<1){intnumToSkip=input.getLength();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=1){intnumToSkip=input.getLength();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){intnumToSkip=input.getLength();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>0){intnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=1){intnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){intnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longnumToSkip=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96IntegernumToSkip=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.readInt()+1;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=available.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96bytenumToSkip=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){available=input.read(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){longnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){longnumToSkip=input.read(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>0){intnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=1){intnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){intnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longavailable=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){longavailable=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longavailable=input.availableToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longavailable=input.available-numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longavailable=input.availableToLong();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longavailable=input.availableToLong(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longskipped=input.skip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){longskipped=input.skip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>0){longskipped=input.skip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){shortskipped=input.skip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){intskipped=input.skip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){longskipped=input.skip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){longskipped=input.skip(0);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longnumToSkip=input.getNumberOfLinks();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>0){intnumToSkip=input.getNumberOfLinks();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<1){intnumToSkip=input.getNumberOfLinks();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=1){intnumToSkip=input.getNumberOfLinks();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){intnumToSkip=input.getNumberOfLinks();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){InputStreaminput=getInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){input=getInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=getInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longavailable=0;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){longavailable=0;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=0){longavailable=0;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){longavailable=0;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=0;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.read(available,numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.read(available,0);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.read(available+1);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.readFully(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){longskipped=input.skip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longskipped=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){shortskipped=input.skip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){while(numToSkip>available){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){longnumToSkip>available){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){longavailable=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){intnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){intnumToSkip=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){longavailable=numToSkip+available;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){intnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available=0;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longavailable=input.availableToMillis(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longavailable=input.availableToInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){while(available>=0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){longavailable=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){InputStreaminput=getInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){while(available!=0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){intavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){longavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available=input.read(buffer,numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){available=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available=input.read(buffersize,numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){InputStreaminput=getInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longskipped=input.skip(numToSkip);while(available>numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longskipped=input.skip(numToSkip);while(available>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intn=input.read(available,numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intn=input.read(available,0);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intn=input.read(available*numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longn=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intn=input.readFully(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available){intnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){intnumToSkip=input.length()+1;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){intavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=input.readFully(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longnumToSkip=input.getSize();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){intnumToSkip=input.getSize();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.getSize();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>0){intnumToSkip=input.getSize();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96IntegernumToSkip=input.getSize();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<available){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){intavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){intavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available=input.readFully(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){longavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=0){longavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available){intnumToSkip=input.getSize();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){intnumToSkip=input.getLength();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){longnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available){longnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){available=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.getNumberOfLinks()+1;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.getNumberOfLinks(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.getUpperOfLinks();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96IntegernumToSkip=input.getNumberOfLinks();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip||available>numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<=available){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip||available>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip&&available>numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){longavailable=numToSkip>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){longavailable=numToSkip+1;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longavailable=numToSkip>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){longavailable=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){longavailable=numToSkip>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=this.input.getInputStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.getInputStream(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.getOutputStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=this.inputStream.getInputStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.openStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){InputStreaminput=input.readInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){InputStreaminput=input.readInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){long-numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){long-numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96long-numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){available-numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){long-=numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=this.input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.readUTF();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.readIO();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){while(available>=numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){while(available!=numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){while(available>>numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){longavailable=input.availableToSkip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){while(available==numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){longavailable=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){longavailable=input.availableToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip&&available>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<available||available>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){longnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>0){longnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){numToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=1){longnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){intnumToSkip=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>0){intnumToSkip=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available){while(numToSkip<available){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available){longavailable=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available){intnumToSkip=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available){longavailable=numToSkip+available;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available){InputStreaminput=getInputStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available){longavailable=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip){while(available>=numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip){while(available==numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip){while(available!=numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip){while(available>>numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip){longavailable=input.availableToSkip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip){longavailable=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip){longavailable=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip){longavailable=input.availableToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){longnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){numToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){numToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){available=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip-1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip-1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip-1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip*numToSkip-1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){skipped=input.skip(available+numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){skipped=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){skipped=input.skip(available*numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-1){while(available>numToSkip-1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-1){longavailable=numToSkip-1;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-1){longavailable>numToSkip-1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-1){longavailable=numToSkip-1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-1){intavailable=input.read(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-1){longavailable=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-1){intavailable=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-1){intavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){intnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=this.input.readInput(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=this.input.readFully(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=this.input.readInput(available,numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=this.input.readFully();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=this.input.readInput(),available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=this.input.readInputFully(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available+=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96IntegernumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){intavailable=input.read(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=input.read(buffer,numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){intavailable=input.read(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longavailable=input.availableToString(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){while(available<0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){InputStreaminput=this.input.getInputStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){available=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){longavailable=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>0){available=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){numToSkip=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<1){longavailable=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){intnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longn=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intn=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intn=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){longskipped=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){available=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longavailable=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intavailable=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){intavailable=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){intavailable=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){available=input.readUTF();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){available=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longskipped=input.skip(available);if(skipped>=0){break;}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longskipped=input.skip(available);if(skipped<0){break;}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longskipped=input.skip(numToSkip);if(skipped>0){break;}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longskipped=input.skip(numToSkip);if(skipped>=0){break;}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longskipped=input.skip(available);if(skipped>0){break;}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longskipped=input.skip(numToSkip);if(skipped<0){break;}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longskipped=input.skip(available);if(skipped==0){break;}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.size()-1;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.size()-available;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.size()+1;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){available=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){longavailable=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=0){longavailable=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0||available>numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){longavailable=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longskipped=input.skip(numToSkip);if(skipped==0){break;}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){intnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.readFully();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=0){InputStreaminput=this.input.getInputStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96While(available>0){InputStreaminput=this.input.getInputStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){intnumToSkip=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){numToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<available){numToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longnumToSkip>1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longnumToSkip=input.skip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<1){longnumToSkip>1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=1){longnumToSkip>1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=this.inputStream.readInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=IOUtils.readFully(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available&&available<=0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available-1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){intnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96IntegernumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){longnumToSkip>1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){longnumToSkip=input.getNumberOfLinks();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longnumToSkip=input.get(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intn=input.readFully();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intn=input.read(buffersize);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){shortskipped=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96IntegernumToSkip=input.getLength();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1&&numToSkip>1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1&&numToSkip<1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){longskipped=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){shortskipped=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){if(numToSkip>1){skipped=input.skip(available);}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){available=input.read(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=input.read(buffersize,numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=input.read(buffersize);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){longavailable=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){longavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){numToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.getNumberOfLinks()-1;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){intnumToSkip=input.getSize();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){intnumToSkip=input.getSize();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available!=1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){longskipped=input.skip(available);if(skipped>0){break;}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){longskipped=input.skip(available);if(skipped>=0){break;}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){intnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){InputStreaminput=this.input.readInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){InputStreaminput=this.input.readInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){available-numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>numToSkip){longavailable=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>numToSkip){intnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>numToSkip){longavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>numToSkip){intavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>numToSkip){longnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>0){longavailable=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>0){longavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>0){intavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>0){longnumToSkip=input.getLastMillis();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>0){longnumToSkip=input.getAverageMillis();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){intavailable=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){longnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){if(input.readLine()==0){available=input.readLine();}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){if(input.readLine()>=0){available=input.readLine();}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.getInputStream()-1;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){numToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0&&available<=0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available!=numToSkip&&available<=0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available>numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){available=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1&&input.nextToken()!=0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1&&input.nextToken()==0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1&&input.nextToken()!=null){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1&&input.readLine()!=0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){InputStreaminput=this.input.getInputStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){input=this.input.getInputStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longskipped=input.skip(available);while(skipped>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longskipped=input.skip(available);while(numToSkip>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){input=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){InputStreaminput=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){longnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip||available>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<1&&numToSkip<1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){available=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available+numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available+numToSkip>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){intnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){available=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=getInputStream(available+numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=getReadStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){InputStreaminput=input.readInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){input=input.readInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){skipped=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){skipped=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){skipped=input.skip(available+numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip){longnumToSkip=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip){longnumToSkip=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip){longnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip){intavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip){intnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip){longavailable=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){numToSkip=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){longavailable=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){longavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){longavailable=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){intnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.readLine()+1;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.readInputLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){InputStreaminput=getInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){InputStreaminput=getInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.size()+available;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){available=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=0){available=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=input.skip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available=input.read(buffersize);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){intnumToSkip=input.getSize();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available){longavailable=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available){intnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available){InputStreaminput=getInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available){longavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){longavailable=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){InputStreamavailable=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){longavailable=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){input=getInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=0){InputStreaminput=getInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=this.input.readInput(available,0);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=this.input.readIO();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){longnumToSkip=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){longnumToSkip=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){numToSkip=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available+=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<1){longnumToSkip=input.getLength();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){intnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intn=input.read(available+numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intn=input.read(available+1);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intn=input.read(available,buffersize);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.readUTF();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96While(available>numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longskipped=input.skip(available);if(skipped>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.readInt()-1;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0-1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip*1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip+1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0&&input.isVersion()){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip&&input.hasVersion()){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-input.isVersion()){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){available=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){available=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){longnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){numToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-1){longavailable=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-1){longnumToSkip=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-1){intnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-1){longnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-1){longnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-1){longnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){InputStreaminput=(InputStream)input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){InputStreaminput=(InputStream)input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.readInt(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numberToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=input.read(0);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intavailable=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available=input.read(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){available=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){available=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available+=numToSkip;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available=0L;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){available=0;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){longskipped=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){intnumToSkip=input.readInt(0);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){intavailable=input.read(buffersize);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){intnumToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.read(buffer,numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longavailable=input.availableTo(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longavailable=input.available;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>numToSkip){longskipped=input.skip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>numToSkip){intnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>numToSkip){longnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>numToSkip){intnumToSkip=input.getSize();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=0||input.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=0||input.isEnabled(WINDOW_SIZE)){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=0||input.isEnabled(Feature.AUTO_CLOSE_SIZE)){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=input.getSize();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){intnumToSkip=input.getSize();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){skipped=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){skipped=input.skip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){skipped=input.skip(available,numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intnumToSkip=input.getNumberOfLinks()-available;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=this.input.readInput(available+numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96While(available<numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<1||numToSkip<1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){skipped=input.skip(available-numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){skipped=input.skip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>0){intnumToSkip=input.getUpperBound();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longskipped=input.skip(numToSkip);while(skipped>0){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){numToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available-numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){available-numToSkip
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip&&input.getVersion()){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip&&input.canRead()){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip&&input.readLine()){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.getReadStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){intnumToSkip=input.getNumber();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=0){available=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip){numToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available=input.readLine();}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=0){available=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>0){intnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip||available>0){intnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=0){available=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){numToSkip=input.available();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96While(available>0){InputStreaminput=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){While(available>=numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){while(available<numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=numToSkip){longnumToSkip=input.read(this);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96shortnumToSkip=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){InputStreaminput=this.input.getInputStream();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-1){long-available>numToSkip-1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-1){long-available=numToSkip-1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-1){long-available=numToSkip-1;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip-1){intnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){numToSkip=input.getSize();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available=input.getSize();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){intnumToSkip=input.getSize()+1;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){shortavailable=input.readLine();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){numToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){longnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intn=input.read(COPY_BUF_SIZE);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intn=input.read(buffer,numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intn=input.read(buffersize,numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96intn=input.read(BUFFER_SIZE);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){numToSkip=input.length();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){numToSkip=input.length();}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){skipped=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){skipped=input.skip(numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){skipped=input.skip(available+numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96While(available>0){InputStreaminput=input.readInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){numToSkip=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){available=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){numToSkip=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<0){available=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<0){intnumToSkip=input.getNumber();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=input.read(0,numToSkip);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){numToSkip=input.skip(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1&&input.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1&&input.isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUE)){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1&&input.isEnabled(Feature.QUOTE_FIELD_NAMES,available)){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1&&input.isEnabled(Feature.QUOTE_NULL_FIELD_NAMES)){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1&&input.isEnabled(Feature.QUOTE_FIELD_NAMES,true)){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){intnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>=0){intnumToSkip=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96InputStreaminput=input.readLine(),available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available){longnumToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available){numToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available){intnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<available){longnumToSkip=input.read();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){skipped=input.skip(available);if(skipped>0){break;}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longskipped=input.read();if(skipped<0){break;}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){skipped=input.skip(available);if(skipped>=0){break;}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96longskipped=input.read();if(skipped>0){break;}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>1){available=input.readInt();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){intnumToSkip=input.getNumberOfLinks();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){intnumToSkip=input.read();while(numToSkip>available){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){intnumToSkip=input.getLength();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){intnumToSkip=input.size();while(numToSkip>available){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>available){intnumToSkip=input.getNumberOfItems();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>0){InputStreaminput=getInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){skipped=input.skip(available);if(skipped<0){break;}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=1){longnumToSkip=input.getLength();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=1){while(numToSkip>=2){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>=1){longnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>0){available=0L;
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip>0){longnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>1){numToSkip=input.read(available);
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){input=getInput();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<numToSkip){available=input.read();}
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<1){longnumToSkip<1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<1){intnumToSkip=input.getSize();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(numToSkip<1){While(numToSkip<1){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip||available>numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available>numToSkip||available<numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip){While(available==numToSkip){
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip){intnumToSkip=input.getSize();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip){intnumToSkip=input.getLength();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available==numToSkip){intnumToSkip=input.size();
projects/Compress26/src/main/java/org/apache/commons/compress/utils/IOUtils.java96while(available<=numToSkip){numToSkip=input.read();
