bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials(n))  +  0.5);  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]  return  Math.floor(Math.exp(factorials(n))  +  0.5);  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials(n))  +  0.5);	return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  	non-compiled	[CE]  not  a  statement	9	None	replace
2	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials[n])+  0.5);  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]  return  Math.floor(Math.exp(factorials[n])+  0.5);  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials[n])+  0.5);	return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  	non-compiled	[CE]  not  a  statement	9	None	replace
3	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials(n))  +  0.5);  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]  return  Math.log(Math.exp(factorials(n))  +  0.5);  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials(n))  +  0.5);	return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  	non-compiled	[CE]  not  a  statement	9	None	replace
4	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n])+  0.5);  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]  return  Math.log(Math.exp(factorials[n])+  0.5);  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n])+  0.5);	return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  	non-compiled	[CE]  not  a  statement	9	None	replace
5	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]            AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]    [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	  	return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  	non-compiled	[CE]  not  a  statement	9	None	replace
6	[BUG]  [BUGGY]    double  n  =  Math.floor(Math.exp(factorials[n]));  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]    double  n  =  Math.floor(Math.exp(factorials[n]));  [BUGGY]  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	    double  n  =  Math.floor(Math.exp(factorials[n]));		non-compiled	[CE]  not  a  statement	10	None	add
7	[BUG]  [BUGGY]    int  n  =  Math.log(factorials[n]);  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]    int  n  =  Math.log(factorials[n]);  [BUGGY]  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	    int  n  =  Math.log(factorials[n]);		non-compiled	[CE]  not  a  statement	10	None	add
8	[BUG]  [BUGGY]    double  n  =  Math.floor(Math.exp(factorials));  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]    double  n  =  Math.floor(Math.exp(factorials));  [BUGGY]  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	    double  n  =  Math.floor(Math.exp(factorials));		non-compiled	[CE]  not  a  statement	10	None	add
9	[BUG]  [BUGGY]    double  n  =  Math.floor(Math.exp(factorials[0]));  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]    double  n  =  Math.floor(Math.exp(factorials[0]));  [BUGGY]  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	    double  n  =  Math.floor(Math.exp(factorials[0]));		non-compiled	[CE]  <identifier>  expected	10	None	add
10	[BUG]  [BUGGY]    double  n  =  Math.floor(Math.log(n))  +  0.5);  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]    double  n  =  Math.floor(Math.log(n))  +  0.5);  [BUGGY]  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	    double  n  =  Math.floor(Math.log(n))  +  0.5);		non-compiled	[CE]  <identifier>  expected	10	None	add
11	[BUG]  [BUGGY]    int  n  =  factorials.length;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]    int  n  =  factorials.length;  [BUGGY]  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	    int  n  =  factorials.length;		non-compiled	[CE]  <identifier>  expected	10	None	add
12	[BUG]  [BUGGY]    final  double  n  =  Math.log(n)/  factorials.length;  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]    final  double  n  =  Math.log(n)/  factorials.length;  [BUGGY]  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	    final  double  n  =  Math.log(n)/  factorials.length;		non-compiled	[CE]  <identifier>  expected	10	None	add
13	[BUG]  [BUGGY]    double  n  =  Math.log(n);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]    double  n  =  Math.log(n);  [BUGGY]  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	    double  n  =  Math.log(n);		non-compiled	[CE]  <identifier>  expected	10	None	add
14	[BUG]  [BUGGY]    final  double  n  =  Math.log(n);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]    final  double  n  =  Math.log(n);  [BUGGY]  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	    final  double  n  =  Math.log(n);		non-compiled	[CE]  <identifier>  expected	10	None	add
15	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorialLog(n))  +  0.5);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]  return  Math.log(Math.exp(factorialLog(n))  +  0.5);  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorialLog(n))  +  0.5);	return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  	non-compiled	[CE]  <identifier>  expected	9	None	replace
16	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorialLog(n))  +  1.0);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]  return  Math.log(Math.exp(factorialLog(n))  +  1.0);  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorialLog(n))  +  1.0);	return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  	non-compiled	[CE]  <identifier>  expected	9	None	replace
17	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials.length)+  0.5);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]  return  Math.floor(Math.exp(factorials.length)+  0.5);  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials.length)+  0.5);	return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  	non-compiled	[CE]  <identifier>  expected	9	None	replace
18	[BUG]  [BUGGY]    int  n  =  Math.log(factorials[0],  n);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]    int  n  =  Math.log(factorials[0],  n);  [BUGGY]  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	    int  n  =  Math.log(factorials[0],  n);		non-compiled	[CE]  <identifier>  expected	10	None	add
19	[BUG]  [BUGGY]    int  n  =  Math.floor(factorials.length);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]    int  n  =  Math.floor(factorials.length);  [BUGGY]  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	    int  n  =  Math.floor(factorials.length);		non-compiled	[CE]  <identifier>  expected	10	None	add
20	[BUG]  [BUGGY]    int  n  =  Math.log(factorials[n].doubleValue());  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]    int  n  =  Math.log(factorials[n].doubleValue());  [BUGGY]  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	    int  n  =  Math.log(factorials[n].doubleValue());		non-compiled	[CE]  <identifier>  expected	10	None	add
21	[BUG]  [BUGGY]    n  =  Math.floor(factorials[n]);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  [BUGGY]    n  =  Math.floor(factorials[n]);  [BUGGY]  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	    n  =  Math.floor(factorials[n]);		non-compiled	[CE]  <identifier>  expected	10	None	add
