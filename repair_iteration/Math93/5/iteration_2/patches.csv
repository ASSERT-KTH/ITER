bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[1]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.floor(factorials[1]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.floor(factorials[1]);	  int    n    =    Math.log(factorials[1]);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
2	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[1]  +  n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[1]  +  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[1]  +  n);	  int    n    =    Math.log(factorials[1]);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
3	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[2]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[2]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[2]);	  int    n    =    Math.log(factorials[1]);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
4	[BUG]  [BUGGY]  return  Math.max(factorials.length,  n  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.max(factorials.length,  n  +  1);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.max(factorials.length,  n  +  1);	  return    Math.max(factorials.length,    n);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
5	[BUG]  [BUGGY]  return  Math.max(factorials.length,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.max(factorials.length,  0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.max(factorials.length,  0);	  return    Math.max(factorials.length,    n);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
6	[BUG]  [BUGGY]  return  Math.min(factorials.length,  n);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.min(factorials.length,  n);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.min(factorials.length,  n);	  return    Math.max(factorials.length,    n);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
7	[BUG]  [BUGGY]  return  Math.max(factorials.length,  0,  n);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.max(factorials.length,  0,  n);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.max(factorials.length,  0,  n);	  return    Math.max(factorials.length,    n);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
8	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(factorials[1]));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.exp(factorials[1]));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.exp(factorials[1]));	  double    n    =    Math.floor(Math.exp(factorials[1]));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
9	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  -  1])/  1.0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n  -  1])/  1.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  -  1])/  1.0);	  return    Math.log(Math.exp(factorials[n    -    1])+    1.0);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
10	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  -  1])/  0.5);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n  -  1])/  0.5);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  -  1])/  0.5);	  return    Math.log(Math.exp(factorials[n    -    1])+    0.5);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
11	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  -  1])+  2.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n  -  1])+  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  -  1])+  2.0);	  return    Math.log(Math.exp(factorials[n    -    1])+    0.5);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
12	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(factorials[0]  +  n));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.exp(factorials[0]  +  n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.exp(factorials[0]  +  n));	  double    n    =    Math.floor(Math.exp(factorials[0]    +    n));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
13	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[1]  +  n));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[1]  +  n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.exp(factorials[1]  +  n));	  double    n    =    Math.floor(Math.exp(factorials[0]    +    n));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
14	[BUG]  [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials[0]  +  n));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials[0]  +  n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.ceil(Math.exp(factorials[0]  +  n));	  double    n    =    Math.floor(Math.exp(factorials[0]    +    n));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
15	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[1]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials[1]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials[1]);	  final    double    n    =    Math.log(factorials[0]);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
16	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[0],  n);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials[0],  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials[0],  n);	  final    double    n    =    Math.log(factorials[0]);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
17	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[0]  +  n);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials[0]  +  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials[0]  +  n);	  final    double    n    =    Math.log(factorials[0]);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
18	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[n])/  n;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials[n])/  n;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials[n])/  n;	  final    double    n    =    Math.log(factorials[n])/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
19	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[n])/  logSum;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials[n])/  logSum;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials[n])/  logSum;	  final    double    n    =    Math.log(factorials[n])/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
20	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[n])/  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials[n])/  2;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials[n])/  2;	  final    double    n    =    Math.log(factorials[n])/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
21	[BUG]  [BUGGY]  double  n  =  Math.ceil(Math.log(n));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.ceil(Math.log(n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.ceil(Math.log(n));	  double    n    =    Math.ceil(Math.exp(n));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
22	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(n));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.exp(n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.exp(n));	  double    n    =    Math.ceil(Math.exp(n));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
23	[BUG]  [BUGGY]  double  n  =  Math.ceil(Math.floor(n));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.ceil(Math.floor(n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.ceil(Math.floor(n));	  double    n    =    Math.ceil(Math.exp(n));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
24	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(factorials[n])+  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.exp(factorials[n])+  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.exp(factorials[n])+  1);	  double    n    =    Math.log(Math.exp(factorials[n]));    	non-compiled	[CE]  <identifier>  expected	45	None	replace
25	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.log(n  +  1));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.log(n  +  1));	  double    n    =    Math.floor(Math.log(n));    	non-compiled	[CE]  <identifier>  expected	49	None	replace
26	[BUG]  [BUGGY]  double  n  =  Math.log(Math.PI(n));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.PI(n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.PI(n));	  double    n    =    Math.floor(Math.log(n));    	non-compiled	[CE]  <identifier>  expected	49	None	replace
27	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n))  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.log(n))  +  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.log(n))  +  1;	  double    n    =    Math.floor(Math.log(n));    	non-compiled	[CE]  <identifier>  expected	49	None	replace
28	[BUG]  [BUGGY]  return  Math.floor(Math.exp(n)/  0.01);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(n)/  0.01);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(n)/  0.01);	  return    Math.floor(Math.exp(factorials.length)/    0.01);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
29	[BUG]  [BUGGY]  return  Math.floor(Math.exp(n)/  2.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(n)/  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(n)/  2.0);	  return    Math.floor(Math.exp(factorials.length)/    0.01);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
30	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials.length)/  2.0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials.length)/  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials.length)/  2.0);	  return    Math.floor(Math.exp(factorials.length)/    0.01);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
31	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  n  +  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[0],  n  +  3);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0],  n  +  3);	  int    n    =    Math.log(factorials[0],    n    +    2);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
32	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  n  *  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[0],  n  *  2);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0],  n  *  2);	  int    n    =    Math.log(factorials[0],    n    +    2);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
33	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  n  *  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[0],  n  *  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0],  n  *  1);	  int    n    =    Math.log(factorials[0],    n    +    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
34	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n  +  1))  +  0.5);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.log(n  +  1))  +  0.5);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.log(n  +  1))  +  0.5);	  double    n    =    Math.log(Math.log(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
35	[BUG]  [BUGGY]  return  Math.ceil(Math.exp(factorials[n])/  2.0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.ceil(Math.exp(factorials[n])/  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.ceil(Math.exp(factorials[n])/  2.0);	  return    Math.floor(Math.exp(factorials[n])+    2.0);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
36	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials(n))  /  1.0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(factorials(n))  /  1.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials(n))  /  1.0);	  return    Math.floor(Math.exp(factorials(n))    +    1.0);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
37	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials(n))  *  1.0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(factorials(n))  *  1.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials(n))  *  1.0);	  return    Math.floor(Math.exp(factorials(n))    +    1.0);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
38	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials(n))  *  2.0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(factorials(n))  *  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials(n))  *  2.0);	  return    Math.floor(Math.exp(factorials(n))    +    2.0);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
39	[BUG]  [BUGGY]  int  n  =  n  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  n  -  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  n  -  1;	  int    n    =    factorials.length    -    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
40	[BUG]  [BUGGY]  int  n  =  factorials.length  -  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  factorials.length  -  2;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  factorials.length  -  2;	  int    n    =    factorials.length    -    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
41	[BUG]  [BUGGY]  int  n  =  n.length  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  n.length  -  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  n.length  -  1;	  int    n    =    factorials.length    -    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
42	[BUG]  [BUGGY]  final  double  n  =  Math.log(n)/  factorials;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(n)/  factorials;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(n)/  factorials;	  final    double    n    =    Math.log(factorials.length)/    n;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
43	[BUG]  [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX)/  n;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX)/  n;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(NUMBER_INDEX)/  n;	  final    double    n    =    Math.log(factorials.length)/    n;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
44	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials.length)/  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials.length)/  2;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials.length)/  2;	  final    double    n    =    Math.log(factorials.length)/    n;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
45	[BUG]  [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials[1]));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials[1]));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.ceil(Math.exp(factorials[1]));	  double    n    =    Math.ceil(Math.exp(factorials[0]));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
46	[BUG]  [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials[0])+  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials[0])+  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.ceil(Math.exp(factorials[0])+  1);	  double    n    =    Math.ceil(Math.exp(factorials[0]));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
47	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[n].doubleValue())+  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[n].doubleValue())+  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[n].doubleValue())+  1;	  int    n    =    Math.log(factorials[n].doubleValue()    +    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
48	[BUG]  [BUGGY]  int  n  =  Math.ceil(factorials[n]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.ceil(factorials[n]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.ceil(factorials[n]);	  int    n    =    Math.floor(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
49	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[n  +  1]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.floor(factorials[n  +  1]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.floor(factorials[n  +  1]);	  int    n    =    Math.floor(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
50	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[0]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.floor(factorials[0]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.floor(factorials[0]);	  int    n    =    Math.floor(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
51	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials(n))  *  2.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials(n))  *  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials(n))  *  2.0);	  return    Math.log(Math.exp(factorials(n))    +    2.0);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
52	[BUG]  [BUGGY]  int  n  =  Math.log(factorials.length  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials.length  +  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials.length  +  1);	  int    n    =    Math.log(factorials.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
53	[BUG]  [BUGGY]  int  n  =  Math.log(factorials.length  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials.length  -  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials.length  -  1);	  int    n    =    Math.log(factorials.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
54	[BUG]  [BUGGY]  int  n  =  Math.log(factorials.length,  n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials.length,  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials.length,  n);	  int    n    =    Math.log(factorials.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
55	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[n]  /  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[n]  /  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[n]  /  1);	  int    n    =    Math.log(factorials[n]    -    1);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
56	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[n]  -  1  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[n]  -  1  +  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[n]  -  1  +  1);	  int    n    =    Math.log(factorials[n]    -    1);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
57	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[n]  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.floor(factorials[n]  -  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.floor(factorials[n]  -  1);	  int    n    =    Math.log(factorials[n]    -    1);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
58	[BUG]  [BUGGY]  double  n  =  Math.log(factorials[n  +  1]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(factorials[n  +  1]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(factorials[n  +  1]);	  double    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
59	[BUG]  [BUGGY]  double  n  =  Math.floor(factorials[n]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.floor(factorials[n]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(factorials[n]);	  double    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
60	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[1],  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.floor(factorials[1],  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.floor(factorials[1],  n);	  int    n    =    Math.log(factorials[1],    n);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
61	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[1],  n  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[1],  n  +  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[1],  n  +  1);	  int    n    =    Math.log(factorials[1],    n);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
62	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[2],  n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[2],  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[2],  n);	  int    n    =    Math.log(factorials[1],    n);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
63	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[n])/  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[n])/  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.exp(factorials[n])/  1);	  double    n    =    Math.floor(Math.exp(factorials[n])+    1);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
64	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(factorials[n])/  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.exp(factorials[n])/  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.exp(factorials[n])/  1);	  double    n    =    Math.floor(Math.exp(factorials[n])+    1);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
65	[BUG]  [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials[n])/  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials[n])/  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.ceil(Math.exp(factorials[n])/  1);	  double    n    =    Math.floor(Math.exp(factorials[n])+    1);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
66	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials.length)/  n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials.length)/  n);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials.length)/  n);	  return    Math.log(Math.exp(factorials.length)+    n);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
67	[BUG]  [BUGGY]  return  Math.log(Math.exp(n)+  factorials.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(n)+  factorials.length);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(n)+  factorials.length);	  return    Math.log(Math.exp(factorials.length)+    n);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
68	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials.length)+  n  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials.length)+  n  +  1);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials.length)+  n  +  1);	  return    Math.log(Math.exp(factorials.length)+    n);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
69	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials.length  -  1)+  n);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials.length  -  1)+  n);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials.length  -  1)+  n);	  return    Math.log(Math.exp(factorials.length)+    n);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
70	[BUG]  [BUGGY]  final  int  n  =  Math.log(factorials.length)/  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  int  n  =  Math.log(factorials.length)/  2;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  int  n  =  Math.log(factorials.length)/  2;	  final    int    n    =    Math.log(factorials.length)/    n;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
71	[BUG]  [BUGGY]  final  int  n  =  Math.log(NUMBER_INDEX)/  n;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  int  n  =  Math.log(NUMBER_INDEX)/  n;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  int  n  =  Math.log(NUMBER_INDEX)/  n;	  final    int    n    =    Math.log(factorials.length)/    n;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
72	[BUG]  [BUGGY]  final  int  n  =  Math.log(n)/  factorials.length;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  int  n  =  Math.log(n)/  factorials.length;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  int  n  =  Math.log(n)/  factorials.length;	  final    int    n    =    Math.log(factorials.length)/    n;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
73	[BUG]  [BUGGY]  final  int  n  =  Math.log(n)/  factorials;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  int  n  =  Math.log(n)/  factorials;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  int  n  =  Math.log(n)/  factorials;	  final    int    n    =    Math.log(factorials.length)/    n;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
74	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials.length)/  0.5);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials.length)/  0.5);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials.length)/  0.5);	  return    Math.log(Math.exp(factorials.length)+    0.5);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
75	[BUG]  [BUGGY]  return  Math.log(Math.exp(n)+  0.5);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(n)+  0.5);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(n)+  0.5);	  return    Math.log(Math.exp(factorials.length)+    0.5);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
76	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n))  *  1.0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.log(n))  *  1.0);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.log(n))  *  1.0);	  double    n    =    Math.log(Math.log(n))    +    1.0);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
77	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n  +  1))  +  1.0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.log(n  +  1))  +  1.0);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.log(n  +  1))  +  1.0);	  double    n    =    Math.log(Math.log(n))    +    1.0);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
78	[BUG]  [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX  +  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(NUMBER_INDEX  +  1);	  final    double    n    =    Math.log(NUMBER_INDEX);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
79	[BUG]  [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX,  n);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX,  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(NUMBER_INDEX,  n);	  final    double    n    =    Math.log(NUMBER_INDEX);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
80	[BUG]  [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX)+  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX)+  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(NUMBER_INDEX)+  1;	  final    double    n    =    Math.log(NUMBER_INDEX);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
81	[BUG]  [BUGGY]  return  n.doubleValue();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  n.doubleValue();  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  n.doubleValue();	  return    factorials.doubleValue();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
82	[BUG]  [BUGGY]  return  factorials.doubleValue()  +  n;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  factorials.doubleValue()  +  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  factorials.doubleValue()  +  n;	  return    factorials.doubleValue();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
83	[BUG]  [BUGGY]  return  factorials.doubleValue()  *  n;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  factorials.doubleValue()  *  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  factorials.doubleValue()  *  n;	  return    factorials.doubleValue();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
84	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials.length  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials.length  +  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials.length  +  1);	  final    double    n    =    Math.log(factorials.length);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
85	[BUG]  [BUGGY]  final  double  n  =  Math.floor(factorials.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.floor(factorials.length);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.floor(factorials.length);	  final    double    n    =    Math.log(factorials.length);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
86	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials.length  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials.length  -  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials.length  -  1);	  final    double    n    =    Math.log(factorials.length);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
87	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials.length,  n);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials.length,  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials.length,  n);	  final    double    n    =    Math.log(factorials.length);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
88	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  0,  EPSILON);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[0],  0,  EPSILON);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0],  0,  EPSILON);	  int    n    =    Math.log(factorials[0],    EPSILON);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
89	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  EPSILON  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[0],  EPSILON  +  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0],  EPSILON  +  1);	  int    n    =    Math.log(factorials[0],    EPSILON);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
90	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[0],  EPSILON);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.floor(factorials[0],  EPSILON);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.floor(factorials[0],  EPSILON);	  int    n    =    Math.log(factorials[0],    EPSILON);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
91	[BUG]  [BUGGY]  double  n  =  Math.log(n)/  0.5);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(n)/  0.5);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(n)/  0.5);	  double    n    =    Math.log(n)+    0.5);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
92	[BUG]  [BUGGY]  double  n  =  Math.log(n)+  1.0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(n)+  1.0);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(n)+  1.0);	  double    n    =    Math.log(n)+    0.5);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
93	[BUG]  [BUGGY]  double  n  =  Math.log(n)/  0.5;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(n)/  0.5;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(n)/  0.5;	  double    n    =    Math.log(n)+    0.5);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
94	[BUG]  [BUGGY]  return  Math.floor(Math.exp(n)+  2.0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(n)+  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(n)+  2.0);	  return    Math.floor(Math.exp(factorials.length)+    2.0);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
95	[BUG]  [BUGGY]  return  Math.ceil(Math.exp(factorials.length)/  2.0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.ceil(Math.exp(factorials.length)/  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.ceil(Math.exp(factorials.length)/  2.0);	  return    Math.floor(Math.exp(factorials.length)+    2.0);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
96	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n  +  1))  *  0.5);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.log(n  +  1))  *  0.5);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.log(n  +  1))  *  0.5);	  double    n    =    Math.log(Math.log(n))    *    0.5);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
97	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials[n])/  2.0,  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(factorials[n])/  2.0,  n);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials[n])/  2.0,  n);	  return    Math.floor(Math.exp(factorials[n])/    2.0);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
98	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials[n])/  1.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(factorials[n])/  1.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials[n])/  1.0);	  return    Math.floor(Math.exp(factorials[n])+    1.0);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
99	[BUG]  [BUGGY]  int  n  =  this.factorials.length  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  this.factorials.length  -  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  this.factorials.length  -  1;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
100	[BUG]  [BUGGY]  int  n  =  this.factorials.length  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  this.factorials.length  +  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  this.factorials.length  +  1;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
101	[BUG]  [BUGGY]  int  n  =  this.factorials.length  -  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  this.factorials.length  -  2;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  this.factorials.length  -  2;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
102	[BUG]  [BUGGY]  int  n  =  this.factorials.length  -  3;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  this.factorials.length  -  3;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  this.factorials.length  -  3;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
103	[BUG]  [BUGGY]  int  n  =  Math.ceil(factorials.length  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.ceil(factorials.length  -  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.ceil(factorials.length  -  1);	  int    n    =    Math.floor(factorials.length    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
104	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials.length  -  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.floor(factorials.length  -  2);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.floor(factorials.length  -  2);	  int    n    =    Math.floor(factorials.length    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
105	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  +  n])/  1.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n  +  n])/  1.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  +  n])/  1.0);	  return    Math.log(Math.exp(factorials[n    +    n])+    1.0);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
106	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  +  1])+  1.0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n  +  1])+  1.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  +  1])+  1.0);	  return    Math.log(Math.exp(factorials[n    +    n])+    1.0);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
107	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  +  n])/  2.0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n  +  n])/  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  +  n])/  2.0);	  return    Math.log(Math.exp(factorials[n    +    n])+    1.0);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
108	[BUG]  [BUGGY]  return  n;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  n;	  return    factorials.length;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
109	[BUG]  [BUGGY]  return(n  <  0)?  factorials.length  :  n;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return(n  <  0)?  factorials.length  :  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return(n  <  0)?  factorials.length  :  n;	  return    factorials.length;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
110	[BUG]  [BUGGY]  return(n  <  2)?  factorials.length  :  n;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return(n  <  2)?  factorials.length  :  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return(n  <  2)?  factorials.length  :  n;	  return    factorials.length;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
111	[BUG]  [BUGGY]  return  this.factorials.length;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  this.factorials.length;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  this.factorials.length;	  return    factorials.length;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
112	[BUG]  [BUGGY]  double  n  =  Math.log(factorials.length  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(factorials.length  +  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(factorials.length  +  1);	  double    n    =    Math.log(factorials.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
113	[BUG]  [BUGGY]  double  n  =  Math.floor(factorials.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.floor(factorials.length);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(factorials.length);	  double    n    =    Math.log(factorials.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
114	[BUG]  [BUGGY]  double  n  =  Math.log(factorials.length  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(factorials.length  -  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(factorials.length  -  1);	  double    n    =    Math.log(factorials.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
115	[BUG]  [BUGGY]  double  n  =  Math.log(factorials.length,  n);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(factorials.length,  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(factorials.length,  n);	  double    n    =    Math.log(factorials.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
116	[BUG]  [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length  /  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length  /  2;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(n)/  factorials.length  /  2;	  final    double    n    =    Math.log(n)/    factorials.length    +    2;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
117	[BUG]  [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length  *  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length  *  2;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(n)/  factorials.length  *  2;	  final    double    n    =    Math.log(n)/    factorials.length    +    2;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
118	[BUG]  [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX)/  factorials.length  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX)/  factorials.length  +  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(NUMBER_INDEX)/  factorials.length  +  1;	  final    double    n    =    Math.log(NUMBER_INDEX)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
119	[BUG]  [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX)/  factorials.length  +  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX)/  factorials.length  +  2;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(NUMBER_INDEX)/  factorials.length  +  2;	  final    double    n    =    Math.log(NUMBER_INDEX)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
120	[BUG]  [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX)/  factorials.length  *  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX)/  factorials.length  *  2;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(NUMBER_INDEX)/  factorials.length  *  2;	  final    double    n    =    Math.log(NUMBER_INDEX)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
121	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(factorials,  n));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.exp(factorials,  n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.exp(factorials,  n));	  double    n    =    Math.floor(Math.exp(factorials,    n));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
122	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials,  n  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.floor(Math.exp(factorials,  n  +  1));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.exp(factorials,  n  +  1));	  double    n    =    Math.floor(Math.exp(factorials,    n));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
123	[BUG]  [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials,  n));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials,  n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.ceil(Math.exp(factorials,  n));	  double    n    =    Math.floor(Math.exp(factorials,    n));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
124	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(factorials,  n  +  1));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.exp(factorials,  n  +  1));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.exp(factorials,  n  +  1));	  double    n    =    Math.floor(Math.exp(factorials,    n));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
125	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0].doubleValue()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[0].doubleValue()  +  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0].doubleValue()  +  1);	  int    n    =    Math.log(factorials[0].doubleValue());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
126	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[1].doubleValue());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[1].doubleValue());  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[1].doubleValue());	  int    n    =    Math.log(factorials[0].doubleValue());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
127	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[0].doubleValue());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.floor(factorials[0].doubleValue());  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.floor(factorials[0].doubleValue());	  int    n    =    Math.log(factorials[0].doubleValue());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
128	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n])/  20.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n])/  20.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n])/  20.0);	  return    Math.log(Math.exp(factorials[n])/    1.0);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
129	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n])/  3.0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n])/  3.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n])/  3.0);	  return    Math.log(Math.exp(factorials[n])/    1.0);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
130	[BUG]  [BUGGY]  n  =  Math.log(factorials[n  +  1]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  n  =  Math.log(factorials[n  +  1]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	n  =  Math.log(factorials[n  +  1]);	  n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
131	[BUG]  [BUGGY]  n  =  Math.log(factorials[0]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  n  =  Math.log(factorials[0]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	n  =  Math.log(factorials[0]);	  n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
132	[BUG]  [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length  *  2  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length  *  2  +  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(n)/  factorials.length  *  2  +  1;	  final    double    n    =    Math.log(n)/    factorials.length    +    1;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
133	[BUG]  [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length  *  1  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length  *  1  +  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(n)/  factorials.length  *  1  +  1;	  final    double    n    =    Math.log(n)/    factorials.length    +    1;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
134	[BUG]  [BUGGY]  return  this.factorials[n];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  this.factorials[n];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  this.factorials[n];	  return    factorials[n];    	non-compiled	[CE]  <identifier>  expected	76	None	replace
135	[BUG]  [BUGGY]  return  factorials[n].doubleValue();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  factorials[n].doubleValue();  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  factorials[n].doubleValue();	  return    factorials[n];    	non-compiled	[CE]  <identifier>  expected	76	None	replace
136	[BUG]  [BUGGY]  return  factorials[n  -  1];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  factorials[n  -  1];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  factorials[n  -  1];	  return    factorials[n];    	non-compiled	[CE]  <identifier>  expected	76	None	replace
137	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0]  +  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[0]  +  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0]  +  n);	  int    n    =    Math.log(factorials[0]);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
138	[BUG]  [BUGGY]  return  Math.exp(Math.exp(factorials[n])/  2.0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.exp(Math.exp(factorials[n])/  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.exp(Math.exp(factorials[n])/  2.0);	  return    Math.log(Math.exp(factorials[n])+    2.0);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
139	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n])/  2.0,  n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n])/  2.0,  n);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n])/  2.0,  n);	  return    Math.log(Math.exp(factorials[n])/    2.0);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
140	[BUG]  [BUGGY]  double  n  =  Math.log(Math.floor(n));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.floor(n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.floor(n));	  double    n    =    Math.floor(Math.floor(n));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
141	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.log(n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.log(n));	  double    n    =    Math.floor(Math.floor(n));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
142	[BUG]  [BUGGY]  double  n  =  Math.pow(Math.log(n));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.pow(Math.log(n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.pow(Math.log(n));	  double    n    =    Math.floor(Math.floor(n));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
143	[BUG]  [BUGGY]  int  n  =  Math.ceil(factorials.length  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.ceil(factorials.length  +  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.ceil(factorials.length  +  1);	  int    n    =    Math.floor(factorials.length    +    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
144	[BUG]  [BUGGY]  int  n  =  Math.log(factorials.length  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials.length  +  1));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials.length  +  1));	  int    n    =    Math.floor(factorials.length    +    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
145	[BUG]  [BUGGY]  return  Math.floor(Math.exp(n)/  0.5);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(n)/  0.5);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(n)/  0.5);	  return    Math.floor(Math.exp(factorials.length)/    0.5);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
146	[BUG]  [BUGGY]  return  Math.log(Math.exp(n)/  0.5);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(n)/  0.5);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(n)/  0.5);	  return    Math.floor(Math.exp(factorials.length)/    0.5);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
147	[BUG]  [BUGGY]  return  Math.ceil(Math.exp(n)/  0.5);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.ceil(Math.exp(n)/  0.5);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.ceil(Math.exp(n)/  0.5);	  return    Math.floor(Math.exp(factorials.length)/    0.5);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
148	[BUG]  [BUGGY]  double  n  =  Math.log(factorials[1]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(factorials[1]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(factorials[1]);	  double    n    =    Math.log(factorials[0]);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
149	[BUG]  [BUGGY]  double  n  =  Math.log(factorials[0],  n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(factorials[0],  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(factorials[0],  n);	  double    n    =    Math.log(factorials[0]);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
150	[BUG]  [BUGGY]  double  n  =  Math.log(factorials[0]  +  n);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(factorials[0]  +  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(factorials[0]  +  n);	  double    n    =    Math.log(factorials[0]);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
151	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[0])/  n;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials[0])/  n;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials[0])/  n;	  final    double    n    =    Math.log(factorials[0])/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
152	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[1])/  factorials.length;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials[1])/  factorials.length;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials[1])/  factorials.length;	  final    double    n    =    Math.log(factorials[0])/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
153	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[0])/  logSum;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials[0])/  logSum;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials[0])/  logSum;	  final    double    n    =    Math.log(factorials[0])/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
154	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[0])/  factorials.length  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials[0])/  factorials.length  +  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials[0])/  factorials.length  +  1;	  final    double    n    =    Math.log(factorials[0])/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
155	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials[n])/  0.01);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(factorials[n])/  0.01);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials[n])/  0.01);	  return    Math.floor(Math.exp(factorials[n])/    0.5);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
156	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[0],  n  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.floor(factorials[0],  n  +  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.floor(factorials[0],  n  +  1);	  int    n    =    Math.floor(factorials[0],    n);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
157	[BUG]  [BUGGY]  int  n  =  Math.ceil(factorials[0],  n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.ceil(factorials[0],  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.ceil(factorials[0],  n);	  int    n    =    Math.floor(factorials[0],    n);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
158	[BUG]  [BUGGY]  final  double  n  =  Math.log(Math.floor(n));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(Math.floor(n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(Math.floor(n));	  final    double    n    =    Math.floor(Math.floor(n));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
159	[BUG]  [BUGGY]  final  double  n  =  Math.log(Math.log(n));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(Math.log(n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(Math.log(n));	  final    double    n    =    Math.floor(Math.floor(n));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
160	[BUG]  [BUGGY]  final  double  n  =  Math.pow(Math.log(n));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.pow(Math.log(n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.pow(Math.log(n));	  final    double    n    =    Math.floor(Math.floor(n));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
161	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials.length)/  1.0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials.length)/  1.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials.length)/  1.0);	  return    Math.log(Math.exp(factorials.length)+    1.0);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
162	[BUG]  [BUGGY]  return  Math.log(Math.exp(n)+  1.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(n)+  1.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(n)+  1.0);	  return    Math.log(Math.exp(factorials.length)+    1.0);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
163	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(factorials  +  1));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.exp(factorials  +  1));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.exp(factorials  +  1));	  double    n    =    Math.log(Math.exp(factorials));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
164	[BUG]  [BUGGY]  return  n.size();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  n.size();  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  n.size();	  return    factorials.size();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
165	[BUG]  [BUGGY]  return  factorials.size()  +  n;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  factorials.size()  +  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  factorials.size()  +  n;	  return    factorials.size();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
166	[BUG]  [BUGGY]  return  this.factorials.size();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  this.factorials.size();  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  this.factorials.size();	  return    factorials.size();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
167	[BUG]  [BUGGY]  return  factorials.size()  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  factorials.size()  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  factorials.size()  +  1;	  return    factorials.size();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
168	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(factorials[n]),  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.exp(factorials[n]),  0);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.exp(factorials[n]),  0);	  double    n    =    Math.floor(Math.exp(factorials[n]),    n);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
169	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[n]),  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[n]),  0);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.exp(factorials[n]),  0);	  double    n    =    Math.floor(Math.exp(factorials[n]),    n);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
170	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[n]),  EPSILON);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[n]),  EPSILON);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.exp(factorials[n]),  EPSILON);	  double    n    =    Math.floor(Math.exp(factorials[n]),    n);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
171	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[n])/  n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[n])/  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.exp(factorials[n])/  n);	  double    n    =    Math.floor(Math.exp(factorials[n]),    n);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
172	[BUG]  [BUGGY]  int  n  =  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  1;	  int    n    =    0;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
173	[BUG]  [BUGGY]  double  n  =  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  0;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  0;	  int    n    =    0;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
174	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.min(factorials.length,  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.min(factorials.length,  n);	  int    n    =    0;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
175	[BUG]  [BUGGY]  double  n  =  Math.log(Math.ceil(n));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.ceil(n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.ceil(n));	  double    n    =    Math.floor(Math.exp(n));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
176	[BUG]  [BUGGY]  double  n  =  Math.ceil(Math.log(n))  *  0.5);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.ceil(Math.log(n))  *  0.5);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.ceil(Math.log(n))  *  0.5);	  double    n    =    Math.ceil(Math.log(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
177	[BUG]  [BUGGY]  double  n  =  Math.ceil(Math.log(n))  +  1.0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.ceil(Math.log(n))  +  1.0);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.ceil(Math.log(n))  +  1.0);	  double    n    =    Math.ceil(Math.log(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
178	[BUG]  [BUGGY]  return  Math.log(factorials[0]).doubleValue();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(factorials[0]).doubleValue();  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(factorials[0]).doubleValue();	  return    Math.log(factorials[n]).doubleValue();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
179	[BUG]  [BUGGY]  return  Math.log(factorials[n]  -  n).doubleValue();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(factorials[n]  -  n).doubleValue();  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(factorials[n]  -  n).doubleValue();	  return    Math.log(factorials[n]).doubleValue();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
180	[BUG]  [BUGGY]  return  Math.log(factorials[n]).doubleValue()  +  n;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(factorials[n]).doubleValue()  +  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(factorials[n]).doubleValue()  +  n;	  return    Math.log(factorials[n]).doubleValue();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
181	[BUG]  [BUGGY]  n  =  Math.ceil(factorials[0]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  n  =  Math.ceil(factorials[0]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	n  =  Math.ceil(factorials[0]);	  n    =    Math.floor(factorials[0]);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
182	[BUG]  [BUGGY]  n  =  Math.floor(factorials[1]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  n  =  Math.floor(factorials[1]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	n  =  Math.floor(factorials[1]);	  n    =    Math.floor(factorials[0]);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
183	[BUG]  [BUGGY]  return  factorials.get(n  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  factorials.get(n  +  1);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  factorials.get(n  +  1);	  return    factorials.get(n);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
184	[BUG]  [BUGGY]  return  factorials.get(n  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  factorials.get(n  -  1);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  factorials.get(n  -  1);	  return    factorials.get(n);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
185	[BUG]  [BUGGY]  return  this.factorials.get(n);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  this.factorials.get(n);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  this.factorials.get(n);	  return    factorials.get(n);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
186	[BUG]  [BUGGY]  return  n.get(factorials);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  n.get(factorials);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  n.get(factorials);	  return    factorials.get(n);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
187	[BUG]  [BUGGY]  n  =  Math.ceil(factorials[n  +  1]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  n  =  Math.ceil(factorials[n  +  1]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	n  =  Math.ceil(factorials[n  +  1]);	  n    =    Math.floor(factorials[n    +    1]);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
188	[BUG]  [BUGGY]  n  =  Math.floor(factorials[n  +  1]  *  n);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  n  =  Math.floor(factorials[n  +  1]  *  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	n  =  Math.floor(factorials[n  +  1]  *  n);	  n    =    Math.floor(factorials[n    +    1]);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
189	[BUG]  [BUGGY]  final  double  n  =  Math.ceil(Math.log(n));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.ceil(Math.log(n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.ceil(Math.log(n));	  final    double    n    =    Math.floor(Math.log(n));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
190	[BUG]  [BUGGY]  final  double  n  =  Math.log(Math.log(n  +  1));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(Math.log(n  +  1));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(Math.log(n  +  1));	  final    double    n    =    Math.floor(Math.log(n));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
191	[BUG]  [BUGGY]  final  double  n  =  Math.log(Math.PI(n));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(Math.PI(n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(Math.PI(n));	  final    double    n    =    Math.floor(Math.log(n));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
192	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials(n))  /  1.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials(n))  /  1.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials(n))  /  1.0);	  return    Math.log(Math.exp(factorials(n))    +    1.0);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
193	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials(n))  *  1.0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials(n))  *  1.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials(n))  *  1.0);	  return    Math.log(Math.exp(factorials(n))    +    1.0);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
194	[BUG]  [BUGGY]  double  n  =  Math.ceil(factorials.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.ceil(factorials.length);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.ceil(factorials.length);	  int    n    =    Math.ceil(factorials.length);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
195	[BUG]  [BUGGY]  return  Math.floor(Math.exp(n)+  1.0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(n)+  1.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(n)+  1.0);	  return    Math.floor(Math.exp(n)+    0.5);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
196	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[n  +  2]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[n  +  2]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[n  +  2]);	  int    n    =    Math.log(factorials[n    +    1]);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
197	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[n  +  1]  *  n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[n  +  1]  *  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[n  +  1]  *  n);	  int    n    =    Math.log(factorials[n    +    1]);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
198	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[n  +  1]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials[n  +  1]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials[n  +  1]);	  final    double    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
199	[BUG]  [BUGGY]  final  double  n  =  Math.floor(factorials[n]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.floor(factorials[n]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.floor(factorials[n]);	  final    double    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
200	[BUG]  [BUGGY]  double  n  =  Math.ceil(Math.log(factorials[n]));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.ceil(Math.log(factorials[n]));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.ceil(Math.log(factorials[n]));	  double    n    =    Math.ceil(Math.exp(factorials[n]));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
201	[BUG]  [BUGGY]  int  n  =  Math.ceil(factorials[n].doubleValue());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.ceil(factorials[n].doubleValue());  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.ceil(factorials[n].doubleValue());	  int    n    =    Math.floor(factorials[n].doubleValue());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
202	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[n].doubleValue()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.floor(factorials[n].doubleValue()  +  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.floor(factorials[n].doubleValue()  +  1);	  int    n    =    Math.floor(factorials[n].doubleValue());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
203	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials(n  +  1))  /  2.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials(n  +  1))  /  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials(n  +  1))  /  2.0);	  return    Math.log(Math.exp(factorials(n))    /    2.0);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
204	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  0,  n  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[0],  0,  n  +  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0],  0,  n  +  1);	  int    n    =    Math.log(factorials[0],    0,    n);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
205	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  0,  logSum);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[0],  0,  logSum);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0],  0,  logSum);	  int    n    =    Math.log(factorials[0],    0,    n);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
206	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[1],  0,  n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[1],  0,  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[1],  0,  n);	  int    n    =    Math.log(factorials[0],    0,    n);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
207	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  +  1])/  0.5);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n  +  1])/  0.5);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  +  1])/  0.5);	  return    Math.log(Math.exp(factorials[n    +    1])+    0.5);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
208	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  +  1])+  2.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n  +  1])+  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  +  1])+  2.0);	  return    Math.log(Math.exp(factorials[n    +    1])+    0.5);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
209	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials)/  1.0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials)/  1.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials)/  1.0);	  return    Math.log(Math.exp(factorials)+    1.0);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
210	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials)+  n);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials)+  n);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials)+  n);	  return    Math.log(Math.exp(factorials)+    1.0);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
211	[BUG]  [BUGGY]  int  n  =  0,  factorials.length  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  0,  factorials.length  -  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  0,  factorials.length  -  1;	  int    n    =    0,    factorials.length;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
212	[BUG]  [BUGGY]  int  n  =  0,  factorials.length  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  0,  factorials.length  +  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  0,  factorials.length  +  1;	  int    n    =    0,    factorials.length;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
213	[BUG]  [BUGGY]  int  n  =  0,  factorials.length  -  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  0,  factorials.length  -  2;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  0,  factorials.length  -  2;	  int    n    =    0,    factorials.length;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
214	[BUG]  [BUGGY]  double  n  =  0,  factorials.length;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  0,  factorials.length;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  0,  factorials.length;	  int    n    =    0,    factorials.length;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
215	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(statorials));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.exp(statorials));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.exp(statorials));	  double    n    =    Math.floor(Math.exp(statorials));    	non-compiled	[CE]  <identifier>  expected	102	None	replace
216	[BUG]  [BUGGY]  return  Math.log(Math.exp(n)/  2.0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(n)/  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(n)/  2.0);	  return    Math.floor(Math.exp(factorials.length)/    2.0);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
217	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n])/  1.5);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n])/  1.5);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n])/  1.5);	  return    Math.log(Math.exp(factorials[n])/    0.5);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
218	[BUG]  [BUGGY]  double  n  =  n;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  n;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  n;	  int    n    =    n;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
219	[BUG]  [BUGGY]  int  n  =  Math.log(n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(n);	  int    n    =    n;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
220	[BUG]  [BUGGY]  final  double  n  =  Math.log(n  +  1)/  factorials.length  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(n  +  1)/  factorials.length  +  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(n  +  1)/  factorials.length  +  1;	  final    double    n    =    Math.log(n    +    1)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
221	[BUG]  [BUGGY]  final  double  n  =  Math.log(n  *  1)/  factorials.length;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(n  *  1)/  factorials.length;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(n  *  1)/  factorials.length;	  final    double    n    =    Math.log(n    +    1)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
222	[BUG]  [BUGGY]  final  double  n  =  Math.log(n  +  1)/  factorials.length  +  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(n  +  1)/  factorials.length  +  2;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(n  +  1)/  factorials.length  +  2;	  final    double    n    =    Math.log(n    +    1)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
223	[BUG]  [BUGGY]  double  n  =  Math.log(n)+  1.0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(n)+  1.0;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(n)+  1.0;	  double    n    =    Math.log(n)+    0.5;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
224	[BUG]  [BUGGY]  double  n  =  Math.log(n)+  10.0;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(n)+  10.0;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(n)+  10.0;	  double    n    =    Math.log(n)+    0.5;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
225	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  +  n])/  0.5);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n  +  n])/  0.5);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  +  n])/  0.5);	  return    Math.log(Math.exp(factorials[n    +    n])+    0.5);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
226	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  +  n])+  2.0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n  +  n])+  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  +  n])+  2.0);	  return    Math.log(Math.exp(factorials[n    +    n])+    0.5);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
227	[BUG]  [BUGGY]  n  =  Math.ceil(factorials[n]  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  n  =  Math.ceil(factorials[n]  -  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	n  =  Math.ceil(factorials[n]  -  1);	  n    =    Math.ceil(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
228	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(n  +  1));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.exp(n  +  1));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.exp(n  +  1));	  double    n    =    Math.floor(Math.exp(n));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
229	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n))  *  2.0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.log(n))  *  2.0;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.log(n))  *  2.0;	  double    n    =    Math.log(Math.log(n))    *    0.5);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
230	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n))  *  2.0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.log(n))  *  2.0);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.log(n))  *  2.0);	  double    n    =    Math.log(Math.log(n))    *    0.5);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
231	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n  +  0.5))  +  1.0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.log(n  +  0.5))  +  1.0);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.log(n  +  0.5))  +  1.0);	  double    n    =    Math.log(Math.log(n))    +    1.0);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
232	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[n  +  1]  -  n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[n  +  1]  -  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[n  +  1]  -  n);	  int    n    =    Math.log(factorials[n    +    1]);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
233	[BUG]  [BUGGY]  return  factorials.length  -  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  factorials.length  -  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  factorials.length  -  1;	  return    factorials.length;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
234	[BUG]  [BUGGY]  return  factorials.length  -  2;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  factorials.length  -  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  factorials.length  -  2;	  return    factorials.length;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
235	[BUG]  [BUGGY]  return  factorials.length  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  factorials.length  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  factorials.length  +  1;	  return    factorials.length;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
236	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[n].doubleValue()).doubleValue();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[n].doubleValue()).doubleValue();  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[n].doubleValue()).doubleValue();	  int    n    =    Math.log(factorials[n].doubleValue()    +    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
237	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[n])/  factorials.length  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials[n])/  factorials.length  +  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials[n])/  factorials.length  +  1;	  final    double    n    =    Math.log(factorials[n])/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
238	[BUG]  [BUGGY]  final  int  n  =  Math.log(factorials[n])/  factorials.length;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  int  n  =  Math.log(factorials[n])/  factorials.length;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  int  n  =  Math.log(factorials[n])/  factorials.length;	  final    double    n    =    Math.log(factorials[n])/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
239	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(factorials)+  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.exp(factorials)+  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.exp(factorials)+  1);	  double    n    =    Math.log(Math.exp(factorials));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
240	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(factorials)+  0.5);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.exp(factorials)+  0.5);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.exp(factorials)+  0.5);	  double    n    =    Math.log(Math.exp(factorials));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
241	[BUG]  [BUGGY]  return  Math.log(factorials[n]  -  n);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(factorials[n]  -  n);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(factorials[n]  -  n);	  return    Math.log(factorials[n]).doubleValue();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
242	[BUG]  [BUGGY]  return  Math.log(factorials[N]).doubleValue();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(factorials[N]).doubleValue();  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(factorials[N]).doubleValue();	  return    Math.log(factorials[n]).doubleValue();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
243	[BUG]  [BUGGY]  final  int  n  =  Math.log(factorials.length)/  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  int  n  =  Math.log(factorials.length)/  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  int  n  =  Math.log(factorials.length)/  1;	  final    int    n    =    Math.log(factorials.length)/    n;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
244	[BUG]  [BUGGY]  final  int  n  =  Math.log(factorials.length)/  2.0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  int  n  =  Math.log(factorials.length)/  2.0;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  int  n  =  Math.log(factorials.length)/  2.0;	  final    int    n    =    Math.log(factorials.length)/    n;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
245	[BUG]  [BUGGY]  final  int  n  =  Math.log(factorials.length)/  4;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  int  n  =  Math.log(factorials.length)/  4;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  int  n  =  Math.log(factorials.length)/  4;	  final    int    n    =    Math.log(factorials.length)/    n;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
246	[BUG]  [BUGGY]  n  =  Math.floor(factorials[n  +  2]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  n  =  Math.floor(factorials[n  +  2]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	n  =  Math.floor(factorials[n  +  2]);	  n    =    Math.floor(factorials[n    +    1]);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
247	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n)));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.log(n)));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.log(n)));	  double    n    =    Math.floor(Math.floor(n));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
248	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials.length  +  1)/  n;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials.length  +  1)/  n;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials.length  +  1)/  n;	  final    double    n    =    Math.log(n    +    1)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
249	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials[0])/  2.0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(factorials[0])/  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials[0])/  2.0);	  return    Math.floor(Math.exp(factorials[n])/    0.5);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
250	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(factorials[0])+  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.exp(factorials[0])+  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.exp(factorials[0])+  1);	  double    n    =    Math.log(Math.exp(factorials[0]));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
251	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  +  1)+  1.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n  +  1)+  1.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  +  1)+  1.0);	  return    Math.log(Math.exp(factorials[n    +    n])+    1.0);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
252	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[0])/  2.0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[0])/  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[0])/  2.0);	  return    Math.log(Math.exp(factorials[n])/    0.5);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
253	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n))  +  2.0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.log(n))  +  2.0);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.log(n))  +  2.0);	  double    n    =    Math.log(Math.log(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
254	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials.length  /  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.floor(factorials.length  /  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.floor(factorials.length  /  1);	  int    n    =    Math.floor(factorials.length    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
255	[BUG]  [BUGGY]  final  double  n  =  Math.log(FOR_INDEX)/  factorials.length;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(FOR_INDEX)/  factorials.length;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(FOR_INDEX)/  factorials.length;	  final    double    n    =    Math.log(NUMBER_INDEX)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
256	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[0])+  2.0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[0])+  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[0])+  2.0);	  return    Math.log(Math.exp(factorials[n])+    2.0);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
257	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[1],  EPSILON);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[1],  EPSILON);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[1],  EPSILON);	  int    n    =    Math.log(factorials[0],    EPSILON);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
258	[BUG]  [BUGGY]  final  int  n  =  Math.log(factorials[0])/  factorials.length;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  int  n  =  Math.log(factorials[0])/  factorials.length;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  int  n  =  Math.log(factorials[0])/  factorials.length;	  final    double    n    =    Math.log(factorials[0])/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
259	[BUG]  [BUGGY]  final  double  n  =  Math.floor(Math.log(n  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.floor(Math.log(n  +  1));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.floor(Math.log(n  +  1));	  final    double    n    =    Math.floor(Math.log(n));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
260	[BUG]  [BUGGY]  final  double  n  =  Math.log(Math.log(n))  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(Math.log(n))  +  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(Math.log(n))  +  1;	  final    double    n    =    Math.floor(Math.log(n));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
261	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials(n))/  2.0  +  n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials(n))/  2.0  +  n);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials(n))/  2.0  +  n);	  return    Math.log(Math.exp(factorials(n))    /    2.0);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
262	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials(n  +  1))  *  0.5);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials(n  +  1))  *  0.5);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials(n  +  1))  *  0.5);	  return    Math.log(Math.exp(factorials(n))    *    0.5);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
263	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials(n  +  1))  *  0.5);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(factorials(n  +  1))  *  0.5);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials(n  +  1))  *  0.5);	  return    Math.floor(Math.exp(factorials(n))    *    0.5);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
264	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials.length)/  n  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials.length)/  n  +  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials.length)/  n  +  1;	  final    double    n    =    Math.log(n)/    factorials.length    +    1;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
265	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials.length)/  factorials.length  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials.length)/  factorials.length  +  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials.length)/  factorials.length  +  1;	  final    double    n    =    Math.log(n)/    factorials.length    +    1;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
266	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[n  +  1])/  factorials.length  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials[n  +  1])/  factorials.length  +  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials[n  +  1])/  factorials.length  +  1;	  final    double    n    =    Math.log(n)/    factorials.length    +    1;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
267	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[N])/  2.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[N])/  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[N])/  2.0);	  return    Math.log(Math.exp(factorials[n])/    1.0);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
268	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials.length)/  n  +  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials.length)/  n  +  2;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials.length)/  n  +  2;	  final    double    n    =    Math.log(n)/    factorials.length    +    2;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
269	[BUG]  [BUGGY]  return  Math.log(Math.exp(0,  n)+  1.0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(0,  n)+  1.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(0,  n)+  1.0);	  return    Math.log(Math.exp(factorials)+    1.0);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
270	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials.length)/  2.0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials.length)/  2.0;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials.length)/  2.0;	  final    double    n    =    Math.log(factorials.length)/    n;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
271	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials.length)/  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials.length)/  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials.length)/  1;	  final    double    n    =    Math.log(factorials.length)/    n;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
272	[BUG]  [BUGGY]  double  n  =  Math.log(factorials[0]  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(factorials[0]  -  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(factorials[0]  -  1);	  double    n    =    Math.log(factorials[0]);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
273	[BUG]  [BUGGY]  return  factorials.size()  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  factorials.size()  -  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  factorials.size()  -  1;	  return    factorials.size();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
274	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  0,  n  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[0],  0,  n  -  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0],  0,  n  -  1);	  int    n    =    Math.log(factorials[0],    0,    n);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
275	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  0,  factorials.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[0],  0,  factorials.length);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0],  0,  factorials.length);	  int    n    =    Math.log(factorials[0],    0,    n);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
276	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[0])+  1.0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[0])+  1.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[0])+  1.0);	  return    Math.log(Math.exp(factorials[n])+    1.0);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
277	[BUG]  [BUGGY]  double  n  =  Math.log(n  +  0.5);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(n  +  0.5);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(n  +  0.5);	  double    n    =    Math.log(n)+    0.5;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
278	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials[0])+  2.0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(factorials[0])+  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials[0])+  2.0);	  return    Math.floor(Math.exp(factorials[n])+    2.0);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
279	[BUG]  [BUGGY]  int  n  =  factorials.length  /  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  factorials.length  /  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  factorials.length  /  1;	  int    n    =    factorials.length    -    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
280	[BUG]  [BUGGY]  int  n  =  factorials.length  -  1  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  factorials.length  -  1  +  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  factorials.length  -  1  +  1;	  int    n    =    factorials.length    -    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
281	[BUG]  [BUGGY]  return  factorials[n  +  1];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  factorials[n  +  1];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  factorials[n  +  1];	  return    factorials[n];    	non-compiled	[CE]  <identifier>  expected	76	None	replace
282	[BUG]  [BUGGY]  return  n  <  factorials.length;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  n  <  factorials.length;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  n  <  factorials.length;	  return    factorials[n];    	non-compiled	[CE]  <identifier>  expected	76	None	replace
283	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.log(n  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.floor(Math.log(n  +  1));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.log(n  +  1));	  double    n    =    Math.floor(Math.log(n));    	non-compiled	[CE]  <identifier>  expected	49	None	replace
284	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[0]),  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[0]),  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.exp(factorials[0]),  n);	  double    n    =    Math.floor(Math.exp(factorials[n]),    n);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
285	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials.length  -  1)+  2.0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(factorials.length  -  1)+  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials.length  -  1)+  2.0);	  return    Math.floor(Math.exp(factorials.length)+    2.0);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
286	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials,  0,  n));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.floor(Math.exp(factorials,  0,  n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.exp(factorials,  0,  n));	  double    n    =    Math.floor(Math.exp(factorials,    n));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
287	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials.length)+  2.0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials.length)+  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials.length)+  2.0);	  return    Math.log(Math.exp(factorials.length)+    0.5);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
288	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n])/  2.0).logSum();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n])/  2.0).logSum();  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n])/  2.0).logSum();	  return    Math.log(Math.exp(factorials[n])/    2.0);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
289	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials.length  *  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.floor(factorials.length  *  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.floor(factorials.length  *  1);	  int    n    =    Math.floor(factorials.length    +    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
290	[BUG]  [BUGGY]  double  n  =  Math.log(Math.floor(n  +  1));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.floor(n  +  1));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.floor(n  +  1));	  double    n    =    Math.floor(Math.floor(n));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
291	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials[n]  -  1)/  2.0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(factorials[n]  -  1)/  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials[n]  -  1)/  2.0);	  return    Math.floor(Math.exp(factorials[n])/    2.0);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
292	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n  -  1))  *  0.5);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.log(n  -  1))  *  0.5);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.log(n  -  1))  *  0.5);	  double    n    =    Math.log(Math.log(n))    *    0.5);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
293	[BUG]  [BUGGY]  final  int  n  =  Math.log(n  +  1)/  factorials.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  int  n  =  Math.log(n  +  1)/  factorials.length;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  int  n  =  Math.log(n  +  1)/  factorials.length;	  final    double    n    =    Math.log(n    +    1)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
294	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[0],  n  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.floor(factorials[0],  n  -  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.floor(factorials[0],  n  -  1);	  int    n    =    Math.floor(factorials[0],    n);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
295	[BUG]  [BUGGY]  final  int  n  =  Math.log(NUMBER_INDEX)/  factorials.length;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  int  n  =  Math.log(NUMBER_INDEX)/  factorials.length;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  int  n  =  Math.log(NUMBER_INDEX)/  factorials.length;	  final    double    n    =    Math.log(NUMBER_INDEX)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
296	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials(n  -  1))  +  2.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials(n  -  1))  +  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials(n  -  1))  +  2.0);	  return    Math.log(Math.exp(factorials(n))    +    2.0);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
297	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  -  1])/  2.0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n  -  1])/  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  -  1])/  2.0);	  return    Math.log(Math.exp(factorials[n    -    1])+    1.0);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
298	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n]  /  2.0)/  2.0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n]  /  2.0)/  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n]  /  2.0)/  2.0);	  return    Math.log(Math.exp(factorials[n])/    2.0);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
299	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials.length)/  0.01);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials.length)/  0.01);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials.length)/  0.01);	  return    Math.log(Math.exp(factorials.length)+    0.5);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
300	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials.length)/  0.25);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials.length)/  0.25);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials.length)/  0.25);	  return    Math.log(Math.exp(factorials.length)+    0.5);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
301	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  n  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[0],  n  -  1);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0],  n  -  1);	  int    n    =    Math.log(factorials[0],    n    +    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
302	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials[N])/  2.0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(factorials[N])/  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials[N])/  2.0);	  return    Math.floor(Math.exp(factorials[n])+    2.0);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
303	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  n  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[0],  n  -  2);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0],  n  -  2);	  int    n    =    Math.log(factorials[0],    n    +    2);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
304	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  n  /  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[0],  n  /  2);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0],  n  /  2);	  int    n    =    Math.log(factorials[0],    n    +    2);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
305	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials.length  +  n));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials.length  +  n));  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials.length  +  n));	  return    Math.log(Math.exp(factorials.length)+    n);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
306	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials.length)+  EPSILON);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials.length)+  EPSILON);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials.length)+  EPSILON);	  return    Math.log(Math.exp(factorials.length)+    n);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
307	[BUG]  [BUGGY]  return  factorials[0];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  factorials[0];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  factorials[0];	  return    factorials[n];    	non-compiled	[CE]  <identifier>  expected	76	None	replace
308	[BUG]  [BUGGY]  final  int  n  =  Math.log(factorials.length  +  1)/  n;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  int  n  =  Math.log(factorials.length  +  1)/  n;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  int  n  =  Math.log(factorials.length  +  1)/  n;	  final    int    n    =    Math.log(factorials.length)/    n;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
309	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials(n  +  1))  /  2.0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(factorials(n  +  1))  /  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials(n  +  1))  /  2.0);	  return    Math.floor(Math.exp(factorials(n))    /    2.0);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
310	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials(n  -  1))  /  2.0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(factorials(n  -  1))  /  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials(n  -  1))  /  2.0);	  return    Math.floor(Math.exp(factorials(n))    /    2.0);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
311	[BUG]  [BUGGY]  return  Math.floor(Math.exp(n  +  0.5));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(n  +  0.5));  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(n  +  0.5));	  return    Math.floor(Math.exp(n)+    0.5);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
312	[BUG]  [BUGGY]  final  int  n  =  Math.floor(Math.log(n));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  int  n  =  Math.floor(Math.log(n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  int  n  =  Math.floor(Math.log(n));	  final    double    n    =    Math.floor(Math.floor(n));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
313	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[0]  *  n));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[0]  *  n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.exp(factorials[0]  *  n));	  double    n    =    Math.floor(Math.exp(factorials[0]    +    n));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
314	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[0]  +  EPSILON));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[0]  +  EPSILON));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.exp(factorials[0]  +  EPSILON));	  double    n    =    Math.floor(Math.exp(factorials[0]    +    n));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
315	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n]  /  EPSILON)/  2.0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n]  /  EPSILON)/  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n]  /  EPSILON)/  2.0);	  return    Math.log(Math.exp(factorials[n])/    0.5);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
316	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n]  +  n)/  2.0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n]  +  n)/  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n]  +  n)/  2.0);	  return    Math.log(Math.exp(factorials[n])/    0.5);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
317	[BUG]  [BUGGY]  int  n  =  Math.floor(Math.exp(n));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.floor(Math.exp(n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.floor(Math.exp(n));	  double    n    =    Math.floor(Math.exp(n));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
318	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials,  EPSILON));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.floor(Math.exp(factorials,  EPSILON));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.exp(factorials,  EPSILON));	  double    n    =    Math.floor(Math.exp(factorials,    n));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
319	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(factorials,  EPSILON));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.exp(factorials,  EPSILON));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.exp(factorials,  EPSILON));	  double    n    =    Math.floor(Math.exp(factorials,    n));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
320	[BUG]  [BUGGY]  int  n  =  Math.ceil(Math.exp(factorials));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.ceil(Math.exp(factorials));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.ceil(Math.exp(factorials));	  double    n    =    Math.ceil(Math.exp(factorials));    	non-compiled	[CE]  <identifier>  expected	23	None	replace
321	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials.length  +  n)+  1.0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials.length  +  n)+  1.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials.length  +  n)+  1.0);	  return    Math.log(Math.exp(factorials.length)+    1.0);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
322	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials.length  -  n)+  1.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials.length  -  n)+  1.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials.length  -  n)+  1.0);	  return    Math.log(Math.exp(factorials.length)+    1.0);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
323	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials[0])+  1.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(factorials[0])+  1.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials[0])+  1.0);	  return    Math.floor(Math.exp(factorials[n])+    1.0);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
324	[BUG]  [BUGGY]  return  Math.floor(Math.exp(n  -  factorials.length)/  2.0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(n  -  factorials.length)/  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(n  -  factorials.length)/  2.0);	  return    Math.floor(Math.exp(factorials.length)/    2.0);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
325	[BUG]  [BUGGY]  final  double  n  =  Math.log(Math.log(n  -  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(Math.log(n  -  1));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(Math.log(n  -  1));	  final    double    n    =    Math.floor(Math.log(n));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
326	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[n])/  EPSILON;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(factorials[n])/  EPSILON;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials[n])/  EPSILON;	  final    double    n    =    Math.log(factorials[n])/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
327	[BUG]  [BUGGY]  final  double  n  =  Math.floor(factorials[0]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.floor(factorials[0]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.floor(factorials[0]);	  final    double    n    =    Math.log(factorials[0]);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
328	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[n  +  3]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[n  +  3]);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[n  +  3]);	  int    n    =    Math.log(factorials[n    +    1]);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
329	[BUG]  [BUGGY]  double  n  =  Math.log(Math.ceil(factorials));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.ceil(factorials));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.ceil(factorials));	  double    n    =    Math.log(Math.exp(factorials));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
330	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials(n  -  1))  /  2.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials(n  -  1))  /  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials(n  -  1))  /  2.0);	  return    Math.log(Math.exp(factorials(n))    /    2.0);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
331	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  -  1])/  0.01);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n  -  1])/  0.01);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  -  1])/  0.01);	  return    Math.log(Math.exp(factorials[n    -    1])+    0.5);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
332	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials[n])/  3.0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.floor(Math.exp(factorials[n])/  3.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials[n])/  3.0);	  return    Math.floor(Math.exp(factorials[n])/    0.5);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
333	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  EPSILON,  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[0],  EPSILON,  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0],  EPSILON,  n);	  int    n    =    Math.log(factorials[0],    EPSILON);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
334	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[n]  -  1,  n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.log(factorials[n]  -  1,  n);  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[n]  -  1,  n);	  int    n    =    Math.log(factorials[n]    -    1);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
335	[BUG]  [BUGGY]  int  n  =  Math.ceil(Math.exp(n));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  int  n  =  Math.ceil(Math.exp(n));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.ceil(Math.exp(n));	  double    n    =    Math.ceil(Math.exp(n));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
336	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials(n  -  1))  +  1.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials(n  -  1))  +  1.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials(n  -  1))  +  1.0);	  return    Math.log(Math.exp(factorials(n))    +    1.0);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
337	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials(n  -  1))  *  0.5);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials(n  -  1))  *  0.5);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials(n  -  1))  *  0.5);	  return    Math.log(Math.exp(factorials(n))    *    0.5);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
338	[BUG]  [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length  /  2  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length  /  2  +  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(n)/  factorials.length  /  2  +  1;	  final    double    n    =    Math.log(n)/    factorials.length    +    1;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
339	[BUG]  [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length  *  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length  *  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(n)/  factorials.length  *  1;	  final    double    n    =    Math.log(n)/    factorials.length    +    1;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
340	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  +  1])/  0.01);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n  +  1])/  0.01);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  +  1])/  0.01);	  return    Math.log(Math.exp(factorials[n    +    1])+    0.5);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
341	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  +  1])/  2.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n  +  1])/  2.0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  +  1])/  2.0);	  return    Math.log(Math.exp(factorials[n    +    1])+    0.5);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
342	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  +  1])/  0.25);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  return  Math.log(Math.exp(factorials[n  +  1])/  0.25);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  +  1])/  0.25);	  return    Math.log(Math.exp(factorials[n    +    1])+    0.5);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
343	[BUG]  [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX)-  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX)-  1;  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(NUMBER_INDEX)-  1;	  final    double    n    =    Math.log(NUMBER_INDEX);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
344	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n  -  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }      [BUGGY]  double  n  =  Math.log(Math.log(n  -  1));  [BUGGY]      return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.log(n  -  1));	  double    n    =    Math.floor(Math.log(n));    	non-compiled	[CE]  <identifier>  expected	49	None	replace
