bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  n  =  Math.log(n)+  0.5);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.log(n)+  0.5);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(n)+  0.5);	      double    n    =    Math.floor(Math.log(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
2	[BUG]  [BUGGY]  double  n  =  Math.ceil(Math.log(n))  +  0.5);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.ceil(Math.log(n))  +  0.5);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.ceil(Math.log(n))  +  0.5);	      double    n    =    Math.floor(Math.log(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
3	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.log(n))  +  1.0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.floor(Math.log(n))  +  1.0);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.log(n))  +  1.0);	      double    n    =    Math.floor(Math.log(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
4	[BUG]  [BUGGY]  return  Math.max(factorials.length,  n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.max(factorials.length,  n);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.max(factorials.length,  n);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
5	[BUG]  [BUGGY]  return  factorials.doubleValue();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  factorials.doubleValue();  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  factorials.doubleValue();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
6	[BUG]  [BUGGY]  return  factorials.length;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  factorials.length;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  factorials.length;	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
7	[BUG]  [BUGGY]  return  Math.log(factorials[n]).doubleValue();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(factorials[n]).doubleValue();  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(factorials[n]).doubleValue();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
8	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(factorials[0]));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.log(Math.exp(factorials[0]));  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.exp(factorials[0]));	      double    n    =    Math.floor(Math.exp(factorials[0]));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
9	[BUG]  [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials[0]));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials[0]));  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.ceil(Math.exp(factorials[0]));	      double    n    =    Math.floor(Math.exp(factorials[0]));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
10	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[1]));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[1]));  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.exp(factorials[1]));	      double    n    =    Math.floor(Math.exp(factorials[0]));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
11	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n])/  0.5);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials[n])/  0.5);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n])/  0.5);	  return    Math.log(Math.exp(factorials[n])+    0.5);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
12	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n])+  1.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials[n])+  1.0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n])+  1.0);	  return    Math.log(Math.exp(factorials[n])+    0.5);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
13	[BUG]  [BUGGY]  int  n  =  Math.log(factorials.length);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  Math.log(factorials.length);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials.length);	      int    n    =    Math.floor(factorials.length);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
14	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials.length  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  Math.floor(factorials.length  +  1);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.floor(factorials.length  +  1);	      int    n    =    Math.floor(factorials.length);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
15	[BUG]  [BUGGY]  int  n  =  Math.ceil(factorials.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  Math.ceil(factorials.length);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.ceil(factorials.length);	      int    n    =    Math.floor(factorials.length);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
16	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials.length  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  Math.floor(factorials.length  -  1);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.floor(factorials.length  -  1);	      int    n    =    Math.floor(factorials.length);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
17	[BUG]  [BUGGY]  int  n  =  n;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  n;  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  n;	      int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
18	[BUG]  [BUGGY]  int  n  =  factorials.length  -  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  factorials.length  -  1;  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  factorials.length  -  1;	      int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
19	[BUG]  [BUGGY]  int  n  =  this.factorials.length;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  this.factorials.length;  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  this.factorials.length;	      int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
20	[BUG]  [BUGGY]  int  n  =  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  0;  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  0;	      int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
21	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(factorials));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.log(Math.exp(factorials));  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.exp(factorials));	      double    n    =    Math.floor(Math.exp(factorials));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
22	[BUG]  [BUGGY]  double  n  =  Math.ceil(Math.exp(n));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.ceil(Math.exp(n));  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.ceil(Math.exp(n));	      double    n    =    Math.floor(Math.exp(factorials));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
23	[BUG]  [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials));  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.ceil(Math.exp(factorials));	      double    n    =    Math.floor(Math.exp(factorials));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
24	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(n));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.floor(Math.exp(n));  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.exp(n));	      double    n    =    Math.floor(Math.exp(factorials));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
25	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  n  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  Math.log(factorials[0],  n  +  1);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0],  n  +  1);	      int    n    =    Math.log(factorials[0],    n);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
26	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[1],  n);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  Math.log(factorials[1],  n);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[1],  n);	      int    n    =    Math.log(factorials[0],    n);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
27	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[0],  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  Math.floor(factorials[0],  n);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.floor(factorials[0],  n);	      int    n    =    Math.log(factorials[0],    n);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
28	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  n  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  Math.log(factorials[0],  n  +  2);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0],  n  +  2);	      int    n    =    Math.log(factorials[0],    n);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
29	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials.length)+  1.0);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials.length)+  1.0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials.length)+  1.0);	  return    Math.log(Math.exp(factorialLog(n))    +    1.0);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
30	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n])/  1.0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials[n])/  1.0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n])/  1.0);	  return    Math.log(Math.exp(factorialLog(n))    +    1.0);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
31	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials)+  1.0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials)+  1.0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials)+  1.0);	  return    Math.log(Math.exp(factorialLog(n))    +    1.0);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
32	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[n].doubleValue()  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  Math.log(factorials[n].doubleValue()  +  1);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[n].doubleValue()  +  1);	      int    n    =    Math.log(factorials[n].doubleValue());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
33	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[n].doubleValue());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  Math.floor(factorials[n].doubleValue());  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.floor(factorials[n].doubleValue());	      int    n    =    Math.log(factorials[n].doubleValue());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
34	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0].doubleValue());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  Math.log(factorials[0].doubleValue());  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0].doubleValue());	      int    n    =    Math.log(factorials[n].doubleValue());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
35	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials[n])/  0.5);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.floor(Math.exp(factorials[n])/  0.5);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials[n])/  0.5);	  return    Math.floor(Math.exp(factorials[n])+    0.5);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
36	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials[n])+  1.0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.floor(Math.exp(factorials[n])+  1.0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials[n])+  1.0);	  return    Math.floor(Math.exp(factorials[n])+    0.5);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
37	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0]);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  Math.log(factorials[0]);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0]);	      int    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[n  +  1]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  Math.log(factorials[n  +  1]);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[n  +  1]);	      int    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
39	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[n]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  Math.floor(factorials[n]);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.floor(factorials[n]);	      int    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
40	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials(n))  +  1.0);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.floor(Math.exp(factorials(n))  +  1.0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials(n))  +  1.0);	  return    Math.floor(Math.exp(factorials(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
41	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials(n))  *  0.5);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.floor(Math.exp(factorials(n))  *  0.5);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials(n))  *  0.5);	  return    Math.floor(Math.exp(factorials(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
42	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials(n))  /  0.5);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.floor(Math.exp(factorials(n))  /  0.5);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials(n))  /  0.5);	  return    Math.floor(Math.exp(factorials(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
43	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials.length)+  0.5);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials.length)+  0.5);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials.length)+  0.5);	  return    Math.log(Math.exp(factorialLog(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
44	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  +  1])+  0.5);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials[n  +  1])+  0.5);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  +  1])+  0.5);	  return    Math.log(Math.exp(factorialLog(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
45	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(factorials[n]));  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.log(Math.exp(factorials[n]));  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.exp(factorials[n]));	      double    n    =    Math.floor(Math.exp(factorials[n]));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
46	[BUG]  [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials[n]));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials[n]));  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.ceil(Math.exp(factorials[n]));	      double    n    =    Math.floor(Math.exp(factorials[n]));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
47	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[n])+  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[n])+  1);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.exp(factorials[n])+  1);	      double    n    =    Math.floor(Math.exp(factorials[n]));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
48	[BUG]  [BUGGY]  double  n  =  Math.log(factorials[n]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.log(factorials[n]);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(factorials[n]);	      double    n    =    Math.log(n);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
49	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.log(n));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.floor(Math.log(n));  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.log(n));	      double    n    =    Math.log(n);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
50	[BUG]  [BUGGY]  double  n  =  Math.log(factorials.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.log(factorials.length);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(factorials.length);	      double    n    =    Math.log(n);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
51	[BUG]  [BUGGY]  return  Math.floor(Math.exp(n)+  0.5);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.floor(Math.exp(n)+  0.5);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(n)+  0.5);	  return    Math.floor(Math.exp(factorials.length)+    0.5);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
52	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials.length)/  0.5);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.floor(Math.exp(factorials.length)/  0.5);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials.length)/  0.5);	  return    Math.floor(Math.exp(factorials.length)+    0.5);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
53	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials.length)+  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials.length)+  n);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials.length)+  n);	  return    Math.floor(Math.exp(factorials.length)+    0.5);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
54	[BUG]  [BUGGY]  final  double  n  =  Math.floor(Math.log(n));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  final  double  n  =  Math.floor(Math.log(n));  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.floor(Math.log(n));	      final    double    n    =    Math.log(n);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
55	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[n]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  final  double  n  =  Math.log(factorials[n]);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials[n]);	      final    double    n    =    Math.log(n);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
56	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  final  double  n  =  Math.log(factorials.length);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials.length);	      final    double    n    =    Math.log(n);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
57	[BUG]  [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(NUMBER_INDEX);	      final    double    n    =    Math.log(n);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
58	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials(n))  +  1.0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials(n))  +  1.0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials(n))  +  1.0);	  return    Math.log(Math.exp(factorials(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
59	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials(n))  *  0.5);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials(n))  *  0.5);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials(n))  *  0.5);	  return    Math.log(Math.exp(factorials(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
60	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials(n))  /  0.5);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials(n))  /  0.5);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials(n))  /  0.5);	  return    Math.log(Math.exp(factorials(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
61	[BUG]  [BUGGY]  n  =  Math.log(factorials[n]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  n  =  Math.log(factorials[n]);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	n  =  Math.log(factorials[n]);	      n    =    Math.floor(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
62	[BUG]  [BUGGY]  n  =  Math.ceil(factorials[n]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  n  =  Math.ceil(factorials[n]);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	n  =  Math.ceil(factorials[n]);	      n    =    Math.floor(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
63	[BUG]  [BUGGY]  n  =  Math.floor(factorials[n  +  1]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  n  =  Math.floor(factorials[n  +  1]);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	n  =  Math.floor(factorials[n  +  1]);	      n    =    Math.floor(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
64	[BUG]  [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length  +  1;  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(n)/  factorials.length  +  1;	      final    double    n    =    Math.log(n)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
65	[BUG]  [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length  +  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length  +  2;  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(n)/  factorials.length  +  2;	      final    double    n    =    Math.log(n)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
66	[BUG]  [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX)/  factorials.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  final  double  n  =  Math.log(NUMBER_INDEX)/  factorials.length;  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(NUMBER_INDEX)/  factorials.length;	      final    double    n    =    Math.log(n)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
67	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[1]);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  Math.log(factorials[1]);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[1]);	      int    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
68	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[n]  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  Math.log(factorials[n]  -  1);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[n]  -  1);	      int    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
69	[BUG]  [BUGGY]  n  =  Math.floor(factorials[0]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  n  =  Math.floor(factorials[0]);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	n  =  Math.floor(factorials[0]);	      n    =    Math.floor(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
70	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials[n])+  2.0);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.floor(Math.exp(factorials[n])+  2.0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials[n])+  2.0);	  return    Math.floor(Math.exp(factorials[n])+    0.5);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
71	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  +  n])+  0.5);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials[n  +  n])+  0.5);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  +  n])+  0.5);	  return    Math.log(Math.exp(factorialLog(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
72	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  -  1])+  0.5);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials[n  -  1])+  0.5);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  -  1])+  0.5);	  return    Math.log(Math.exp(factorialLog(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
73	[BUG]  [BUGGY]  int  n  =  0,  factorials.length;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  0,  factorials.length;  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  0,  factorials.length;	      int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
74	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials.length)+  2.0);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.floor(Math.exp(factorials.length)+  2.0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials.length)+  2.0);	  return    Math.floor(Math.exp(factorials.length)+    0.5);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
75	[BUG]  [BUGGY]  return  factorials.size();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  factorials.size();  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  factorials.size();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
76	[BUG]  [BUGGY]  return  factorials[n];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  factorials[n];  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  factorials[n];	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
77	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[0]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  final  double  n  =  Math.log(factorials[0]);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials[0]);	      final    double    n    =    Math.log(n);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
78	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials,  n));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.floor(Math.exp(factorials,  n));  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.exp(factorials,  n));	      double    n    =    Math.floor(Math.exp(factorials));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
79	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  -  1])+  1.0);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials[n  -  1])+  1.0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  -  1])+  1.0);	  return    Math.log(Math.exp(factorialLog(n))    +    1.0);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
80	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n  +  n])+  1.0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials[n  +  n])+  1.0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n  +  n])+  1.0);	  return    Math.log(Math.exp(factorialLog(n))    +    1.0);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
81	[BUG]  [BUGGY]  double  n  =  Math.log(factorials[0]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.log(factorials[0]);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(factorials[0]);	      double    n    =    Math.log(n);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
82	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials.length)/  n;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  final  double  n  =  Math.log(factorials.length)/  n;  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials.length)/  n;	      final    double    n    =    Math.log(n)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
83	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[n])/  factorials.length;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  final  double  n  =  Math.log(factorials[n])/  factorials.length;  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials[n])/  factorials.length;	      final    double    n    =    Math.log(n)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
84	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[0])/  factorials.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  final  double  n  =  Math.log(factorials[0])/  factorials.length;  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(factorials[0])/  factorials.length;	      final    double    n    =    Math.log(n)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
85	[BUG]  [BUGGY]  final  int  n  =  Math.log(factorials.length)/  n;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  final  int  n  =  Math.log(factorials.length)/  n;  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  int  n  =  Math.log(factorials.length)/  n;	      final    double    n    =    Math.log(n)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
86	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n))  +  0.5);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.log(Math.log(n))  +  0.5);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.log(n))  +  0.5);	      double    n    =    Math.floor(Math.log(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
87	[BUG]  [BUGGY]  double  n  =  Math.log(n)+  0.5;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.log(n)+  0.5;  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(n)+  0.5;	      double    n    =    Math.floor(Math.log(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
88	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n])+  2.0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials[n])+  2.0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n])+  2.0);	  return    Math.log(Math.exp(factorials[n])+    0.5);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
89	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  0,  n);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  Math.log(factorials[0],  0,  n);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0],  0,  n);	      int    n    =    Math.log(factorials[0],    n);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
90	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials(n))  +  2.0);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.floor(Math.exp(factorials(n))  +  2.0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials(n))  +  2.0);	  return    Math.floor(Math.exp(factorials(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
91	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials(n))  +  2.0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials(n))  +  2.0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials(n))  +  2.0);	  return    Math.log(Math.exp(factorials(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
92	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials(n))  /  2.0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials(n))  /  2.0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials(n))  /  2.0);	  return    Math.log(Math.exp(factorials(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
93	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n])/  2.0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials[n])/  2.0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n])/  2.0);	  return    Math.log(Math.exp(factorials[n])+    0.5);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
94	[BUG]  [BUGGY]  return  Math.log(Math.exp(factorials[n])/  0.01);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.log(Math.exp(factorials[n])/  0.01);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.log(Math.exp(factorials[n])/  0.01);	  return    Math.log(Math.exp(factorials[n])+    0.5);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
95	[BUG]  [BUGGY]  return  factorials.get(n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  factorials.get(n);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  factorials.get(n);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
96	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials(n))  /  2.0);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.floor(Math.exp(factorials(n))  /  2.0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials(n))  /  2.0);	  return    Math.floor(Math.exp(factorials(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
97	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[n]),  n);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[n]),  n);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.exp(factorials[n]),  n);	      double    n    =    Math.floor(Math.exp(factorials[n]));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
98	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.floor(n));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.floor(Math.floor(n));  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.floor(n));	      double    n    =    Math.log(n);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
99	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials[n])/  2.0);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.floor(Math.exp(factorials[n])/  2.0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials[n])/  2.0);	  return    Math.floor(Math.exp(factorials[n])+    0.5);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
100	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n))  +  1.0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.log(Math.log(n))  +  1.0);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.log(n))  +  1.0);	      double    n    =    Math.floor(Math.log(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
101	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n))  *  0.5);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.log(Math.log(n))  *  0.5);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.log(Math.log(n))  *  0.5);	      double    n    =    Math.floor(Math.log(n))    +    0.5);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
102	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(statorials));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.floor(Math.exp(statorials));  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.exp(statorials));	      double    n    =    Math.floor(Math.exp(factorials));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
103	[BUG]  [BUGGY]  final  double  n  =  Math.log(n  +  1)/  factorials.length;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  final  double  n  =  Math.log(n  +  1)/  factorials.length;  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.log(n  +  1)/  factorials.length;	      final    double    n    =    Math.log(n)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
104	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[0]  +  n));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[0]  +  n));  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	double  n  =  Math.floor(Math.exp(factorials[0]  +  n));	      double    n    =    Math.floor(Math.exp(factorials[0]));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
105	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials.length)/  2.0);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.floor(Math.exp(factorials.length)/  2.0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials.length)/  2.0);	  return    Math.floor(Math.exp(factorials.length)+    0.5);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
106	[BUG]  [BUGGY]  return  Math.floor(Math.exp(factorials.length)/  0.01);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  return  Math.floor(Math.exp(factorials.length)/  0.01);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	return  Math.floor(Math.exp(factorials.length)/  0.01);	  return    Math.floor(Math.exp(factorials.length)+    0.5);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
107	[BUG]  [BUGGY]  final  double  n  =  Math.floor(Math.floor(n));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  final  double  n  =  Math.floor(Math.floor(n));  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	final  double  n  =  Math.floor(Math.floor(n));	      final    double    n    =    Math.log(n);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
108	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  EPSILON);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }    [BUGGY]  int  n  =  Math.log(factorials[0],  EPSILON);  [BUGGY]    return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	int  n  =  Math.log(factorials[0],  EPSILON);	      int    n    =    Math.log(factorials[0],    n);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
