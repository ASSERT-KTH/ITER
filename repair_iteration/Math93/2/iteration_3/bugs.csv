bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  int  result  =  Math.round(factorials.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int  result  =  Math.round(factorials.length);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  result  =  Math.round(factorials.length);	  final    long    result    =    Math.round(factorials.length);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
2	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials,  n);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  result  =  Math.round(factorials,  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials,  n);	  final    long    result    =    Math.round(factorials.length);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
3	[BUG]  [BUGGY]  final  int  n  =  Math.min(factorials.length,  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int  n  =  Math.min(factorials.length,  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  n  =  Math.min(factorials.length,  1);	  final    int    n    =    Math.min(factorials.length,    0);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
4	[BUG]  [BUGGY]  final  int  n  =  Math.min(factorials.length,  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int  n  =  Math.min(factorials.length,  2);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  n  =  Math.min(factorials.length,  2);	  final    int    n    =    Math.min(factorials.length,    0);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
5	[BUG]  [BUGGY]  final  int  n  =  Math.min(factorials.length,  0,  n);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int  n  =  Math.min(factorials.length,  0,  n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  n  =  Math.min(factorials.length,  0,  n);	  final    int    n    =    Math.min(factorials.length,    0);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
6	[BUG]  [BUGGY]  final  int  n  =  Math.min(factorials.length,  3);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int  n  =  Math.min(factorials.length,  3);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  n  =  Math.min(factorials.length,  3);	  final    int    n    =    Math.min(factorials.length,    0);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
7	[BUG]  [BUGGY]  final  double  result  =  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  double  result  =  Math.round(factorials[n]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  double  result  =  Math.round(factorials[n]);	  final    double    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
8	[BUG]  [BUGGY]  final  double  result  =  Math.round(factorials.length,  n));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  double  result  =  Math.round(factorials.length,  n));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  double  result  =  Math.round(factorials.length,  n));	  final    double    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  ';'  expected	54	None	replace
9	[BUG]  [BUGGY]  long[]  factorials  =  getFunctionValues(n);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getFunctionValues(n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getFunctionValues(n);	  long[]    factorials    =    getFunctionValues();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
10	[BUG]  [BUGGY]  int[]  factorials  =  getFunctionValues();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  getFunctionValues();  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  getFunctionValues();	  long[]    factorials    =    getFunctionValues();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
11	[BUG]  [BUGGY]  short[]  factorials  =  getFunctionValues();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  short[]  factorials  =  getFunctionValues();  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short[]  factorials  =  getFunctionValues();	  long[]    factorials    =    getFunctionValues();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
12	[BUG]  [BUGGY]  int  result  =  Math.round(factorials.length,  n);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  result  =  Math.round(factorials.length,  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  result  =  Math.round(factorials.length,  n);	  long    result    =    Math.round(factorials.length,    n);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
13	[BUG]  [BUGGY]  long  result  =  Math.round(factorials.length,  n  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  result  =  Math.round(factorials.length,  n  +  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials.length,  n  +  1);	  long    result    =    Math.round(factorials.length,    n);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
14	[BUG]  [BUGGY]  short  result  =  Math.round(factorials.length,  n);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  short  result  =  Math.round(factorials.length,  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short  result  =  Math.round(factorials.length,  n);	  long    result    =    Math.round(factorials.length,    n);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
15	[BUG]  [BUGGY]  final  int[]  factorials  =  getFactorials(n);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int[]  factorials  =  getFactorials(n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int[]  factorials  =  getFactorials(n);	  final    long[]    factorials    =    getFactorials(n);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
16	[BUG]  [BUGGY]  final  long[]  factorials  =  getFactorials(n,  n);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long[]  factorials  =  getFactorials(n,  n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long[]  factorials  =  getFactorials(n,  n);	  final    long[]    factorials    =    getFactorials(n);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
17	[BUG]  [BUGGY]  final  long[]  factorials  =  getFactorials(n,  NS);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long[]  factorials  =  getFactorials(n,  NS);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long[]  factorials  =  getFactorials(n,  NS);	  final    long[]    factorials    =    getFactorials(n);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
18	[BUG]  [BUGGY]  final  long[]  factorials  =  getFactorials(n,  0);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long[]  factorials  =  getFactorials(n,  0);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long[]  factorials  =  getFactorials(n,  0);	  final    long[]    factorials    =    getFactorials(n);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
19	[BUG]  [BUGGY]  int  n  =  this.factorials.length  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  this.factorials.length  -  1;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  this.factorials.length  -  1;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
20	[BUG]  [BUGGY]  int  n  =  this.factorials.length  -  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  this.factorials.length  -  2;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  this.factorials.length  -  2;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
21	[BUG]  [BUGGY]  int  n  =  this.factorials.length  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  this.factorials.length  +  1;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  this.factorials.length  +  1;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
22	[BUG]  [BUGGY]  int  n  =  this.factorials.length  -  4;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  this.factorials.length  -  4;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  this.factorials.length  -  4;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
23	[BUG]  [BUGGY]  short  result  =  Math.round(factorials[n],  NS);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  short  result  =  Math.round(factorials[n],  NS);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short  result  =  Math.round(factorials[n],  NS);	  short    result    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
24	[BUG]  [BUGGY]  short  result  =  Math.round(factorials[n],  n);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  short  result  =  Math.round(factorials[n],  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short  result  =  Math.round(factorials[n],  n);	  short    result    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
25	[BUG]  [BUGGY]  final  int  result  =  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int  result  =  Math.round(factorials[n]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  result  =  Math.round(factorials[n]);	  final    int    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
26	[BUG]  [BUGGY]  final  int  result  =  Math.round(factorials.length,  n);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int  result  =  Math.round(factorials.length,  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  result  =  Math.round(factorials.length,  n);	  final    int    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
27	[BUG]  [BUGGY]  long[]  factorials  =  new  long[n  *  1];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  new  long[n  *  1];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  new  long[n  *  1];	  long[]    factorials    =    new    long[n    -    1];    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
28	[BUG]  [BUGGY]  int[]  factorials  =  new  int[n  -  1];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  new  int[n  -  1];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  new  int[n  -  1];	  long[]    factorials    =    new    long[n    -    1];    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
29	[BUG]  [BUGGY]  int[]  factorials  =  getValues().toArray(new  Long[n  +  1]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  getValues().toArray(new  Long[n  +  1]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  getValues().toArray(new  Long[n  +  1]);	  long[]    factorials    =    getValues().toArray(new    Long[n    +    1]);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
30	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[n  *  1]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[n  *  1]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  Long[n  *  1]);	  long[]    factorials    =    getValues().toArray(new    Long[n    +    1]);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
31	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[n  +  2]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[n  +  2]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  Long[n  +  2]);	  long[]    factorials    =    getValues().toArray(new    Long[n    +    1]);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
32	[BUG]  [BUGGY]  long[]  factorials  =  getValues(n,  n  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues(n,  n  +  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues(n,  n  +  1);	  long[]    factorials    =    getValues(n,    n);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
33	[BUG]  [BUGGY]  int[]  factorials  =  getValues(n,  n);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  getValues(n,  n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  getValues(n,  n);	  long[]    factorials    =    getValues(n,    n);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
34	[BUG]  [BUGGY]  short[]  factorials  =  getValues(n,  n);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  short[]  factorials  =  getValues(n,  n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short[]  factorials  =  getValues(n,  n);	  long[]    factorials    =    getValues(n,    n);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
35	[BUG]  [BUGGY]  int[]  factorials  =  getValues(n,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  getValues(n,  0);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  getValues(n,  0);	  int[]    factorials    =    getValues(n);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
36	[BUG]  [BUGGY]  int[]  factorials  =  getValues(n,  NS);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  getValues(n,  NS);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  getValues(n,  NS);	  int[]    factorials    =    getValues(n);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
37	[BUG]  [BUGGY]  long[]  factorials  =  new  short[n  +  1];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  new  short[n  +  1];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  new  short[n  +  1];	  long[]    factorials    =    new    short[n];    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
38	[BUG]  [BUGGY]  long[]  factorials  =  new  short[n  -  1];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  new  short[n  -  1];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  new  short[n  -  1];	  long[]    factorials    =    new    short[n];    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
39	[BUG]  [BUGGY]  int[]  factorials  =  new  short[n];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  new  short[n];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  new  short[n];	  long[]    factorials    =    new    short[n];    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
40	[BUG]  [BUGGY]  short  result  =  Math.round(factorials.length  -  n);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  short  result  =  Math.round(factorials.length  -  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short  result  =  Math.round(factorials.length  -  n);	  short    result    =    Math.round(factorials.length);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
41	[BUG]  [BUGGY]  int  n  =  n  <  factorials.length  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  n  <  factorials.length  -  1;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  n  <  factorials.length  -  1;	  int    n    =    n    <    factorials.length;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
42	[BUG]  [BUGGY]  int  n  =  n  +  factorials.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  n  +  factorials.length;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  n  +  factorials.length;	  int    n    =    n    <    factorials.length;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
43	[BUG]  [BUGGY]  int  n  =  n  <  factorials.length  -  2;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  n  <  factorials.length  -  2;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  n  <  factorials.length  -  2;	  int    n    =    n    <    factorials.length;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
44	[BUG]  [BUGGY]  final  int[]  factorials  =  getFactorials().length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int[]  factorials  =  getFactorials().length;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int[]  factorials  =  getFactorials().length;	  final    long[]    factorials    =    getFactorials().length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
45	[BUG]  [BUGGY]  final  long[]  factorials  =  getFactorials().length  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long[]  factorials  =  getFactorials().length  -  1;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long[]  factorials  =  getFactorials().length  -  1;	  final    long[]    factorials    =    getFactorials().length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
46	[BUG]  [BUGGY]  long[]  factorials  =  getValues(n,  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues(n,  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues(n,  1);	  long[]    factorials    =    getValues(n,    0);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
47	[BUG]  [BUGGY]  long[]  factorials  =  getValues(n,  0,  n);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues(n,  0,  n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues(n,  0,  n);	  long[]    factorials    =    getValues(n,    0);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
48	[BUG]  [BUGGY]  int  result  =  Math.round(factorials,  n);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  result  =  Math.round(factorials,  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  result  =  Math.round(factorials,  n);	  long    result    =    Math.round(factorials,    n);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
49	[BUG]  [BUGGY]  long  result  =  Math.round(factorials,  n  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  result  =  Math.round(factorials,  n  +  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials,  n  +  1);	  long    result    =    Math.round(factorials,    n);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
50	[BUG]  [BUGGY]  short  result  =  Math.round(factorials,  n);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  short  result  =  Math.round(factorials,  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short  result  =  Math.round(factorials,  n);	  long    result    =    Math.round(factorials,    n);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
51	[BUG]  [BUGGY]  long  result  =  Math.round(factorials,  n  +  1,  n);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  result  =  Math.round(factorials,  n  +  1,  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials,  n  +  1,  n);	  long    result    =    Math.round(factorials,    n);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
52	[BUG]  [BUGGY]  int  n  =  n  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  n  +  1;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  n  +  1;	  int    n    =    factorials.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
53	[BUG]  [BUGGY]  int  n  =  factorials.length  /  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  factorials.length  /  1;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  factorials.length  /  1;	  int    n    =    factorials.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
54	[BUG]  [BUGGY]  int  n  =  factorials.length  +  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  factorials.length  +  2;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  factorials.length  +  2;	  int    n    =    factorials.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
55	[BUG]  [BUGGY]  int  n  =  factorials.length  /  2;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  factorials.length  /  2;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  factorials.length  /  2;	  int    n    =    factorials.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
56	[BUG]  [BUGGY]  int  n  =  factorials.length  -  4;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  factorials.length  -  4;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  factorials.length  -  4;	  int    n    =    factorials.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
57	[BUG]  [BUGGY]  int[]  factorials  =  this.factorials.getValues();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  this.factorials.getValues();  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  this.factorials.getValues();	  int[]    factorials    =    n.getValues();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
58	[BUG]  [BUGGY]  int[]  factorials  =  n.getAllValues();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  n.getAllValues();  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  n.getAllValues();	  int[]    factorials    =    n.getValues();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
59	[BUG]  [BUGGY]  byte  result  =  Math.round(factorials[n],  n);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  byte  result  =  Math.round(factorials[n],  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	byte  result  =  Math.round(factorials[n],  n);	  byte    result    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
60	[BUG]  [BUGGY]  int  result  =  Math.round(factorials.length  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  result  =  Math.round(factorials.length  -  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  result  =  Math.round(factorials.length  -  1);	  long    result    =    Math.round(factorials.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
61	[BUG]  [BUGGY]  long  result  =  Math.round(factorials.length  -  1,  n);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  result  =  Math.round(factorials.length  -  1,  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials.length  -  1,  n);	  long    result    =    Math.round(factorials.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
62	[BUG]  [BUGGY]  long  result  =  Math.round(factorials.length  -  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  result  =  Math.round(factorials.length  -  2);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials.length  -  2);	  long    result    =    Math.round(factorials.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
63	[BUG]  [BUGGY]  final  long  n  =  Math.min(factorials.length,  n  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  n  =  Math.min(factorials.length,  n  +  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  n  =  Math.min(factorials.length,  n  +  1);	  final    long    n    =    Math.min(factorials.length,    n);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
64	[BUG]  [BUGGY]  final  long  n  =  Math.min(factorials.length,  n  *  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  n  =  Math.min(factorials.length,  n  *  2);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  n  =  Math.min(factorials.length,  n  *  2);	  final    long    n    =    Math.min(factorials.length,    n);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
65	[BUG]  [BUGGY]  final  byte[]  factorials  =  getFactorials(n);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  byte[]  factorials  =  getFactorials(n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  byte[]  factorials  =  getFactorials(n);	  final    byte[]    factorials    =    getFactorials();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
66	[BUG]  [BUGGY]  final  byte[]  factorials  =  getFactorials().length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  byte[]  factorials  =  getFactorials().length;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  byte[]  factorials  =  getFactorials().length;	  final    byte[]    factorials    =    getFactorials();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
67	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  *  2  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  n  *  2  +  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  n  *  2  +  1);	  int    n    =    Math.min(factorials.length,    n    *    2);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
68	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  /  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  n  /  2);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  n  /  2);	  int    n    =    Math.min(factorials.length,    n    *    2);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
69	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[factorials.length  -  1]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[factorials.length  -  1]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  Long[factorials.length  -  1]);	  long[]    factorials    =    getValues().toArray(new    Long[factorials.length]);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
70	[BUG]  [BUGGY]  int[]  factorials  =  getValues().toArray(new  Long[factorials.length]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  getValues().toArray(new  Long[factorials.length]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  getValues().toArray(new  Long[factorials.length]);	  long[]    factorials    =    getValues().toArray(new    Long[factorials.length]);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
71	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[factorials.length  +  1]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[factorials.length  +  1]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  Long[factorials.length  +  1]);	  long[]    factorials    =    getValues().toArray(new    Long[factorials.length]);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
72	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[factorials.length],  n);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[factorials.length],  n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  Long[factorials.length],  n);	  long[]    factorials    =    getValues().toArray(new    Long[factorials.length]);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
73	[BUG]  [BUGGY]  short[]  factorials  =  getValues(n,  0);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  short[]  factorials  =  getValues(n,  0);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short[]  factorials  =  getValues(n,  0);	  short[]    factorials    =    getValues(n);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
74	[BUG]  [BUGGY]  short[]  factorials  =  getValues(n,  NS);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  short[]  factorials  =  getValues(n,  NS);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short[]  factorials  =  getValues(n,  NS);	  short[]    factorials    =    getValues(n);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
75	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[n  *  n  -  1]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[n  *  n  -  1]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  Long[n  *  n  -  1]);	  long[]    factorials    =    getValues().toArray(new    Long[n    -    1]);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
76	[BUG]  [BUGGY]  int[]  factorials  =  getValues().toArray(new  Long[n  -  1]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  getValues().toArray(new  Long[n  -  1]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  getValues().toArray(new  Long[n  -  1]);	  long[]    factorials    =    getValues().toArray(new    Long[n    -    1]);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
77	[BUG]  [BUGGY]  final  boolean[]  factorials  =  getFactorials(n);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  boolean[]  factorials  =  getFactorials(n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  boolean[]  factorials  =  getFactorials(n);	  final    boolean[]    factorials    =    getFactorials();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
78	[BUG]  [BUGGY]  final  boolean[]  factorials  =  getFactorials().length;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  boolean[]  factorials  =  getFactorials().length;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  boolean[]  factorials  =  getFactorials().length;	  final    boolean[]    factorials    =    getFactorials();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
79	[BUG]  [BUGGY]  final  boolean[]  factorials  =  getBaseFactorials();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  boolean[]  factorials  =  getBaseFactorials();  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  boolean[]  factorials  =  getBaseFactorials();	  final    boolean[]    factorials    =    getFactorials();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
80	[BUG]  [BUGGY]  int[]  factorials  =  getValues(n  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  getValues(n  -  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  getValues(n  -  1);	  long[]    factorials    =    getValues(n    -    1);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
81	[BUG]  [BUGGY]  long[]  factorials  =  getValues(n,  n  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues(n,  n  -  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues(n,  n  -  1);	  long[]    factorials    =    getValues(n    -    1);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
82	[BUG]  [BUGGY]  long[]  factorials  =  getValues(n  -  1,  n);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues(n  -  1,  n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues(n  -  1,  n);	  long[]    factorials    =    getValues(n    -    1);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
83	[BUG]  [BUGGY]  double  value  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  double  value  =  Math.round(factorialDouble(n));  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	double  value  =  Math.round(factorialDouble(n));	  int    value    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
84	[BUG]  [BUGGY]  final  int  result  =  Math.round(factorials.length(n));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int  result  =  Math.round(factorials.length(n));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  result  =  Math.round(factorials.length(n));	  final    long    result    =    Math.round(factorials.length(n));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
85	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials.length(n,  n));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  result  =  Math.round(factorials.length(n,  n));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials.length(n,  n));	  final    long    result    =    Math.round(factorials.length(n));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
86	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials.length(n),  n);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  result  =  Math.round(factorials.length(n),  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials.length(n),  n);	  final    long    result    =    Math.round(factorials.length(n));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
87	[BUG]  [BUGGY]  short[]  factorials  =  new  long[n  -  1];  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  short[]  factorials  =  new  long[n  -  1];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short[]  factorials  =  new  long[n  -  1];	  short[]    factorials    =    new    long[n];    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
88	[BUG]  [BUGGY]  short[]  factorials  =  new  long[n  +  1];  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  short[]  factorials  =  new  long[n  +  1];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short[]  factorials  =  new  long[n  +  1];	  short[]    factorials    =    new    long[n];    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
89	[BUG]  [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  +  1,  n);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  +  1,  n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  n  =  Math.min(factorials.length,  n  +  1,  n);	  final    int    n    =    Math.min(factorials.length,    n    +    1);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
90	[BUG]  [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  *  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  *  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  n  =  Math.min(factorials.length,  n  *  1);	  final    int    n    =    Math.min(factorials.length,    n    +    1);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
91	[BUG]  [BUGGY]  int[]  factorials  =  new  int[n  +  1];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  new  int[n  +  1];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  new  int[n  +  1];	  long[]    factorials    =    new    long[n    +    1];    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
92	[BUG]  [BUGGY]  long[]  factorials  =  new  long[n  +  2];  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  new  long[n  +  2];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  new  long[n  +  2];	  long[]    factorials    =    new    long[n    +    1];    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
93	[BUG]  [BUGGY]  boolean[]  factorials  =  new  boolean[n];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  boolean[]  factorials  =  new  boolean[n];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	boolean[]  factorials  =  new  boolean[n];	  int[]    factorials    =    new    int[n];    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
94	[BUG]  [BUGGY]  byte  value  =  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  byte  value  =  Math.round(factorials[n]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	byte  value  =  Math.round(factorials[n]);	  byte    value    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
95	[BUG]  [BUGGY]  int  result  =  Math.round(factorials[n],  n);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  result  =  Math.round(factorials[n],  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  result  =  Math.round(factorials[n],  n);	  int    result    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
96	[BUG]  [BUGGY]  int  result  =  Math.round(factorials[n  -  1]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  result  =  Math.round(factorials[n  -  1]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  result  =  Math.round(factorials[n  -  1]);	  int    result    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
97	[BUG]  [BUGGY]  int  result  =  Math.round(factorials[n],  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  result  =  Math.round(factorials[n],  0);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  result  =  Math.round(factorials[n],  0);	  int    result    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
98	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  *  n  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  n  *  n  -  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  n  *  n  -  1);	  int    n    =    Math.min(factorials.length,    n    -    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
99	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  *  2  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  n  *  2  -  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  n  *  2  -  1);	  int    n    =    Math.min(factorials.length,    n    -    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
100	[BUG]  [BUGGY]  int[]  factorials  =  getValues().length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  getValues().length;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  getValues().length;	  int[]    factorials    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
101	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  +  1,  n)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  n  +  1,  n)+  1;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  n  +  1,  n)+  1;	  int    n    =    Math.min(factorials.length,    n    +    1,    n);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
102	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  +  1,  factorials.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  n  +  1,  factorials.length);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  n  +  1,  factorials.length);	  int    n    =    Math.min(factorials.length,    n    +    1,    n);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
103	[BUG]  [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  *  2  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  *  2  +  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  n  =  Math.min(factorials.length,  n  *  2  +  1);	  final    int    n    =    Math.min(factorials.length,    n    *    2);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
104	[BUG]  [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  /  2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  /  2);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  n  =  Math.min(factorials.length,  n  /  2);	  final    int    n    =    Math.min(factorials.length,    n    *    2);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
105	[BUG]  [BUGGY]  int  value  =  Math.round(factorials[n],  n);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  value  =  Math.round(factorials[n],  n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  value  =  Math.round(factorials[n],  n);	  int    value    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
106	[BUG]  [BUGGY]  int  value  =  Math.round(factorials[n]  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  value  =  Math.round(factorials[n]  -  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  value  =  Math.round(factorials[n]  -  1);	  int    value    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
107	[BUG]  [BUGGY]  long[]  factorials  =  new  long[n  *  2];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  new  long[n  *  2];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  new  long[n  *  2];	  long[]    factorials    =    new    long[n    *    n];    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
108	[BUG]  [BUGGY]  int[]  factorials  =  new  int[n  *  n];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  new  int[n  *  n];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  new  int[n  *  n];	  long[]    factorials    =    new    long[n    *    n];    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
109	[BUG]  [BUGGY]  long[]  factorials  =  new  long[n  *  4];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  new  long[n  *  4];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  new  long[n  *  4];	  long[]    factorials    =    new    long[n    *    n];    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
110	[BUG]  [BUGGY]  long[]  factorials  =  new  long[n  *  3];  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  new  long[n  *  3];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  new  long[n  *  3];	  long[]    factorials    =    new    long[n    *    n];    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
111	[BUG]  [BUGGY]  final  int  result  =  Math.round(factorials.length  -  n);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int  result  =  Math.round(factorials.length  -  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  result  =  Math.round(factorials.length  -  n);	  final    long    result    =    Math.round(factorials.length    -    n);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
112	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials.length  -  n,  n);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  result  =  Math.round(factorials.length  -  n,  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials.length  -  n,  n);	  final    long    result    =    Math.round(factorials.length    -    n);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
113	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials.length  -  n  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  result  =  Math.round(factorials.length  -  n  +  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials.length  -  n  +  1);	  final    long    result    =    Math.round(factorials.length    -    n);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
114	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials.length  /  n);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  result  =  Math.round(factorials.length  /  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials.length  /  n);	  final    long    result    =    Math.round(factorials.length    -    n);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
115	[BUG]  [BUGGY]  long  result  =  Math.round(factorials[n],  n  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  result  =  Math.round(factorials[n],  n  +  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials[n],  n  +  1);	  long    result    =    Math.round(factorials[n],    n);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
116	[BUG]  [BUGGY]  long  result  =  Math.round(factorials[n],  0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  result  =  Math.round(factorials[n],  0);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials[n],  0);	  long    result    =    Math.round(factorials[n],    n);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
117	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials[n],  n);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  result  =  Math.round(factorials[n],  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials[n],  n);	  final    long    result    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
118	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials[n],  NS);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  result  =  Math.round(factorials[n],  NS);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials[n],  NS);	  final    long    result    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
119	[BUG]  [BUGGY]  long  value  =  Math.round(factorials[n],  n  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  value  =  Math.round(factorials[n],  n  +  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  value  =  Math.round(factorials[n],  n  +  1);	  long    value    =    Math.round(factorials[n],    n);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
120	[BUG]  [BUGGY]  long  value  =  Math.round(factorials[n],  0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  value  =  Math.round(factorials[n],  0);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  value  =  Math.round(factorials[n],  0);	  long    value    =    Math.round(factorials[n],    n);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
121	[BUG]  [BUGGY]  short  value  =  Math.round(factorials[n],  n);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  short  value  =  Math.round(factorials[n],  n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short  value  =  Math.round(factorials[n],  n);	  long    value    =    Math.round(factorials[n],    n);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
122	[BUG]  [BUGGY]  long  result  =  Math.round(factorials.length  -  n  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  result  =  Math.round(factorials.length  -  n  +  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials.length  -  n  +  1);	  long    result    =    Math.round(factorials.length    -    n);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
123	[BUG]  [BUGGY]  long  result  =  Math.round(factorials.length  -  n,  n);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  result  =  Math.round(factorials.length  -  n,  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials.length  -  n,  n);	  long    result    =    Math.round(factorials.length    -    n);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
124	[BUG]  [BUGGY]  long  result  =  Math.round(factorials.length  /  n);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  result  =  Math.round(factorials.length  /  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials.length  /  n);	  long    result    =    Math.round(factorials.length    -    n);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
125	[BUG]  [BUGGY]  int[]  factorials  =  getValues().toArray(new  long[n]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  getValues().toArray(new  long[n]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  getValues().toArray(new  long[n]);	  long[]    factorials    =    getValues().toArray(new    long[n]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
126	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[n  +  1]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[n  +  1]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  long[n  +  1]);	  long[]    factorials    =    getValues().toArray(new    long[n]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
127	[BUG]  [BUGGY]  short[]  factorials  =  getValues().toArray(new  long[n]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  short[]  factorials  =  getValues().toArray(new  long[n]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short[]  factorials  =  getValues().toArray(new  long[n]);	  long[]    factorials    =    getValues().toArray(new    long[n]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
128	[BUG]  [BUGGY]  long[]  factorials  =  this.factorials.getValues(n);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  this.factorials.getValues(n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  this.factorials.getValues(n);	  long[]    factorials    =    this.factorials.getValues();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
129	[BUG]  [BUGGY]  int[]  factorials  =  getValues().toArray(new  long[factorials.length]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  getValues().toArray(new  long[factorials.length]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  getValues().toArray(new  long[factorials.length]);	  int[]    factorials    =    getValues().toArray(new    Long[n]);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
130	[BUG]  [BUGGY]  int[]  factorials  =  getValues().toArray(new  long[n  -  1]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  getValues().toArray(new  long[n  -  1]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  getValues().toArray(new  long[n  -  1]);	  int[]    factorials    =    getValues().toArray(new    Long[n]);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
131	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  1);	  int    n    =    Math.min(factorials.length,    0);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
132	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  2);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  2);	  int    n    =    Math.min(factorials.length,    0);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
133	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  0,  n);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  0,  n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  0,  n);	  int    n    =    Math.min(factorials.length,    0);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
134	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  3);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  3);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  3);	  int    n    =    Math.min(factorials.length,    0);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
135	[BUG]  [BUGGY]  final  byte  result  =  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  byte  result  =  Math.round(factorials[n]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  byte  result  =  Math.round(factorials[n]);	  final    byte    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
136	[BUG]  [BUGGY]  int  result  =  Math.round(factorials.length  -  n  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  result  =  Math.round(factorials.length  -  n  +  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  result  =  Math.round(factorials.length  -  n  +  1);	  int    result    =    Math.round(factorials.length    -    n);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
137	[BUG]  [BUGGY]  int  result  =  Math.round(factorials.length  -  n,  n);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  result  =  Math.round(factorials.length  -  n,  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  result  =  Math.round(factorials.length  -  n,  n);	  int    result    =    Math.round(factorials.length    -    n);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
138	[BUG]  [BUGGY]  int  result  =  Math.round(factorials.length  /  n);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  result  =  Math.round(factorials.length  /  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  result  =  Math.round(factorials.length  /  n);	  int    result    =    Math.round(factorials.length    -    n);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
139	[BUG]  [BUGGY]  int  n  =  factorials.length  -  1L;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  factorials.length  -  1L;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  factorials.length  -  1L;	  int    n    =    factorials.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
140	[BUG]  [BUGGY]  int  n  =  n.length  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  n.length  -  1;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  n.length  -  1;	  int    n    =    factorials.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
141	[BUG]  [BUGGY]  int  result  =  Math.round(factorials[n]  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  result  =  Math.round(factorials[n]  -  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  result  =  Math.round(factorials[n]  -  1);	  long    result    =    Math.round(factorials[n]    -    1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
142	[BUG]  [BUGGY]  long  result  =  Math.round(factorials[n]  /  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  result  =  Math.round(factorials[n]  /  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials[n]  /  1);	  long    result    =    Math.round(factorials[n]    -    1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
143	[BUG]  [BUGGY]  short  result  =  Math.round(factorials[n]  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  short  result  =  Math.round(factorials[n]  -  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short  result  =  Math.round(factorials[n]  -  1);	  long    result    =    Math.round(factorials[n]    -    1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
144	[BUG]  [BUGGY]  long  value  =  Math.round(factorials[n]  /  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  value  =  Math.round(factorials[n]  /  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  value  =  Math.round(factorials[n]  /  1);	  long    value    =    Math.round(factorials[n]    -    1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
145	[BUG]  [BUGGY]  long  value  =  Math.round(factorials[n]  -  2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  value  =  Math.round(factorials[n]  -  2);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  value  =  Math.round(factorials[n]  -  2);	  long    value    =    Math.round(factorials[n]    -    1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
146	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[factorials.length  -  1]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[factorials.length  -  1]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  long[factorials.length  -  1]);	  long[]    factorials    =    getValues().toArray(new    long[factorials.length]);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
147	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[factorials.length  +  1]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[factorials.length  +  1]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  long[factorials.length  +  1]);	  long[]    factorials    =    getValues().toArray(new    long[factorials.length]);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
148	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[factorials.length],  n);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[factorials.length],  n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  long[factorials.length],  n);	  long[]    factorials    =    getValues().toArray(new    long[factorials.length]);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
149	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[n  *  n  -  1]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[n  *  n  -  1]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  long[n  *  n  -  1]);	  long[]    factorials    =    getValues().toArray(new    long[n    -    1]);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
150	[BUG]  [BUGGY]  short  value  =  Math.round(factorials[n]  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  short  value  =  Math.round(factorials[n]  -  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short  value  =  Math.round(factorials[n]  -  1);	  short    value    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
151	[BUG]  [BUGGY]  long[]  factorials  =  getValues(n,  NS  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues(n,  NS  +  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues(n,  NS  +  1);	  long[]    factorials    =    getValues(n,    NS);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
152	[BUG]  [BUGGY]  int  n  =  0,  factorials.length  -  1;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  0,  factorials.length  -  1;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  0,  factorials.length  -  1;	  int    n    =    0,    factorials.length;    	non-compiled	[CE]  	37	None	replace
153	[BUG]  [BUGGY]  int  n  =  0,  factorials.length  +  1;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  0,  factorials.length  +  1;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  0,  factorials.length  +  1;	  int    n    =    0,    factorials.length;    	non-compiled	[CE]  	37	None	replace
154	[BUG]  [BUGGY]  int  n  =  0,  factorials.length  -  2;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  0,  factorials.length  -  2;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  0,  factorials.length  -  2;	  int    n    =    0,    factorials.length;    	non-compiled	[CE]  	37	None	replace
155	[BUG]  [BUGGY]  long  n  =  0,  factorials.length;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  n  =  0,  factorials.length;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  n  =  0,  factorials.length;	  int    n    =    0,    factorials.length;    	non-compiled	[CE]  	37	None	replace
156	[BUG]  [BUGGY]  int  n  =  Math.max(factorials.length,  n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  Math.max(factorials.length,  n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.max(factorials.length,  n);	  int    n    =    n;    	non-compiled	[CE]  	74	None	replace
157	[BUG]  [BUGGY]  int  n  =  Math.max(0,  n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  Math.max(0,  n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.max(0,  n);	  int    n    =    n;    	non-compiled	[CE]  	74	None	replace
158	[BUG]  [BUGGY]  long[]  factorials  =  this.factorials.getAllValues();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  this.factorials.getAllValues();  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  this.factorials.getAllValues();	  long[]    factorials    =    n.getAllValues();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
159	[BUG]  [BUGGY]  short[]  factorials  =  this.factorials.getValues();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  short[]  factorials  =  this.factorials.getValues();  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short[]  factorials  =  this.factorials.getValues();	  short[]    factorials    =    n.getValues();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
160	[BUG]  [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  *  n  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  *  n  -  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  n  =  Math.min(factorials.length,  n  *  n  -  1);	  final    int    n    =    Math.min(factorials.length,    n    -    1);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
161	[BUG]  [BUGGY]  long[]  factorials  =  getFunctionValues().toArray(new  long[n]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getFunctionValues().toArray(new  long[n]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getFunctionValues().toArray(new  long[n]);	  long[]    factorials    =    getFunctionValues();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
162	[BUG]  [BUGGY]  int[]  factorials  =  new  int[N];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  new  int[N];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  new  int[N];	  int[]    factorials    =    new    int[n];    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
163	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  Math.pow(10,  n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.pow(10,  n);	  int    n    =    n;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
164	[BUG]  [BUGGY]  int  n  =  n  *  factorials.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  n  *  factorials.length;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  n  *  factorials.length;	  int    n    =    n    <    factorials.length;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
165	[BUG]  [BUGGY]  int[]  factorials  =  new  long[n];  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  new  long[n];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  new  long[n];	  short[]    factorials    =    new    long[n];    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
166	[BUG]  [BUGGY]  long[]  factorials  =  new  long[n  -  2];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  new  long[n  -  2];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  new  long[n  -  2];	  long[]    factorials    =    new    long[n    -    1];    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
167	[BUG]  [BUGGY]  long  result  =  Math.round(factorials[0],  n);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  result  =  Math.round(factorials[0],  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials[0],  n);	  long    result    =    Math.round(factorials[n],    n);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
168	[BUG]  [BUGGY]  float  value  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  float  value  =  Math.round(factorialDouble(n));  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	float  value  =  Math.round(factorialDouble(n));	  int    value    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
169	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials[n]  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  result  =  Math.round(factorials[n]  -  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials[n]  -  1);	  final    long    result    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
170	[BUG]  [BUGGY]  static  final  int  result  =  Math.round(factorials.length(n));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  static  final  int  result  =  Math.round(factorials.length(n));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	static  final  int  result  =  Math.round(factorials.length(n));	  final    long    result    =    Math.round(factorials.length(n));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
171	[BUG]  [BUGGY]  final  byte  result  =  Math.round(factorials.length(n));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  byte  result  =  Math.round(factorials.length(n));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  byte  result  =  Math.round(factorials.length(n));	  final    long    result    =    Math.round(factorials.length(n));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
172	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials.length(n  +  1));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  result  =  Math.round(factorials.length(n  +  1));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials.length(n  +  1));	  final    long    result    =    Math.round(factorials.length(n));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
173	[BUG]  [BUGGY]  short[]  factorials  =  new  short[n];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  short[]  factorials  =  new  short[n];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short[]  factorials  =  new  short[n];	  long[]    factorials    =    new    short[n];    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
174	[BUG]  [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  -  1,  n);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  -  1,  n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  n  =  Math.min(factorials.length,  n  -  1,  n);	  final    int    n    =    Math.min(factorials.length,    n    -    1);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
175	[BUG]  [BUGGY]  long  result  =  Math.round(factorials.length  *  n);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  result  =  Math.round(factorials.length  *  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials.length  *  n);	  long    result    =    Math.round(factorials.length    -    n);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
176	[BUG]  [BUGGY]  byte  result  =  Math.round(factorials[n]  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  byte  result  =  Math.round(factorials[n]  -  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	byte  result  =  Math.round(factorials[n]  -  1);	  byte    result    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
177	[BUG]  [BUGGY]  long[]  factorials  =  getValues(n,  0L);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues(n,  0L);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues(n,  0L);	  long[]    factorials    =    getValues(n,    0);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
178	[BUG]  [BUGGY]  long[]  factorials  =  getValues(n  *  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues(n  *  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues(n  *  1);	  long[]    factorials    =    getValues(n    -    1);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
179	[BUG]  [BUGGY]  final  long  value  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  value  =  Math.round(factorialDouble(n));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  value  =  Math.round(factorialDouble(n));	  final    double    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
180	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials.length  *  n);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  result  =  Math.round(factorials.length  *  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials.length  *  n);	  final    long    result    =    Math.round(factorials.length    -    n);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
181	[BUG]  [BUGGY]  final  long[]  factorials  =  getFactorials().length  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long[]  factorials  =  getFactorials().length  +  1;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long[]  factorials  =  getFactorials().length  +  1;	  final    long[]    factorials    =    getFactorials().length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
182	[BUG]  [BUGGY]  final  long[]  factorials  =  getFactorials().length  +  n;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long[]  factorials  =  getFactorials().length  +  n;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long[]  factorials  =  getFactorials().length  +  n;	  final    long[]    factorials    =    getFactorials().length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
183	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  *  1,  n);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  n  *  1,  n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  n  *  1,  n);	  int    n    =    Math.min(factorials.length,    n    +    1,    n);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
184	[BUG]  [BUGGY]  int  result  =  Math.round(factorials.length  *  n);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  result  =  Math.round(factorials.length  *  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  result  =  Math.round(factorials.length  *  n);	  int    result    =    Math.round(factorials.length    -    n);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
185	[BUG]  [BUGGY]  int[]  factorials  =  getFieldValues();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  getFieldValues();  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  getFieldValues();	  int[]    factorials    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
186	[BUG]  [BUGGY]  int  n  =  factorials.length  *  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  factorials.length  *  1;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  factorials.length  *  1;	  int    n    =    factorials.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
187	[BUG]  [BUGGY]  int  value  =  Math.round(factorials[0]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  value  =  Math.round(factorials[0]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  value  =  Math.round(factorials[0]);	  int    value    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
188	[BUG]  [BUGGY]  int[]  factorials  =  getValues().toArray(new  int[n]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int[]  factorials  =  getValues().toArray(new  int[n]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  getValues().toArray(new  int[n]);	  int[]    factorials    =    getValues().toArray(new    Long[n]);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
189	[BUG]  [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  *  2  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  *  2  -  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  n  =  Math.min(factorials.length,  n  *  2  -  1);	  final    int    n    =    Math.min(factorials.length,    n    *    2);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
190	[BUG]  [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  +  2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  +  2);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  n  =  Math.min(factorials.length,  n  +  2);	  final    int    n    =    Math.min(factorials.length,    n    +    1);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
191	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  /  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  n  /  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  n  /  1);	  int    n    =    Math.min(factorials.length,    n    *    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
192	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  *  3);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  n  *  3);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  n  *  3);	  int    n    =    Math.min(factorials.length,    n    *    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
193	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[factorials.length  +  n]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[factorials.length  +  n]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  long[factorials.length  +  n]);	  long[]    factorials    =    getValues().toArray(new    long[factorials.length]);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
194	[BUG]  [BUGGY]  int  result  =  Math.round(factorials.length  -  1,  n);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  result  =  Math.round(factorials.length  -  1,  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  result  =  Math.round(factorials.length  -  1,  n);	  int    result    =    Math.round(factorials.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
195	[BUG]  [BUGGY]  long  result  =  Math.round(factorials[n  -  1]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  result  =  Math.round(factorials[n  -  1]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials[n  -  1]);	  long    result    =    Math.round(factorials.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
196	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials.length  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  result  =  Math.round(factorials.length  -  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials.length  -  1);	  final    long    result    =    Math.round(factorials.length);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
197	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials.length,  n);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  result  =  Math.round(factorials.length,  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials.length,  n);	  final    long    result    =    Math.round(factorials.length);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
198	[BUG]  [BUGGY]  long[]  factorials  =  new  long[n  /  n];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  new  long[n  /  n];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  new  long[n  /  n];	  long[]    factorials    =    new    long[n    *    n];    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
199	[BUG]  [BUGGY]  long[]  factorials  =  new  long[factorials.length  *  n];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  new  long[factorials.length  *  n];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  new  long[factorials.length  *  n];	  long[]    factorials    =    new    long[n    *    n];    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
200	[BUG]  [BUGGY]  long  value  =  Math.round(factorials[0],  n);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  value  =  Math.round(factorials[0],  n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  value  =  Math.round(factorials[0],  n);	  long    value    =    Math.round(factorials[n],    n);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
201	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  -  2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  n  -  2);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  n  -  2);	  int    n    =    Math.min(factorials.length,    n    -    1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
202	[BUG]  [BUGGY]  int  factorials  =  getValues().toArray(new  Long[factorials.length]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  factorials  =  getValues().toArray(new  Long[factorials.length]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  factorials  =  getValues().toArray(new  Long[factorials.length]);	  long[]    factorials    =    getValues().toArray(new    Long[factorials.length]);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
203	[BUG]  [BUGGY]  int  n  =  factorials.length  -  1  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  factorials.length  -  1  +  1;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  factorials.length  -  1  +  1;	  int    n    =    factorials.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
204	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[n  *  1]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[n  *  1]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  long[n  *  1]);	  long[]    factorials    =    getValues().toArray(new    long[n    -    1]);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
205	[BUG]  [BUGGY]  short  result  =  Math.round(factorials.length  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  short  result  =  Math.round(factorials.length  -  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short  result  =  Math.round(factorials.length  -  1);	  short    result    =    Math.round(factorials.length);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
206	[BUG]  [BUGGY]  long  result  =  Math.round(factorials,  0,  n);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  result  =  Math.round(factorials,  0,  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials,  0,  n);	  long    result    =    Math.round(factorials,    n);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
207	[BUG]  [BUGGY]  long  result  =  Math.round(factorials,  n  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  result  =  Math.round(factorials,  n  -  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials,  n  -  1);	  long    result    =    Math.round(factorials,    n);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
208	[BUG]  [BUGGY]  final  long  n  =  Math.min(factorials.length,  n  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  n  =  Math.min(factorials.length,  n  -  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  n  =  Math.min(factorials.length,  n  -  1);	  final    long    n    =    Math.min(factorials.length,    n);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
209	[BUG]  [BUGGY]  final  double  n  =  Math.min(factorials.length,  n);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  double  n  =  Math.min(factorials.length,  n);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  double  n  =  Math.min(factorials.length,  n);	  final    long    n    =    Math.min(factorials.length,    n);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
210	[BUG]  [BUGGY]  long[]  factorials  =  getValues(n,  2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues(n,  2);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues(n,  2);	  long[]    factorials    =    getValues(n,    0);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
211	[BUG]  [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  -  2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  -  2);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  n  =  Math.min(factorials.length,  n  -  2);	  final    int    n    =    Math.min(factorials.length,    n    -    1);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
212	[BUG]  [BUGGY]  final  byte[]  factorials  =  getFactorials().toArray(new  byte[n]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  byte[]  factorials  =  getFactorials().toArray(new  byte[n]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  byte[]  factorials  =  getFactorials().toArray(new  byte[n]);	  final    byte[]    factorials    =    getFactorials();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
213	[BUG]  [BUGGY]  long[]  factorials  =  this.factorials.toArray(new  long[n]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  this.factorials.toArray(new  long[n]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  this.factorials.toArray(new  long[n]);	  long[]    factorials    =    this.factorials.getValues();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
214	[BUG]  [BUGGY]  long[]  factorials  =  getBaseValues();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getBaseValues();  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getBaseValues();	  long[]    factorials    =    getFunctionValues();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
215	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  +  1,  n  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  n  +  1,  n  +  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  n  +  1,  n  +  1);	  int    n    =    Math.min(factorials.length,    n    +    1,    n);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
216	[BUG]  [BUGGY]  final  long[]  factorials  =  getFactorials(n  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long[]  factorials  =  getFactorials(n  -  1);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long[]  factorials  =  getFactorials(n  -  1);	  final    long[]    factorials    =    getFactorials(n);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
217	[BUG]  [BUGGY]  short[]  factorials  =  new  long[n  *  n];  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  short[]  factorials  =  new  long[n  *  n];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short[]  factorials  =  new  long[n  *  n];	  short[]    factorials    =    new    long[n];    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
218	[BUG]  [BUGGY]  long[]  factorials  =  getValues(n,  NR_DOUBLE);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues(n,  NR_DOUBLE);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues(n,  NR_DOUBLE);	  long[]    factorials    =    getValues(n,    NS);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
219	[BUG]  [BUGGY]  long[]  factorials  =  new  long[n  *  n  -  1];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  new  long[n  *  n  -  1];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  new  long[n  *  n  -  1];	  long[]    factorials    =    new    long[n    -    1];    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
220	[BUG]  [BUGGY]  int  n  =  0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  int  n  =  0;  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  0;	  int    n    =    n;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
221	[BUG]  [BUGGY]  long  result  =  Math.round(factorials[n]  -  1,  n);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  result  =  Math.round(factorials[n]  -  1,  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials[n]  -  1,  n);	  long    result    =    Math.round(factorials[n]    -    1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
222	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[n  *  n]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[n  *  n]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  long[n  *  n]);	  long[]    factorials    =    getValues().toArray(new    long[n]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
223	[BUG]  [BUGGY]  long  result  =  Math.round(factorials.length,  n  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long  result  =  Math.round(factorials.length,  n  -  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials.length,  n  -  1);	  long    result    =    Math.round(factorials.length,    n);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
224	[BUG]  [BUGGY]  final  long  n  =  Math.min(factorials.length,  0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  n  =  Math.min(factorials.length,  0);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  n  =  Math.min(factorials.length,  0);	  final    int    n    =    Math.min(factorials.length,    0);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
225	[BUG]  [BUGGY]  static  final  long  result  =  Math.round(factorials.length(n));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  static  final  long  result  =  Math.round(factorials.length(n));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	static  final  long  result  =  Math.round(factorials.length(n));	  final    long    result    =    Math.round(factorials.length(n));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
226	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials.length());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  result  =  Math.round(factorials.length());  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials.length());	  final    long    result    =    Math.round(factorials.length(n));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
227	[BUG]  [BUGGY]  final  int[]  factorials  =  getFactorials().toArray(new  int[n]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  int[]  factorials  =  getFactorials().toArray(new  int[n]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int[]  factorials  =  getFactorials().toArray(new  int[n]);	  final    int[]    factorials    =    getFactorials();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
228	[BUG]  [BUGGY]  long[]  factorials  =  new  long[n  /  1];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  new  long[n  /  1];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  new  long[n  /  1];	  long[]    factorials    =    new    long[n    +    1];    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
229	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials[n]  &  n]);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  result  =  Math.round(factorials[n]  &  n]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials[n]  &  n]);	  final    long    result    =    Math.round(factorials[n]);    	non-compiled	[CE]  ')'  expected	19	None	replace
230	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[n  -  2]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[n  -  2]);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  Long[n  -  2]);	  long[]    factorials    =    getValues().toArray(new    Long[n    -    1]);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
231	[BUG]  [BUGGY]  final  boolean[]  factorials  =  getBase();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  boolean[]  factorials  =  getBase();  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  boolean[]  factorials  =  getBase();	  final    boolean[]    factorials    =    getFactorials();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
232	[BUG]  [BUGGY]  final  boolean[]  factorials  =  getAllFactorials();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  boolean[]  factorials  =  getAllFactorials();  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  boolean[]  factorials  =  getAllFactorials();	  final    boolean[]    factorials    =    getFactorials();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
233	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials.length  -  n  *  n);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  final  long  result  =  Math.round(factorials.length  -  n  *  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials.length  -  n  *  n);	  final    long    result    =    Math.round(factorials.length    -    n);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
234	[BUG]  [BUGGY]  long[]  factorials  =  getValues(n  -  2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  getValues(n  -  2);  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues(n  -  2);	  long[]    factorials    =    getValues(n    -    1);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
235	[BUG]  [BUGGY]  long[]  factorials  =  new  short[n  *  n];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {      [BUGGY]  long[]  factorials  =  new  short[n  *  n];  [BUGGY]      long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  new  short[n  *  n];	  long[]    factorials    =    new    short[n];    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
