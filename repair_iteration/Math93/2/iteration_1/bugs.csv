bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    int  n  =  Math.min(factorials.length,  n);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]    int  n  =  Math.min(factorials.length,  n);  [BUGGY]  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	    int  n  =  Math.min(factorials.length,  n);		non-compiled	[CE]  illegal  start  of  type	4	None	add
2	[BUG]  [BUGGY]    long[]  factorials  =  getValues();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]    long[]  factorials  =  getValues();  [BUGGY]  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	    long[]  factorials  =  getValues();		non-compiled	[CE]  illegal  start  of  type	4	None	add
3	[BUG]  [BUGGY]    long[]  factorials  =  new  long[n];  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]    long[]  factorials  =  new  long[n];  [BUGGY]  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	    long[]  factorials  =  new  long[n];		non-compiled	[CE]  illegal  start  of  type	4	None	add
4	[BUG]  [BUGGY]    final  long[]  factorials  =  getFactorials();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]    final  long[]  factorials  =  getFactorials();  [BUGGY]  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	    final  long[]  factorials  =  getFactorials();		non-compiled	[CE]  illegal  start  of  type	4	None	add
5	[BUG]  [BUGGY]    long[]  factorials  =  getValues(n);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]    long[]  factorials  =  getValues(n);  [BUGGY]  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	    long[]  factorials  =  getValues(n);		non-compiled	[CE]  illegal  start  of  type	4	None	add
6	[BUG]  [BUGGY]  long  result  =  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]  long  result  =  Math.round(factorials[n]);  [BUGGY]  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials[n]);	long  result  =  Math.round(factorialDouble(n));  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  int  result  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]  int  result  =  Math.round(factorialDouble(n));  [BUGGY]  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  result  =  Math.round(factorialDouble(n));	long  result  =  Math.round(factorialDouble(n));  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  short  result  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]  short  result  =  Math.round(factorialDouble(n));  [BUGGY]  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short  result  =  Math.round(factorialDouble(n));	long  result  =  Math.round(factorialDouble(n));  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]  final  long  result  =  Math.round(factorialDouble(n));  [BUGGY]  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorialDouble(n));	long  result  =  Math.round(factorialDouble(n));  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]    final  int  n  =  Math.min(factorials.length,  n);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]    final  int  n  =  Math.min(factorials.length,  n);  [BUGGY]  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	    final  int  n  =  Math.min(factorials.length,  n);		non-compiled	[CE]  illegal  start  of  type	4	None	add
11	[BUG]  [BUGGY]    long  value  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]    long  value  =  Math.round(factorialDouble(n));  [BUGGY]  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	    long  value  =  Math.round(factorialDouble(n));		non-compiled	[CE]  illegal  start  of  type	4	None	add
12	[BUG]  [BUGGY]    long  value  =  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]    long  value  =  Math.round(factorials[n]);  [BUGGY]  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	    long  value  =  Math.round(factorials[n]);		non-compiled	[CE]  illegal  start  of  type	4	None	add
13	[BUG]  [BUGGY]    int  n  =  factorials.length;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]    int  n  =  factorials.length;  [BUGGY]  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	    int  n  =  factorials.length;		non-compiled	[CE]  illegal  start  of  type	4	None	add
14	[BUG]  [BUGGY]  byte  result  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]  byte  result  =  Math.round(factorialDouble(n));  [BUGGY]  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	byte  result  =  Math.round(factorialDouble(n));	long  result  =  Math.round(factorialDouble(n));  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  long  result  =  Math.round(factorials.length);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]  long  result  =  Math.round(factorials.length);  [BUGGY]  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials.length);	long  result  =  Math.round(factorialDouble(n));  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]    long[]  factorials  =  n.getValues();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]    long[]  factorials  =  n.getValues();  [BUGGY]  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	    long[]  factorials  =  n.getValues();		non-compiled	[CE]  illegal  start  of  type	4	None	add
17	[BUG]  [BUGGY]    long[]  factorials  =  getValues().toArray(new  Long[n]);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]    long[]  factorials  =  getValues().toArray(new  Long[n]);  [BUGGY]  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	    long[]  factorials  =  getValues().toArray(new  Long[n]);		non-compiled	[CE]  illegal  start  of  type	4	None	add
18	[BUG]  [BUGGY]    int  n  =  Math.min(factorials.length,  n  +  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]    int  n  =  Math.min(factorials.length,  n  +  1);  [BUGGY]  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	    int  n  =  Math.min(factorials.length,  n  +  1);		non-compiled	[CE]  illegal  start  of  type	4	None	add
