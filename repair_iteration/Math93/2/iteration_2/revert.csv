projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=newlong[n];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallong[]factorials=getFactorials();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues(n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intresult=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345shortresult=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintn=Math.min(factorials.length,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longvalue=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longvalue=Math.round(factorials[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=factorials.length;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345byteresult=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials.length);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=n.getValues();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newLong[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,n+1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=getValues();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newlong[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345byteresult=Math.round(factorials[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intresult=Math.round(factorials[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intvalue=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345bytevalue=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345shortvalue=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=n.getValues();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345short[]factorials=n.getValues();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=this.factorials.getValues();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalint[]factorials=getFactorials();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallong[]factorials=getFactorials().length;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalboolean[]factorials=getFactorials();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345shortresult=Math.round(factorials[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intresult=Math.round(factorials.length);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345shortresult=Math.round(factorials.length);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintresult=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials.length(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalshortresult=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,n+1,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,n*1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,n+2);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=getValues().toArray(newLong[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newlong[factorials.length]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newLong[factorials.length]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intvalue=Math.round(factorials[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longvalue=Math.round(factorials[n],n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longvalue=Math.round(factorials[n]-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintn=Math.min(factorials.length,n+1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintn=Math.min(factorials.length,0);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongn=Math.min(factorials.length,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintn=Math.min(factorials.length,n*2);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=factorials.length-1;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=this.factorials.length;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=0,factorials.length;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=factorials.length-2;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials[n],n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials[n]-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,0);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,n*2);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=newint[n];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=newlong[n-1];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=newlong[n+1];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345short[]factorials=newlong[n];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=getValues(n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues(n,0);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345short[]factorials=getValues(n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues(n,NS);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,n-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintn=Math.min(factorials.length,n-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalbyteresult=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finaldoubleresult=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=factorials.length+1;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials.length-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=newshort[n];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newlong[n-1]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345shortvalue=Math.round(factorials[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallong[]factorials=getFactorials(n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalbyte[]factorials=getFactorials();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newLong[n-1]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newLong[n+1]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=n.getAllValues();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials.length-n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials.length);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getFunctionValues();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials.length,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials.length-n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues(n,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues(n-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intresult=Math.round(factorials.length-n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=newlong[n*n];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=n;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=n<factorials.length;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintresult=Math.round(factorials.length);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintn=Math.min(factorials.length,1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintn=Math.min(factorials.length,2);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintn=Math.min(factorials.length,0,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintn=Math.min(factorials.length,3);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finaldoubleresult=Math.round(factorials[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finaldoubleresult=Math.round(factorials.length,n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getFunctionValues(n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=getFunctionValues();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345short[]factorials=getFunctionValues();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intresult=Math.round(factorials.length,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials.length,n+1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345shortresult=Math.round(factorials.length,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalint[]factorials=getFactorials(n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallong[]factorials=getFactorials(n,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallong[]factorials=getFactorials(n,NS);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallong[]factorials=getFactorials(n,0);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=this.factorials.length-1;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=this.factorials.length-2;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=this.factorials.length+1;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=this.factorials.length-4;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345shortresult=Math.round(factorials[n],NS);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345shortresult=Math.round(factorials[n],n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintresult=Math.round(factorials[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintresult=Math.round(factorials.length,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=newlong[n*1];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=newint[n-1];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=getValues().toArray(newLong[n+1]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newLong[n*1]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newLong[n+2]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues(n,n+1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=getValues(n,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345short[]factorials=getValues(n,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=getValues(n,0);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=getValues(n,NS);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=newshort[n+1];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=newshort[n-1];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=newshort[n];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345shortresult=Math.round(factorials.length-n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=n<factorials.length-1;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=n+factorials.length;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=n<factorials.length-2;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalint[]factorials=getFactorials().length;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallong[]factorials=getFactorials().length-1;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues(n,1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues(n,0,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intresult=Math.round(factorials,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials,n+1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345shortresult=Math.round(factorials,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials,n+1,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=n+1;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=factorials.length/1;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=factorials.length+2;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=factorials.length/2;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=factorials.length-4;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=this.factorials.getValues();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=n.getAllValues();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345byteresult=Math.round(factorials[n],n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intresult=Math.round(factorials.length-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials.length-1,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials.length-2);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongn=Math.min(factorials.length,n+1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongn=Math.min(factorials.length,n*2);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalbyte[]factorials=getFactorials(n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalbyte[]factorials=getFactorials().length;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,n*2+1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,n/2);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newLong[factorials.length-1]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=getValues().toArray(newLong[factorials.length]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newLong[factorials.length+1]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newLong[factorials.length],n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345short[]factorials=getValues(n,0);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345short[]factorials=getValues(n,NS);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newLong[n*n-1]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=getValues().toArray(newLong[n-1]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalboolean[]factorials=getFactorials(n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalboolean[]factorials=getFactorials().length;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalboolean[]factorials=getBaseFactorials();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=getValues(n-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues(n,n-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues(n-1,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345doublevalue=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintresult=Math.round(factorials.length(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials.length(n,n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials.length(n),n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345short[]factorials=newlong[n-1];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345short[]factorials=newlong[n+1];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintn=Math.min(factorials.length,n+1,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintn=Math.min(factorials.length,n*1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=newint[n+1];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=newlong[n+2];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345boolean[]factorials=newboolean[n];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345bytevalue=Math.round(factorials[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intresult=Math.round(factorials[n],n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intresult=Math.round(factorials[n-1]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intresult=Math.round(factorials[n],0);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,n*n-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,n*2-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=getValues().length;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,n+1,n)+1;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,n+1,factorials.length);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintn=Math.min(factorials.length,n*2+1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintn=Math.min(factorials.length,n/2);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intvalue=Math.round(factorials[n],n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intvalue=Math.round(factorials[n]-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=newlong[n*2];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=newint[n*n];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=newlong[n*4];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=newlong[n*3];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintresult=Math.round(factorials.length-n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials.length-n,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials.length-n+1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials.length/n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials[n],n+1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials[n],0);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials[n],n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials[n],NS);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longvalue=Math.round(factorials[n],n+1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longvalue=Math.round(factorials[n],0);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345shortvalue=Math.round(factorials[n],n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials.length-n+1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials.length-n,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials.length/n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=getValues().toArray(newlong[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newlong[n+1]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345short[]factorials=getValues().toArray(newlong[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=this.factorials.getValues(n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=getValues().toArray(newlong[factorials.length]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=getValues().toArray(newlong[n-1]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,2);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,0,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,3);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalbyteresult=Math.round(factorials[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intresult=Math.round(factorials.length-n+1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intresult=Math.round(factorials.length-n,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intresult=Math.round(factorials.length/n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=factorials.length-1L;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=n.length-1;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intresult=Math.round(factorials[n]-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials[n]/1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345shortresult=Math.round(factorials[n]-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longvalue=Math.round(factorials[n]/1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longvalue=Math.round(factorials[n]-2);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newlong[factorials.length-1]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newlong[factorials.length+1]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newlong[factorials.length],n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newlong[n*n-1]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345shortvalue=Math.round(factorials[n]-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues(n,NS+1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=0,factorials.length-1;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=0,factorials.length+1;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=0,factorials.length-2;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longn=0,factorials.length;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.max(factorials.length,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.max(0,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=this.factorials.getAllValues();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345short[]factorials=this.factorials.getValues();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintn=Math.min(factorials.length,n*n-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getFunctionValues().toArray(newlong[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=newint[N];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.pow(10,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=n*factorials.length;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=newlong[n];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=newlong[n-2];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials[0],n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345floatvalue=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials[n]-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345staticfinalintresult=Math.round(factorials.length(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalbyteresult=Math.round(factorials.length(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials.length(n+1));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345short[]factorials=newshort[n];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintn=Math.min(factorials.length,n-1,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials.length*n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345byteresult=Math.round(factorials[n]-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues(n,0L);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues(n*1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongvalue=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials.length*n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallong[]factorials=getFactorials().length+1;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallong[]factorials=getFactorials().length+n;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,n*1,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intresult=Math.round(factorials.length*n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=getFieldValues();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=factorials.length*1;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intvalue=Math.round(factorials[0]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345int[]factorials=getValues().toArray(newint[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintn=Math.min(factorials.length,n*2-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintn=Math.min(factorials.length,n+2);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,n/1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,n*3);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newlong[factorials.length+n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intresult=Math.round(factorials.length-1,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials[n-1]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials.length-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials.length,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=newlong[n/n];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=newlong[factorials.length*n];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longvalue=Math.round(factorials[0],n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,n-2);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intfactorials=getValues().toArray(newLong[factorials.length]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=factorials.length-1+1;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newlong[n*1]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345shortresult=Math.round(factorials.length-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials,0,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials,n-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongn=Math.min(factorials.length,n-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finaldoublen=Math.min(factorials.length,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues(n,2);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalintn=Math.min(factorials.length,n-2);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalbyte[]factorials=getFactorials().toArray(newbyte[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=this.factorials.toArray(newlong[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getBaseValues();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=Math.min(factorials.length,n+1,n+1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallong[]factorials=getFactorials(n-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345short[]factorials=newlong[n*n];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues(n,NR_DOUBLE);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=newlong[n*n-1];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345intn=0;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials[n]-1,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newlong[n*n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorials.length,n-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongn=Math.min(factorials.length,0);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345staticfinallongresult=Math.round(factorials.length(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials.length());
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalint[]factorials=getFactorials().toArray(newint[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=newlong[n/1];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials[n]&n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues().toArray(newLong[n-2]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalboolean[]factorials=getBase();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finalboolean[]factorials=getAllFactorials();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallongresult=Math.round(factorials.length-n*n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=getValues(n-2);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=newshort[n*n];
