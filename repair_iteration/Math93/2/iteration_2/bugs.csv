bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int[]  factorials  =  getValues();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int[]  factorials  =  getValues();  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  getValues();	      long[]    factorials    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[n]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[n]);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  long[n]);	      long[]    factorials    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  byte  result  =  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  byte  result  =  Math.round(factorials[n]);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	byte  result  =  Math.round(factorials[n]);	  byte    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
4	[BUG]  [BUGGY]  int  result  =  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int  result  =  Math.round(factorials[n]);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  result  =  Math.round(factorials[n]);	  int    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]  int  value  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int  value  =  Math.round(factorialDouble(n));  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  value  =  Math.round(factorialDouble(n));	      long    value    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  byte  value  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  byte  value  =  Math.round(factorialDouble(n));  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	byte  value  =  Math.round(factorialDouble(n));	      long    value    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  short  value  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  short  value  =  Math.round(factorialDouble(n));  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short  value  =  Math.round(factorialDouble(n));	      long    value    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
8	[BUG]  [BUGGY]  int[]  factorials  =  n.getValues();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int[]  factorials  =  n.getValues();  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  n.getValues();	      long[]    factorials    =    n.getValues();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
9	[BUG]  [BUGGY]  short[]  factorials  =  n.getValues();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  short[]  factorials  =  n.getValues();  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short[]  factorials  =  n.getValues();	      long[]    factorials    =    n.getValues();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
10	[BUG]  [BUGGY]  long[]  factorials  =  this.factorials.getValues();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long[]  factorials  =  this.factorials.getValues();  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  this.factorials.getValues();	      long[]    factorials    =    n.getValues();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
11	[BUG]  [BUGGY]  final  int[]  factorials  =  getFactorials();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  final  int[]  factorials  =  getFactorials();  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int[]  factorials  =  getFactorials();	      final    long[]    factorials    =    getFactorials();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  final  long[]  factorials  =  getFactorials().length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  final  long[]  factorials  =  getFactorials().length;  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long[]  factorials  =  getFactorials().length;	      final    long[]    factorials    =    getFactorials();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  final  boolean[]  factorials  =  getFactorials();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  final  boolean[]  factorials  =  getFactorials();  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  boolean[]  factorials  =  getFactorials();	      final    long[]    factorials    =    getFactorials();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  short  result  =  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  short  result  =  Math.round(factorials[n]);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short  result  =  Math.round(factorials[n]);	  short    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
15	[BUG]  [BUGGY]  int  result  =  Math.round(factorials.length);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int  result  =  Math.round(factorials.length);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  result  =  Math.round(factorials.length);	  long    result    =    Math.round(factorials.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
16	[BUG]  [BUGGY]  long  result  =  Math.round(factorials,  n);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long  result  =  Math.round(factorials,  n);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials,  n);	  long    result    =    Math.round(factorials.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
17	[BUG]  [BUGGY]  short  result  =  Math.round(factorials.length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  short  result  =  Math.round(factorials.length);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short  result  =  Math.round(factorials.length);	  long    result    =    Math.round(factorials.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
18	[BUG]  [BUGGY]  final  int  result  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  final  int  result  =  Math.round(factorialDouble(n));  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  result  =  Math.round(factorialDouble(n));	  final    long    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
19	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  final  long  result  =  Math.round(factorials[n]);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials[n]);	  final    long    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
20	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials.length(n));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  final  long  result  =  Math.round(factorials.length(n));  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials.length(n));	  final    long    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
21	[BUG]  [BUGGY]  final  short  result  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  final  short  result  =  Math.round(factorialDouble(n));  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  short  result  =  Math.round(factorialDouble(n));	  final    long    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
22	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  +  1,  n);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int  n  =  Math.min(factorials.length,  n  +  1,  n);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  n  +  1,  n);	      int    n    =    Math.min(factorials.length,    n    +    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
23	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  *  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int  n  =  Math.min(factorials.length,  n  *  1);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  n  *  1);	      int    n    =    Math.min(factorials.length,    n    +    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
24	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  +  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int  n  =  Math.min(factorials.length,  n  +  2);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  n  +  2);	      int    n    =    Math.min(factorials.length,    n    +    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
25	[BUG]  [BUGGY]  int[]  factorials  =  getValues().toArray(new  Long[n]);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int[]  factorials  =  getValues().toArray(new  Long[n]);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  getValues().toArray(new  Long[n]);	      long[]    factorials    =    getValues().toArray(new    Long[n]);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
26	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[factorials.length]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[factorials.length]);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  long[factorials.length]);	      long[]    factorials    =    getValues().toArray(new    Long[n]);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
27	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[factorials.length]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[factorials.length]);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  Long[factorials.length]);	      long[]    factorials    =    getValues().toArray(new    Long[n]);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
28	[BUG]  [BUGGY]  int  value  =  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int  value  =  Math.round(factorials[n]);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  value  =  Math.round(factorials[n]);	      long    value    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
29	[BUG]  [BUGGY]  long  value  =  Math.round(factorials[n],  n);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long  value  =  Math.round(factorials[n],  n);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  value  =  Math.round(factorials[n],  n);	      long    value    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
30	[BUG]  [BUGGY]  long  value  =  Math.round(factorials[n]  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long  value  =  Math.round(factorials[n]  -  1);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  value  =  Math.round(factorials[n]  -  1);	      long    value    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
31	[BUG]  [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  +  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  +  1);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  n  =  Math.min(factorials.length,  n  +  1);	      final    int    n    =    Math.min(factorials.length,    n);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
32	[BUG]  [BUGGY]  final  int  n  =  Math.min(factorials.length,  0);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  final  int  n  =  Math.min(factorials.length,  0);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  n  =  Math.min(factorials.length,  0);	      final    int    n    =    Math.min(factorials.length,    n);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
33	[BUG]  [BUGGY]  final  long  n  =  Math.min(factorials.length,  n);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  final  long  n  =  Math.min(factorials.length,  n);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  n  =  Math.min(factorials.length,  n);	      final    int    n    =    Math.min(factorials.length,    n);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
34	[BUG]  [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  *  2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  *  2);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  n  =  Math.min(factorials.length,  n  *  2);	      final    int    n    =    Math.min(factorials.length,    n);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
35	[BUG]  [BUGGY]  int  n  =  factorials.length  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int  n  =  factorials.length  -  1;  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  factorials.length  -  1;	      int    n    =    factorials.length;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
36	[BUG]  [BUGGY]  int  n  =  this.factorials.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int  n  =  this.factorials.length;  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  this.factorials.length;	      int    n    =    factorials.length;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
37	[BUG]  [BUGGY]  int  n  =  0,  factorials.length;  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int  n  =  0,  factorials.length;  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  0,  factorials.length;	      int    n    =    factorials.length;    	non-compiled	[CE]  ';'  expected	13	None	replace
38	[BUG]  [BUGGY]  int  n  =  factorials.length  -  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int  n  =  factorials.length  -  2;  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  factorials.length  -  2;	      int    n    =    factorials.length;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
39	[BUG]  [BUGGY]  long  result  =  Math.round(factorials[n],  n);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long  result  =  Math.round(factorials[n],  n);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials[n],  n);	  long    result    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
40	[BUG]  [BUGGY]  long  result  =  Math.round(factorials[n]  -  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long  result  =  Math.round(factorials[n]  -  1);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials[n]  -  1);	  long    result    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
41	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  0);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int  n  =  Math.min(factorials.length,  0);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  0);	      int    n    =    Math.min(factorials.length,    n);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
42	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  *  2);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int  n  =  Math.min(factorials.length,  n  *  2);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  n  *  2);	      int    n    =    Math.min(factorials.length,    n);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
43	[BUG]  [BUGGY]  int[]  factorials  =  new  int[n];  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int[]  factorials  =  new  int[n];  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  new  int[n];	      long[]    factorials    =    new    long[n];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
44	[BUG]  [BUGGY]  long[]  factorials  =  new  long[n  -  1];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long[]  factorials  =  new  long[n  -  1];  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  new  long[n  -  1];	      long[]    factorials    =    new    long[n];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
45	[BUG]  [BUGGY]  long[]  factorials  =  new  long[n  +  1];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long[]  factorials  =  new  long[n  +  1];  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  new  long[n  +  1];	      long[]    factorials    =    new    long[n];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
46	[BUG]  [BUGGY]  short[]  factorials  =  new  long[n];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  short[]  factorials  =  new  long[n];  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short[]  factorials  =  new  long[n];	      long[]    factorials    =    new    long[n];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
47	[BUG]  [BUGGY]  int[]  factorials  =  getValues(n);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int[]  factorials  =  getValues(n);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int[]  factorials  =  getValues(n);	      long[]    factorials    =    getValues(n);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
48	[BUG]  [BUGGY]  long[]  factorials  =  getValues(n,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long[]  factorials  =  getValues(n,  0);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues(n,  0);	      long[]    factorials    =    getValues(n);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
49	[BUG]  [BUGGY]  short[]  factorials  =  getValues(n);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  short[]  factorials  =  getValues(n);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short[]  factorials  =  getValues(n);	      long[]    factorials    =    getValues(n);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
50	[BUG]  [BUGGY]  long[]  factorials  =  getValues(n,  NS);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long[]  factorials  =  getValues(n,  NS);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues(n,  NS);	      long[]    factorials    =    getValues(n);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
51	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  -  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int  n  =  Math.min(factorials.length,  n  -  1);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  Math.min(factorials.length,  n  -  1);	      int    n    =    Math.min(factorials.length,    n);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
52	[BUG]  [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  -  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  final  int  n  =  Math.min(factorials.length,  n  -  1);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  int  n  =  Math.min(factorials.length,  n  -  1);	      final    int    n    =    Math.min(factorials.length,    n);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
53	[BUG]  [BUGGY]  final  byte  result  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  final  byte  result  =  Math.round(factorialDouble(n));  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  byte  result  =  Math.round(factorialDouble(n));	  final    long    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
54	[BUG]  [BUGGY]  final  double  result  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  final  double  result  =  Math.round(factorialDouble(n));  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  double  result  =  Math.round(factorialDouble(n));	  final    long    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
55	[BUG]  [BUGGY]  int  n  =  factorials.length  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int  n  =  factorials.length  +  1;  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  factorials.length  +  1;	      int    n    =    factorials.length;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
56	[BUG]  [BUGGY]  long  result  =  Math.round(factorials.length  -  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long  result  =  Math.round(factorials.length  -  1);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials.length  -  1);	  long    result    =    Math.round(factorials.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
57	[BUG]  [BUGGY]  long[]  factorials  =  new  short[n];  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long[]  factorials  =  new  short[n];  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  new  short[n];	      long[]    factorials    =    new    long[n];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
58	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[n  -  1]);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[n  -  1]);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  long[n  -  1]);	      long[]    factorials    =    getValues().toArray(new    Long[n]);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
59	[BUG]  [BUGGY]  short  value  =  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  short  value  =  Math.round(factorials[n]);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	short  value  =  Math.round(factorials[n]);	      long    value    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
60	[BUG]  [BUGGY]  final  long[]  factorials  =  getFactorials(n);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  final  long[]  factorials  =  getFactorials(n);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long[]  factorials  =  getFactorials(n);	      final    long[]    factorials    =    getFactorials();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
61	[BUG]  [BUGGY]  final  byte[]  factorials  =  getFactorials();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  final  byte[]  factorials  =  getFactorials();  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  byte[]  factorials  =  getFactorials();	      final    long[]    factorials    =    getFactorials();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
62	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[n  -  1]);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[n  -  1]);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  Long[n  -  1]);	      long[]    factorials    =    getValues().toArray(new    Long[n]);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
63	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[n  +  1]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long[]  factorials  =  getValues().toArray(new  Long[n  +  1]);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues().toArray(new  Long[n  +  1]);	      long[]    factorials    =    getValues().toArray(new    Long[n]);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
64	[BUG]  [BUGGY]  long[]  factorials  =  n.getAllValues();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long[]  factorials  =  n.getAllValues();  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  n.getAllValues();	      long[]    factorials    =    n.getValues();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
65	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials.length  -  n);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  final  long  result  =  Math.round(factorials.length  -  n);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials.length  -  n);	  final    long    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
66	[BUG]  [BUGGY]  final  long  result  =  Math.round(factorials.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  final  long  result  =  Math.round(factorials.length);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	final  long  result  =  Math.round(factorials.length);	  final    long    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
67	[BUG]  [BUGGY]  long[]  factorials  =  getFunctionValues();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long[]  factorials  =  getFunctionValues();  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getFunctionValues();	      long[]    factorials    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
68	[BUG]  [BUGGY]  long  result  =  Math.round(factorials.length,  n);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long  result  =  Math.round(factorials.length,  n);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials.length,  n);	  long    result    =    Math.round(factorials.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
69	[BUG]  [BUGGY]  long  result  =  Math.round(factorials.length  -  n);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long  result  =  Math.round(factorials.length  -  n);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorials.length  -  n);	  long    result    =    Math.round(factorials.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
70	[BUG]  [BUGGY]  long[]  factorials  =  getValues(n,  n);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long[]  factorials  =  getValues(n,  n);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues(n,  n);	      long[]    factorials    =    getValues(n);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
71	[BUG]  [BUGGY]  long[]  factorials  =  getValues(n  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long[]  factorials  =  getValues(n  -  1);  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  getValues(n  -  1);	      long[]    factorials    =    getValues(n);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
72	[BUG]  [BUGGY]  int  result  =  Math.round(factorials.length  -  n);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int  result  =  Math.round(factorials.length  -  n);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  result  =  Math.round(factorials.length  -  n);	  int    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
73	[BUG]  [BUGGY]  long[]  factorials  =  new  long[n  *  n];  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  long[]  factorials  =  new  long[n  *  n];  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long[]  factorials  =  new  long[n  *  n];	      long[]    factorials    =    new    long[n];    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
74	[BUG]  [BUGGY]  int  n  =  n;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int  n  =  n;  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  n;	      int    n    =    factorials.length;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
75	[BUG]  [BUGGY]  int  n  =  n  <  factorials.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {    [BUGGY]  int  n  =  n  <  factorials.length;  [BUGGY]    long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	int  n  =  n  <  factorials.length;	      int    n    =    factorials.length;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
