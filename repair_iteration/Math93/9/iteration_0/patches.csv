bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    logSum  +=  Math.log((  double)i);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]    logSum  +=  Math.log((  double)i);  [BUGGY]  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	replace	    logSum  +=  Math.log((  double)i);		non-compiled	[CE]  <identifier>  expected	18	None	add
2	[BUG]  [BUGGY]    double  logSum  =  Math.log((  double)i);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]    double  logSum  =  Math.log((  double)i);  [BUGGY]  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	replace	    double  logSum  =  Math.log((  double)i);		non-compiled	[CE]  <identifier>  expected	18	None	add
3	[BUG]  [BUGGY]    double  logSum  +=  Math.log((  double)i);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]    double  logSum  +=  Math.log((  double)i);  [BUGGY]  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	replace	    double  logSum  +=  Math.log((  double)i);		non-compiled	[CE]  <identifier>  expected	18	None	add
4	[BUG]  [BUGGY]    double  logSum  =((  double)i).doubleValue();  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]    double  logSum  =((  double)i).doubleValue();  [BUGGY]  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	replace	    double  logSum  =((  double)i).doubleValue();		non-compiled	[CE]  <identifier>  expected	18	None	add
5	[BUG]  [BUGGY]    ((  double)i).doubleValue();  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]    ((  double)i).doubleValue();  [BUGGY]  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	replace	    ((  double)i).doubleValue();		non-compiled	[CE]  <identifier>  expected	18	None	add
6	[BUG]  [BUGGY]  logSum  +=  Math.log((  double)n);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]  logSum  +=  Math.log((  double)n);  [BUGGY]  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	replace	logSum  +=  Math.log((  double)n);	logSum  +=  Math.log((double)i);  	non-compiled	[CE]  <identifier>  expected	17	None	replace
7	[BUG]  [BUGGY]  logSum  +=  Math.log((  double)i,  n);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]  logSum  +=  Math.log((  double)i,  n);  [BUGGY]  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	replace	logSum  +=  Math.log((  double)i,  n);	logSum  +=  Math.log((double)i);  	non-compiled	[CE]  <identifier>  expected	17	None	replace
8	[BUG]  [BUGGY]  logSum  +=  Math.rint((  double)i);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]  logSum  +=  Math.rint((  double)i);  [BUGGY]  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	replace	logSum  +=  Math.rint((  double)i);	logSum  +=  Math.log((double)i);  	non-compiled	[CE]  <identifier>  expected	17	None	replace
9	[BUG]  [BUGGY]  logSum  +=  Math.pow(10,  i);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]  logSum  +=  Math.pow(10,  i);  [BUGGY]  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	replace	logSum  +=  Math.pow(10,  i);	logSum  +=  Math.log((double)i);  	non-compiled	[CE]  <identifier>  expected	17	None	replace
10	[BUG]  [BUGGY]  logSum  -=  Math.log((  double)i);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]  logSum  -=  Math.log((  double)i);  [BUGGY]  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	replace	logSum  -=  Math.log((  double)i);	logSum  +=  Math.log((double)i);  	non-compiled	[CE]  <identifier>  expected	17	None	replace
11	[BUG]  [BUGGY]    ((  double)i).doubleValue();  logSum  +=  Math.log((  double)i);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]    ((  double)i).doubleValue();  logSum  +=  Math.log((  double)i);  [BUGGY]  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	replace	    ((  double)i).doubleValue();  logSum  +=  Math.log((  double)i);		non-compiled	[CE]  <identifier>  expected	18	None	add
12	[BUG]  [BUGGY]    n  =  Math.log((  double)i);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]    n  =  Math.log((  double)i);  [BUGGY]  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	replace	    n  =  Math.log((  double)i);		non-compiled	[CE]  <identifier>  expected	18	None	add
