projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java346if(result==Long.MAX_VALUE){
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java346if(result==Long.MIN_VALUE||result==Long.MAX_VALUE){
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java346if(result==Long.MIN_VALUE){
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java346if(result!=Long.MAX_VALUE){
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java346
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java346result=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java346longvalue=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java346result=Math.round(factorialValue(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java346long[]factorials=getValues();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java346result=Math.round(factorialShort(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java346if(result!=Long.MIN_VALUE||result==Long.MAX_VALUE){
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java346if(result==Long.MAX_VALUE||result==Long.MAX_VALUE){
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java346longvalue=Math.round(factorialValue(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java346result=Math.round(factorialDouble(result));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java346if(result==Long.MAX_VALUE){thrownewArithmeticException("");}
