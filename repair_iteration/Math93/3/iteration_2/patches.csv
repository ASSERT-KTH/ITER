bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  short  value  =  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  short  value  =  Math.round(factorials[n]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	short  value  =  Math.round(factorials[n]);	  short    value    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
2	[BUG]  [BUGGY]  long[]  factorials  =  getFieldValues(result);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long[]  factorials  =  getFieldValues(result);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getFieldValues(result);	  long[]    factorials    =    getFieldValues();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
3	[BUG]  [BUGGY]  long[]  factorials  =  getFieldValues(n);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long[]  factorials  =  getFieldValues(n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getFieldValues(n);	  long[]    factorials    =    getFieldValues();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
4	[BUG]  [BUGGY]  long[]  factorials  =  getFieldValues().toArray(result);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long[]  factorials  =  getFieldValues().toArray(result);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getFieldValues().toArray(result);	  long[]    factorials    =    getFieldValues();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
5	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  +  2]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials[n  +  2]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n  +  2]);	  result    =    Math.round(factorials[n    +    1]);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
6	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  +  3]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials[n  +  3]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n  +  3]);	  result    =    Math.round(factorials[n    +    1]);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
7	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  +  1]  &  0xfffff);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials[n  +  1]  &  0xfffff);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n  +  1]  &  0xfffff);	  result    =    Math.round(factorials[n    +    1]);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
8	[BUG]  [BUGGY]  result  =  Math.round(factorials.length(n  +  1));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials.length(n  +  1));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials.length(n  +  1));	  result    =    Math.round(factorials.length(n));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
9	[BUG]  [BUGGY]  result  =  Math.round(factorials.length(n),  n);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials.length(n),  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials.length(n),  n);	  result    =    Math.round(factorials.length(n));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
10	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n  +  1),  n);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialValue(n  +  1),  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialValue(n  +  1),  n);	  result    =    Math.round(factorialValue(n    +    1));    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
11	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n  +  2));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialValue(n  +  2));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialValue(n  +  2));	  result    =    Math.round(factorialValue(n    +    1));    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
12	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n  -  1));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialValue(n  -  1));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialValue(n  -  1));	  result    =    Math.round(factorialValue(n    +    1));    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
13	[BUG]  [BUGGY]  int[]  factorials  =  getValues(result);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  int[]  factorials  =  getValues(result);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	int[]  factorials  =  getValues(result);	  int[]    factorials    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  int[]  factorials  =  getValues().length;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  int[]  factorials  =  getValues().length;  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	int[]  factorials  =  getValues().length;	  int[]    factorials    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  int  value  =  Math.round(factorialValue(result));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  int  value  =  Math.round(factorialValue(result));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	int  value  =  Math.round(factorialValue(result));	  long    value    =    Math.round(factorialValue(result));    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
16	[BUG]  [BUGGY]  short  value  =  Math.round(factorialValue(result));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  short  value  =  Math.round(factorialValue(result));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	short  value  =  Math.round(factorialValue(result));	  long    value    =    Math.round(factorialValue(result));    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
17	[BUG]  [BUGGY]  if(result!=  Long.MIN_VALUE  ||  result  <  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  if(result!=  Long.MIN_VALUE  ||  result  <  Long.MAX_VALUE)  {  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result!=  Long.MIN_VALUE  ||  result  <  Long.MAX_VALUE)  {	  if(result!=    Long.MIN_VALUE    ||    result    <    =    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
18	[BUG]  [BUGGY]  if(result  ==  Long.MIN_VALUE  ||  result  <  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  if(result  ==  Long.MIN_VALUE  ||  result  <  Long.MAX_VALUE)  {  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result  ==  Long.MIN_VALUE  ||  result  <  Long.MAX_VALUE)  {	  if(result!=    Long.MIN_VALUE    ||    result    <    =    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
19	[BUG]  [BUGGY]  if(result!=  Long.MIN_VALUE  &&  result  <  =  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  if(result!=  Long.MIN_VALUE  &&  result  <  =  Long.MAX_VALUE)  {  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result!=  Long.MIN_VALUE  &&  result  <  =  Long.MAX_VALUE)  {	  if(result!=    Long.MIN_VALUE    ||    result    <    =    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
20	[BUG]  [BUGGY]  result  =  Math.round(factorials[n].doubleValue()  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials[n].doubleValue()  -  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n].doubleValue()  -  1);	  result    =    Math.round(factorials[n].doubleValue());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
21	[BUG]  [BUGGY]  result  =  Math.round(factorials[n].doubleValue()  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials[n].doubleValue()  +  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n].doubleValue()  +  1);	  result    =    Math.round(factorials[n].doubleValue());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
22	[BUG]  [BUGGY]  result  =  Math.round(factorials[n].doubleValue()  /  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials[n].doubleValue()  /  2);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n].doubleValue()  /  2);	  result    =    Math.round(factorials[n].doubleValue());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
23	[BUG]  [BUGGY]  result  =  Math.round(factorialShort(n),  NS  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialShort(n),  NS  +  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialShort(n),  NS  +  1);	  result    =    Math.round(factorialShort(n),    NS);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
24	[BUG]  [BUGGY]  result  =  Math.round(factorialShort(n)/  NS);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialShort(n)/  NS);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialShort(n)/  NS);	  result    =    Math.round(factorialShort(n),    NS);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
25	[BUG]  [BUGGY]  double  value  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  double  value  =  Math.round(factorialDouble(n));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	double  value  =  Math.round(factorialDouble(n));	  int    value    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
26	[BUG]  [BUGGY]  int  value  =  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  int  value  =  Math.round(factorials[n]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	int  value  =  Math.round(factorials[n]);	  int    value    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
27	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n)/  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialValue(n)/  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialValue(n)/  1);	  result    =    Math.round(factorialValue(n)+    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
28	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n)+  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialValue(n)+  2);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialValue(n)+  2);	  result    =    Math.round(factorialValue(n)+    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
29	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n)+  3);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialValue(n)+  3);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialValue(n)+  3);	  result    =    Math.round(factorialValue(n)+    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
30	[BUG]  [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	Result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "Factory    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  >  expected	39	None	replace
31	[BUG]  [BUGGY]  Result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  Result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	Result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "Factory    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  >  expected	39	None	replace
32	[BUG]  [BUGGY]  result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "Factory    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  >  expected	39	None	replace
33	[BUG]  [BUGGY]  long  value  =  Math.round(factorials[n],  result);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long  value  =  Math.round(factorials[n],  result);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long  value  =  Math.round(factorials[n],  result);	  long    value    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
34	[BUG]  [BUGGY]  long  value  =  Math.round(factorials[n  -  1]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long  value  =  Math.round(factorials[n  -  1]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long  value  =  Math.round(factorials[n  -  1]);	  long    value    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
35	[BUG]  [BUGGY]  result  =  result  ==  Long.MAX_VALUE?  result  :  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  result  ==  Long.MAX_VALUE?  result  :  Math.round(factorials[n]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  result  ==  Long.MAX_VALUE?  result  :  Math.round(factorials[n]);	  result    =    result    ==    Long.MAX_VALUE?    result    :    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
36	[BUG]  [BUGGY]  result  =  result  ==  Long.MIN_VALUE?  result  :  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  result  ==  Long.MIN_VALUE?  result  :  Math.round(factorials[n]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  result  ==  Long.MIN_VALUE?  result  :  Math.round(factorials[n]);	  result    =    result    ==    Long.MAX_VALUE?    result    :    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
37	[BUG]  [BUGGY]  result  =  n  ==  Long.MAX_VALUE?  result  :  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  n  ==  Long.MAX_VALUE?  result  :  Math.round(factorialDouble(n));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  n  ==  Long.MAX_VALUE?  result  :  Math.round(factorialDouble(n));	  result    =    result    ==    Long.MAX_VALUE?    result    :    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
38	[BUG]  [BUGGY]  result  =  n  ==  Long.MAX_VALUE?  result  :  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  n  ==  Long.MAX_VALUE?  result  :  Math.round(factorials[n]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  n  ==  Long.MAX_VALUE?  result  :  Math.round(factorials[n]);	  result    =    result    ==    Long.MAX_VALUE?    result    :    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
39	[BUG]  [BUGGY]  result  =  Math.round(factorialShort(n,  n  -  1));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialShort(n,  n  -  1));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialShort(n,  n  -  1));	  result    =    Math.round(factorialShort(n    -    1));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
40	[BUG]  [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	Result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "result    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  >  expected	38	None	replace
41	[BUG]  [BUGGY]  Result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  Result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	Result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "result    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  >  expected	38	None	replace
42	[BUG]  [BUGGY]  result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "result    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  >  expected	38	None	replace
43	[BUG]  [BUGGY]  result  =  Math.round(factorialShort(n),  n  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialShort(n),  n  +  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialShort(n),  n  +  1);	  result    =    Math.round(factorialShort(n),    n);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
44	[BUG]  [BUGGY]  result  =  Math.round(factorialShort(n),  0);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialShort(n),  0);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialShort(n),  0);	  result    =    Math.round(factorialShort(n),    n);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
45	[BUG]  [BUGGY]  long[]  factorials  =  getValues(n,  result);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long[]  factorials  =  getValues(n,  result);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getValues(n,  result);	  long[]    factorials    =    getValues(n);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
46	[BUG]  [BUGGY]  int[]  factorials  =  getValues(n);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  int[]  factorials  =  getValues(n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	int[]  factorials  =  getValues(n);	  long[]    factorials    =    getValues(n);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
47	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials[n]  -  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n]  -  1);	  result    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
48	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials[n]  +  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n]  +  1);	  result    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
49	[BUG]  [BUGGY]  if(n  ==  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  if(n  ==  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(n  ==  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {	  if(result    ==    Long.MIN_VALUE    &&    result    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
50	[BUG]  [BUGGY]  result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	  Result    <    Long.MAX_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  >  expected	26	None	replace
51	[BUG]  [BUGGY]  int  value  =  Math.round(factorialValue(n),  result);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  int  value  =  Math.round(factorialValue(n),  result);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	int  value  =  Math.round(factorialValue(n),  result);	  long    value    =    Math.round(factorialValue(n),    result);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
52	[BUG]  [BUGGY]  long  value  =  Math.round(factorialValue(n),  result  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long  value  =  Math.round(factorialValue(n),  result  +  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long  value  =  Math.round(factorialValue(n),  result  +  1);	  long    value    =    Math.round(factorialValue(n),    result);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
53	[BUG]  [BUGGY]  double  value  =  Math.round(factorialValue(n));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  double  value  =  Math.round(factorialValue(n));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	double  value  =  Math.round(factorialValue(n));	  int    value    =    Math.round(factorialValue(n));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
54	[BUG]  [BUGGY]  Result  result  =  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  Result  result  =  Math.round(factorials[n]);  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	Result  result  =  Math.round(factorials[n]);	  Result    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
55	[BUG]  [BUGGY]  Result  result  =  Math.round(factorials[n  -  1]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  Result  result  =  Math.round(factorials[n  -  1]);  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	Result  result  =  Math.round(factorials[n  -  1]);	  Result    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
56	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  -  2]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials[n  -  2]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n  -  2]);	  result    =    Math.round(factorials[n    -    1]);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
57	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  -  1]  *  result);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials[n  -  1]  *  result);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n  -  1]  *  result);	  result    =    Math.round(factorials[n    -    1]);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
58	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n),  NS  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialValue(n),  NS  +  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialValue(n),  NS  +  1);	  result    =    Math.round(factorialValue(n),    NS);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
59	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n)/  NS);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialValue(n)/  NS);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialValue(n)/  NS);	  result    =    Math.round(factorialValue(n),    NS);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
60	[BUG]  [BUGGY]  result  =  Math.round(factorial(n,  n));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorial(n,  n));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorial(n,  n));	  result    =    Math.round(factorial(n));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
61	[BUG]  [BUGGY]  result  =  Math.round(factorial(n  +  1));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorial(n  +  1));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorial(n  +  1));	  result    =    Math.round(factorial(n));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
62	[BUG]  [BUGGY]  result  =  Math.round(factorial(n),  n);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorial(n),  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorial(n),  n);	  result    =    Math.round(factorial(n));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
63	[BUG]  [BUGGY]  if(n  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  if(n  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(n  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {	  if(n    ==    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
64	[BUG]  [BUGGY]  result  =  Math.round(factorials[N]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials[N]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[N]);	  result    =    Math.round(factorials[result]);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
65	[BUG]  [BUGGY]  result  =  Math.round(factororials[n]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factororials[n]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factororials[n]);	  result    =    Math.round(factorials[result]);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
66	[BUG]  [BUGGY]  long[]  factorials  =  getValues(result,  n);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long[]  factorials  =  getValues(result,  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getValues(result,  n);	  long[]    factorials    =    getValues(result);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
67	[BUG]  [BUGGY]  if(result  ==  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  if(result  ==  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result  ==  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {	  if(result    ==    Long.MIN_VALUE    ||    result    >=    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
68	[BUG]  [BUGGY]  if(n!=  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  if(n!=  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(n!=  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {	  if(result!=    Long.MIN_VALUE    &&    result    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
69	[BUG]  [BUGGY]  long[]  factorials  =  getBase(result);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long[]  factorials  =  getBase(result);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getBase(result);	  long[]    factorials    =    getBaseValues();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
70	[BUG]  [BUGGY]  long[]  factorials  =  getBaseValues(result);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long[]  factorials  =  getBaseValues(result);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getBaseValues(result);	  long[]    factorials    =    getBaseValues();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
71	[BUG]  [BUGGY]  long[]  factorials  =  getBaseResults();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long[]  factorials  =  getBaseResults();  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getBaseResults();	  long[]    factorials    =    getBaseValues();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
72	[BUG]  [BUGGY]  result  =  Math.round(result,  n  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(result,  n  +  1);  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(result,  n  +  1);	  result    =    Math.round(result,    n);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
73	[BUG]  [BUGGY]  result  =  Math.round(factorials[n],  n);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials[n],  n);  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n],  n);	  result    =    Math.round(result,    n);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
74	[BUG]  [BUGGY]  result  =  Math.round(factorials,  n);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials,  n);  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials,  n);	  result    =    Math.round(result,    n);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
75	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(result,  n);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long[]  factorials  =  getValues().toArray(result,  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getValues().toArray(result,  n);	  long[]    factorials    =    getValues().toArray(result);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
76	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(result,  result);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long[]  factorials  =  getValues().toArray(result,  result);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getValues().toArray(result,  result);	  long[]    factorials    =    getValues().toArray(result);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
77	[BUG]  [BUGGY]  int[]  factorials  =  getValues().toArray(result);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  int[]  factorials  =  getValues().toArray(result);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	int[]  factorials  =  getValues().toArray(result);	  long[]    factorials    =    getValues().toArray(result);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
78	[BUG]  [BUGGY]  result  =  result  ==  Long.MAX_VALUE?  result  :  Long.MAX_VALUE  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  result  ==  Long.MAX_VALUE?  result  :  Long.MAX_VALUE  +  1;  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  result  ==  Long.MAX_VALUE?  result  :  Long.MAX_VALUE  +  1;	  result    =    result    ==    Long.MAX_VALUE?    result    :    Long.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
79	[BUG]  [BUGGY]  result  =  result  ==  Long.MIN_VALUE?  result  :  Long.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  result  ==  Long.MIN_VALUE?  result  :  Long.MAX_VALUE;  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  result  ==  Long.MIN_VALUE?  result  :  Long.MAX_VALUE;	  result    =    result    ==    Long.MAX_VALUE?    result    :    Long.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
80	[BUG]  [BUGGY]  result  =  result  ==  Long.MAX_VALUE?  result  :  Long.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  result  ==  Long.MAX_VALUE?  result  :  Long.MIN_VALUE;  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  result  ==  Long.MAX_VALUE?  result  :  Long.MIN_VALUE;	  result    =    result    ==    Long.MAX_VALUE?    result    :    Long.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
81	[BUG]  [BUGGY]  if(result  ==  Long.MIN_VALUE  &&  result  <  =  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  if(result  ==  Long.MIN_VALUE  &&  result  <  =  Long.MAX_VALUE)  {  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result  ==  Long.MIN_VALUE  &&  result  <  =  Long.MAX_VALUE)  {	  if(result    ==    Long.MIN_VALUE    ||    result    <    =    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
82	[BUG]  [BUGGY]  byte  value  =  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  byte  value  =  Math.round(factorials[n]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	byte  value  =  Math.round(factorials[n]);	  byte    value    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
83	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n),  0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialValue(n),  0);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialValue(n),  0);	  result    =    Math.round(factorialValue(n),    n);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
84	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n),  n  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialValue(n),  n  +  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialValue(n),  n  +  1);	  result    =    Math.round(factorialValue(n),    n);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
85	[BUG]  [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	Result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  >  expected	23	None	replace
86	[BUG]  [BUGGY]  Result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  Result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	Result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  >  expected	23	None	replace
87	[BUG]  [BUGGY]  result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  >  expected	23	None	replace
88	[BUG]  [BUGGY]  if(n  ==  Long.MAX_VALUE  ||  result  ==  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  if(n  ==  Long.MAX_VALUE  ||  result  ==  Long.MIN_VALUE)  {  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(n  ==  Long.MAX_VALUE  ||  result  ==  Long.MIN_VALUE)  {	  if(result    ==    Long.MAX_VALUE    ||    result    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
89	[BUG]  [BUGGY]  result  =  Math.round(factorials[n].length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials[n].length);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n].length);	  result    =    Math.round(factorials.length);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
90	[BUG]  [BUGGY]  result  =  Math.round(factorials.length  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials.length  -  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials.length  -  1);	  result    =    Math.round(factorials.length);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
91	[BUG]  [BUGGY]  result  =  Math.round(factorialShort(n  +  1),  n);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialShort(n  +  1),  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialShort(n  +  1),  n);	  result    =    Math.round(factorialShort(n    +    1));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
92	[BUG]  [BUGGY]  result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "Factory    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  >  expected	39	None	replace
93	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  +  1]  &  0xffff);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials[n  +  1]  &  0xffff);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n  +  1]  &  0xffff);	  result    =    Math.round(factorials[n    +    1]);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
94	[BUG]  [BUGGY]  int[]  factorials  =  getFieldValues();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  int[]  factorials  =  getFieldValues();  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	int[]  factorials  =  getFieldValues();	  int[]    factorials    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
95	[BUG]  [BUGGY]  result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "result    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  >  expected	38	None	replace
96	[BUG]  [BUGGY]  float  value  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  float  value  =  Math.round(factorialDouble(n));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	float  value  =  Math.round(factorialDouble(n));	  int    value    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
97	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  -  1]  +  length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials[n  -  1]  +  length);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n  -  1]  +  length);	  result    =    Math.round(factorials[n    -    1]);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
98	[BUG]  [BUGGY]  result  =  Math.round(factorialShort(result),  n);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialShort(result),  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialShort(result),  n);	  result    =    Math.round(factorialShort(n),    n);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
99	[BUG]  [BUGGY]  short[]  factorials  =  getValues(n);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  short[]  factorials  =  getValues(n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	short[]  factorials  =  getValues(n);	  long[]    factorials    =    getValues(n);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
100	[BUG]  [BUGGY]  Result  result  =  Math.round(factorials.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  Result  result  =  Math.round(factorials.length);  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	Result  result  =  Math.round(factorials.length);	  Result    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
101	[BUG]  [BUGGY]  result  =  Math.round(factorialInt(n));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialInt(n));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialInt(n));	  result    =    Math.round(factorial(n));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
102	[BUG]  [BUGGY]  byte  value  =  Math.round(factorialValue(result));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  byte  value  =  Math.round(factorialValue(result));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	byte  value  =  Math.round(factorialValue(result));	  long    value    =    Math.round(factorialValue(result));    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
103	[BUG]  [BUGGY]  result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  >  expected	23	None	replace
104	[BUG]  [BUGGY]  result  =  Math.round(factorialValues[n]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialValues[n]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialValues[n]);	  result    =    Math.round(factorials[result]);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
105	[BUG]  [BUGGY]  result  =  Math.round(factorials.length(n  -  1));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials.length(n  -  1));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials.length(n  -  1));	  result    =    Math.round(factorials.length(n));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
106	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  -  1].doubleValue());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials[n  -  1].doubleValue());  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n  -  1].doubleValue());	  result    =    Math.round(factorials[n].doubleValue());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
107	[BUG]  [BUGGY]  result  =  Math.round(factorialShort(n  -  1)+  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialShort(n  -  1)+  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialShort(n  -  1)+  1);	  result    =    Math.round(factorialShort(n    -    1));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
108	[BUG]  [BUGGY]  long[]  factorials  =  getBaseValues(n);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long[]  factorials  =  getBaseValues(n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getBaseValues(n);	  long[]    factorials    =    getBaseValues();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
109	[BUG]  [BUGGY]  if(result  <  =  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  if(result  <  =  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result  <  =  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {	  if(result    >=    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
110	[BUG]  [BUGGY]  result  =  result  ==  Long.MIN_VALUE?  result  :  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  result  ==  Long.MIN_VALUE?  result  :  Math.round(factorialDouble(n));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  result  ==  Long.MIN_VALUE?  result  :  Math.round(factorialDouble(n));	  result    =    result    ==    Long.MAX_VALUE?    result    :    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
111	[BUG]  [BUGGY]  result  =  result!=  Long.MAX_VALUE?  result  :  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  result!=  Long.MAX_VALUE?  result  :  Math.round(factorials[n]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  result!=  Long.MAX_VALUE?  result  :  Math.round(factorials[n]);	  result    =    result    ==    Long.MAX_VALUE?    result    :    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
112	[BUG]  [BUGGY]  if(result  ==  Long.MAX_VALUE  &&  result  ==  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  if(result  ==  Long.MAX_VALUE  &&  result  ==  Long.MIN_VALUE)  {  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result  ==  Long.MAX_VALUE  &&  result  ==  Long.MIN_VALUE)  {	  if(result    ==    Long.MIN_VALUE    &&    result    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
113	[BUG]  [BUGGY]  long  value  =  Math.round(factorialValue(n  +  1),  result);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long  value  =  Math.round(factorialValue(n  +  1),  result);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long  value  =  Math.round(factorialValue(n  +  1),  result);	  long    value    =    Math.round(factorialValue(n),    result);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
114	[BUG]  [BUGGY]  long  value  =  Math.round(factorials[n]  -  result);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long  value  =  Math.round(factorials[n]  -  result);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long  value  =  Math.round(factorials[n]  -  result);	  long    value    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
115	[BUG]  [BUGGY]  long  value  =  Math.round(factorials[n]  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long  value  =  Math.round(factorials[n]  -  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long  value  =  Math.round(factorials[n]  -  1);	  long    value    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
116	[BUG]  [BUGGY]  if(result  >=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  if(result  >=  Long.MIN_VALUE)  {  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result  >=  Long.MIN_VALUE)  {	  if(result!=    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
117	[BUG]  [BUGGY]  long[]  factorials  =  getValues(result),  n);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long[]  factorials  =  getValues(result),  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getValues(result),  n);	  long[]    factorials    =    getValues(result);    	non-compiled	[CE]  ';'  expected	1	None	replace
118	[BUG]  [BUGGY]  long[]  factorials  =  getValues(result,  result);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long[]  factorials  =  getValues(result,  result);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getValues(result,  result);	  long[]    factorials    =    getValues(result);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
119	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n  +  1)+  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialValue(n  +  1)+  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialValue(n  +  1)+  1);	  result    =    Math.round(factorialValue(n    +    1));    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
120	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  +  1]  &  n);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials[n  +  1]  &  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n  +  1]  &  n);	  result    =    Math.round(factorials[n    +    1]);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
121	[BUG]  [BUGGY]  result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "Factory    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  >  expected	39	None	replace
122	[BUG]  [BUGGY]  if(result!=  Long.MAX_VALUE  &&  result  ==  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  if(result!=  Long.MAX_VALUE  &&  result  ==  Long.MAX_VALUE)  {  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result!=  Long.MAX_VALUE  &&  result  ==  Long.MAX_VALUE)  {	  if(result!=    Long.MAX_VALUE    ||    result    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
123	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[n]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long[]  factorials  =  getValues().toArray(new  long[n]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getValues().toArray(new  long[n]);	  long[]    factorials    =    getValues().toArray(result);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
124	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(result)+  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long[]  factorials  =  getValues().toArray(result)+  1;  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getValues().toArray(result)+  1;	  long[]    factorials    =    getValues().toArray(result);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
125	[BUG]  [BUGGY]  long[]  factorials  =  getValues(n  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long[]  factorials  =  getValues(n  -  1);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getValues(n  -  1);	  long[]    factorials    =    getValues(n);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
126	[BUG]  [BUGGY]  float  value  =  Math.round(factorialValue(n));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  float  value  =  Math.round(factorialValue(n));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	float  value  =  Math.round(factorialValue(n));	  int    value    =    Math.round(factorialValue(n));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
127	[BUG]  [BUGGY]  long  value  =  Math.round(factorialValue(n  -  1),  result);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long  value  =  Math.round(factorialValue(n  -  1),  result);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long  value  =  Math.round(factorialValue(n  -  1),  result);	  long    value    =    Math.round(factorialValue(n),    result);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
128	[BUG]  [BUGGY]  result  =  result  ==  Long.MAX_VALUE?  Math.round(factorials[n]):  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  result  ==  Long.MAX_VALUE?  Math.round(factorials[n]):  Math.round(factorials[n]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  result  ==  Long.MAX_VALUE?  Math.round(factorials[n]):  Math.round(factorials[n]);	  result    =    result    ==    Long.MAX_VALUE?    result    :    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
129	[BUG]  [BUGGY]  if(n  <  =  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  if(n  <  =  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(n  <  =  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {	  if(n    ==    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
130	[BUG]  [BUGGY]  result  =  Math.round(factorialShort(n)/  n);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialShort(n)/  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialShort(n)/  n);	  result    =    Math.round(factorialShort(n),    n);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
131	[BUG]  [BUGGY]  long[]  factorials  =  getBaseValues().toArray(result);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  long[]  factorials  =  getBaseValues().toArray(result);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getBaseValues().toArray(result);	  long[]    factorials    =    getBaseValues();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
132	[BUG]  [BUGGY]  result  =  Math.round(factorials[n].doubleValue()  +  n);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials[n].doubleValue()  +  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n].doubleValue()  +  n);	  result    =    Math.round(factorials[n].doubleValue());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
133	[BUG]  [BUGGY]  if(n  <  =  Long.MAX_VALUE  ||  result  ==  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  if(n  <  =  Long.MAX_VALUE  ||  result  ==  Long.MAX_VALUE)  {  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(n  <  =  Long.MAX_VALUE  ||  result  ==  Long.MAX_VALUE)  {	  if(n    ==    Long.MAX_VALUE    ||    result    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
134	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n)/  n);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialValue(n)/  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialValue(n)/  n);	  result    =    Math.round(factorialValue(n),    n);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
135	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n  +  1,  n));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialValue(n  +  1,  n));  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialValue(n  +  1,  n));	  result    =    Math.round(factorialValue(n    +    1));    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
136	[BUG]  [BUGGY]  if(result  ==  Long.MIN_VALUE  &&  result!=  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  if(result  ==  Long.MIN_VALUE  &&  result!=  Long.MAX_VALUE)  {  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result  ==  Long.MIN_VALUE  &&  result!=  Long.MAX_VALUE)  {	  if(result    ==    Long.MIN_VALUE    ||    result!=    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
137	[BUG]  [BUGGY]  if(result!=  Long.MIN_VALUE  &&  result!=  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  if(result!=  Long.MIN_VALUE  &&  result!=  Long.MAX_VALUE)  {  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result!=  Long.MIN_VALUE  &&  result!=  Long.MAX_VALUE)  {	  if(result    ==    Long.MIN_VALUE    ||    result!=    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
138	[BUG]  [BUGGY]  result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "result    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  >  expected	38	None	replace
139	[BUG]  [BUGGY]  short  value  =  Math.round(factorials.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  short  value  =  Math.round(factorials.length);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	short  value  =  Math.round(factorials.length);	  short    value    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
140	[BUG]  [BUGGY]  result  =  Math.round(factorialShort(n  -  1),  n);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialShort(n  -  1),  n);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialShort(n  -  1),  n);	  result    =    Math.round(factorialShort(n    -    1));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
141	[BUG]  [BUGGY]  result  =  Math.round(factorials.length,  n);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorials.length,  n);  [BUGGY]      throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials.length,  n);	  result    =    Math.round(result,    n);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
142	[BUG]  [BUGGY]  result  =  Math.round(factorialShort(n]);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));      [BUGGY]  result  =  Math.round(factorialShort(n]);  [BUGGY]      if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialShort(n]);	  result    =    Math.round(factorials[result]);    	non-compiled	[CE]  ')'  expected	6	None	replace
