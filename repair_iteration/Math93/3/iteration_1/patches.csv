bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  long[]  factorials  =  getValues(result);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  long[]  factorials  =  getValues(result);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getValues(result);	      long[]    factorials    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
2	[BUG]  [BUGGY]  long[]  factorials  =  getValues().toArray(result);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  long[]  factorials  =  getValues().toArray(result);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getValues().toArray(result);	      long[]    factorials    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
3	[BUG]  [BUGGY]  int[]  factorials  =  getValues();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  int[]  factorials  =  getValues();  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	int[]  factorials  =  getValues();	      long[]    factorials    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
4	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  result  =  Math.round(factorials[n]);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n]);	      result    =    Math.round(factorialDouble(result));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
5	[BUG]  [BUGGY]  result  =  Math.round(factorial(n));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  result  =  Math.round(factorial(n));  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorial(n));	      result    =    Math.round(factorialDouble(result));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
6	[BUG]  [BUGGY]  result  =  Math.round(factorials[result]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  result  =  Math.round(factorials[result]);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[result]);	      result    =    Math.round(factorialDouble(result));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
7	[BUG]  [BUGGY]  result  =  Math.round(factorials.length(n));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  result  =  Math.round(factorials.length(n));  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials.length(n));	      result    =    Math.round(factorialDouble(result));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
8	[BUG]  [BUGGY]  Result  result  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  Result  result  =  Math.round(factorialDouble(n));  [BUGGY]    throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	Result  result  =  Math.round(factorialDouble(n));	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  result  =  Math.round(result,  n);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  result  =  Math.round(result,  n);  [BUGGY]    throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(result,  n);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n),  n);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  result  =  Math.round(factorialValue(n),  n);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialValue(n),  n);	      result    =    Math.round(factorialValue(n));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
11	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n),  NS);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  result  =  Math.round(factorialValue(n),  NS);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialValue(n),  NS);	      result    =    Math.round(factorialValue(n));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
12	[BUG]  [BUGGY]  long  value  =  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  long  value  =  Math.round(factorials[n]);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long  value  =  Math.round(factorials[n]);	      long    value    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  int  value  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  int  value  =  Math.round(factorialDouble(n));  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	int  value  =  Math.round(factorialDouble(n));	      long    value    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  short  value  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  short  value  =  Math.round(factorialDouble(n));  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	short  value  =  Math.round(factorialDouble(n));	      long    value    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  byte  value  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  byte  value  =  Math.round(factorialDouble(n));  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	byte  value  =  Math.round(factorialDouble(n));	      long    value    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  if(result  ==  Long.MIN_VALUE  ||  result!=  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  if(result  ==  Long.MIN_VALUE  ||  result!=  Long.MAX_VALUE)  {  [BUGGY]    throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result  ==  Long.MIN_VALUE  ||  result!=  Long.MAX_VALUE)  {	  if(result    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  result  =  Math.round(factorialShort(n),  n);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  result  =  Math.round(factorialShort(n),  n);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialShort(n),  n);	      result    =    Math.round(factorialShort(n));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
18	[BUG]  [BUGGY]  result  =  Math.round(factorialShort(n),  NS);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  result  =  Math.round(factorialShort(n),  NS);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialShort(n),  NS);	      result    =    Math.round(factorialShort(n));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
19	[BUG]  [BUGGY]  result  =  Math.round(factorialShort(n  +  1));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  result  =  Math.round(factorialShort(n  +  1));  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialShort(n  +  1));	      result    =    Math.round(factorialShort(n));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
20	[BUG]  [BUGGY]  if(n  ==  Long.MAX_VALUE  ||  result  ==  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  if(n  ==  Long.MAX_VALUE  ||  result  ==  Long.MAX_VALUE)  {  [BUGGY]    throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(n  ==  Long.MAX_VALUE  ||  result  ==  Long.MAX_VALUE)  {	  if(result    ==    Long.MAX_VALUE    ||    result    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
21	[BUG]  [BUGGY]  long  value  =  Math.round(factorialValue(n),  result);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  long  value  =  Math.round(factorialValue(n),  result);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long  value  =  Math.round(factorialValue(n),  result);	      long    value    =    Math.round(factorialValue(n));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
22	[BUG]  [BUGGY]  int  value  =  Math.round(factorialValue(n));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  int  value  =  Math.round(factorialValue(n));  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	int  value  =  Math.round(factorialValue(n));	      long    value    =    Math.round(factorialValue(n));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
23	[BUG]  [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	      if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  >  expected	14	None	replace
24	[BUG]  [BUGGY]  result  =  result  ==  Long.MAX_VALUE?  result  :  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  result  =  result  ==  Long.MAX_VALUE?  result  :  Math.round(factorialDouble(n));  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  result  ==  Long.MAX_VALUE?  result  :  Math.round(factorialDouble(n));	      if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
25	[BUG]  [BUGGY]  result  =  result  ==  Long.MAX_VALUE?  result  :  Long.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  result  =  result  ==  Long.MAX_VALUE?  result  :  Long.MAX_VALUE;  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  result  ==  Long.MAX_VALUE?  result  :  Long.MAX_VALUE;	      if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
26	[BUG]  [BUGGY]  Result  <  Long.MAX_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  Result  <  Long.MAX_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	Result  <  Long.MAX_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	      if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  >  expected	14	None	replace
27	[BUG]  [BUGGY]  if(n  ==  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  if(n  ==  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  [BUGGY]    throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(n  ==  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {	  if(result    ==    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
28	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  -  1]);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  result  =  Math.round(factorials[n  -  1]);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n  -  1]);	      result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  result  =  Math.round(factorials[n].doubleValue());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  result  =  Math.round(factorials[n].doubleValue());  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n].doubleValue());	      result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
30	[BUG]  [BUGGY]  result  =  Math.round(factorials.length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  result  =  Math.round(factorials.length);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials.length);	      result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
31	[BUG]  [BUGGY]  if(result!=  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  if(result!=  Long.MIN_VALUE)  {  [BUGGY]    throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result!=  Long.MIN_VALUE)  {	  if(result!=    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
32	[BUG]  [BUGGY]  if(result  ==  Long.MIN_VALUE  ||  result  >=  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  if(result  ==  Long.MIN_VALUE  ||  result  >=  Long.MAX_VALUE)  {  [BUGGY]    throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result  ==  Long.MIN_VALUE  ||  result  >=  Long.MAX_VALUE)  {	  if(result!=    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
33	[BUG]  [BUGGY]  if(result  ==  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  if(result  ==  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  [BUGGY]    throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result  ==  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {	  if(result    ==    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  if(result  ==  Long.MIN_VALUE  ||  result  <  =  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  if(result  ==  Long.MIN_VALUE  ||  result  <  =  Long.MAX_VALUE)  {  [BUGGY]    throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result  ==  Long.MIN_VALUE  ||  result  <  =  Long.MAX_VALUE)  {	  if(result    ==    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  result  =  Math.round(factorialShort(n  -  1));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  result  =  Math.round(factorialShort(n  -  1));  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialShort(n  -  1));	      result    =    Math.round(factorialShort(n));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
36	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n)+  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  result  =  Math.round(factorialValue(n)+  1);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialValue(n)+  1);	      result    =    Math.round(factorialValue(n));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
37	[BUG]  [BUGGY]  if(result  >=  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  if(result  >=  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  [BUGGY]    throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result  >=  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {	  if(result    ==    Long.MAX_VALUE    ||    result    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
38	[BUG]  [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }	      if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  >  expected	14	None	replace
39	[BUG]  [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }	      if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  >  expected	14	None	replace
40	[BUG]  [BUGGY]  long  value  =  Math.round(factorialValue(result));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  long  value  =  Math.round(factorialValue(result));  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long  value  =  Math.round(factorialValue(result));	      long    value    =    Math.round(factorialValue(n));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
41	[BUG]  [BUGGY]  long[]  factorials  =  getFieldValues();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  long[]  factorials  =  getFieldValues();  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getFieldValues();	      long[]    factorials    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
42	[BUG]  [BUGGY]  long[]  factorials  =  getBaseValues();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  long[]  factorials  =  getBaseValues();  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getBaseValues();	      long[]    factorials    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
43	[BUG]  [BUGGY]  if(result!=  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  if(result!=  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  [BUGGY]    throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result!=  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {	  if(result!=    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
44	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  +  1]);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  result  =  Math.round(factorials[n  +  1]);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorials[n  +  1]);	      result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  if(result  ==  Long.MAX_VALUE  &&  result  ==  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  if(result  ==  Long.MAX_VALUE  &&  result  ==  Long.MAX_VALUE)  {  [BUGGY]    throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result  ==  Long.MAX_VALUE  &&  result  ==  Long.MAX_VALUE)  {	  if(result    ==    Long.MAX_VALUE    ||    result    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
46	[BUG]  [BUGGY]  if(result!=  Long.MAX_VALUE  ||  result  ==  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  if(result!=  Long.MAX_VALUE  ||  result  ==  Long.MAX_VALUE)  {  [BUGGY]    throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result!=  Long.MAX_VALUE  ||  result  ==  Long.MAX_VALUE)  {	  if(result    ==    Long.MAX_VALUE    ||    result    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
47	[BUG]  [BUGGY]  if(result!=  Long.MIN_VALUE  ||  result  <  =  Long.MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  if(result!=  Long.MIN_VALUE  ||  result  <  =  Long.MAX_VALUE)  {  [BUGGY]    throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result!=  Long.MIN_VALUE  ||  result  <  =  Long.MAX_VALUE)  {	  if(result!=    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
48	[BUG]  [BUGGY]  if(result  ==  Long.MAX_VALUE  ||  result  ==  Long.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  if(result  ==  Long.MAX_VALUE  ||  result  ==  Long.MIN_VALUE)  {  [BUGGY]    throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	if(result  ==  Long.MAX_VALUE  ||  result  ==  Long.MIN_VALUE)  {	  if(result    ==    Long.MIN_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
49	[BUG]  [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "factorial  value  is  too  large  to  fit  in  a  long ");  }  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "factorial  value  is  too  large  to  fit  in  a  long ");  }	      if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  >  expected	14	None	replace
50	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n  +  1));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  result  =  Math.round(factorialValue(n  +  1));  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	result  =  Math.round(factorialValue(n  +  1));	      result    =    Math.round(factorialValue(n));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
51	[BUG]  [BUGGY]  long[]  factorials  =  getValues(n);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));    [BUGGY]  long[]  factorials  =  getValues(n);  [BUGGY]    if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	long[]  factorials  =  getValues(n);	      long[]    factorials    =    getValues();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
