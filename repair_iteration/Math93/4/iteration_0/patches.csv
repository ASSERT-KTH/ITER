bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(n  <  =  0)  {  [CE]  ')'  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]  if(n  <  =  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  =  0)  {	if  (n  <  0)  {  	non-compiled	[CE]  ')'  expected	7	None	replace
2	[BUG]  [BUGGY]  if(n  ==  0)  {  [CE]  ')'  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]  if(n  ==  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  ==  0)  {	if  (n  <  0)  {  	non-compiled	[CE]  ')'  expected	7	None	replace
3	[BUG]  [BUGGY]  if(n  <  0  ||  n  ==  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]  if(n  <  0  ||  n  ==  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  0  ||  n  ==  0)  {	if  (n  <  0)  {  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]    [BUGGY]  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	  	if  (n  <  0)  {  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]    int  n  =  Math.min(factorials.length,  n);  [CE]  ')'  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]    int  n  =  Math.min(factorials.length,  n);  [BUGGY]  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	    int  n  =  Math.min(factorials.length,  n);		non-compiled	[CE]  ')'  expected	8	None	add
6	[BUG]  [BUGGY]    int  n  =  Math.log(factorials[n]);  [CE]  ')'  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]    int  n  =  Math.log(factorials[n]);  [BUGGY]  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	    int  n  =  Math.log(factorials[n]);		non-compiled	[CE]  ')'  expected	8	None	add
7	[BUG]  [BUGGY]    int  n  =  Math.floor(factorials.length);  [CE]  ')'  expected  [FE]        AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]    int  n  =  Math.floor(factorials.length);  [BUGGY]  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	    int  n  =  Math.floor(factorials.length);		non-compiled	[CE]  ')'  expected	8	None	add
8	[BUG]  [BUGGY]    int  n  =  Math.min(factorials.length,  0);  [CE]  ')'  expected  [FE]          AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]    int  n  =  Math.min(factorials.length,  0);  [BUGGY]  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	    int  n  =  Math.min(factorials.length,  0);		non-compiled	[CE]  ')'  expected	8	None	add
9	[BUG]  [BUGGY]    int  n  =  Math.floor(factorials[n]);  [CE]  ')'  expected  [FE]            AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]    int  n  =  Math.floor(factorials[n]);  [BUGGY]  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	    int  n  =  Math.floor(factorials[n]);		non-compiled	[CE]  ')'  expected	8	None	add
10	[BUG]  [BUGGY]  if(n  <  1)  {  [CE]  ')'  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]  if(n  <  1)  {  [BUGGY]  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  1)  {	if  (n  <  0)  {  	non-compiled	[CE]  ')'  expected	7	None	replace
11	[BUG]  [BUGGY]    int  n  =  factorials.length;  [CE]  ')'  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]    int  n  =  factorials.length;  [BUGGY]  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	    int  n  =  factorials.length;		non-compiled	[CE]  ')'  expected	8	None	add
12	[BUG]  [BUGGY]    int  n  =  factorials.size();  [CE]  ')'  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]    int  n  =  factorials.size();  [BUGGY]  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	    int  n  =  factorials.size();		non-compiled	[CE]  ')'  expected	8	None	add
13	[BUG]  [BUGGY]    int  n  =  Math.log(factorials.length);  [CE]  ')'  expected  [FE]        AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]    int  n  =  Math.log(factorials.length);  [BUGGY]  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	    int  n  =  Math.log(factorials.length);		non-compiled	[CE]  ')'  expected	8	None	add
14	[BUG]  [BUGGY]  if(n  <  0  ||  n  >  0)  {  [CE]  ')'  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]  if(n  <  0  ||  n  >  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  0  ||  n  >  0)  {	if  (n  <  0)  {  	non-compiled	[CE]  ')'  expected	7	None	replace
15	[BUG]  [BUGGY]    double  n  =  Math.floor(factorials.length);  [CE]  ')'  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]    double  n  =  Math.floor(factorials.length);  [BUGGY]  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	    double  n  =  Math.floor(factorials.length);		non-compiled	[CE]  ')'  expected	8	None	add
16	[BUG]  [BUGGY]    int  n  =  Math.log(factorials.size());  [CE]  ')'  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]    int  n  =  Math.log(factorials.size());  [BUGGY]  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	    int  n  =  Math.log(factorials.size());		non-compiled	[CE]  ')'  expected	8	None	add
