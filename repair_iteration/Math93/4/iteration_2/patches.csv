bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(factorials[n]));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.log(Math.exp(factorials[n]));  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.log(Math.exp(factorials[n]));	  double    n    =    Math.floor(Math.exp(factorials[n]));    	non-compiled	[CE]  not  a  statement	35	None	replace
2	[BUG]  [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials[n]));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials[n]));  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.ceil(Math.exp(factorials[n]));	  double    n    =    Math.floor(Math.exp(factorials[n]));    	non-compiled	[CE]  not  a  statement	35	None	replace
3	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[n])+  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[n])+  1);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.floor(Math.exp(factorials[n])+  1);	  double    n    =    Math.floor(Math.exp(factorials[n]));    	non-compiled	[CE]  not  a  statement	35	None	replace
4	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  2  *  n);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  2  *  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.min(factorials.length,  2  *  n);	  int    n    =    Math.min(factorials.length,    2);    	non-compiled	[CE]  not  a  statement	3	None	replace
5	[BUG]  [BUGGY]  int  n  =  Math.log(factorials.size()  *  n);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials.size()  *  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials.size()  *  n);	  int    n    =    Math.log(factorials.size()    -    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
6	[BUG]  [BUGGY]  int  n  =  this.factorials.size()  -  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  this.factorials.size()  -  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  this.factorials.size()  -  1;	  int    n    =    this.factorials.size();    	non-compiled	[CE]  not  a  statement	4	None	replace
7	[BUG]  [BUGGY]  int  n  =  this.factorials.size()  +  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  this.factorials.size()  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  this.factorials.size()  +  1;	  int    n    =    this.factorials.size();    	non-compiled	[CE]  not  a  statement	4	None	replace
8	[BUG]  [BUGGY]  int  n  =  this.factorials.size()  -  2;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  this.factorials.size()  -  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  this.factorials.size()  -  2;	  int    n    =    this.factorials.size();    	non-compiled	[CE]  not  a  statement	4	None	replace
9	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[1]);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.floor(factorials[1]);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials[1]);	  int    n    =    Math.log(factorials[1]);    	non-compiled	[CE]  not  a  statement	44	None	replace
10	[BUG]  [BUGGY]  int  n  =  Math.ceil(factorials[1]);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.ceil(factorials[1]);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.ceil(factorials[1]);	  int    n    =    Math.log(factorials[1]);    	non-compiled	[CE]  not  a  statement	44	None	replace
11	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[1]  +  n);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials[1]  +  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials[1]  +  n);	  int    n    =    Math.log(factorials[1]);    	non-compiled	[CE]  not  a  statement	44	None	replace
12	[BUG]  [BUGGY]  double  n  =  Math.ceil(factorials.length  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.ceil(factorials.length  -  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.ceil(factorials.length  -  1);	  double    n    =    Math.ceil(factorials.length);    	non-compiled	[CE]  not  a  statement	32	None	replace
13	[BUG]  [BUGGY]  double  n  =  Math.ceil(factorials.length,  n);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.ceil(factorials.length,  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.ceil(factorials.length,  n);	  double    n    =    Math.ceil(factorials.length);    	non-compiled	[CE]  not  a  statement	32	None	replace
14	[BUG]  [BUGGY]  double  n  =  Math.ceil(factorials.length  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.ceil(factorials.length  +  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.ceil(factorials.length  +  1);	  double    n    =    Math.ceil(factorials.length);    	non-compiled	[CE]  not  a  statement	32	None	replace
15	[BUG]  [BUGGY]  int  n  =  factororials.size();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  factororials.size();  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  factororials.size();	  int    n    =    factorials.size()    +    1;    	non-compiled	[CE]  not  a  statement	6	None	replace
16	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  +  1,  n);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  n  +  1,  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.min(factorials.length,  n  +  1,  n);	  int    n    =    Math.min(factorials.length,    n    +    1);    	non-compiled	[CE]  not  a  statement	51	None	replace
17	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  *  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  n  *  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.min(factorials.length,  n  *  1);	  int    n    =    Math.min(factorials.length,    n    +    1);    	non-compiled	[CE]  not  a  statement	51	None	replace
18	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  +  2);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  n  +  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.min(factorials.length,  n  +  2);	  int    n    =    Math.min(factorials.length,    n    +    1);    	non-compiled	[CE]  not  a  statement	51	None	replace
19	[BUG]  [BUGGY]  if(n  <  =  2)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  if(n  <  =  2)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  =  2)  {	  if(n    <    2)    {    	non-compiled	[CE]  not  a  statement	13	None	replace
20	[BUG]  [BUGGY]  int  n  =  factorials.length  /  2;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  factorials.length  /  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  factorials.length  /  2;	  int    n    =    factorials.length    -    2;    	non-compiled	[CE]  not  a  statement	42	None	replace
21	[BUG]  [BUGGY]  int  n  =  factorials.length  -  3;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  factorials.length  -  3;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  factorials.length  -  3;	  int    n    =    factorials.length    -    2;    	non-compiled	[CE]  not  a  statement	42	None	replace
22	[BUG]  [BUGGY]  if(n  ==  2)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  if(n  ==  2)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  ==  2)  {	  if(n    ==    1)    {    	non-compiled	[CE]  not  a  statement	53	None	replace
23	[BUG]  [BUGGY]  int  n  =  Math.log(factororials.size());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factororials.size());  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factororials.size());	  int    n    =    Math.log(factorials.size()    +    1);    	non-compiled	[CE]  not  a  statement	16	None	replace
24	[BUG]  [BUGGY]  Integer  n  =  Math.log(factorials.size());  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  Integer  n  =  Math.log(factorials.size());  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	Integer  n  =  Math.log(factorials.size());	  int    n    =    Math.log(factorials.size()    +    1);    	non-compiled	[CE]  not  a  statement	16	None	replace
25	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  *  n  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  n  *  n  -  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.min(factorials.length,  n  *  n  -  1);	  int    n    =    Math.min(factorials.length,    n    -    1);    	non-compiled	[CE]  not  a  statement	52	None	replace
26	[BUG]  [BUGGY]  if(n  <  0  ||  n  ==  1)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  if(n  <  0  ||  n  ==  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  0  ||  n  ==  1)  {	  if(n    <    0    ||    n    <    1)    {    	non-compiled	[CE]  not  a  statement	46	None	replace
27	[BUG]  [BUGGY]  if(n  <  0  ||  n  <  2)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  if(n  <  0  ||  n  <  2)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  0  ||  n  <  2)  {	  if(n    <    0    ||    n    <    1)    {    	non-compiled	[CE]  not  a  statement	46	None	replace
28	[BUG]  [BUGGY]  int  n  =  Math.log(factorials.length)+  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials.length)+  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials.length)+  1;	  int    n    =    Math.log(factorials.length    +    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
29	[BUG]  [BUGGY]  double  n  =  Math.log(Math.PI(n));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.log(Math.PI(n));  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.log(Math.PI(n));	  double    n    =    Math.floor(Math.log(n));    	non-compiled	[CE]  not  a  statement	37	None	replace
30	[BUG]  [BUGGY]  double  n  =  Math.ceil(Math.log(n));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.ceil(Math.log(n));  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.ceil(Math.log(n));	  double    n    =    Math.floor(Math.log(n));    	non-compiled	[CE]  not  a  statement	37	None	replace
31	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n  +  1));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.log(Math.log(n  +  1));  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.log(Math.log(n  +  1));	  double    n    =    Math.floor(Math.log(n));    	non-compiled	[CE]  not  a  statement	37	None	replace
32	[BUG]  [BUGGY]  if(n  <  =  0  ||  n  >=  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  if(n  <  =  0  ||  n  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  =  0  ||  n  >=  0)  {	  if(n    <    =    0    ||    n    ==    0)    {    	non-compiled	[CE]  not  a  statement	24	None	replace
33	[BUG]  [BUGGY]  int  n  =  Math.log(factorials.length  -  1,  n);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials.length  -  1,  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials.length  -  1,  n);	  int    n    =    Math.log(factorials.length    -    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
34	[BUG]  [BUGGY]  int  n  =  Math.log(factorials.length  -  2);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials.length  -  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials.length  -  2);	  int    n    =    Math.log(factorials.length    -    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
35	[BUG]  [BUGGY]  if(n  <  =  0  ||  n  <  2)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  if(n  <  =  0  ||  n  <  2)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  =  0  ||  n  <  2)  {	  if(n    <    =    0    ||    n    <    1)    {    	non-compiled	[CE]  not  a  statement	49	None	replace
36	[BUG]  [BUGGY]  if(n  <  =  0  ||  n  >  1)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  if(n  <  =  0  ||  n  >  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  =  0  ||  n  >  1)  {	  if(n    <    =    0    ||    n    <    1)    {    	non-compiled	[CE]  not  a  statement	49	None	replace
37	[BUG]  [BUGGY]  double  n  =  Math.log(factorials.length  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.log(factorials.length  -  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.log(factorials.length  -  1);	  double    n    =    Math.floor(factorials.length    -    1);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
38	[BUG]  [BUGGY]  double  n  =  Math.floor(factorials.length  -  2);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.floor(factorials.length  -  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.floor(factorials.length  -  2);	  double    n    =    Math.floor(factorials.length    -    1);    	non-compiled	[CE]  not  a  statement	34	None	replace
39	[BUG]  [BUGGY]  if(n  <  0  ||  n  <  =  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  if(n  <  0  ||  n  <  =  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  0  ||  n  <  =  0)  {	  if(n    <    =    0    ||    n    <    =    0)    {    	non-compiled	[CE]  not  a  statement	48	None	replace
40	[BUG]  [BUGGY]  int  n  =  Math.max(factorials.length,  2);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.max(factorials.length,  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.max(factorials.length,  2);	  int    n    =    Math.max(factorials.length,    1);    	non-compiled	[CE]  not  a  statement	29	None	replace
41	[BUG]  [BUGGY]  int  n  =  Math.max(factorials.length,  3);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.max(factorials.length,  3);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.max(factorials.length,  3);	  int    n    =    Math.max(factorials.length,    1);    	non-compiled	[CE]  not  a  statement	29	None	replace
42	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[n].doubleValue()  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.floor(factorials[n].doubleValue()  -  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials[n].doubleValue()  -  1);	  int    n    =    Math.floor(factorials[n].doubleValue());    	non-compiled	[CE]  not  a  statement	50	None	replace
43	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[n].doubleValue()  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.floor(factorials[n].doubleValue()  +  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials[n].doubleValue()  +  1);	  int    n    =    Math.floor(factorials[n].doubleValue());    	non-compiled	[CE]  not  a  statement	50	None	replace
44	[BUG]  [BUGGY]  int  n  =  Math.ceil(factorials[0]);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.ceil(factorials[0]);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.ceil(factorials[0]);	  int    n    =    Math.ceil(factorials[n]);    	non-compiled	[CE]  not  a  statement	23	None	replace
45	[BUG]  [BUGGY]  int  n  =  Math.ceil(factorials[n].doubleValue());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.ceil(factorials[n].doubleValue());  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.ceil(factorials[n].doubleValue());	  int    n    =    Math.ceil(factorials[n]);    	non-compiled	[CE]  not  a  statement	23	None	replace
46	[BUG]  [BUGGY]  double  n  =  Math.ceil(factorials[n]);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.ceil(factorials[n]);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.ceil(factorials[n]);	  int    n    =    Math.ceil(factorials[n]);    	non-compiled	[CE]  not  a  statement	23	None	replace
47	[BUG]  [BUGGY]  int  n  =  Math.ceil(factorials[n]  -  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.ceil(factorials[n]  -  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.ceil(factorials[n]  -  1);	  int    n    =    Math.ceil(factorials[n]);    	non-compiled	[CE]  not  a  statement	23	None	replace
48	[BUG]  [BUGGY]  if(n  <  0  ||  n  >  2)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  if(n  <  0  ||  n  >  2)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  0  ||  n  >  2)  {	  if(n    <    0    ||    n    >    1)    {    	non-compiled	[CE]  not  a  statement	41	None	replace
49	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials.length  -  2);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.floor(factorials.length  -  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials.length  -  2);	  int    n    =    Math.floor(factorials.length    -    1);    	non-compiled	[CE]  not  a  statement	27	None	replace
50	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials.length  -  1,  n);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.floor(factorials.length  -  1,  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials.length  -  1,  n);	  int    n    =    Math.floor(factorials.length    -    1);    	non-compiled	[CE]  not  a  statement	27	None	replace
51	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[n]  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials[n]  -  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials[n]  -  1);	  int    n    =    Math.floor(factorials[n]    -    1);    	non-compiled	[CE]  not  a  statement	40	None	replace
52	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[n]  /  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.floor(factorials[n]  /  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials[n]  /  1);	  int    n    =    Math.floor(factorials[n]    -    1);    	non-compiled	[CE]  not  a  statement	40	None	replace
53	[BUG]  [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length  +  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length  +  1;  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	final  double  n  =  Math.log(n)/  factorials.length  +  1;	  final    double    n    =    Math.log(n)/    factorials.length;    	non-compiled	[CE]  not  a  statement	38	None	replace
54	[BUG]  [BUGGY]  final  int  n  =  Math.log(factorials.length)/  n;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  final  int  n  =  Math.log(factorials.length)/  n;  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	final  int  n  =  Math.log(factorials.length)/  n;	  final    double    n    =    Math.log(n)/    factorials.length;    	non-compiled	[CE]  not  a  statement	38	None	replace
55	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials.length)/  n;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  final  double  n  =  Math.log(factorials.length)/  n;  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	final  double  n  =  Math.log(factorials.length)/  n;	  final    double    n    =    Math.log(n)/    factorials.length;    	non-compiled	[CE]  not  a  statement	38	None	replace
56	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials.size()  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.floor(factorials.size()  -  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials.size()  -  1);	  int    n    =    Math.floor(factorials.size());    	non-compiled	[CE]  not  a  statement	15	None	replace
57	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials.size()  -  2);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.floor(factorials.size()  -  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials.size()  -  2);	  int    n    =    Math.floor(factorials.size());    	non-compiled	[CE]  not  a  statement	15	None	replace
58	[BUG]  [BUGGY]  int  n  =  Math.ceil(factorials.size());  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.ceil(factorials.size());  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.ceil(factorials.size());	  int    n    =    Math.floor(factorials.size());    	non-compiled	[CE]  not  a  statement	15	None	replace
59	[BUG]  [BUGGY]  double  n  =  0;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  0;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  0;	  int    n    =    0;    	non-compiled	[CE]  not  a  statement	20	None	replace
60	[BUG]  [BUGGY]  int  n  =  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  1;	  int    n    =    0;    	non-compiled	[CE]  not  a  statement	20	None	replace
61	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  n  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials[0],  n  +  1);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials[0],  n  +  1);	  int    n    =    Math.log(factorials[0],    n);    	non-compiled	[CE]  not  a  statement	47	None	replace
62	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  0,  n);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials[0],  0,  n);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials[0],  0,  n);	  int    n    =    Math.log(factorials[0],    n);    	non-compiled	[CE]  not  a  statement	47	None	replace
63	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[1],  n);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials[1],  n);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials[1],  n);	  int    n    =    Math.log(factorials[0],    n);    	non-compiled	[CE]  not  a  statement	47	None	replace
64	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  n  +  2);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials[0],  n  +  2);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials[0],  n  +  2);	  int    n    =    Math.log(factorials[0],    n);    	non-compiled	[CE]  not  a  statement	47	None	replace
65	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[n].doubleValue()  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials[n].doubleValue()  +  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials[n].doubleValue()  +  1);	  int    n    =    Math.log(factorials[n].doubleValue());    	non-compiled	[CE]  not  a  statement	45	None	replace
66	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[n].doubleValue()  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials[n].doubleValue()  -  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials[n].doubleValue()  -  1);	  int    n    =    Math.log(factorials[n].doubleValue());    	non-compiled	[CE]  not  a  statement	45	None	replace
67	[BUG]  [BUGGY]  double  n  =  Math.log(factorials.length,  n);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.log(factorials.length,  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.log(factorials.length,  n);	  double    n    =    Math.log(factorials.length);    	non-compiled	[CE]  not  a  statement	31	None	replace
68	[BUG]  [BUGGY]  double  n  =  Math.log(factorials.length  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.log(factorials.length  +  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.log(factorials.length  +  1);	  double    n    =    Math.log(factorials.length);    	non-compiled	[CE]  not  a  statement	31	None	replace
69	[BUG]  [BUGGY]  int  n  =  Math.ceil(factorials.length  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.ceil(factorials.length  -  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.ceil(factorials.length  -  1);	  int    n    =    Math.ceil(factorials.length);    	non-compiled	[CE]  not  a  statement	9	None	replace
70	[BUG]  [BUGGY]  int  n  =  Math.ceil(factorials.length  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.ceil(factorials.length  +  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.ceil(factorials.length  +  1);	  int    n    =    Math.ceil(factorials.length);    	non-compiled	[CE]  not  a  statement	9	None	replace
71	[BUG]  [BUGGY]  int  n  =  this.factorials.length  -  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  this.factorials.length  -  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  this.factorials.length  -  1;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  not  a  statement	21	None	replace
72	[BUG]  [BUGGY]  int  n  =  this.factorials.length  -  2;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  this.factorials.length  -  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  this.factorials.length  -  2;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  not  a  statement	21	None	replace
73	[BUG]  [BUGGY]  int  n  =  this.factorials.length  +  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  this.factorials.length  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  this.factorials.length  +  1;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  not  a  statement	21	None	replace
74	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[0],  n);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.floor(factorials[0],  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials[0],  n);	  int    n    =    Math.floor(factorials[0]);    	non-compiled	[CE]  not  a  statement	30	None	replace
75	[BUG]  [BUGGY]  double  n  =  n;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  n;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  n;	  int    n    =    n;    	non-compiled	[CE]  not  a  statement	18	None	replace
76	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.size(),  n);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.size(),  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.min(factorials.size(),  n);	  int    n    =    n;    	non-compiled	[CE]  not  a  statement	18	None	replace
77	[BUG]  [BUGGY]  double  n  =  Math.log(Math.exp(factorials));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.log(Math.exp(factorials));  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.log(Math.exp(factorials));	  double    n    =    Math.floor(Math.exp(factorials));    	non-compiled	[CE]  not  a  statement	36	None	replace
78	[BUG]  [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.ceil(Math.exp(factorials));  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.ceil(Math.exp(factorials));	  double    n    =    Math.floor(Math.exp(factorials));    	non-compiled	[CE]  not  a  statement	36	None	replace
79	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials,  n));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.floor(Math.exp(factorials,  n));  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.floor(Math.exp(factorials,  n));	  double    n    =    Math.floor(Math.exp(factorials));    	non-compiled	[CE]  not  a  statement	36	None	replace
80	[BUG]  [BUGGY]  final  int  n  =  Math.log(factorials[0]);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  final  int  n  =  Math.log(factorials[0]);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	final  int  n  =  Math.log(factorials[0]);	  final    int    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  not  a  statement	39	None	replace
81	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[n]);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  final  double  n  =  Math.log(factorials[n]);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	final  double  n  =  Math.log(factorials[n]);	  final    int    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  not  a  statement	39	None	replace
82	[BUG]  [BUGGY]  final  int  n  =  Math.floor(factorials[n]);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  final  int  n  =  Math.floor(factorials[n]);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	final  int  n  =  Math.floor(factorials[n]);	  final    int    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  not  a  statement	39	None	replace
83	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials.length  /  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.floor(factorials.length  /  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials.length  /  1);	  int    n    =    Math.floor(factorials.length    +    1);    	non-compiled	[CE]  not  a  statement	26	None	replace
84	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials.length  *  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.floor(factorials.length  *  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials.length  *  1);	  int    n    =    Math.floor(factorials.length    +    1);    	non-compiled	[CE]  not  a  statement	26	None	replace
85	[BUG]  [BUGGY]  double  n  =  Math.floor(factorials.length  /  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.floor(factorials.length  /  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.floor(factorials.length  /  1);	  double    n    =    Math.floor(factorials.length    +    1);    	non-compiled	[CE]  not  a  statement	33	None	replace
86	[BUG]  [BUGGY]  double  n  =  Math.floor(factorials.length  *  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.floor(factorials.length  *  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.floor(factorials.length  *  1);	  double    n    =    Math.floor(factorials.length    +    1);    	non-compiled	[CE]  not  a  statement	33	None	replace
87	[BUG]  [BUGGY]  int  n  =  factorials.length  /  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  factorials.length  /  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  factorials.length  /  1;	  int    n    =    factorials.length    -    1;    	non-compiled	[CE]  not  a  statement	19	None	replace
88	[BUG]  [BUGGY]  int  n  =  factorials.length  -  1L;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  factorials.length  -  1L;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  factorials.length  -  1L;	  int    n    =    factorials.length    -    1;    	non-compiled	[CE]  not  a  statement	19	None	replace
89	[BUG]  [BUGGY]  int  n  =  Math.log(factorials.length  /  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials.length  /  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials.length  /  1);	  int    n    =    Math.log(factorials.length    +    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
90	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[0]  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.floor(factorials[0]  -  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials[0]  -  1);	  int    n    =    Math.floor(factorials[0]);    	non-compiled	[CE]  not  a  statement	30	None	replace
91	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials)+  n);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.floor(Math.exp(factorials)+  n);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.floor(Math.exp(factorials)+  n);	  double    n    =    Math.floor(Math.exp(factorials));    	non-compiled	[CE]  not  a  statement	36	None	replace
92	[BUG]  [BUGGY]  if(n  >  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  if(n  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  >  0)  {	  if(n    >=    0)    {    	non-compiled	[CE]  not  a  statement	25	None	replace
93	[BUG]  [BUGGY]  if(n  <  0  ||  n  >=  1)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  if(n  <  0  ||  n  >=  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  0  ||  n  >=  1)  {	  if(n    <    0    ||    n    <    1)    {    	non-compiled	[CE]  not  a  statement	46	None	replace
94	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.pow(10,  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.pow(10,  n);	  int    n    =    n;    	non-compiled	[CE]  not  a  statement	18	None	replace
95	[BUG]  [BUGGY]  int  n  =  Math.log(factorials.size()  *  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials.size()  *  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials.size()  *  1);	  int    n    =    Math.log(factorials.size()    -    1);    	non-compiled	[CE]  not  a  statement	14	None	replace
96	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[0].doubleValue());  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.floor(factorials[0].doubleValue());  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials[0].doubleValue());	  int    n    =    Math.floor(factorials[n].doubleValue());    	non-compiled	[CE]  not  a  statement	50	None	replace
97	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0].doubleValue());  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials[0].doubleValue());  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials[0].doubleValue());	  int    n    =    Math.log(factorials[n].doubleValue());    	non-compiled	[CE]  not  a  statement	45	None	replace
98	[BUG]  [BUGGY]  int  n  =  Math.log(factorials.size())+  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials.size())+  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials.size())+  1;	  int    n    =    Math.log(factorials.size()    +    1);    	non-compiled	[CE]  not  a  statement	16	None	replace
99	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials.length  +  2);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.floor(factorials.length  +  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials.length  +  2);	  int    n    =    Math.floor(factorials.length    +    1);    	non-compiled	[CE]  not  a  statement	26	None	replace
100	[BUG]  [BUGGY]  if(n  <  =  0  ||  n  ==  1)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  if(n  <  =  0  ||  n  ==  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  =  0  ||  n  ==  1)  {	  if(n    <    =    0    ||    n    <    1)    {    	non-compiled	[CE]  not  a  statement	49	None	replace
101	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[n]  -  1  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.floor(factorials[n]  -  1  +  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials[n]  -  1  +  1);	  int    n    =    Math.floor(factorials[n]    -    1);    	non-compiled	[CE]  not  a  statement	40	None	replace
102	[BUG]  [BUGGY]  double  n  =  Math.floor(factorials.length  -  1  +  n);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.floor(factorials.length  -  1  +  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.floor(factorials.length  -  1  +  n);	  double    n    =    Math.floor(factorials.length    -    1);    	non-compiled	[CE]  not  a  statement	34	None	replace
103	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0]  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials[0]  -  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials[0]  -  1);	  int    n    =    Math.log(factorials[0]);    	non-compiled	[CE]  not  a  statement	22	None	replace
104	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[n])/  factorials.length;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  final  double  n  =  Math.log(factorials[n])/  factorials.length;  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	final  double  n  =  Math.log(factorials[n])/  factorials.length;	  final    double    n    =    Math.log(n)/    factorials.length;    	non-compiled	[CE]  not  a  statement	38	None	replace
105	[BUG]  [BUGGY]  final  double  n  =  Math.log(factororials.length)/  n;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  final  double  n  =  Math.log(factororials.length)/  n;  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	final  double  n  =  Math.log(factororials.length)/  n;	  final    double    n    =    Math.log(n)/    factorials.length;    	non-compiled	[CE]  not  a  statement	38	None	replace
106	[BUG]  [BUGGY]  if(n  >=  1)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  if(n  >=  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  >=  1)  {	  if(n    <    =    1)    {    	non-compiled	[CE]  not  a  statement	12	None	replace
107	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  -  2);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  n  -  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.min(factorials.length,  n  -  2);	  int    n    =    Math.min(factorials.length,    n    -    1);    	non-compiled	[CE]  not  a  statement	52	None	replace
108	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.log(n  +  1));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.floor(Math.log(n  +  1));  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.floor(Math.log(n  +  1));	  double    n    =    Math.floor(Math.log(n));    	non-compiled	[CE]  not  a  statement	37	None	replace
109	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n))  +  1;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.log(Math.log(n))  +  1;  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.log(Math.log(n))  +  1;	  double    n    =    Math.floor(Math.log(n));    	non-compiled	[CE]  	37	None	replace
110	[BUG]  [BUGGY]  final  int  n  =  Math.log(factorials[n]  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  final  int  n  =  Math.log(factorials[n]  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	final  int  n  =  Math.log(factorials[n]  -  1);	  final    int    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  not  a  statement	39	None	replace
111	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[0]));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[0]));  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.floor(Math.exp(factorials[0]));	  double    n    =    Math.floor(Math.exp(factorials[n]));    	non-compiled	[CE]  not  a  statement	35	None	replace
112	[BUG]  [BUGGY]  int  n  =  factorials.length  -  2  +  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  factorials.length  -  2  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  factorials.length  -  2  +  1;	  int    n    =    factorials.length    -    2;    	non-compiled	[CE]  not  a  statement	42	None	replace
113	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[n]  -  2);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.floor(factorials[n]  -  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials[n]  -  2);	  int    n    =    Math.floor(factorials[n]    -    1);    	non-compiled	[CE]  not  a  statement	40	None	replace
114	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n  -  1));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.log(Math.log(n  -  1));  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.log(Math.log(n  -  1));	  double    n    =    Math.floor(Math.log(n));    	non-compiled	[CE]  not  a  statement	37	None	replace
115	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.log(Math.log(n));  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.log(Math.log(n));	  double    n    =    Math.floor(Math.log(n));    	non-compiled	[CE]  not  a  statement	37	None	replace
116	[BUG]  [BUGGY]  double  n  =  Math.log(Math.log(n)-  1);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.log(Math.log(n)-  1);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.log(Math.log(n)-  1);	  double    n    =    Math.floor(Math.log(n));    	non-compiled	[CE]  not  a  statement	37	None	replace
117	[BUG]  [BUGGY]  int  n  =  Math.floor(Math.exp(factorials));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.floor(Math.exp(factorials));  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(Math.exp(factorials));	  double    n    =    Math.floor(Math.exp(factorials));    	non-compiled	[CE]  not  a  statement	36	None	replace
118	[BUG]  [BUGGY]  int  n  =  Math.log(factorials.length  *  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials.length  *  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials.length  *  1);	  int    n    =    Math.log(factorials.length    +    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
119	[BUG]  [BUGGY]  if(n  <  0  ||  n  >  10)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  if(n  <  0  ||  n  >  10)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  0  ||  n  >  10)  {	  if(n    <    =    0    ||    n    >    0)    {    	non-compiled	[CE]  not  a  statement	11	None	replace
120	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  n  -  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials[0],  n  -  1);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials[0],  n  -  1);	  int    n    =    Math.log(factorials[0],    n);    	non-compiled	[CE]  not  a  statement	47	None	replace
121	[BUG]  [BUGGY]  Integer  n  =  factorials.size();  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  Integer  n  =  factorials.size();  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	Integer  n  =  factorials.size();	  int    n    =    factorials.size()    +    1;    	non-compiled	[CE]  not  a  statement	6	None	replace
122	[BUG]  [BUGGY]  int  n  =  factorials.length  -  1  +  n;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =  factorials.length  -  1  +  n;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  factorials.length  -  1  +  n;	  int    n    =    factorials.length    -    1;    	non-compiled	[CE]  not  a  statement	19	None	replace
123	[BUG]  [BUGGY]  if(n  <  1  ||  n  <  2)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  if(n  <  1  ||  n  <  2)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  1  ||  n  <  2)  {	  if(n    <    2)    {    	non-compiled	[CE]  not  a  statement	13	None	replace
124	[BUG]  [BUGGY]  int  n  =(factorials  ==  null)?  0  :  factorials.size();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  int  n  =(factorials  ==  null)?  0  :  factorials.size();  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =(factorials  ==  null)?  0  :  factorials.size();	  int    n    =    factorials.size()    -    1;    	non-compiled	[CE]  not  a  statement	5	None	replace
125	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[n]),  n);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[n]),  n);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.floor(Math.exp(factorials[n]),  n);	  double    n    =    Math.floor(Math.exp(factorials[n]));    	non-compiled	[CE]  not  a  statement	35	None	replace
126	[BUG]  [BUGGY]  double  n  =  Math.floor(factorials.length  -  1,  n);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.floor(factorials.length  -  1,  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.floor(factorials.length  -  1,  n);	  double    n    =    Math.floor(factorials.length    -    1);    	non-compiled	[CE]  not  a  statement	34	None	replace
127	[BUG]  [BUGGY]  double  n  =  Math.log(factorials.length  +  n);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  double  n  =  Math.log(factorials.length  +  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.log(factorials.length  +  n);	  double    n    =    Math.log(factorials.length);    	non-compiled	[CE]  not  a  statement	31	None	replace
128	[BUG]  [BUGGY]  if(n  <  1  ||  n  <  =  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  if(n  <  1  ||  n  <  =  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  1  ||  n  <  =  0)  {	  if(n    <    =    1)    {    	non-compiled	[CE]  not  a  statement	12	None	replace
129	[BUG]  [BUGGY]  if(n  <  1  ||  n  <  1)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialDouble(final  int  n)  {      [BUGGY]  if(n  <  1  ||  n  <  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >=  0  for  n!     ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  1  ||  n  <  1)  {	  if(n    <    =    1)    {    	non-compiled	[CE]  not  a  statement	12	None	replace
