bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  n  =  Math.max(factorials.length,  0);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.max(factorials.length,  0);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.max(factorials.length,  0);	      int    n    =    Math.min(factorials.length,    n);    	non-compiled	[CE]  ')'  expected	5	None	replace
2	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  1);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.min(factorials.length,  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.min(factorials.length,  1);	      int    n    =    Math.min(factorials.length,    n);    	non-compiled	[CE]  ')'  expected	5	None	replace
3	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  2);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.min(factorials.length,  2);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.min(factorials.length,  2);	      int    n    =    Math.min(factorials.length,    n);    	non-compiled	[CE]  ')'  expected	5	None	replace
4	[BUG]  [BUGGY]  int  n  =  this.factorials.size();  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  this.factorials.size();  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  this.factorials.size();	      int    n    =    factorials.size();    	non-compiled	[CE]  ')'  expected	12	None	replace
5	[BUG]  [BUGGY]  int  n  =  factorials.size()  -  1;  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  factorials.size()  -  1;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  factorials.size()  -  1;	      int    n    =    factorials.size();    	non-compiled	[CE]  ')'  expected	12	None	replace
6	[BUG]  [BUGGY]  int  n  =  factorials.size()  +  1;  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  factorials.size()  +  1;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  factorials.size()  +  1;	      int    n    =    factorials.size();    	non-compiled	[CE]  ')'  expected	12	None	replace
7	[BUG]  [BUGGY]  int  n  =  Math.log(factorials.length  +  1);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.log(factorials.length  +  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials.length  +  1);	      int    n    =    Math.log(factorials.length);    	non-compiled	[CE]  ')'  expected	13	None	replace
8	[BUG]  [BUGGY]  int  n  =  Math.log(factorials.length  -  1);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.log(factorials.length  -  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials.length  -  1);	      int    n    =    Math.log(factorials.length);    	non-compiled	[CE]  ')'  expected	13	None	replace
9	[BUG]  [BUGGY]  int  n  =  Math.ceil(factorials.length);  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.ceil(factorials.length);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.ceil(factorials.length);	      int    n    =    Math.log(factorials.length);    	non-compiled	[CE]  ')'  expected	13	None	replace
10	[BUG]  [BUGGY]  if(n  <  0  ||  n  >=  0)  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  if(n  <  0  ||  n  >=  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  0  ||  n  >=  0)  {	  if(n    <    0    ||    n    >    0)    {    	non-compiled	[CE]  ')'  expected	14	None	replace
11	[BUG]  [BUGGY]  if(n  <  =  0  ||  n  >  0)  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  if(n  <  =  0  ||  n  >  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  =  0  ||  n  >  0)  {	  if(n    <    0    ||    n    >    0)    {    	non-compiled	[CE]  ')'  expected	14	None	replace
12	[BUG]  [BUGGY]  if(n  <  =  1)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  if(n  <  =  1)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  =  1)  {	  if(n    <    1)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
13	[BUG]  [BUGGY]  if(n  <  2)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  if(n  <  2)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  2)  {	  if(n    <    1)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
14	[BUG]  [BUGGY]  int  n  =  Math.log(factorials.size()  -  1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.log(factorials.size()  -  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials.size()  -  1);	      int    n    =    Math.log(factorials.size());    	non-compiled	[CE]  not  a  statement	16	None	replace
15	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials.size());  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.floor(factorials.size());  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials.size());	      int    n    =    Math.log(factorials.size());    	non-compiled	[CE]  not  a  statement	16	None	replace
16	[BUG]  [BUGGY]  int  n  =  Math.log(factorials.size()  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.log(factorials.size()  +  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials.size()  +  1);	      int    n    =    Math.log(factorials.size());    	non-compiled	[CE]  not  a  statement	16	None	replace
17	[BUG]  [BUGGY]  int  n  =  Math.log(factorials.size()  -  2);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.log(factorials.size()  -  2);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials.size()  -  2);	      int    n    =    Math.log(factorials.size());    	non-compiled	[CE]  not  a  statement	16	None	replace
18	[BUG]  [BUGGY]  int  n  =  n;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  n;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  n;	      int    n    =    factorials.length;    	non-compiled	[CE]  not  a  statement	11	None	replace
19	[BUG]  [BUGGY]  int  n  =  factorials.length  -  1;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  factorials.length  -  1;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  factorials.length  -  1;	      int    n    =    factorials.length;    	non-compiled	[CE]  not  a  statement	11	None	replace
20	[BUG]  [BUGGY]  int  n  =  0;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  0;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  0;	      int    n    =    factorials.length;    	non-compiled	[CE]  not  a  statement	11	None	replace
21	[BUG]  [BUGGY]  int  n  =  this.factorials.length;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  this.factorials.length;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  this.factorials.length;	      int    n    =    factorials.length;    	non-compiled	[CE]  not  a  statement	11	None	replace
22	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0]);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.log(factorials[0]);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials[0]);	      int    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  not  a  statement	6	None	replace
23	[BUG]  [BUGGY]  int  n  =  Math.ceil(factorials[n]);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.ceil(factorials[n]);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.ceil(factorials[n]);	      int    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  not  a  statement	6	None	replace
24	[BUG]  [BUGGY]  if(n  <  =  0  ||  n  ==  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  if(n  <  =  0  ||  n  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  =  0  ||  n  ==  0)  {	  if(n    <    0    ||    n    ==    0)    {    	non-compiled	[CE]  not  a  statement	3	None	replace
25	[BUG]  [BUGGY]  if(n  >=  0)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  if(n  >=  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  >=  0)  {	  if(n    ==    0)    {    	non-compiled	[CE]  not  a  statement	2	None	replace
26	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials.length  +  1);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.floor(factorials.length  +  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials.length  +  1);	      int    n    =    Math.floor(factorials.length);    	non-compiled	[CE]  not  a  statement	7	None	replace
27	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials.length  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.floor(factorials.length  -  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials.length  -  1);	      int    n    =    Math.floor(factorials.length);    	non-compiled	[CE]  not  a  statement	7	None	replace
28	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  3);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.min(factorials.length,  3);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.min(factorials.length,  3);	      int    n    =    Math.min(factorials.length,    0);    	non-compiled	[CE]  not  a  statement	8	None	replace
29	[BUG]  [BUGGY]  int  n  =  Math.max(factorials.length,  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.max(factorials.length,  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.max(factorials.length,  1);	      int    n    =    Math.min(factorials.length,    0);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
30	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[0]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.floor(factorials[0]);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials[0]);	      int    n    =    Math.floor(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
31	[BUG]  [BUGGY]  double  n  =  Math.log(factorials.length);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  double  n  =  Math.log(factorials.length);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.log(factorials.length);	      double    n    =    Math.floor(factorials.length);    	non-compiled	[CE]  not  a  statement	15	None	replace
32	[BUG]  [BUGGY]  double  n  =  Math.ceil(factorials.length);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  double  n  =  Math.ceil(factorials.length);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.ceil(factorials.length);	      double    n    =    Math.floor(factorials.length);    	non-compiled	[CE]  not  a  statement	15	None	replace
33	[BUG]  [BUGGY]  double  n  =  Math.floor(factorials.length  +  1);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  double  n  =  Math.floor(factorials.length  +  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.floor(factorials.length  +  1);	      double    n    =    Math.floor(factorials.length);    	non-compiled	[CE]  not  a  statement	15	None	replace
34	[BUG]  [BUGGY]  double  n  =  Math.floor(factorials.length  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  double  n  =  Math.floor(factorials.length  -  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.floor(factorials.length  -  1);	      double    n    =    Math.floor(factorials.length);    	non-compiled	[CE]  not  a  statement	15	None	replace
35	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[n]));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  double  n  =  Math.floor(Math.exp(factorials[n]));  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.floor(Math.exp(factorials[n]));	      	non-compiled	[CE]  not  a  statement	4	None	replace
36	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.exp(factorials));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  double  n  =  Math.floor(Math.exp(factorials));  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.floor(Math.exp(factorials));	      	non-compiled	[CE]  not  a  statement	4	None	replace
37	[BUG]  [BUGGY]  double  n  =  Math.floor(Math.log(n));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  double  n  =  Math.floor(Math.log(n));  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	double  n  =  Math.floor(Math.log(n));	      	non-compiled	[CE]  not  a  statement	4	None	replace
38	[BUG]  [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  final  double  n  =  Math.log(n)/  factorials.length;  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	final  double  n  =  Math.log(n)/  factorials.length;	      	non-compiled	[CE]  not  a  statement	4	None	replace
39	[BUG]  [BUGGY]  final  int  n  =  Math.log(factorials[n]);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  final  int  n  =  Math.log(factorials[n]);  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	final  int  n  =  Math.log(factorials[n]);	      	non-compiled	[CE]  not  a  statement	4	None	replace
40	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[n]  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.floor(factorials[n]  -  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials[n]  -  1);	      int    n    =    Math.floor(factorials[n]);    	non-compiled	[CE]  not  a  statement	9	None	replace
41	[BUG]  [BUGGY]  if(n  <  0  ||  n  >  1)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  if(n  <  0  ||  n  >  1)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  0  ||  n  >  1)  {	  if(n    <    0    ||    n    >    0)    {    	non-compiled	[CE]  not  a  statement	14	None	replace
42	[BUG]  [BUGGY]  int  n  =  factorials.length  -  2;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  factorials.length  -  2;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  factorials.length  -  2;	      int    n    =    factorials.length;    	non-compiled	[CE]  not  a  statement	11	None	replace
43	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  4);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.min(factorials.length,  4);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.min(factorials.length,  4);	      int    n    =    Math.min(factorials.length,    0);    	non-compiled	[CE]  not  a  statement	8	None	replace
44	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[1]);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.log(factorials[1]);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials[1]);	      int    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  not  a  statement	6	None	replace
45	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[n].doubleValue());  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.log(factorials[n].doubleValue());  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials[n].doubleValue());	      int    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  not  a  statement	6	None	replace
46	[BUG]  [BUGGY]  if(n  <  0  ||  n  <  1)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  if(n  <  0  ||  n  <  1)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  0  ||  n  <  1)  {	  if(n    <    1)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
47	[BUG]  [BUGGY]  int  n  =  Math.log(factorials[0],  n);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.log(factorials[0],  n);  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.log(factorials[0],  n);	      	non-compiled	[CE]  not  a  statement	4	None	replace
48	[BUG]  [BUGGY]  if(n  <  =  0  ||  n  <  =  0)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  if(n  <  =  0  ||  n  <  =  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  =  0  ||  n  <  =  0)  {	  if(n    <    =    0)    {    	non-compiled	[CE]  not  a  statement	1	None	replace
49	[BUG]  [BUGGY]  if(n  <  =  0  ||  n  <  1)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  if(n  <  =  0  ||  n  <  1)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  =  0  ||  n  <  1)  {	  if(n    <    =    0)    {    	non-compiled	[CE]  not  a  statement	1	None	replace
50	[BUG]  [BUGGY]  int  n  =  Math.floor(factorials[n].doubleValue());  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.floor(factorials[n].doubleValue());  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.floor(factorials[n].doubleValue());	      int    n    =    Math.floor(factorials[n]);    	non-compiled	[CE]  not  a  statement	9	None	replace
51	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  +  1);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.min(factorials.length,  n  +  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.min(factorials.length,  n  +  1);	      int    n    =    Math.min(factorials.length,    n);    	non-compiled	[CE]  not  a  statement	5	None	replace
52	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n  -  1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  int  n  =  Math.min(factorials.length,  n  -  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	int  n  =  Math.min(factorials.length,  n  -  1);	      int    n    =    Math.min(factorials.length,    n);    	non-compiled	[CE]  not  a  statement	5	None	replace
53	[BUG]  [BUGGY]  if(n  ==  1)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialDouble(final  int  n)  {    [BUGGY]  if(n  ==  1)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >=  0  for  n!   ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  ==  1)  {	  if(n    ==    0)    {    	non-compiled	[CE]  not  a  statement	2	None	replace
