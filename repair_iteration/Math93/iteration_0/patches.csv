bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]  double  logSum  =  1;  [BUGGY]  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	add	double  logSum  =  1;	double  logSum  =  0;  	compilable	  [FE]  AssertionFailedError  testFactorial	13	1
3	[BUG]  [BUGGY]  double  logSum  =  1;  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]  double  logSum  =  1;  [BUGGY]  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =  1;	double  logSum  =  0;  	compilable	  [FE]  AssertionFailedError  testFactorial	13	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]  double  logSum  =(n  >  0)?  1  :  0;  [BUGGY]  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	add	double  logSum  =(n  >  0)?  1  :  0;	double  logSum  =  0;  	compilable	  [FE]  AssertionFailedError  testFactorial	13	1
4	[BUG]  [BUGGY]  double  logSum  =(n  >  0)?  1  :  0;  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]  double  logSum  =(n  >  0)?  1  :  0;  [BUGGY]  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =(n  >  0)?  1  :  0;	double  logSum  =  0;  	compilable	  [FE]  AssertionFailedError  testFactorial	13	1	replace
4	[BUG]  [BUGGY]  double  logSum  -=  0;  [CE]  ';'  expected  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]  double  logSum  -=  0;  [BUGGY]  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  -=  0;	double  logSum  =  0;  	non-compiled	[CE]  ';'  expected	13	None	replace
5	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  logSum  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]    [BUGGY]  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	  	double  logSum  =  0;  	non-compiled	[CE]  cannot  find  symbol  logSum	13	None	replace
11	[BUG]  [BUGGY]    long[]  factorials  =  Math.round(factorialDouble(n));  [CE]  incompatible  types  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    long[]  factorials  =  Math.round(factorialDouble(n));  [BUGGY]  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	    long[]  factorials  =  Math.round(factorialDouble(n));		non-compiled	[CE]  incompatible  types	2	None	add
12	[BUG]  [BUGGY]    long[]  factorials  =(long[])factorials.clone();  [CE]  variable  factorials  might  not  have  been  initialized  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    long[]  factorials  =(long[])factorials.clone();  [BUGGY]  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	    long[]  factorials  =(long[])factorials.clone();		non-compiled	[CE]  variable  factorials  might  not  have  been  initialized	2	None	add
13	[BUG]  [BUGGY]    long[]  factorials  =  Math.round(factorials[n]);  [CE]  incompatible  types  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    long[]  factorials  =  Math.round(factorials[n]);  [BUGGY]  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	    long[]  factorials  =  Math.round(factorials[n]);		non-compiled	[CE]  incompatible  types	2	None	add
14	[BUG]  [BUGGY]    long[]  factorials  =(long[])factorials.clone();  result  =  Math.round(result);  [CE]  variable  factorials  might  not  have  been  initialized  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    long[]  factorials  =(long[])factorials.clone();  result  =  Math.round(result);  [BUGGY]  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	    long[]  factorials  =(long[])factorials.clone();  result  =  Math.round(result);		non-compiled	[CE]  variable  factorials  might  not  have  been  initialized	2	None	add
15	[BUG]  [BUGGY]    long[]  factorials  =  Math.round(factorialDouble(n  +  1));  [CE]  incompatible  types  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    long[]  factorials  =  Math.round(factorialDouble(n  +  1));  [BUGGY]  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	    long[]  factorials  =  Math.round(factorialDouble(n  +  1));		non-compiled	[CE]  incompatible  types	2	None	add
23	[BUG]  [BUGGY]  return  i;  [CE]  cannot  find  symbol  i  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  [BUGGY]  return  i;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  i;	return  logSum;  	non-compiled	[CE]  cannot  find  symbol  i	19	None	replace
24	[BUG]  [BUGGY]  return  logSum  +(Math.rint(logSum)/  n));  [CE]  ';'  expected  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  [BUGGY]  return  logSum  +(Math.rint(logSum)/  n));  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  +(Math.rint(logSum)/  n));	return  logSum;  	non-compiled	[CE]  ';'  expected	19	None	replace
25	[BUG]  [BUGGY]    [CE]  missing  return  statement  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  [BUGGY]    [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	  	return  logSum;  	non-compiled	[CE]  missing  return  statement	19	None	replace
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]    logSum  +=  Math.log((  double)i);  [BUGGY]  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	add	    logSum  +=  Math.log((  double)i);		compilable	  [FE]  AssertionFailedError  testFactorial	18	1
32	[BUG]  [BUGGY]    logSum  +=  Math.log((  double)i);  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]    logSum  +=  Math.log((  double)i);  [BUGGY]  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	replace	    logSum  +=  Math.log((  double)i);		compilable	  [FE]  AssertionFailedError  testFactorial	18	1	add
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]    logSum  +=  Math.sin((  double)i);  [BUGGY]  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	add	    logSum  +=  Math.sin((  double)i);		compilable	  [FE]  AssertionFailedError  testFactorial	18	1
34	[BUG]  [BUGGY]    logSum  +=  Math.sin((  double)i);  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]    logSum  +=  Math.sin((  double)i);  [BUGGY]  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	replace	    logSum  +=  Math.sin((  double)i);		compilable	  [FE]  AssertionFailedError  testFactorial	18	1	add
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]    logSum  -=  Math.sin((  double)i);  [BUGGY]  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	add	    logSum  -=  Math.sin((  double)i);		compilable	  [FE]  AssertionFailedError  testFactorial	18	1
35	[BUG]  [BUGGY]    logSum  -=  Math.sin((  double)i);  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]    logSum  -=  Math.sin((  double)i);  [BUGGY]  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	replace	    logSum  -=  Math.sin((  double)i);		compilable	  [FE]  AssertionFailedError  testFactorial	18	1	add
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]    logSum  +=  Math.sqrt((  double)i);  [BUGGY]  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	add	    logSum  +=  Math.sqrt((  double)i);		compilable	  [FE]  AssertionFailedError  testFactorial	18	1
36	[BUG]  [BUGGY]    logSum  +=  Math.sqrt((  double)i);  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  [BUGGY]    logSum  +=  Math.sqrt((  double)i);  [BUGGY]  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	replace	    logSum  +=  Math.sqrt((  double)i);		compilable	  [FE]  AssertionFailedError  testFactorial	18	1	add
41	[BUG]  [BUGGY]    if(factorials  ==  null)  {  if(n  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  [BUGGY]    if(factorials  ==  null)  {  if(n  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	    if(factorials  ==  null)  {  if(n  >  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
42	[BUG]  [BUGGY]    if(factorials  ==  null)  {  for(int  i  =  0;  i  <  n;  i++)  {  logSum  +=  Math.log((  double)i);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  [BUGGY]    if(factorials  ==  null)  {  for(int  i  =  0;  i  <  n;  i++)  {  logSum  +=  Math.log((  double)i);  }  [BUGGY]  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	    if(factorials  ==  null)  {  for(int  i  =  0;  i  <  n;  i++)  {  logSum  +=  Math.log((  double)i);  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
43	[BUG]  [BUGGY]    if(factorials  ==  null)  {  for(int  i  =  0;  i  <  n;  i++)  {  logSum  +=  Math.log((  int)i);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  [BUGGY]    if(factorials  ==  null)  {  for(int  i  =  0;  i  <  n;  i++)  {  logSum  +=  Math.log((  int)i);  }  [BUGGY]  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	    if(factorials  ==  null)  {  for(int  i  =  0;  i  <  n;  i++)  {  logSum  +=  Math.log((  int)i);  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
44	[BUG]  [BUGGY]    if(factorials  ==  null)  {  for(int  i  =  0,  n  =  factorials.length;  i  <  n;  i++)  {  logSum  +=  Math.log((  double)i);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  [BUGGY]    if(factorials  ==  null)  {  for(int  i  =  0,  n  =  factorials.length;  i  <  n;  i++)  {  logSum  +=  Math.log((  double)i);  }  [BUGGY]  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	    if(factorials  ==  null)  {  for(int  i  =  0,  n  =  factorials.length;  i  <  n;  i++)  {  logSum  +=  Math.log((  double)i);  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
45	[BUG]  [BUGGY]    if(factorials  ==  null)  {  for(int  i  =  0,  n  =  factorials.length;  i  <  0;  i++)  {  logSum  +=  Math.log((  double)i);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  [BUGGY]    if(factorials  ==  null)  {  for(int  i  =  0,  n  =  factorials.length;  i  <  0;  i++)  {  logSum  +=  Math.log((  double)i);  }  [BUGGY]  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	    if(factorials  ==  null)  {  for(int  i  =  0,  n  =  factorials.length;  i  <  0;  i++)  {  logSum  +=  Math.log((  double)i);  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
51	[BUG]  [BUGGY]    long[]  factorials  =(long[])factorials.clone();  [CE]  variable  factorials  might  not  have  been  initialized  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]    long[]  factorials  =(long[])factorials.clone();  [BUGGY]  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	    long[]  factorials  =(long[])factorials.clone();		non-compiled	[CE]  variable  factorials  might  not  have  been  initialized	4	None	add
52	[BUG]  [BUGGY]    final  long[]  factorials  =  Math.round(factorials[n]);  [CE]  incompatible  types  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]    final  long[]  factorials  =  Math.round(factorials[n]);  [BUGGY]  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	    final  long[]  factorials  =  Math.round(factorials[n]);		non-compiled	[CE]  incompatible  types	4	None	add
53	[BUG]  [BUGGY]    long[]  factorials  =  Math.round(factorials[n]);  [CE]  incompatible  types  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]    long[]  factorials  =  Math.round(factorials[n]);  [BUGGY]  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	    long[]  factorials  =  Math.round(factorials[n]);		non-compiled	[CE]  incompatible  types	4	None	add
54	[BUG]  [BUGGY]    long[]  factorials  =  Math.round(factorials,  n);  [CE]  no  suitable  method  found  for  round(long[],int)  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]    long[]  factorials  =  Math.round(factorials,  n);  [BUGGY]  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	    long[]  factorials  =  Math.round(factorials,  n);		non-compiled	[CE]  no  suitable  method  found  for  round(long[],int)	4	None	add
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]  return  result;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	add	return  result;	return  factorials[n];  	compilable	  [FE]  AssertionFailedError  testFactorial	1	1
62	[BUG]  [BUGGY]  return  result;  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]  return  result;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result;	return  factorials[n];  	compilable	  [FE]  AssertionFailedError  testFactorial	1	1	replace
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]  return  factorials[n]  /(result  *  Math.round(factorialDouble(n)));  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	add	return  factorials[n]  /(result  *  Math.round(factorialDouble(n)));	return  factorials[n];  	compilable	  [FE]  AssertionFailedError  testFactorial	1	1
63	[BUG]  [BUGGY]  return  factorials[n]  /(result  *  Math.round(factorialDouble(n)));  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]  return  factorials[n]  /(result  *  Math.round(factorialDouble(n)));  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  factorials[n]  /(result  *  Math.round(factorialDouble(n)));	return  factorials[n];  	compilable	  [FE]  AssertionFailedError  testFactorial	1	1	replace
63	[BUG]  [BUGGY]  return  result  +(long[])factorials[n];  [CE]  inconvertible  types  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]  return  result  +(long[])factorials[n];  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  +(long[])factorials[n];	return  factorials[n];  	non-compiled	[CE]  inconvertible  types	1	None	replace
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]  return  factorials[n]  /(result  *  Math.round(factorialDouble(n  +  1)));  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	add	return  factorials[n]  /(result  *  Math.round(factorialDouble(n  +  1)));	return  factorials[n];  	compilable	  [FE]  AssertionFailedError  testFactorial	1	1
65	[BUG]  [BUGGY]  return  factorials[n]  /(result  *  Math.round(factorialDouble(n  +  1)));  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]  return  factorials[n]  /(result  *  Math.round(factorialDouble(n  +  1)));  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  factorials[n]  /(result  *  Math.round(factorialDouble(n  +  1)));	return  factorials[n];  	compilable	  [FE]  AssertionFailedError  testFactorial	1	1	replace
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]  if(n  <  1)  {  [BUGGY]  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	add	if(n  <  1)  {	if  (n  <  0)  {  	compilable	  [FE]  AssertionFailedError  testFactorial	7	1
73	[BUG]  [BUGGY]  if(n  <  1)  {  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]  if(n  <  1)  {  [BUGGY]  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <  1)  {	if  (n  <  0)  {  	compilable	  [FE]  AssertionFailedError  testFactorial	7	1	replace
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]  if(n  <=  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	add	if(n  <=  0)  {	if  (n  <  0)  {  	compilable	  [FE]  AssertionFailedError  testFactorial	7	1
74	[BUG]  [BUGGY]  if(n  <=  0)  {  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]  if(n  <=  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	if(n  <=  0)  {	if  (n  <  0)  {  	compilable	  [FE]  AssertionFailedError  testFactorial	7	1	replace
75	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  public  static  double  factorialDouble(final  int  n)  {  [BUGGY]    [BUGGY]  throw  new  IllegalArgumentException( "must  have  n  >=  0  for  n! ");  }  return  Math.floor(Math.exp(factorialLog(n))  +  0.5);  }  [CLASS]  MathUtils  [METHOD]  factorialDouble  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	  	if  (n  <  0)  {  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
83	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]  long  result  =  Math.round(factorialDouble(n)-  1);  [BUGGY]  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	add	long  result  =  Math.round(factorialDouble(n)-  1);	long  result  =  Math.round(factorialDouble(n));  	compilable	  [FE]  AssertionFailedError  testFactorial	3	1
84	[BUG]  [BUGGY]  long  result  =  Math.round(factorialDouble(n)-  1);  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  long  factorial(final  int  n)  {  [BUGGY]  long  result  =  Math.round(factorialDouble(n)-  1);  [BUGGY]  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	long  result  =  Math.round(factorialDouble(n)-  1);	long  result  =  Math.round(factorialDouble(n));  	compilable	  [FE]  AssertionFailedError  testFactorial	3	1	replace
91	[BUG]  [BUGGY]    if(factorials  ==  null)  {  if(n  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]    if(factorials  ==  null)  {  if(n  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	    if(factorials  ==  null)  {  if(n  >  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
92	[BUG]  [BUGGY]    if(factorials  ==  null)  {  if(n  >  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]    if(factorials  ==  null)  {  if(n  >  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	    if(factorials  ==  null)  {  if(n  >  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
93	[BUG]  [BUGGY]    if(factorials  ==  null)  {  for(int  i  =  2;  i  <  n;  i++)  {  logSum  +=  Math.log((  double)i);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]    if(factorials  ==  null)  {  for(int  i  =  2;  i  <  n;  i++)  {  logSum  +=  Math.log((  double)i);  }  [BUGGY]  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	    if(factorials  ==  null)  {  for(int  i  =  2;  i  <  n;  i++)  {  logSum  +=  Math.log((  double)i);  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
94	[BUG]  [BUGGY]    if(factorials  ==  null)  {  if(n  >  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n. ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]    if(factorials  ==  null)  {  if(n  >  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n. ");  }  [BUGGY]  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	    if(factorials  ==  null)  {  if(n  >  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n. ");  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
95	[BUG]  [BUGGY]    if(factorials  ==  null)  {  for(int  i  =  2;  i  <  n;  i++)  {  logSum  +=  Math.log((  int)i);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]    if(factorials  ==  null)  {  for(int  i  =  2;  i  <  n;  i++)  {  logSum  +=  Math.log((  int)i);  }  [BUGGY]  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	    if(factorials  ==  null)  {  for(int  i  =  2;  i  <  n;  i++)  {  logSum  +=  Math.log((  int)i);  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  [BUGGY]    logSum  +=  Math.log((  double)n);  [BUGGY]  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	398	398	1	add	    logSum  +=  Math.log((  double)n);		compilable	  [FE]  AssertionFailedError  testFactorial	16	1
102	[BUG]  [BUGGY]    logSum  +=  Math.log((  double)n);  [FE]  AssertionFailedError  testFactorial  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  double  logSum  =  0;  [BUGGY]    logSum  +=  Math.log((  double)n);  [BUGGY]  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	398	398	1	replace	    logSum  +=  Math.log((  double)n);		compilable	  [FE]  AssertionFailedError  testFactorial	16	1	add
