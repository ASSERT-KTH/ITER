projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java397doublelogSum=0;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java397doublelogSum=1;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java397doublelogSum=(n>0)?1:0;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java397doublelogSum-=0;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java397
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java350
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java350long[]factorials=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java350long[]factorials=(long[])factorials.clone();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java350long[]factorials=Math.round(factorials[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java350long[]factorials=(long[])factorials.clone();result=Math.round(result);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java350long[]factorials=Math.round(factorialDouble(n+1));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java401returnlogSum;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java401returnlogSum/(Math.rint(logSum));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java401returnlogSum-(Math.rint(logSum));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java401returni;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java401returnlogSum+(Math.rint(logSum)/n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java401
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java399
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java399logSum+=Math.log((double)i);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java399logSum-=Math.log((double)i);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java399logSum+=Math.sin((double)i);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java399logSum-=Math.sin((double)i);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java399logSum+=Math.sqrt((double)i);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java394
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java394if(factorials==null){if(n>0){thrownewIllegalArgumentException("");}
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java394if(factorials==null){for(inti=0;i<n;i++){logSum+=Math.log((double)i);}
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java394if(factorials==null){for(inti=0;i<n;i++){logSum+=Math.log((int)i);}
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java394if(factorials==null){for(inti=0,n=factorials.length;i<n;i++){logSum+=Math.log((double)i);}
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java394if(factorials==null){for(inti=0,n=factorials.length;i<0;i++){logSum+=Math.log((double)i);}
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=(long[])factorials.clone();
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345finallong[]factorials=Math.round(factorials[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=Math.round(factorials[n]);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=Math.round(factorials,n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345long[]factorials=newlong[n];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java350returnfactorials[n];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java350returnresult;
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java350returnfactorials[n]/(result*Math.round(factorialDouble(n)));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java350returnresult+(long[])factorials[n];
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java350returnfactorials[n]/(result*Math.round(factorialDouble(n+1)));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java374if(n<0){
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java374if(n<1){
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java374if(n<=0){
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java374if(n>=0){
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java374
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorialDouble(n));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorialDouble(n+1));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorialDouble(n)-1);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java345longresult=Math.round(factorialDouble(n-1));
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java397if(factorials==null){if(n>0){thrownewIllegalArgumentException("");}
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java397if(factorials==null){if(n>0){thrownewIllegalArgumentException("musthaven>0forn!");}
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java397if(factorials==null){for(inti=2;i<n;i++){logSum+=Math.log((double)i);}
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java397if(factorials==null){if(n>0){thrownewIllegalArgumentException("musthaven>0forn.");}
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java397if(factorials==null){for(inti=2;i<n;i++){logSum+=Math.log((int)i);}
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java398
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java398logSum+=Math.log((double)n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java398logSum-=Math.log((double)n);
projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java398LogSum+=Math.log((double)n);
