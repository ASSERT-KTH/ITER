bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  n  =  factorials.size()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  double  n  =  factorials.size()  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  double  n  =  factorials.size()  +  1;	  final    double    n    =    factorials.size();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
2	[BUG]  [BUGGY]  final  double  n  =  factorials.size()  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  double  n  =  factorials.size()  -  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  double  n  =  factorials.size()  -  1;	  final    double    n    =    factorials.size();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
3	[BUG]  [BUGGY]  final  double  n  =  this.factorials.size();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  double  n  =  this.factorials.size();  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  double  n  =  this.factorials.size();	  final    double    n    =    factorials.size();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
4	[BUG]  [BUGGY]  int  n  =  Math.floor((  double)n  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.floor((  double)n  +  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.floor((  double)n  +  1);	  int    n    =    Math.floor((    double)n);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
5	[BUG]  [BUGGY]  int  n  =  factorials.length  /  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  factorials.length  /  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  factorials.length  /  2;	  int    n    =    factorials.length    -    2;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
6	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[0]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  double  n  =  Math.log(factorials[0]);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  double  n  =  Math.log(factorials[0]);	  final    double    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
7	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[n  +  1]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  double  n  =  Math.log(factorials[n  +  1]);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  double  n  =  Math.log(factorials[n  +  1]);	  final    double    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
8	[BUG]  [BUGGY]  int  n  =  Math.log((  double)n  *  2  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.log((  double)n  *  2  +  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.log((  double)n  *  2  +  1);	  int    n    =    Math.log((    double)n    *    2);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
9	[BUG]  [BUGGY]  int  n  =  Math.log((  double)n  *  3);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.log((  double)n  *  3);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.log((  double)n  *  3);	  int    n    =    Math.log((    double)n    *    2);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
10	[BUG]  [BUGGY]  int  n  =  Math.log((  double)n  /  2);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.log((  double)n  /  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.log((  double)n  /  2);	  int    n    =    Math.log((    double)n    *    2);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
11	[BUG]  [BUGGY]  int  n  =  Math.log((  double)n  *  4);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.log((  double)n  *  4);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.log((  double)n  *  4);	  int    n    =    Math.log((    double)n    *    2);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
12	[BUG]  [BUGGY]  if(n  <  0  ||  factorials.length  ==  1)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  0  ||  factorials.length  ==  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  0  ||  factorials.length  ==  1)  {	  if(n    <    0    ||    factorials.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
13	[BUG]  [BUGGY]  double  n  =  Math.floor((  double)n  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  Math.floor((  double)n  +  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.floor((  double)n  +  1);	  double    n    =    Math.floor((    double)n);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
14	[BUG]  [BUGGY]  if(n  <  =  0  ||  factorials.length!=  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  =  0  ||  factorials.length!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  =  0  ||  factorials.length!=  0)  {	  if(n    <    =    0    ||    factorials.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
15	[BUG]  [BUGGY]  if(n  ==  0  ||  factorials.length  ==  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  ==  0  ||  factorials.length  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  ==  0  ||  factorials.length  ==  0)  {	  if(n    <    =    0    ||    factorials.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
16	[BUG]  [BUGGY]  n  =  Math.ceil((  double)n  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  n  =  Math.ceil((  double)n  +  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.ceil((  double)n  +  1);	  n    =    Math.ceil((    double)n);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
17	[BUG]  [BUGGY]  n  =  Math.ceil((  double)n  *  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  n  =  Math.ceil((  double)n  *  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.ceil((  double)n  *  2);	  n    =    Math.ceil((    double)n);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
18	[BUG]  [BUGGY]  n  =  Math.ceil((  double)n  +  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  n  =  Math.ceil((  double)n  +  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.ceil((  double)n  +  2);	  n    =    Math.ceil((    double)n);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
19	[BUG]  [BUGGY]  n  =  Math.log((  double)n  *  2  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  n  =  Math.log((  double)n  *  2  +  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.log((  double)n  *  2  +  1);	  n    =    Math.log((    double)n    *    2);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
20	[BUG]  [BUGGY]  n  =  Math.log((  double)n  *  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  n  =  Math.log((  double)n  *  3);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.log((  double)n  *  3);	  n    =    Math.log((    double)n    *    2);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
21	[BUG]  [BUGGY]  n  =  Math.log((  double)n  *  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  n  =  Math.log((  double)n  *  4);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.log((  double)n  *  4);	  n    =    Math.log((    double)n    *    2);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
22	[BUG]  [BUGGY]  int  n  =  Math.ceil((  double)n  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.ceil((  double)n  +  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.ceil((  double)n  +  1);	  int    n    =    Math.ceil((    double)n);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
23	[BUG]  [BUGGY]  int  n  =  Math.ceil((  double)n  *  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.ceil((  double)n  *  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.ceil((  double)n  *  2);	  int    n    =    Math.ceil((    double)n);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
24	[BUG]  [BUGGY]  double  n  =  this.factorials.length  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  this.factorials.length  -  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  this.factorials.length  -  1;	  double    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
25	[BUG]  [BUGGY]  double  n  =  this.factorials.length  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  this.factorials.length  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  this.factorials.length  +  1;	  double    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
26	[BUG]  [BUGGY]  double  n  =  this.factorials.length  -  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  this.factorials.length  -  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  this.factorials.length  -  2;	  double    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
27	[BUG]  [BUGGY]  double  n  =  this.factorials.length  /  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  this.factorials.length  /  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  this.factorials.length  /  2;	  double    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
28	[BUG]  [BUGGY]  if(n  <  =  0  ||  factorials.length  <  =  1)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  =  0  ||  factorials.length  <  =  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  =  0  ||  factorials.length  <  =  1)  {	  if(n    <    0    ||    factorials.length    <    =    1)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
29	[BUG]  [BUGGY]  if(n  <  0  ||  factorials.length  <  1)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  0  ||  factorials.length  <  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  0  ||  factorials.length  <  1)  {	  if(n    <    0    ||    factorials.length    <    =    1)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
30	[BUG]  [BUGGY]  if(n  <  0  ||  factorials.length!=  1)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  0  ||  factorials.length!=  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  0  ||  factorials.length!=  1)  {	  if(n    <    0    ||    factorials.length    <    =    1)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
31	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n  *  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.pow(10,  n  *  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.pow(10,  n  *  1);	  int    n    =    Math.pow(10,    n    +    1);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
32	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n  +  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.pow(10,  n  +  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.pow(10,  n  +  2);	  int    n    =    Math.pow(10,    n    +    1);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
33	[BUG]  [BUGGY]  double  n  =(n  <  1)?  factorials.length  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =(n  <  1)?  factorials.length  :  0;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =(n  <  1)?  factorials.length  :  0;	  double    n    =(n    <    2)?    factorials.length    :    0;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
34	[BUG]  [BUGGY]  double  n  =(n  <  2)?  factorials.length  :  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =(n  <  2)?  factorials.length  :  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =(n  <  2)?  factorials.length  :  1;	  double    n    =(n    <    2)?    factorials.length    :    0;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
35	[BUG]  [BUGGY]  double  n  =(n  <  2)?  factorials.length  :  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =(n  <  2)?  factorials.length  :  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =(n  <  2)?  factorials.length  :  2;	  double    n    =(n    <    2)?    factorials.length    :    0;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
36	[BUG]  [BUGGY]  n  =  Math.log((  double)n  /  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  n  =  Math.log((  double)n  /  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.log((  double)n  /  2);	  n    =    Math.log((    double)n    +    2);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
37	[BUG]  [BUGGY]  double  n  =  Math.log((  double)n  /  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  Math.log((  double)n  /  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.log((  double)n  /  1);	  double    n    =    Math.log((    double)n    -    1);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
38	[BUG]  [BUGGY]  double  n  =  Math.log((  double)n  *  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  Math.log((  double)n  *  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.log((  double)n  *  1);	  double    n    =    Math.log((    double)n    -    1);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
39	[BUG]  [BUGGY]  double  n  =  Math.log((  double)n  -  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  Math.log((  double)n  -  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.log((  double)n  -  2);	  double    n    =    Math.log((    double)n    -    1);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
40	[BUG]  [BUGGY]  short  n  =  factorials.length  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  short  n  =  factorials.length  -  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	short  n  =  factorials.length  -  1;	  long    n    =    factorials.length    -    1;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
41	[BUG]  [BUGGY]  long  n  =  n  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  long  n  =  n  -  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	long  n  =  n  -  1;	  long    n    =    factorials.length    -    1;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
42	[BUG]  [BUGGY]  int  n  =  this.factorials.size()  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  this.factorials.size()  -  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  this.factorials.size()  -  1;	  int    n    =    this.factorials.size();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
43	[BUG]  [BUGGY]  int  n  =  this.factorials.size()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  this.factorials.size()  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  this.factorials.size()  +  1;	  int    n    =    this.factorials.size();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
44	[BUG]  [BUGGY]  int  n  =  this.factorials.size()  -  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  this.factorials.size()  -  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  this.factorials.size()  -  2;	  int    n    =    this.factorials.size();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
45	[BUG]  [BUGGY]  if(n  <  =  0  ||  factorials.length  >=  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  =  0  ||  factorials.length  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  =  0  ||  factorials.length  >=  0)  {	  if(n    <    =    0    ||    factorials.length    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
46	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n  /  2);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.pow(10,  n  /  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.pow(10,  n  /  2);	  int    n    =    Math.pow(10,    n    *    2);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
47	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n  *  2  -  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.pow(10,  n  *  2  -  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.pow(10,  n  *  2  -  1);	  int    n    =    Math.pow(10,    n    *    2);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
48	[BUG]  [BUGGY]  final  int  n  =  this.factorials.size()  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  this.factorials.size()  -  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  this.factorials.size()  -  1;	  final    int    n    =    this.factorials.size();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
49	[BUG]  [BUGGY]  final  int  n  =  this.factorials.size()  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  this.factorials.size()  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  this.factorials.size()  +  1;	  final    int    n    =    this.factorials.size();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
50	[BUG]  [BUGGY]  final  int  n  =  this.factorials.size()  -  2;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  this.factorials.size()  -  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  this.factorials.size()  -  2;	  final    int    n    =    this.factorials.size();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
51	[BUG]  [BUGGY]  int  n  =  Math.log((  double)n  *  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.log((  double)n  *  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.log((  double)n  *  1);	  int    n    =    Math.log((    double)n    +    1);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
52	[BUG]  [BUGGY]  int  n  =  Math.log((  double)n  /  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.log((  double)n  /  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.log((  double)n  /  1);	  int    n    =    Math.log((    double)n    -    1);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
53	[BUG]  [BUGGY]  int  n  =  Math.log((  double)n  -  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.log((  double)n  -  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.log((  double)n  -  2);	  int    n    =    Math.log((    double)n    -    1);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
54	[BUG]  [BUGGY]  final  int  n  =  Math.rint(factorials[0]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  Math.rint(factorials[0]);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.rint(factorials[0]);	  final    int    n    =    Math.rint(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
55	[BUG]  [BUGGY]  final  double  n  =  Math.rint(factorials[n]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  double  n  =  Math.rint(factorials[n]);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  double  n  =  Math.rint(factorials[n]);	  final    int    n    =    Math.rint(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
56	[BUG]  [BUGGY]  final  int  n  =  Math.min(factorials.length,  n);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  Math.min(factorials.length,  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.min(factorials.length,  n);	  final    int    n    =    Math.rint(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
57	[BUG]  [BUGGY]  n  =  Math.log((  double)n  *  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  n  =  Math.log((  double)n  *  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.log((  double)n  *  1);	  n    =    Math.log((    double)n    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
58	[BUG]  [BUGGY]  short  n  =  n;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  short  n  =  n;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	short  n  =  n;	  long    n    =    n;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
59	[BUG]  [BUGGY]  long  n  =  n  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  long  n  =  n  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	long  n  =  n  +  1;	  long    n    =    n;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
60	[BUG]  [BUGGY]  n  =  Math.log(factorials[0]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  n  =  Math.log(factorials[0]);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.log(factorials[0]);	  n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
61	[BUG]  [BUGGY]  n  =  Math.ceil(factorials[n]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  n  =  Math.ceil(factorials[n]);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.ceil(factorials[n]);	  n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
62	[BUG]  [BUGGY]  n  =  Math.floor(factorials[n]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  n  =  Math.floor(factorials[n]);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.floor(factorials[n]);	  n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
63	[BUG]  [BUGGY]  int  n  =  this.factorials.length  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  this.factorials.length  -  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  this.factorials.length  -  1;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
64	[BUG]  [BUGGY]  int  n  =  this.factorials.length  -  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  this.factorials.length  -  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  this.factorials.length  -  2;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
65	[BUG]  [BUGGY]  int  n  =  this.factorials.length  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  this.factorials.length  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  this.factorials.length  +  1;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
66	[BUG]  [BUGGY]  int  n  =  this.factorials.length  -  3;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  this.factorials.length  -  3;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  this.factorials.length  -  3;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
67	[BUG]  [BUGGY]  double  n  =  factorials.length  /  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  factorials.length  /  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  factorials.length  /  2;	  double    n    =    factorials.length    -    2;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
68	[BUG]  [BUGGY]  double  n  =  n  -  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  n  -  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  n  -  2;	  double    n    =    factorials.length    -    2;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
69	[BUG]  [BUGGY]  double  n  =  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  0;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  0;	  double    n    =    n;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
70	[BUG]  [BUGGY]  double  n  =  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  1;	  double    n    =    n;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
71	[BUG]  [BUGGY]  double  n  =  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  2;	  double    n    =    n;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
72	[BUG]  [BUGGY]  double  n  =  Math.log(n);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  Math.log(n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.log(n);	  double    n    =    n;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
73	[BUG]  [BUGGY]  int  n  =  factorials.length  -  1  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  factorials.length  -  1  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  factorials.length  -  1  +  1;	  int    n    =    factorials.length    -    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
74	[BUG]  [BUGGY]  int  n  =  n.length  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  n.length  -  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  n.length  -  1;	  int    n    =    factorials.length    -    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
75	[BUG]  [BUGGY]  double  n  =  n  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  n  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  n  +  1;	  double    n    =    factorials.length    +    1;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
76	[BUG]  [BUGGY]  double  n  =  factorials.length  /  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  factorials.length  /  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  factorials.length  /  1;	  double    n    =    factorials.length    +    1;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
77	[BUG]  [BUGGY]  double  n  =  factorials.length  +  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  factorials.length  +  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  factorials.length  +  2;	  double    n    =    factorials.length    +    1;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
78	[BUG]  [BUGGY]  final  int  n  =  factororials.size();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  factororials.size();  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  factororials.size();	  final    int    n    =    factorials.size()    +    1;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
79	[BUG]  [BUGGY]  static  final  int  n  =  factorials.size();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  static  final  int  n  =  factorials.size();  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	static  final  int  n  =  factorials.size();	  final    int    n    =    factorials.size()    +    1;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
80	[BUG]  [BUGGY]  final  int  n  =  n  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  n  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  n  +  1;	  final    int    n    =    factorials.length    +    1;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
81	[BUG]  [BUGGY]  final  int  n  =  factorials.length  /  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  factorials.length  /  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  factorials.length  /  1;	  final    int    n    =    factorials.length    +    1;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
82	[BUG]  [BUGGY]  if(n  <  =  0  ||  n  ==  NS)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  =  0  ||  n  ==  NS)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  =  0  ||  n  ==  NS)  {	  if(n    <    0    ||    n    ==    NS)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
83	[BUG]  [BUGGY]  int  n  =  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  0;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  0;	  int    n    =    n;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
84	[BUG]  [BUGGY]  int  n  =  Math.min(factorials.length,  n);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.min(factorials.length,  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.min(factorials.length,  n);	  int    n    =    n;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
85	[BUG]  [BUGGY]  int  n  =  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  2;	  int    n    =    n;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
86	[BUG]  [BUGGY]  int  n  =  factororials.size();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  factororials.size();  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  factororials.size();	  int    n    =    factorials.size()    +    1;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
87	[BUG]  [BUGGY]  if(n  <  0  ||  factorials.length  >  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  0  ||  factorials.length  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  0  ||  factorials.length  >  0)  {	  if(n    <    0    ||    factorials.length!=    0)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
88	[BUG]  [BUGGY]  int  n  =  n  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  n  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  n  +  1;	  int    n    =    factorials.length    +    1;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
89	[BUG]  [BUGGY]  int  n  =  factorials.length  /  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  factorials.length  /  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  factorials.length  /  1;	  int    n    =    factorials.length    +    1;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
90	[BUG]  [BUGGY]  final  int  n  =  Math.pow(10,  n  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  Math.pow(10,  n  +  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.pow(10,  n  +  1);	  final    int    n    =    Math.pow(10,    n);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
91	[BUG]  [BUGGY]  final  int  n  =  Math.pow(10,  n  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  Math.pow(10,  n  -  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.pow(10,  n  -  1);	  final    int    n    =    Math.pow(10,    n);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
92	[BUG]  [BUGGY]  final  int  n  =  Math.pow(10,  n  *  10);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  Math.pow(10,  n  *  10);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.pow(10,  n  *  10);	  final    int    n    =    Math.pow(10,    n);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
93	[BUG]  [BUGGY]  final  double  n  =  Math.pow(10,  n);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  double  n  =  Math.pow(10,  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  double  n  =  Math.pow(10,  n);	  final    int    n    =    Math.pow(10,    n);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
94	[BUG]  [BUGGY]  if(n  <  0  ||  n  >  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  0  ||  n  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  0  ||  n  >  0)  {	  if(n    <    0    ||    n    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
95	[BUG]  [BUGGY]  if(n  <  0  ||  n  ==  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  0  ||  n  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  0  ||  n  ==  0)  {	  if(n    <    0    ||    n    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
96	[BUG]  [BUGGY]  if(n  <  =  0  ||  n  <  =  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  =  0  ||  n  <  =  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  =  0  ||  n  <  =  0)  {	  if(n    <    0    ||    n    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
97	[BUG]  [BUGGY]  if(n  <  0  ||  n  >=  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  0  ||  n  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  0  ||  n  >=  0)  {	  if(n    <    0    ||    n    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
98	[BUG]  [BUGGY]  int  n  =  factorials.length  /  3;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  factorials.length  /  3;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  factorials.length  /  3;	  int    n    =    factorials.length    -    3;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
99	[BUG]  [BUGGY]  final  int  n  =  Math.log(factorials[0],  n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  Math.log(factorials[0],  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.log(factorials[0],  n);	  final    int    n    =    Math.log(factorials[0]);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
100	[BUG]  [BUGGY]  final  int  n  =  Math.log(factorials[0]  +  n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  Math.log(factorials[0]  +  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.log(factorials[0]  +  n);	  final    int    n    =    Math.log(factorials[0]);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
101	[BUG]  [BUGGY]  final  int  n  =  this.factorials.length  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  this.factorials.length  -  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  this.factorials.length  -  1;	  final    int    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
102	[BUG]  [BUGGY]  final  int  n  =  this.factorials.length  -  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  this.factorials.length  -  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  this.factorials.length  -  2;	  final    int    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
103	[BUG]  [BUGGY]  final  int  n  =  this.factorials.length  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  this.factorials.length  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  this.factorials.length  +  1;	  final    int    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
104	[BUG]  [BUGGY]  final  int  n  =  this.factorials.length  -  3;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  this.factorials.length  -  3;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  this.factorials.length  -  3;	  final    int    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
105	[BUG]  [BUGGY]  double  n  =  Math.log((  double)n  *  2  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  Math.log((  double)n  *  2  +  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.log((  double)n  *  2  +  1);	  double    n    =    Math.log((    double)n    *    2);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
106	[BUG]  [BUGGY]  double  n  =  Math.log((  double)n  *  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  Math.log((  double)n  *  3);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.log((  double)n  *  3);	  double    n    =    Math.log((    double)n    *    2);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
107	[BUG]  [BUGGY]  double  n  =  Math.log((  double)n  *  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  Math.log((  double)n  *  4);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.log((  double)n  *  4);	  double    n    =    Math.log((    double)n    *    2);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
108	[BUG]  [BUGGY]  if(n  <  =  0  ||  n  >=  NS)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  =  0  ||  n  >=  NS)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  =  0  ||  n  >=  NS)  {	  if(n    <    0    ||    n    >=    NS)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
109	[BUG]  [BUGGY]  n  =  Math.floor((  double)n  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  n  =  Math.floor((  double)n  +  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.floor((  double)n  +  1);	  n    =    Math.floor((    double)n);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
110	[BUG]  [BUGGY]  final  int  n  =  n.length  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  n.length  -  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  n.length  -  1;	  final    int    n    =    factorials.length    -    1;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
111	[BUG]  [BUGGY]  final  int  n  =  factorials.length  -  1  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  factorials.length  -  1  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  factorials.length  -  1  +  1;	  final    int    n    =    factorials.length    -    1;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
112	[BUG]  [BUGGY]  final  double  n  =  n;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  double  n  =  n;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  double  n  =  n;	  final    int    n    =    n;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
113	[BUG]  [BUGGY]  final  int  n  =  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  2;	  final    int    n    =    n;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
114	[BUG]  [BUGGY]  final  int  n  =  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  0;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  0;	  final    int    n    =    n;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
115	[BUG]  [BUGGY]  final  int  n  =  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  1;	  final    int    n    =    n;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
116	[BUG]  [BUGGY]  final  int  n  =  Math.ceil(factorials[0]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  Math.ceil(factorials[0]);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.ceil(factorials[0]);	  final    int    n    =    Math.ceil(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
117	[BUG]  [BUGGY]  final  double  n  =  Math.ceil(factorials[n]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  double  n  =  Math.ceil(factorials[n]);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  double  n  =  Math.ceil(factorials[n]);	  final    int    n    =    Math.ceil(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
118	[BUG]  [BUGGY]  final  long  n  =  Math.ceil(factorials[n]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  long  n  =  Math.ceil(factorials[n]);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  long  n  =  Math.ceil(factorials[n]);	  final    int    n    =    Math.ceil(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
119	[BUG]  [BUGGY]  final  double  n  =  factorials.length  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  double  n  =  factorials.length  -  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  double  n  =  factorials.length  -  1;	  final    double    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
120	[BUG]  [BUGGY]  final  double  n  =  factorials.length  -  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  double  n  =  factorials.length  -  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  double  n  =  factorials.length  -  2;	  final    double    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
121	[BUG]  [BUGGY]  final  int  n  =  Math.floor(factorials[0]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  Math.floor(factorials[0]);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.floor(factorials[0]);	  final    int    n    =    Math.floor(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
122	[BUG]  [BUGGY]  final  double  n  =  Math.floor(factorials[n]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  double  n  =  Math.floor(factorials[n]);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  double  n  =  Math.floor(factorials[n]);	  final    int    n    =    Math.floor(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
123	[BUG]  [BUGGY]  final  int  n  =  factorials.length  /  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  factorials.length  /  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  factorials.length  /  2;	  final    int    n    =    factorials.length    -    2;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
124	[BUG]  [BUGGY]  double  n  =  Math.ceil((  double)n  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  Math.ceil((  double)n  +  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.ceil((  double)n  +  1);	  double    n    =    Math.ceil((    double)n);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
125	[BUG]  [BUGGY]  double  n  =  Math.ceil((  double)n  *  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  Math.ceil((  double)n  *  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.ceil((  double)n  *  2);	  double    n    =    Math.ceil((    double)n);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
126	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n  /  10);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.pow(10,  n  /  10);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.pow(10,  n  /  10);	  int    n    =    Math.pow(10,    n    *    10);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
127	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n  -  10);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.pow(10,  n  -  10);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.pow(10,  n  -  10);	  int    n    =    Math.pow(10,    n    *    10);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
128	[BUG]  [BUGGY]  double  n  =  Math.log((  double)n  /  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  Math.log((  double)n  /  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.log((  double)n  /  2);	  double    n    =    Math.log((    double)n    +    2);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
129	[BUG]  [BUGGY]  final  int  n  =  Math.rint(factorials[1]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  Math.rint(factorials[1]);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.rint(factorials[1]);	  final    int    n    =    Math.log(factorials[1]);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
130	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[1]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  double  n  =  Math.log(factorials[1]);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  double  n  =  Math.log(factorials[1]);	  final    int    n    =    Math.log(factorials[1]);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
131	[BUG]  [BUGGY]  double  n  =  n  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  n  -  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  n  -  1;	  double    n    =    factorials.length    -    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
132	[BUG]  [BUGGY]  double  n  =  n.length  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  n.length  -  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  n.length  -  1;	  double    n    =    factorials.length    -    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
133	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n  *  3);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.pow(10,  n  *  3);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.pow(10,  n  *  3);	  int    n    =    Math.pow(10,    n    -    3);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
134	[BUG]  [BUGGY]  double  n  =  Math.floor((  double)n  +  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  Math.floor((  double)n  +  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.floor((  double)n  +  2);	  double    n    =    Math.floor((    double)n);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
135	[BUG]  [BUGGY]  double  n  =  Math.ceil((  double)n  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  Math.ceil((  double)n  -  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.ceil((  double)n  -  1);	  double    n    =    Math.ceil((    double)n);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
136	[BUG]  [BUGGY]  n  =  Math.floor((  double)n  *  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  n  =  Math.floor((  double)n  *  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.floor((  double)n  *  2);	  n    =    Math.floor((    double)n);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
137	[BUG]  [BUGGY]  int  n  =  Math.log(factorials.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.log(factorials.length);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.log(factorials.length);	  int    n    =    n;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
138	[BUG]  [BUGGY]  double  n  =  Math.pow(10,  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  Math.pow(10,  n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.pow(10,  n);	  double    n    =    n;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
139	[BUG]  [BUGGY]  final  int  n  =  Math.floor(factorials[1]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  Math.floor(factorials[1]);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.floor(factorials[1]);	  final    int    n    =    Math.log(factorials[1]);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
140	[BUG]  [BUGGY]  double  n  =  factorials.length  -  1  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  factorials.length  -  1  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  factorials.length  -  1  +  1;	  double    n    =    factorials.length    -    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
141	[BUG]  [BUGGY]  double  n  =  factorials.length  *  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  factorials.length  *  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  factorials.length  *  1;	  double    n    =    factorials.length    +    1;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
142	[BUG]  [BUGGY]  long  n  =  factorials.length  -  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  long  n  =  factorials.length  -  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	long  n  =  factorials.length  -  2;	  long    n    =    factorials.length    -    1;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
143	[BUG]  [BUGGY]  int  n  =  factorials.length  -  2  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  factorials.length  -  2  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  factorials.length  -  2  +  1;	  int    n    =    factorials.length    -    2;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
144	[BUG]  [BUGGY]  double  n  =(n  <  1)?  factorials.length  :  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =(n  <  1)?  factorials.length  :  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =(n  <  1)?  factorials.length  :  1;	  double    n    =(n    <    2)?    factorials.length    :    0;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
145	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n  *  4);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.pow(10,  n  *  4);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.pow(10,  n  *  4);	  int    n    =    Math.pow(10,    n    *    10);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
146	[BUG]  [BUGGY]  n  =  Math.ceil((  double)n  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  n  =  Math.ceil((  double)n  -  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.ceil((  double)n  -  1);	  n    =    Math.ceil((    double)n);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
147	[BUG]  [BUGGY]  int  n  =  factorials.length  +  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  factorials.length  +  2;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  factorials.length  +  2;	  int    n    =    factorials.length    +    1;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
148	[BUG]  [BUGGY]  if(n  <  =  0  ||  factorials.length  ==  1)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  =  0  ||  factorials.length  ==  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  =  0  ||  factorials.length  ==  1)  {	  if(n    <    =    0    ||    factorials.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
149	[BUG]  [BUGGY]  final  int  n  =  Math.log(factorials.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  Math.log(factorials.length);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.log(factorials.length);	  final    int    n    =    n;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
150	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n  /  3);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.pow(10,  n  /  3);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.pow(10,  n  /  3);	  int    n    =    Math.pow(10,    n    -    3);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
151	[BUG]  [BUGGY]  double  n  =  factorials.length  -  2  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =  factorials.length  -  2  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  factorials.length  -  2  +  1;	  double    n    =    factorials.length    -    2;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
152	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n  /  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.pow(10,  n  /  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.pow(10,  n  /  1);	  int    n    =    Math.pow(10,    n    +    1);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
153	[BUG]  [BUGGY]  final  int  n  =  factorials.length  *  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  factorials.length  *  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  factorials.length  *  1;	  final    int    n    =    factorials.length    +    1;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
154	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n  *  2  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.pow(10,  n  *  2  +  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.pow(10,  n  *  2  +  1);	  int    n    =    Math.pow(10,    n    *    2);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
155	[BUG]  [BUGGY]  Final  int  n  =  factorials.size();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  Final  int  n  =  factorials.size();  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	Final  int  n  =  factorials.size();	  final    int    n    =    factorials.size()    +    1;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
156	[BUG]  [BUGGY]  final  int  n  =  Math.pow(10,  n  -  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  Math.pow(10,  n  -  2);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.pow(10,  n  -  2);	  final    int    n    =    Math.pow(10,    n);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
157	[BUG]  [BUGGY]  final  int  n  =  Math.pow(10,  n  -  3);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  Math.pow(10,  n  -  3);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.pow(10,  n  -  3);	  final    int    n    =    Math.pow(10,    n);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
158	[BUG]  [BUGGY]  int  n  =  Math.ceil((  double)n  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.ceil((  double)n  -  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.ceil((  double)n  -  1);	  int    n    =    Math.ceil((    double)n);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
159	[BUG]  [BUGGY]  Integer  n  =  factorials.size();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  Integer  n  =  factorials.size();  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	Integer  n  =  factorials.size();	  int    n    =    factorials.size()    +    1;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
160	[BUG]  [BUGGY]  if(n  >=  1)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  >=  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  >=  1)  {	  if(n    <    =    1)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
161	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n  -  2  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =  Math.pow(10,  n  -  2  -  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.pow(10,  n  -  2  -  1);	  int    n    =    Math.pow(10,    n    -    2);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
162	[BUG]  [BUGGY]  final  int  n  =  factorials.length  -  2  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  factorials.length  -  2  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  factorials.length  -  2  +  1;	  final    int    n    =    factorials.length    -    2;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
163	[BUG]  [BUGGY]  final  double  n  =  factorials.length  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  double  n  =  factorials.length  +  1;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  double  n  =  factorials.length  +  1;	  final    double    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
164	[BUG]  [BUGGY]  final  long  n  =  Math.floor(factorials[n]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  long  n  =  Math.floor(factorials[n]);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  long  n  =  Math.floor(factorials[n]);	  final    int    n    =    Math.floor(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
165	[BUG]  [BUGGY]  if(n  <  1  ||  n  <  =  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  1  ||  n  <  =  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  1  ||  n  <  =  0)  {	  if(n    <    =    1)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
166	[BUG]  [BUGGY]  if(n  <  1  ||  n  <  1)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  1  ||  n  <  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  1  ||  n  <  1)  {	  if(n    <    =    1)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
167	[BUG]  [BUGGY]  int  n  =(factorials  ==  null)?  0  :  factorials.size();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =(factorials  ==  null)?  0  :  factorials.size();  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =(factorials  ==  null)?  0  :  factorials.size();	  int    n    =    factorials.size()    -    1;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
168	[BUG]  [BUGGY]  int  n  =(this.factorials  ==  null)?  this.factorials.length  :  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  int  n  =(this.factorials  ==  null)?  this.factorials.length  :  0;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =(this.factorials  ==  null)?  this.factorials.length  :  0;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
169	[BUG]  [BUGGY]  final  double  n  =  this.factorials.length;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  double  n  =  this.factorials.length;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  double  n  =  this.factorials.length;	  final    int    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
170	[BUG]  [BUGGY]  long  n  =  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  long  n  =  0;  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	long  n  =  0;	  long    n    =    n;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
171	[BUG]  [BUGGY]  n  =  Math.log(factorials[n],  EPSILON);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  n  =  Math.log(factorials[n],  EPSILON);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.log(factorials[n],  EPSILON);	  n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
172	[BUG]  [BUGGY]  double  n  =(n  <  2?  factorials.length  :  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  double  n  =(n  <  2?  factorials.length  :  0);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =(n  <  2?  factorials.length  :  0);	  double    n    =(n    <    2)?    factorials.length    :    0;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
173	[BUG]  [BUGGY]  if(n  <  =  0  ||  factorials.length  ==  2)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  =  0  ||  factorials.length  ==  2)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  =  0  ||  factorials.length  ==  2)  {	  if(n    <    =    0    ||    factorials.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
174	[BUG]  [BUGGY]  static  final  double  n  =  Math.log(factorials[n]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  static  final  double  n  =  Math.log(factorials[n]);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	static  final  double  n  =  Math.log(factorials[n]);	  final    double    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
175	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[n],  EPSILON);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  double  n  =  Math.log(factorials[n],  EPSILON);  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  double  n  =  Math.log(factorials[n],  EPSILON);	  final    double    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
176	[BUG]  [BUGGY]  if(n  <  =  0  ||  factorials.length  <  2)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  =  0  ||  factorials.length  <  2)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  =  0  ||  factorials.length  <  2)  {	  if(n    <    =    0    ||    factorials.length    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
177	[BUG]  [BUGGY]  if(n  <  =  0  ||  factorials.length  <  1)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  =  0  ||  factorials.length  <  1)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  =  0  ||  factorials.length  <  1)  {	  if(n    <    =    0    ||    factorials.length    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
178	[BUG]  [BUGGY]  if(n  <  0  ||  factorials.length  ==  2)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  0  ||  factorials.length  ==  2)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  0  ||  factorials.length  ==  2)  {	  if(n    <    0    ||    factorials.length    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
179	[BUG]  [BUGGY]  if(n  <  0  ||  n  <  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  if(n  <  0  ||  n  <  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  0  ||  n  <  0)  {	  if(n    <    0    ||    n    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
180	[BUG]  [BUGGY]  n  =  Math.floor((  double)n  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  n  =  Math.floor((  double)n  -  1);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.floor((  double)n  -  1);	  n    =    Math.floor((    double)n);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
181	[BUG]  [BUGGY]  final  int  n  =  Math.log((  double)n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {      [BUGGY]  final  int  n  =  Math.log((  double)n);  [BUGGY]      if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.log((  double)n);	  final    int    n    =    n;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
