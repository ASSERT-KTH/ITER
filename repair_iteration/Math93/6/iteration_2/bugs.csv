bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(n  <  0  ||  factorials.length  ==  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  if(n  <  0  ||  factorials.length  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  0  ||  factorials.length  ==  0)  {	  if(n    <    0    ||    factorials.length    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
2	[BUG]  [BUGGY]  if(n  <  =  0  ||  factorials.length  <  =  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  if(n  <  =  0  ||  factorials.length  <  =  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  =  0  ||  factorials.length  <  =  0)  {	  if(n    <    0    ||    factorials.length    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
3	[BUG]  [BUGGY]  if(n  <  0  ||  factorials.length!=  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  if(n  <  0  ||  factorials.length!=  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  0  ||  factorials.length!=  0)  {	  if(n    <    0    ||    factorials.length    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
4	[BUG]  [BUGGY]  if(n  <  0  ||  factorials.length  >=  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  if(n  <  0  ||  factorials.length  >=  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  0  ||  factorials.length  >=  0)  {	  if(n    <    0    ||    factorials.length    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
5	[BUG]  [BUGGY]  final  int  n  =  Math.log(factorials[0]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  final  int  n  =  Math.log(factorials[0]);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.log(factorials[0]);	      final    int    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
6	[BUG]  [BUGGY]  final  int  n  =  Math.rint(factorials[n]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  final  int  n  =  Math.rint(factorials[n]);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.rint(factorials[n]);	      final    int    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
7	[BUG]  [BUGGY]  final  int  n  =  Math.ceil(factorials[n]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  final  int  n  =  Math.ceil(factorials[n]);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.ceil(factorials[n]);	      final    int    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
8	[BUG]  [BUGGY]  final  int  n  =  Math.pow(10,  n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  final  int  n  =  Math.pow(10,  n);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.pow(10,  n);	      final    int    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
9	[BUG]  [BUGGY]  final  double  n  =  Math.log(factorials[n]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  final  double  n  =  Math.log(factorials[n]);  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  double  n  =  Math.log(factorials[n]);	      	non-compiled	[CE]  <identifier>  expected	3	None	replace
10	[BUG]  [BUGGY]  n  =  Math.log(factorials[n]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  n  =  Math.log(factorials[n]);  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.log(factorials[n]);	      	non-compiled	[CE]  <identifier>  expected	3	None	replace
11	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  Math.pow(10,  n  +  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.pow(10,  n  +  1);	      int    n    =    Math.pow(10,    n);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
12	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  Math.pow(10,  n  -  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.pow(10,  n  -  1);	      int    n    =    Math.pow(10,    n);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
13	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n  *  10);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  Math.pow(10,  n  *  10);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.pow(10,  n  *  10);	      int    n    =    Math.pow(10,    n);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
14	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n  *  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  Math.pow(10,  n  *  2);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.pow(10,  n  *  2);	      int    n    =    Math.pow(10,    n);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
15	[BUG]  [BUGGY]  n  =  Math.log((  double)n  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  n  =  Math.log((  double)n  +  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.log((  double)n  +  1);	      n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
16	[BUG]  [BUGGY]  n  =  Math.ceil((  double)n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  n  =  Math.ceil((  double)n);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.ceil((  double)n);	      n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
17	[BUG]  [BUGGY]  n  =  Math.log((  double)n  *  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  n  =  Math.log((  double)n  *  2);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.log((  double)n  *  2);	      n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
18	[BUG]  [BUGGY]  if(n  <  =  2)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  if(n  <  =  2)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  =  2)  {	  if(n    <    2)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
19	[BUG]  [BUGGY]  int  n  =  factorials.size()  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  factorials.size()  +  1;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  factorials.size()  +  1;	      int    n    =    factorials.size();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
20	[BUG]  [BUGGY]  int  n  =  factorials.size()  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  factorials.size()  -  1;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  factorials.size()  -  1;	      int    n    =    factorials.size();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  int  n  =  this.factorials.size();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  this.factorials.size();  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  this.factorials.size();	      int    n    =    factorials.size();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  if(n  <  0  ||  n  ==  NS)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  if(n  <  0  ||  n  ==  NS)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  0  ||  n  ==  NS)  {	  if(n    <    0    ||    n    >    NS)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
23	[BUG]  [BUGGY]  if(n  <  0  ||  n  >=  NS)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  if(n  <  0  ||  n  >=  NS)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  0  ||  n  >=  NS)  {	  if(n    <    0    ||    n    >    NS)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
24	[BUG]  [BUGGY]  if(n  <  =  0  ||  n  >  NS)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  if(n  <  =  0  ||  n  >  NS)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  =  0  ||  n  >  NS)  {	  if(n    <    0    ||    n    >    NS)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
25	[BUG]  [BUGGY]  short  n  =  factorials.length;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  short  n  =  factorials.length;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	short  n  =  factorials.length;	      long    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
26	[BUG]  [BUGGY]  long  n  =  n;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  long  n  =  n;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	long  n  =  n;	      long    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
27	[BUG]  [BUGGY]  double  n  =  Math.log((  double)n  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  double  n  =  Math.log((  double)n  +  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.log((  double)n  +  1);	      double    n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
28	[BUG]  [BUGGY]  double  n  =  Math.log((  double)n  *  2);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  double  n  =  Math.log((  double)n  *  2);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.log((  double)n  *  2);	      double    n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
29	[BUG]  [BUGGY]  double  n  =  Math.ceil((  double)n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  double  n  =  Math.ceil((  double)n);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.ceil((  double)n);	      double    n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
30	[BUG]  [BUGGY]  int  n  =  Math.log((  double)n  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  Math.log((  double)n  +  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.log((  double)n  +  1);	      int    n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
31	[BUG]  [BUGGY]  int  n  =  Math.ceil((  double)n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  Math.ceil((  double)n);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.ceil((  double)n);	      int    n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
32	[BUG]  [BUGGY]  int  n  =  Math.log((  double)n  *  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  Math.log((  double)n  *  2);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.log((  double)n  *  2);	      int    n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
33	[BUG]  [BUGGY]  final  int  n  =  factorials.length  -  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  final  int  n  =  factorials.length  -  1;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  factorials.length  -  1;	      final    int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
34	[BUG]  [BUGGY]  final  int  n  =  n;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  final  int  n  =  n;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  n;	      final    int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
35	[BUG]  [BUGGY]  final  int  n  =  this.factorials.length;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  final  int  n  =  this.factorials.length;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  this.factorials.length;	      final    int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
36	[BUG]  [BUGGY]  final  int  n  =  factorials.length  -  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  final  int  n  =  factorials.length  -  2;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  factorials.length  -  2;	      final    int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
37	[BUG]  [BUGGY]  if(n  <  =  1)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  if(n  <  =  1)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  =  1)  {	  if(n    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
38	[BUG]  [BUGGY]  if(n  >=  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  if(n  >=  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  >=  0)  {	  if(n    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
39	[BUG]  [BUGGY]  final  int  n  =  factorials.size()  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  final  int  n  =  factorials.size()  -  1;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  factorials.size()  -  1;	      final    int    n    =    factorials.size();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
40	[BUG]  [BUGGY]  final  int  n  =  factorials.size()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  final  int  n  =  factorials.size()  +  1;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  factorials.size()  +  1;	      final    int    n    =    factorials.size();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
41	[BUG]  [BUGGY]  final  int  n  =  this.factorials.size();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  final  int  n  =  this.factorials.size();  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  this.factorials.size();	      final    int    n    =    factorials.size();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
42	[BUG]  [BUGGY]  double  n  =  n;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  double  n  =  n;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  n;	      double    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
43	[BUG]  [BUGGY]  double  n  =  factorials.length  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  double  n  =  factorials.length  -  1;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  factorials.length  -  1;	      double    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
44	[BUG]  [BUGGY]  double  n  =(n  <  2)?  factorials.length  :  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  double  n  =(n  <  2)?  factorials.length  :  0;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =(n  <  2)?  factorials.length  :  0;	      double    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
45	[BUG]  [BUGGY]  double  n  =  factorials.length  -  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  double  n  =  factorials.length  -  2;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  factorials.length  -  2;	      double    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
46	[BUG]  [BUGGY]  if(n  >  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  if(n  >  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  >  0)  {	  if(n    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
47	[BUG]  [BUGGY]  int  n  =  factorials.length  -  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  factorials.length  -  1;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  factorials.length  -  1;	      int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
48	[BUG]  [BUGGY]  int  n  =  this.factorials.length;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  this.factorials.length;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  this.factorials.length;	      int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
49	[BUG]  [BUGGY]  int  n  =  factorials.length  -  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  factorials.length  -  2;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  factorials.length  -  2;	      int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
50	[BUG]  [BUGGY]  int  n  =  n;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  n;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  n;	      int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
51	[BUG]  [BUGGY]  double  n  =  factorials.length  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  double  n  =  factorials.length  +  1;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  factorials.length  +  1;	      double    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
52	[BUG]  [BUGGY]  n  =  Math.floor((  double)n);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  n  =  Math.floor((  double)n);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.floor((  double)n);	      n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
53	[BUG]  [BUGGY]  n  =  Math.log((  double)n  +  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  n  =  Math.log((  double)n  +  2);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	n  =  Math.log((  double)n  +  2);	      n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
54	[BUG]  [BUGGY]  final  int  n  =  Math.floor(factorials[n]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  final  int  n  =  Math.floor(factorials[n]);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.floor(factorials[n]);	      final    int    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
55	[BUG]  [BUGGY]  final  int  n  =  Math.log(factorials[1]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  final  int  n  =  Math.log(factorials[1]);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  Math.log(factorials[1]);	      final    int    n    =    Math.log(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
56	[BUG]  [BUGGY]  double  n  =  Math.log((  double)n  -  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  double  n  =  Math.log((  double)n  -  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.log((  double)n  -  1);	      double    n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
57	[BUG]  [BUGGY]  double  n  =  Math.log((  double)n  +  2);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  double  n  =  Math.log((  double)n  +  2);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.log((  double)n  +  2);	      double    n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
58	[BUG]  [BUGGY]  if(n  <  0  ||  n!=  NS)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  if(n  <  0  ||  n!=  NS)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  0  ||  n!=  NS)  {	  if(n    <    0    ||    n    >    NS)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
59	[BUG]  [BUGGY]  if(n  <  =  0  ||  factorials.length  ==  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  if(n  <  =  0  ||  factorials.length  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  =  0  ||  factorials.length  ==  0)  {	  if(n    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
60	[BUG]  [BUGGY]  int  n  =  Math.log((  double)n  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  Math.log((  double)n  -  1);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.log((  double)n  -  1);	      int    n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
61	[BUG]  [BUGGY]  int  n  =  Math.log((  double)n  +  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  Math.log((  double)n  +  2);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.log((  double)n  +  2);	      int    n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
62	[BUG]  [BUGGY]  long  n  =  factorials.length  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  long  n  =  factorials.length  -  1;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	long  n  =  factorials.length  -  1;	      long    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
63	[BUG]  [BUGGY]  final  int  n  =  factorials.length  +  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  final  int  n  =  factorials.length  +  1;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  int  n  =  factorials.length  +  1;	      final    int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
64	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n  -  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  Math.pow(10,  n  -  2);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.pow(10,  n  -  2);	      int    n    =    Math.pow(10,    n);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
65	[BUG]  [BUGGY]  int  n  =  Math.pow(10,  n  -  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  Math.pow(10,  n  -  3);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.pow(10,  n  -  3);	      int    n    =    Math.pow(10,    n);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
66	[BUG]  [BUGGY]  int  n  =  factorials.length  +  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  factorials.length  +  1;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  factorials.length  +  1;	      int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
67	[BUG]  [BUGGY]  final  double  n  =  factorials.length;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  final  double  n  =  factorials.length;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  double  n  =  factorials.length;	      final    int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
68	[BUG]  [BUGGY]  double  n  =  this.factorials.length;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  double  n  =  this.factorials.length;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  this.factorials.length;	      double    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
69	[BUG]  [BUGGY]  int  n  =  Math.floor((  double)n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  Math.floor((  double)n);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  Math.floor((  double)n);	      int    n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
70	[BUG]  [BUGGY]  if(n  <  0  ||  factorials.length  <  =  1)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  if(n  <  0  ||  factorials.length  <  =  1)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  0  ||  factorials.length  <  =  1)  {	  if(n    <    0    ||    factorials.length    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
71	[BUG]  [BUGGY]  int  n  =  factorials.length  -  3;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  int  n  =  factorials.length  -  3;  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	int  n  =  factorials.length  -  3;	      int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
72	[BUG]  [BUGGY]  final  double  n  =  factorials.size();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  final  double  n  =  factorials.size();  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	final  double  n  =  factorials.size();	      final    int    n    =    factorials.size();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
73	[BUG]  [BUGGY]  if(n  <  0  ||  n  <  =  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  if(n  <  0  ||  n  <  =  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  <  0  ||  n  <  =  0)  {	  if(n    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
74	[BUG]  [BUGGY]  double  n  =  Math.floor((  double)n);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  double  n  =  Math.floor((  double)n);  [BUGGY]    if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	double  n  =  Math.floor((  double)n);	      double    n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
75	[BUG]  [BUGGY]  if(n  ==  1)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {    [BUGGY]  if(n  ==  1)  {  [BUGGY]    throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	if(n  ==  1)  {	  if(n    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
