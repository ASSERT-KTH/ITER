bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  logSum;  i++)  {  factorials[i]  =  Math.log((  double)n  +  1);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  0;  i  <  logSum;  i++)  {  factorials[i]  =  Math.log((  double)n  +  1);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  0;  i  <  logSum;  i++)  {  factorials[i]  =  Math.log((  double)n  +  1);  }	  for(int    i    =    0;    i    <    logSum;    i++)    {    factorials[i]    =    Math.log((    double)n);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  logSum;  i++)  {  factorials[i]  =  Math.log((  double)n);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  2;  i  <  logSum;  i++)  {  factorials[i]  =  Math.log((  double)n);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  2;  i  <  logSum;  i++)  {  factorials[i]  =  Math.log((  double)n);  }	  for(int    i    =    0;    i    <    logSum;    i++)    {    factorials[i]    =    Math.log((    double)n);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  logSum;  i++)  {  factorials[i]  =  Math.log((  double)n);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  1;  i  <  logSum;  i++)  {  factorials[i]  =  Math.log((  double)n);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  1;  i  <  logSum;  i++)  {  factorials[i]  =  Math.log((  double)n);  }	  for(int    i    =    0;    i    <    logSum;    i++)    {    factorials[i]    =    Math.log((    double)n);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
4	[BUG]  [BUGGY]  int  n  =  logSum.length  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  int  n  =  logSum.length  -  1;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	int  n  =  logSum.length  -  1;	  int    n    =    logSum.length;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
5	[BUG]  [BUGGY]  int  n  =  logSum.length  -  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  int  n  =  logSum.length  -  2;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	int  n  =  logSum.length  -  2;	  int    n    =    logSum.length;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
6	[BUG]  [BUGGY]  int  n  =  logSum.length  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  int  n  =  logSum.length  +  1;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	int  n  =  logSum.length  +  1;	  int    n    =    logSum.length;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
7	[BUG]  [BUGGY]  int  n  =  logSum.length  -  3;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  int  n  =  logSum.length  -  3;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	int  n  =  logSum.length  -  3;	  int    n    =    logSum.length;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  +=  Math.log((  double)n);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  +=  Math.log((  double)n);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  +=  Math.log((  double)n);  }	  for(int    i    =    0;    i    <    logSum;    i++)    {    factorials[i]    +=    Math.log((    double)n);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)n);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  2;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)n);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  2;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)n);  }	  for(int    i    =    0;    i    <    logSum;    i++)    {    factorials[i]    +=    Math.log((    double)n);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)n);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  1;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)n);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  1;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)n);  }	  for(int    i    =    0;    i    <    logSum;    i++)    {    factorials[i]    +=    Math.log((    double)n);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  logSum;  i++)  {  if(factorials[i]  >  EPSILON)  {  throw  new  IllegalArgumentException( "Invalid  number  of  factorials.   ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  0;  i  <  logSum;  i++)  {  if(factorials[i]  >  EPSILON)  {  throw  new  IllegalArgumentException( "Invalid  number  of  factorials.   ");  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  0;  i  <  logSum;  i++)  {  if(factorials[i]  >  EPSILON)  {  throw  new  IllegalArgumentException( "Invalid  number  of  factorials.   ");  }	  for(int    i    =    0;    i    <    n;    i++)    {    if(factorials[i]    >    EPSILON)    {    throw    new    IllegalArgumentException(   "Invalid    number    of    factorials.   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  n;  i++)  {  if(factorials[i]  >  EPSILON)  {  throw  new  IllegalArgumentException( "Invalid  number  of  factorials.   ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  2;  i  <  n;  i++)  {  if(factorials[i]  >  EPSILON)  {  throw  new  IllegalArgumentException( "Invalid  number  of  factorials.   ");  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  2;  i  <  n;  i++)  {  if(factorials[i]  >  EPSILON)  {  throw  new  IllegalArgumentException( "Invalid  number  of  factorials.   ");  }	  for(int    i    =    0;    i    <    n;    i++)    {    if(factorials[i]    >    EPSILON)    {    throw    new    IllegalArgumentException(   "Invalid    number    of    factorials.   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  n;  i++)  {  if(factorials[i]  >  EPSILON)  {  throw  new  IllegalArgumentException( "Invalid  number  of  factorials.   ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  1;  i  <  n;  i++)  {  if(factorials[i]  >  EPSILON)  {  throw  new  IllegalArgumentException( "Invalid  number  of  factorials.   ");  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  1;  i  <  n;  i++)  {  if(factorials[i]  >  EPSILON)  {  throw  new  IllegalArgumentException( "Invalid  number  of  factorials.   ");  }	  for(int    i    =    0;    i    <    n;    i++)    {    if(factorials[i]    >    EPSILON)    {    throw    new    IllegalArgumentException(   "Invalid    number    of    factorials.   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }	  if(logSum    >    EPSILON)    {    for(int    i    =    0;    i    <    n;    i++)    {    factorials[i]    +=    Math.log((    double)i);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  logSum  +=  Math.log((  double)i);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  logSum  +=  Math.log((  double)i);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  0;  i  <  n;  i++)  {  logSum  +=  Math.log((  double)i);  }	  if(logSum    >    EPSILON)    {    for(int    i    =    0;    i    <    n;    i++)    {    factorials[i]    +=    Math.log((    double)i);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
16	[BUG]  [BUGGY]  logSum  -=  Math.log((  double)n  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  -=  Math.log((  double)n  +  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  -=  Math.log((  double)n  +  1);	  logSum    -=    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
17	[BUG]  [BUGGY]  logSum  -=  Math.log((  double)n,  logSum);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  -=  Math.log((  double)n,  logSum);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  -=  Math.log((  double)n,  logSum);	  logSum    -=    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
18	[BUG]  [BUGGY]  logSum  -=  Math.log((  double)n  +  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  -=  Math.log((  double)n  +  2);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  -=  Math.log((  double)n  +  2);	  logSum    -=    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
19	[BUG]  [BUGGY]  return  logSum  +  logSum  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  +  logSum  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  +  logSum  +  1;	  return    logSum    +    n    +    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
20	[BUG]  [BUGGY]  return  logSum  /  n  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /  n  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /  n  +  1;	  return    logSum    +    n    +    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
21	[BUG]  [BUGGY]  return  logSum  +  logSum  +  n  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  +  logSum  +  n  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  +  logSum  +  n  +  1;	  return    logSum    +    n    +    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
22	[BUG]  [BUGGY]  return  logSum  -  logSum  +  3;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  -  logSum  +  3;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  -  logSum  +  3;	  return    logSum    -    logSum    +    1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
23	[BUG]  [BUGGY]  return  logSum  /  logSum  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /  logSum  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /  logSum  +  1;	  return    logSum    -    logSum    +    1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
24	[BUG]  [BUGGY]  logSum  +=  Math.log((  double)n);  n  +=  Math.log((  double)n);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.log((  double)n);  n  +=  Math.log((  double)n);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.log((  double)n);  n  +=  Math.log((  double)n);	  logSum    +=    Math.log((    double)i);    n    +=    Math.log((    double)i);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
25	[BUG]  [BUGGY]  logSum  +=  Math.sqrt((  double)n);  n  +=  Math.log((  double)i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.sqrt((  double)n);  n  +=  Math.log((  double)i);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.sqrt((  double)n);  n  +=  Math.log((  double)i);	  logSum    +=    Math.log((    double)i);    n    +=    Math.log((    double)i);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
26	[BUG]  [BUGGY]  return  logSum  *  2  +  3;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  *  2  +  3;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  *  2  +  3;	  return    logSum    /    2    +    3;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
27	[BUG]  [BUGGY]  return  logSum  /  2,  logSum  +  3;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /  2,  logSum  +  3;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /  2,  logSum  +  3;	  return    logSum    /    2    +    3;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
28	[BUG]  [BUGGY]  return  logSum  /  logSum  +  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /  logSum  +  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /  logSum  +  2;	  return    logSum    -    logSum    +    2;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
29	[BUG]  [BUGGY]  double  logSum  =  Math.log((  double)i  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  logSum  =  Math.log((  double)i  +  2);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  logSum  =  Math.log((  double)i  +  2);	  double    logSum    =    Math.log((    double)i    +    1);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
30	[BUG]  [BUGGY]  return  logSum  /((  double)logSum  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /((  double)logSum  +  1);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /((  double)logSum  +  1);	  return    logSum    -((    double)logSum    +    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
31	[BUG]  [BUGGY]  return  logSum  -((  double)logSum  +  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  -((  double)logSum  +  2);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  -((  double)logSum  +  2);	  return    logSum    -((    double)logSum    +    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
32	[BUG]  [BUGGY]  return  logSum  -((  double)logSum  +  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  -((  double)logSum  +  3);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  -((  double)logSum  +  3);	  return    logSum    -((    double)logSum    +    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
33	[BUG]  [BUGGY]  return  logSum  *  n  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  *  n  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  *  n  +  1;	  return    logSum    *    n;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
34	[BUG]  [BUGGY]  return  logSum  *  n  +  2;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  *  n  +  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  *  n  +  2;	  return    logSum    *    n;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  =  Math.log((  double)i);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  =  Math.log((  double)i);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  =  Math.log((  double)i);  }	  if(logSum    >    EPSILON)    {    for(int    i    =    0;    i    <    n;    i++)    {    factorials[i]    =    Math.log((    double)i);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  logSum;  i++)  {  factorials[i]  =  Math.log((  double)i);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  0;  i  <  logSum;  i++)  {  factorials[i]  =  Math.log((  double)i);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  0;  i  <  logSum;  i++)  {  factorials[i]  =  Math.log((  double)i);  }	  if(logSum    >    EPSILON)    {    for(int    i    =    0;    i    <    n;    i++)    {    factorials[i]    =    Math.log((    double)i);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  =  Math.log((  double)i,  logSum);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  =  Math.log((  double)i,  logSum);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  =  Math.log((  double)i,  logSum);  }	  if(logSum    >    EPSILON)    {    for(int    i    =    0;    i    <    n;    i++)    {    factorials[i]    =    Math.log((    double)i);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
38	[BUG]  [BUGGY]  return  logSum  *((  double)logSum  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  *((  double)logSum  +  1);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  *((  double)logSum  +  1);	  return    logSum    *((    double)logSum);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
39	[BUG]  [BUGGY]  return  logSum  *((  double)logSum  /((  double)logSum);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  *((  double)logSum  /((  double)logSum);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  *((  double)logSum  /((  double)logSum);	  return    logSum    *((    double)logSum);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
40	[BUG]  [BUGGY]  double  logSum  =  Math.log((  double)n  /  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  logSum  =  Math.log((  double)n  /  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  logSum  =  Math.log((  double)n  /  1);	  double    logSum    =    Math.log((    double)n    +    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
41	[BUG]  [BUGGY]  double  logSum  =  Math.log((  double)n  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  logSum  =  Math.log((  double)n  +  2);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  logSum  =  Math.log((  double)n  +  2);	  double    logSum    =    Math.log((    double)n    +    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  2;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  2;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }	  for(int    i    =    0;    i    <    logSum;    i++)    {    factorials[i]    +=    Math.log((    double)i);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
43	[BUG]  [BUGGY]  return  logSum  *  logSum;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  *  logSum;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  *  logSum;	  return    logSum    /    logSum;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
44	[BUG]  [BUGGY]  int  n  =  logSum  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  int  n  =  logSum  +  1;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	int  n  =  logSum  +  1;	  int    n    =    logSum;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
45	[BUG]  [BUGGY]  int  n  =  logSum  +  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  int  n  =  logSum  +  2;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	int  n  =  logSum  +  2;	  int    n    =    logSum;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
46	[BUG]  [BUGGY]  int  n  =  logSum  +  3;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  int  n  =  logSum  +  3;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	int  n  =  logSum  +  3;	  int    n    =    logSum;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
47	[BUG]  [BUGGY]  double  n  =  logSum;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  n  =  logSum;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  n  =  logSum;	  int    n    =    logSum;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
48	[BUG]  [BUGGY]  logSum  +=  Math.cos((  double)n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.cos((  double)n);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.cos((  double)n);	  logSum    +=    Math.cos((    double)i);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
49	[BUG]  [BUGGY]  logSum  -=  Math.cos((  double)i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  -=  Math.cos((  double)i);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  -=  Math.cos((  double)i);	  logSum    +=    Math.cos((    double)i);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
50	[BUG]  [BUGGY]  n  =  Math.log((  double)i,  logSum  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.log((  double)i,  logSum  +  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.log((  double)i,  logSum  +  1);	  n    =    Math.log((    double)i,    logSum);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
51	[BUG]  [BUGGY]  n  =  Math.ceil((  double)i,  logSum);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.ceil((  double)i,  logSum);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.ceil((  double)i,  logSum);	  n    =    Math.log((    double)i,    logSum);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
52	[BUG]  [BUGGY]  n  =  Math.log((  double)i,  logSum  +  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.log((  double)i,  logSum  +  2);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.log((  double)i,  logSum  +  2);	  n    =    Math.log((    double)i,    logSum);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
53	[BUG]  [BUGGY]  n  =  Math.ceil((  double)logSum);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.ceil((  double)logSum);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.ceil((  double)logSum);	  n    =    Math.ceil((    double)i);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
54	[BUG]  [BUGGY]  n  =  Math.ceil((  double)n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.ceil((  double)n);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.ceil((  double)n);	  n    =    Math.ceil((    double)i);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
55	[BUG]  [BUGGY]  return  logSum  /  factorials;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /  factorials;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /  factorials;	  return    logSum    -    factorials;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
56	[BUG]  [BUGGY]  return  logSum  -  logSum  +  factorials;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  -  logSum  +  factorials;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  -  logSum  +  factorials;	  return    logSum    -    factorials;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
57	[BUG]  [BUGGY]  double  logSum  =  Math.log((  double)i,  logSum  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  logSum  =  Math.log((  double)i,  logSum  +  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  logSum  =  Math.log((  double)i,  logSum  +  1);	  double    logSum    =    Math.log((    double)i,    logSum);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
58	[BUG]  [BUGGY]  double  logSum  =  Math.log((  double)i,  n);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  logSum  =  Math.log((  double)i,  n);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  logSum  =  Math.log((  double)i,  n);	  double    logSum    =    Math.log((    double)i,    logSum);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
59	[BUG]  [BUGGY]  double  logSum  =  Math.log((  double)i,  logSum  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  logSum  =  Math.log((  double)i,  logSum  -  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  logSum  =  Math.log((  double)i,  logSum  -  1);	  double    logSum    =    Math.log((    double)i,    logSum);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
60	[BUG]  [BUGGY]  logSum  +=  Math.log((  double)LogSum);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.log((  double)LogSum);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.log((  double)LogSum);	  logSum    +=    Math.log((    double)logSum);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
61	[BUG]  [BUGGY]  logSum  +=  Math.log((  double)logSum  /  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.log((  double)logSum  /  2);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.log((  double)logSum  /  2);	  logSum    +=    Math.log((    double)logSum);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
62	[BUG]  [BUGGY]  logSum  +=  Math.log((  double)n  /  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.log((  double)n  /  2);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.log((  double)n  /  2);	  logSum    +=    Math.log((    double)n    -    2);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
63	[BUG]  [BUGGY]  logSum  +=  Math.log((  double)n  *  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.log((  double)n  *  2);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.log((  double)n  *  2);	  logSum    +=    Math.log((    double)n    -    2);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
64	[BUG]  [BUGGY]  double  n  =  logSum.length;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  n  =  logSum.length;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  n  =  logSum.length;	  double    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
65	[BUG]  [BUGGY]  double  n  =  factorials.length  -  logSum;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  n  =  factorials.length  -  logSum;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  n  =  factorials.length  -  logSum;	  double    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
66	[BUG]  [BUGGY]  double  n  =  logSum  +  factorials.length;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  n  =  logSum  +  factorials.length;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  n  =  logSum  +  factorials.length;	  double    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
67	[BUG]  [BUGGY]  n  =  Math.log((  double)i  *  logSum);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.log((  double)i  *  logSum);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.log((  double)i  *  logSum);	  n    =    Math.log((    double)i    +    logSum);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
68	[BUG]  [BUGGY]  n  =  Math.log((  double)i  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.log((  double)i  +  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.log((  double)i  +  1);	  n    =    Math.log((    double)i    +    logSum);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
69	[BUG]  [BUGGY]  n  =  Math.log((  double)i  +  logSum  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.log((  double)i  +  logSum  +  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.log((  double)i  +  logSum  +  1);	  n    =    Math.log((    double)i    +    logSum);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
70	[BUG]  [BUGGY]  n  =  Math.floor((  double)logSum);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.floor((  double)logSum);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.floor((  double)logSum);	  n    =    Math.floor((    double)i);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
71	[BUG]  [BUGGY]  return  logSum  /((  double)n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /((  double)n);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /((  double)n);	  return    logSum    /((    double)i);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
72	[BUG]  [BUGGY]  return  logSum  *((  double)i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  *((  double)i);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  *((  double)i);	  return    logSum    /((    double)i);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
73	[BUG]  [BUGGY]  return  logSum  /((  double)i  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /((  double)i  +  1);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /((  double)i  +  1);	  return    logSum    /((    double)i);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
74	[BUG]  [BUGGY]  return  logSum  *  2  +  logSum;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  *  2  +  logSum;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  *  2  +  logSum;	  return    logSum    /    2    +    logSum;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
75	[BUG]  [BUGGY]  return  logSum  /  2  *  logSum;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /  2  *  logSum;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /  2  *  logSum;	  return    logSum    /    2    +    logSum;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
76	[BUG]  [BUGGY]  return  logSum  /  2  +  logSum.doubleValue();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /  2  +  logSum.doubleValue();  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /  2  +  logSum.doubleValue();	  return    logSum    /    2    +    logSum;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
77	[BUG]  [BUGGY]  return  logSum  -((  double)n  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  -((  double)n  +  1);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  -((  double)n  +  1);	  return    logSum    -((    double)i    +    1);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
78	[BUG]  [BUGGY]  return  logSum  -((  double)i  +  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  -((  double)i  +  2);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  -((  double)i  +  2);	  return    logSum    -((    double)i    +    1);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
79	[BUG]  [BUGGY]  int  n  =  this.factorials.length  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  int  n  =  this.factorials.length  -  1;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	int  n  =  this.factorials.length  -  1;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
80	[BUG]  [BUGGY]  int  n  =  this.factorials.length  -  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  int  n  =  this.factorials.length  -  2;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	int  n  =  this.factorials.length  -  2;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
81	[BUG]  [BUGGY]  int  n  =  this.factorials.length  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  int  n  =  this.factorials.length  +  1;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	int  n  =  this.factorials.length  +  1;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
82	[BUG]  [BUGGY]  int  n  =  this.factorials.length  -  logSum;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  int  n  =  this.factorials.length  -  logSum;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	int  n  =  this.factorials.length  -  logSum;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
83	[BUG]  [BUGGY]  int  n  =  logSum  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  int  n  =  logSum  -  1;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	int  n  =  logSum  -  1;	  int    n    =    factorials.length    -    1;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
84	[BUG]  [BUGGY]  int  n  =  factorials.length  -  1  +  logSum;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  int  n  =  factorials.length  -  1  +  logSum;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	int  n  =  factorials.length  -  1  +  logSum;	  int    n    =    factorials.length    -    1;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
85	[BUG]  [BUGGY]  double  n  =  factorials.length  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  n  =  factorials.length  -  1;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  n  =  factorials.length  -  1;	  int    n    =    factorials.length    -    1;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
86	[BUG]  [BUGGY]  return  logSum  /  factorials.length;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /  factorials.length;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /  factorials.length;	  return    logSum    -    factorials.length;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
87	[BUG]  [BUGGY]  return  logSum  -  factorials.length  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  -  factorials.length  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  -  factorials.length  +  1;	  return    logSum    -    factorials.length;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
88	[BUG]  [BUGGY]  return  logSum  -  factorials.length  -  logSum;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  -  factorials.length  -  logSum;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  -  factorials.length  -  logSum;	  return    logSum    -    factorials.length;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
89	[BUG]  [BUGGY]  return  logSum  *  2  +  4;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  *  2  +  4;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  *  2  +  4;	  return    logSum    /    2    +    4;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
90	[BUG]  [BUGGY]  return  logSum  /  2,  logSum  +  4;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /  2,  logSum  +  4;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /  2,  logSum  +  4;	  return    logSum    /    2    +    4;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
91	[BUG]  [BUGGY]  logSum  +=  Math.sqrt((  double)n);  n  +=  Math.log((  double)n);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.sqrt((  double)n);  n  +=  Math.log((  double)n);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.sqrt((  double)n);  n  +=  Math.log((  double)n);	  logSum    +=    Math.log((    double)i);    n    +=    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
92	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)j);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  0;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)j);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  0;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)j);  }	  if(logSum    >    EPSILON)    {    for(int    i    =    0;    i    <    logSum;    i++)    {    factorials[i]    +=    Math.log((    double)i);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
93	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  logSum;  i++)  {  factororials[i]  +=  Math.log((  double)i);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  0;  i  <  logSum;  i++)  {  factororials[i]  +=  Math.log((  double)i);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  0;  i  <  logSum;  i++)  {  factororials[i]  +=  Math.log((  double)i);  }	  if(logSum    >    EPSILON)    {    for(int    i    =    0;    i    <    logSum;    i++)    {    factorials[i]    +=    Math.log((    double)i);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
94	[BUG]  [BUGGY]  double  logSum  =  Math.log((  double)n  -  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  logSum  =  Math.log((  double)n  -  2);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  logSum  =  Math.log((  double)n  -  2);	  double    logSum    =    Math.log((    double)n    -    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
95	[BUG]  [BUGGY]  double  logSum  =  Math.sqrt((  double)n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  logSum  =  Math.sqrt((  double)n);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  logSum  =  Math.sqrt((  double)n);	  double    logSum    =    Math.sqrt((    double)i);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
96	[BUG]  [BUGGY]  double  logSum  =  Math.sqrt((  double)logSum);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  logSum  =  Math.sqrt((  double)logSum);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  logSum  =  Math.sqrt((  double)logSum);	  double    logSum    =    Math.sqrt((    double)i);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
97	[BUG]  [BUGGY]  double  logSum  =  Math.sqrt((  double)i,  logSum);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  logSum  =  Math.sqrt((  double)i,  logSum);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  logSum  =  Math.sqrt((  double)i,  logSum);	  double    logSum    =    Math.sqrt((    double)i);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  i++)  {  logSum  +=  Math.log((  double)i);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  0;  i  <  2;  i++)  {  logSum  +=  Math.log((  double)i);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  0;  i  <  2;  i++)  {  logSum  +=  Math.log((  double)i);  }	  if(logSum    >    EPSILON)    {    for(int    i    =    0;    i    <    n;    i++)    {    logSum    +=    Math.log((    double)i);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  logSum  +=  Math.log((  double)j);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  logSum  +=  Math.log((  double)j);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  0;  i  <  n;  i++)  {  logSum  +=  Math.log((  double)j);  }	  if(logSum    >    EPSILON)    {    for(int    i    =    0;    i    <    n;    i++)    {    logSum    +=    Math.log((    double)i);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
100	[BUG]  [BUGGY]  logSum  +=  Math.log((  double)n  /  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.log((  double)n  /  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.log((  double)n  /  1);	  logSum    +=    Math.log((    double)n    -    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
101	[BUG]  [BUGGY]  double  logSum  =  Math.log((  double)n,  logSum  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  logSum  =  Math.log((  double)n,  logSum  +  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  logSum  =  Math.log((  double)n,  logSum  +  1);	  double    logSum    =    Math.log((    double)n,    logSum);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
102	[BUG]  [BUGGY]  double  logSum  =  Math.log((  double)n,  logSum  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  logSum  =  Math.log((  double)n,  logSum  -  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  logSum  =  Math.log((  double)n,  logSum  -  1);	  double    logSum    =    Math.log((    double)n,    logSum);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
103	[BUG]  [BUGGY]  double  logSum  =  Math.log((  double)n  +  1,  logSum);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  logSum  =  Math.log((  double)n  +  1,  logSum);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  logSum  =  Math.log((  double)n  +  1,  logSum);	  double    logSum    =    Math.log((    double)n,    logSum);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
104	[BUG]  [BUGGY]  logSum  +=  Math.pow((  double)i,  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.pow((  double)i,  n);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.pow((  double)i,  n);	  logSum    +=    Math.pow((    double)i);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
105	[BUG]  [BUGGY]  logSum  +=  Math.log((  double)i);  n  +=  Math.ceil((  double)n);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.log((  double)i);  n  +=  Math.ceil((  double)n);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.log((  double)i);  n  +=  Math.ceil((  double)n);	  logSum    +=    Math.log((    double)n);    n    +=    Math.ceil((    double)i);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
106	[BUG]  [BUGGY]  logSum  +=  Math.ceil((  double)n);  n  +=  Math.ceil((  double)i);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.ceil((  double)n);  n  +=  Math.ceil((  double)i);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.ceil((  double)n);  n  +=  Math.ceil((  double)i);	  logSum    +=    Math.log((    double)n);    n    +=    Math.ceil((    double)i);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
107	[BUG]  [BUGGY]  logSum  +=  Math.ceil((  double)i);  n  +=  Math.ceil((  double)n);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.ceil((  double)i);  n  +=  Math.ceil((  double)n);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.ceil((  double)i);  n  +=  Math.ceil((  double)n);	  logSum    +=    Math.log((    double)n);    n    +=    Math.ceil((    double)i);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
108	[BUG]  [BUGGY]  logSum  +=  Math.pow((  double)n  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.pow((  double)n  -  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.pow((  double)n  -  1);	  logSum    +=    Math.pow((    double)n);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
109	[BUG]  [BUGGY]  logSum  +=  Math.pow((  double)n,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.pow((  double)n,  0);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.pow((  double)n,  0);	  logSum    +=    Math.pow((    double)n);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
110	[BUG]  [BUGGY]  logSum  +=  Math.pow((  double)n  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.pow((  double)n  +  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.pow((  double)n  +  1);	  logSum    +=    Math.pow((    double)n);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
111	[BUG]  [BUGGY]  logSum  +=  Math.pow(10,  2);  n  +=  Math.log((  double)i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.pow(10,  2);  n  +=  Math.log((  double)i);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.pow(10,  2);  n  +=  Math.log((  double)i);	  logSum    +=    Math.pow(10,    n);    n    +=    Math.log((    double)i);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
112	[BUG]  [BUGGY]  logSum  -=  Math.pow(10,  n);  n  +=  Math.log((  double)i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  -=  Math.pow(10,  n);  n  +=  Math.log((  double)i);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  -=  Math.pow(10,  n);  n  +=  Math.log((  double)i);	  logSum    +=    Math.pow(10,    n);    n    +=    Math.log((    double)i);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
113	[BUG]  [BUGGY]  n  +=  Math.log((  double)i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  +=  Math.log((  double)i);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  +=  Math.log((  double)i);	  logSum    +=    Math.pow(10,    n);    n    +=    Math.log((    double)i);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
114	[BUG]  [BUGGY]  return  logSum  *  2  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  *  2  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  *  2  +  1;	  return    logSum    *    2;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
115	[BUG]  [BUGGY]  return  logSum  *  2  +  n;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  *  2  +  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  *  2  +  n;	  return    logSum    *    2;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
116	[BUG]  [BUGGY]  logSum  +=  Math.cos((  double)i);  n  +=  Math.log((  double)n);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.cos((  double)i);  n  +=  Math.log((  double)n);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.cos((  double)i);  n  +=  Math.log((  double)n);	  logSum    +=    Math.cos((    double)n);    n    +=    Math.log((    double)i);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
117	[BUG]  [BUGGY]  logSum  +=  Math.cos((  double)n);  n  +=  Math.ceil((  double)i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.cos((  double)n);  n  +=  Math.ceil((  double)i);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.cos((  double)n);  n  +=  Math.ceil((  double)i);	  logSum    +=    Math.cos((    double)n);    n    +=    Math.log((    double)i);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
118	[BUG]  [BUGGY]  return  logSum  /  2  *  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /  2  *  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /  2  *  1;	  return    logSum    /    2    +    1;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
119	[BUG]  [BUGGY]  int  n  =  logSum  -  factorials.length;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  int  n  =  logSum  -  factorials.length;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	int  n  =  logSum  -  factorials.length;	  int    n    =    factorials.length    -    logSum;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
120	[BUG]  [BUGGY]  int  n  =  logSum.length  -  factorials.length;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  int  n  =  logSum.length  -  factorials.length;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	int  n  =  logSum.length  -  factorials.length;	  int    n    =    factorials.length    -    logSum;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
121	[BUG]  [BUGGY]  int  n  =  factorials.length  -  logSum  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  int  n  =  factorials.length  -  logSum  +  1;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	int  n  =  factorials.length  -  logSum  +  1;	  int    n    =    factorials.length    -    logSum;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
122	[BUG]  [BUGGY]  n  =  Math.rint((  double)n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.rint((  double)n);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.rint((  double)n);	  n    =    Math.rint((    double)i);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
123	[BUG]  [BUGGY]  n  =  Math.rint((  double)logSum);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.rint((  double)logSum);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.rint((  double)logSum);	  n    =    Math.rint((    double)i);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
124	[BUG]  [BUGGY]  n  =  Math.rint((  double)i,  logSum);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.rint((  double)i,  logSum);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.rint((  double)i,  logSum);	  n    =    Math.rint((    double)i);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
125	[BUG]  [BUGGY]  return  logSum  +  n  +  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  +  n  +  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  +  n  +  2;	  return    logSum    +    n    +    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
126	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  if(factorials[i]  ==  EPSILON)  {  throw  new  IllegalArgumentException( "Invalid  number  of  factorials.   ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  if(factorials[i]  ==  EPSILON)  {  throw  new  IllegalArgumentException( "Invalid  number  of  factorials.   ");  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  0;  i  <  n;  i++)  {  if(factorials[i]  ==  EPSILON)  {  throw  new  IllegalArgumentException( "Invalid  number  of  factorials.   ");  }	  for(int    i    =    0;    i    <    n;    i++)    {    if(factorials[i]    >    EPSILON)    {    throw    new    IllegalArgumentException(   "Invalid    number    of    factorials.   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
127	[BUG]  [BUGGY]  return  logSum  /  3  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /  3  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /  3  +  1;	  return    logSum    /    3;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
128	[BUG]  [BUGGY]  nisipToInt(logSum)  {  for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  nisipToInt(logSum)  {  for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	nisipToInt(logSum)  {  for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }	  if(logSum    >    EPSILON)    {    for(int    i    =    0;    i    <    n;    i++)    {    factorials[i]    +=    Math.log((    double)i);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
129	[BUG]  [BUGGY]  n  =  Math.log((  double)i  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.log((  double)i  +  2);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.log((  double)i  +  2);	  n    =    Math.log((    double)i    +    logSum);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
130	[BUG]  [BUGGY]  logSum  +=  Math.pow(10,  3);  n  +=  Math.log((  double)i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.pow(10,  3);  n  +=  Math.log((  double)i);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.pow(10,  3);  n  +=  Math.log((  double)i);	  logSum    +=    Math.pow(10,    n);    n    +=    Math.log((    double)i);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
131	[BUG]  [BUGGY]  int  n  =  logSum  +  4;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  int  n  =  logSum  +  4;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	int  n  =  logSum  +  4;	  int    n    =    logSum;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
132	[BUG]  [BUGGY]  n  =  Math.log((  double)i,  logSum  +  3);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.log((  double)i,  logSum  +  3);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.log((  double)i,  logSum  +  3);	  n    =    Math.log((    double)i,    logSum);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
133	[BUG]  [BUGGY]  double  logSum  =  Math.log((  double)i  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  logSum  =  Math.log((  double)i  -  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  logSum  =  Math.log((  double)i  -  1);	  double    logSum    =    Math.log((    double)n    -    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
134	[BUG]  [BUGGY]  logSum  +=  Math.log((  double)i  -  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.log((  double)i  -  2);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.log((  double)i  -  2);	  logSum    +=    Math.log((    double)n    -    2);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
135	[BUG]  [BUGGY]  logSum  +=  Math.pow(10,  n);  n  +=  Math.log((  double)n);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.pow(10,  n);  n  +=  Math.log((  double)n);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.pow(10,  n);  n  +=  Math.log((  double)n);	  logSum    +=    Math.log((    double)i);    n    +=    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
136	[BUG]  [BUGGY]  return  logSum  *((  double)LogSum);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  *((  double)LogSum);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  *((  double)LogSum);	  return    logSum    *((    double)logSum);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
137	[BUG]  [BUGGY]  logSum  +=  Math.cos((  double)i);  n  +=  Math.log((  double)i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.cos((  double)i);  n  +=  Math.log((  double)i);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.cos((  double)i);  n  +=  Math.log((  double)i);	  logSum    +=    Math.log((    double)i);    n    +=    Math.log((    double)i);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
138	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  1;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  1;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }	  for(int    i    =    0;    i    <    logSum;    i++)    {    factorials[i]    +=    Math.log((    double)i);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
139	[BUG]  [BUGGY]  double  logSum  =  Math.log((  double)i  /  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  logSum  =  Math.log((  double)i  /  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  logSum  =  Math.log((  double)i  /  1);	  double    logSum    =    Math.log((    double)i    +    1);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
140	[BUG]  [BUGGY]  logSum  +=  Math.pow((  double)i  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.pow((  double)i  -  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.pow((  double)i  -  1);	  logSum    +=    Math.pow((    double)i);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
141	[BUG]  [BUGGY]  logSum  -=  Math.pow((  double)i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  -=  Math.pow((  double)i);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  -=  Math.pow((  double)i);	  logSum    +=    Math.pow((    double)i);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
142	[BUG]  [BUGGY]  return  logSum  -  factorials.length  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  -  factorials.length  -  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  -  factorials.length  -  1;	  return    logSum    -    factorials.length;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
143	[BUG]  [BUGGY]  return  logSum  /  2  +  this.logSum;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /  2  +  this.logSum;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /  2  +  this.logSum;	  return    logSum    /    2    +    logSum;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
144	[BUG]  [BUGGY]  double  n  =  factorials.length  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  n  =  factorials.length  +  1;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  n  =  factorials.length  +  1;	  double    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
145	[BUG]  [BUGGY]  return  logSum  /  2.0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /  2.0;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /  2.0;	  return    logSum    /    2    +    4;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
146	[BUG]  [BUGGY]  return  logSum  -  logSum  *  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  -  logSum  *  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  -  logSum  *  2;	  return    logSum    -    logSum    +    2;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
147	[BUG]  [BUGGY]  logSum  +=  Math.cos((  double)i  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.cos((  double)i  -  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.cos((  double)i  -  1);	  logSum    +=    Math.cos((    double)i);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
148	[BUG]  [BUGGY]  int  n  =  factorials.length  /  logSum;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  int  n  =  factorials.length  /  logSum;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	int  n  =  factorials.length  /  logSum;	  int    n    =    factorials.length    -    logSum;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
149	[BUG]  [BUGGY]  int  n  =  factorials.length  -  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  int  n  =  factorials.length  -  2;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	int  n  =  factorials.length  -  2;	  int    n    =    factorials.length    -    1;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
150	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  =  Math.log((  double)n);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  =  Math.log((  double)n);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  =  Math.log((  double)n);  }	  for(int    i    =    0;    i    <    logSum;    i++)    {    factorials[i]    =    Math.log((    double)n);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
151	[BUG]  [BUGGY]  return  logSum  *  3;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  *  3;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  *  3;	  return    logSum    *    2;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
152	[BUG]  [BUGGY]  n  =  Math.ceil((  double)i  +  logSum);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.ceil((  double)i  +  logSum);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.ceil((  double)i  +  logSum);	  n    =    Math.ceil((    double)i);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
153	[BUG]  [BUGGY]  n  =  Math.ceil((  double)i  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.ceil((  double)i  +  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.ceil((  double)i  +  1);	  n    =    Math.ceil((    double)i);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
154	[BUG]  [BUGGY]  double  logSum  =  Math.log((  double)n  -  1,  logSum);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  logSum  =  Math.log((  double)n  -  1,  logSum);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  logSum  =  Math.log((  double)n  -  1,  logSum);	  double    logSum    =    Math.log((    double)n,    logSum);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
155	[BUG]  [BUGGY]  return  logSum  -((  double)i  *  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  -((  double)i  *  1);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  -((  double)i  *  1);	  return    logSum    -((    double)i    +    1);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
156	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  N;  i++)  {  logSum  +=  Math.log((  double)i);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  0;  i  <  N;  i++)  {  logSum  +=  Math.log((  double)i);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  0;  i  <  N;  i++)  {  logSum  +=  Math.log((  double)i);  }	  if(logSum    >    EPSILON)    {    for(int    i    =    0;    i    <    n;    i++)    {    logSum    +=    Math.log((    double)i);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
157	[BUG]  [BUGGY]  logSum  +=  Math.cos((  double)n  -  1);  n  +=  Math.log((  double)i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.cos((  double)n  -  1);  n  +=  Math.log((  double)i);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.cos((  double)n  -  1);  n  +=  Math.log((  double)i);	  logSum    +=    Math.cos((    double)n);    n    +=    Math.log((    double)i);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
158	[BUG]  [BUGGY]  logSum  -=  Math.cos((  double)n);  n  +=  Math.log((  double)i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  -=  Math.cos((  double)n);  n  +=  Math.log((  double)i);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  -=  Math.cos((  double)n);  n  +=  Math.log((  double)i);	  logSum    +=    Math.cos((    double)n);    n    +=    Math.log((    double)i);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
159	[BUG]  [BUGGY]  n  =  Math.floor((  double)i  +  logSum);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.floor((  double)i  +  logSum);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.floor((  double)i  +  logSum);	  n    =    Math.floor((    double)i);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
160	[BUG]  [BUGGY]  n  =  Math.floor((  double)i,  logSum);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.floor((  double)i,  logSum);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.floor((  double)i,  logSum);	  n    =    Math.floor((    double)i);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
161	[BUG]  [BUGGY]  if(logSum  >  EPSILON)  {  for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  =  Math.log((  double)i  +  1);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  if(logSum  >  EPSILON)  {  for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  =  Math.log((  double)i  +  1);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	if(logSum  >  EPSILON)  {  for(int  i  =  0;  i  <  n;  i++)  {  factorials[i]  =  Math.log((  double)i  +  1);  }	  if(logSum    >    EPSILON)    {    for(int    i    =    0;    i    <    n;    i++)    {    factorials[i]    =    Math.log((    double)i);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
162	[BUG]  [BUGGY]  return  logSum  /  2,  logSum  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /  2,  logSum  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /  2,  logSum  +  1;	  return    logSum    /    2    +    1;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
163	[BUG]  [BUGGY]  return  logSum  *  Factorials.TWO_PI;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  *  Factorials.TWO_PI;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  *  Factorials.TWO_PI;	  return    logSum    *    n;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
164	[BUG]  [BUGGY]  logSum  +=  Math.pow((  double)logSum);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.pow((  double)logSum);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.pow((  double)logSum);	  logSum    +=    Math.log((    double)logSum);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
165	[BUG]  [BUGGY]  logSum  +=  Math.pow((  double)n,  i);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.pow((  double)n,  i);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.pow((  double)n,  i);	  logSum    +=    Math.pow((    double)n);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
166	[BUG]  [BUGGY]  return  logSum  *  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  *  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  *  1;	  return    logSum    /    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
167	[BUG]  [BUGGY]  n  =  Math.rint((  double)i  +  logSum);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.rint((  double)i  +  logSum);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.rint((  double)i  +  logSum);	  n    =    Math.rint((    double)i);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
168	[BUG]  [BUGGY]  n  =  Math.rint((  double)i  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.rint((  double)i  +  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.rint((  double)i  +  1);	  n    =    Math.rint((    double)i);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
169	[BUG]  [BUGGY]  return  logSum  -((  double)logSum  *  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  -((  double)logSum  *  1);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  -((  double)logSum  *  1);	  return    logSum    -((    double)logSum    +    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
170	[BUG]  [BUGGY]  logSum  +=  Math.log((  double)i  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.log((  double)i  -  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.log((  double)i  -  1);	  logSum    +=    Math.log((    double)n    -    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
171	[BUG]  [BUGGY]  double  logSum  =  Math.log((  double)n  *  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  logSum  =  Math.log((  double)n  *  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  logSum  =  Math.log((  double)n  *  1);	  double    logSum    =    Math.log((    double)n    +    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
172	[BUG]  [BUGGY]  logSum  -=  Math.log((  double)i);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  -=  Math.log((  double)i);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  -=  Math.log((  double)i);	  logSum    -=    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
173	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  =  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  for(int  i  =  0;  i  <  =  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	for(int  i  =  0;  i  <  =  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }	  if(logSum    >    EPSILON)    {    for(int    i    =    0;    i    <    =    logSum;    i++)    {    factorials[i]    +=    Math.log((    double)i);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
174	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  For(int  i  =  0;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	For(int  i  =  0;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }	  if(logSum    >    EPSILON)    {    for(int    i    =    0;    i    <    =    logSum;    i++)    {    factorials[i]    +=    Math.log((    double)i);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
175	[BUG]  [BUGGY]  return  logSum  *  logSum  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  *  logSum  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  *  logSum  +  1;	  return    logSum    -    logSum    +    1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
176	[BUG]  [BUGGY]  return  logSum  /  TWO_PI;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /  TWO_PI;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /  TWO_PI;	  return    logSum    /    n;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
177	[BUG]  [BUGGY]  logSum  +=  Math.log((  double)i);  n  +=  Math.log((  double)n  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.log((  double)i);  n  +=  Math.log((  double)n  +  1);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.log((  double)i);  n  +=  Math.log((  double)n  +  1);	  logSum    +=    Math.log((    double)i);    n    +=    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
178	[BUG]  [BUGGY]  n  =  Math.log((  double)i  +  1)/  logSum);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.log((  double)i  +  1)/  logSum);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.log((  double)i  +  1)/  logSum);	  n    =    Math.log((    double)i    +    logSum);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
179	[BUG]  [BUGGY]  return  logSum  /  3  +  4;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /  3  +  4;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /  3  +  4;	  return    logSum    /    2    +    4;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
180	[BUG]  [BUGGY]  double  n  =  this.factorials.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  double  n  =  this.factorials.length;  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	double  n  =  this.factorials.length;	  int    n    =    this.factorials.length;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
181	[BUG]  [BUGGY]  return  logSum  /((  double)logSum).doubleValue();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  /((  double)logSum).doubleValue();  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  /((  double)logSum).doubleValue();	  return    logSum    /((    double)logSum);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
182	[BUG]  [BUGGY]  nisipToInt(logSum)  {  for(int  i  =  0;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  nisipToInt(logSum)  {  for(int  i  =  0;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	nisipToInt(logSum)  {  for(int  i  =  0;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }	  if(logSum    >    EPSILON)    {    for(int    i    =    0;    i    <    =    logSum;    i++)    {    factorials[i]    +=    Math.log((    double)i);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
183	[BUG]  [BUGGY]  n  =  Math.log((  double)i  +  1,  logSum);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  n  =  Math.log((  double)i  +  1,  logSum);  [BUGGY]      return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	n  =  Math.log((  double)i  +  1,  logSum);	  n    =    Math.log((    double)i,    logSum);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
184	[BUG]  [BUGGY]  logSum  -=  Math.log((  double)logSum);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  -=  Math.log((  double)logSum);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  -=  Math.log((  double)logSum);	  logSum    +=    Math.log((    double)logSum);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
185	[BUG]  [BUGGY]  logSum  +=  Math.cos((  double)logSum);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  logSum  +=  Math.cos((  double)logSum);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	logSum  +=  Math.cos((  double)logSum);	  logSum    +=    Math.log((    double)logSum);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
186	[BUG]  [BUGGY]  if(logSum  >  EPSILON  ||  logSum  <  =  EPSILON)  {  for(int  i  =  0;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  if(logSum  >  EPSILON  ||  logSum  <  =  EPSILON)  {  for(int  i  =  0;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	if(logSum  >  EPSILON  ||  logSum  <  =  EPSILON)  {  for(int  i  =  0;  i  <  logSum;  i++)  {  factorials[i]  +=  Math.log((  double)i);  }	  if(logSum    >    EPSILON)    {    for(int    i    =    0;    i    <    logSum;    i++)    {    factorials[i]    +=    Math.log((    double)i);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
187	[BUG]  [BUGGY]  return  logSum  *  TWO_PI;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  *  TWO_PI;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  *  TWO_PI;	  return    logSum    *    n;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
188	[BUG]  [BUGGY]  return  logSum  *  2  +  Math.log((  double)logSum);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  *  2  +  Math.log((  double)logSum);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  *  2  +  Math.log((  double)logSum);	  return    logSum    *    2;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
189	[BUG]  [BUGGY]  return  logSum  *  2  +((  double)logSum);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(     "must  have  n  >  0  for  n!     ");  }  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }      [BUGGY]  return  logSum  *  2  +((  double)logSum);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	return  logSum  *  2  +((  double)logSum);	  return    logSum    *    2;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
