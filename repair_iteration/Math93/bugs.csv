bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return factorials[n]; [FE] AssertionFailedError [CONTEXT] public static long factorial(final int n) { long result = Math.round(factorialDouble(n)); if (result == Long.MAX_VALUE) { throw new ArithmeticException( "factorial value is too large to fit in a long"); } [BUGGY] return factorials[n]; [BUGGY] } [CLASS] MathUtils [METHOD] factorial [RETURN_TYPE] long  final int n [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB short NS PS ZS int n long result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static long factorial(final int n) { long result = Math.round(factorialDouble(n)); if (result == Long.MAX_VALUE) { throw new ArithmeticException( "factorial value is too large to fit in a long"); } [BUGGY] [BUGGY] return factorials[n]; } [CLASS] MathUtils [METHOD] factorial [RETURN_TYPE] long  final int n [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB short NS PS ZS int n long result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	add	
3	[BUG] [BUGGY] long result = Math.round(factorialDouble(n)); [FE] AssertionFailedError [CONTEXT] public static long factorial(final int n) { [BUGGY] long result = Math.round(factorialDouble(n)); [BUGGY] if (result == Long.MAX_VALUE) { throw new ArithmeticException( "factorial value is too large to fit in a long"); } return factorials[n]; } [CLASS] MathUtils [METHOD] factorial [RETURN_TYPE] long  final int n [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB short NS PS ZS int n long result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static long factorial(final int n) { [BUGGY] [BUGGY] long result = Math.round(factorialDouble(n)); if (result == Long.MAX_VALUE) { throw new ArithmeticException( "factorial value is too large to fit in a long"); } return factorials[n]; } [CLASS] MathUtils [METHOD] factorial [RETURN_TYPE] long  final int n [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB short NS PS ZS int n long result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	345	345	1	add	
5	[BUG] [BUGGY] if (result == Long.MAX_VALUE) { [FE] AssertionFailedError [CONTEXT] public static long factorial(final int n) { long result = Math.round(factorialDouble(n)); [BUGGY] if (result == Long.MAX_VALUE) { [BUGGY] throw new ArithmeticException( "factorial value is too large to fit in a long"); } return factorials[n]; } [CLASS] MathUtils [METHOD] factorial [RETURN_TYPE] long  final int n [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB short NS PS ZS int n long result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static long factorial(final int n) { long result = Math.round(factorialDouble(n)); [BUGGY] [BUGGY] if (result == Long.MAX_VALUE) { throw new ArithmeticException( "factorial value is too large to fit in a long"); } return factorials[n]; } [CLASS] MathUtils [METHOD] factorial [RETURN_TYPE] long  final int n [VARIABLES] boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB short NS PS ZS int n long result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	346	346	1	add	
7	[BUG] [BUGGY] if (n < 0) { [FE] AssertionFailedError [CONTEXT] public static double factorialDouble(final int n) { [BUGGY] if (n < 0) { [BUGGY] throw new IllegalArgumentException("must have n >= 0 for n!"); } return Math.floor(Math.exp(factorialLog(n)) + 0.5); } [CLASS] MathUtils [METHOD] factorialDouble [RETURN_TYPE] double  final int n [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static double factorialDouble(final int n) { [BUGGY] [BUGGY] if (n < 0) { throw new IllegalArgumentException("must have n >= 0 for n!"); } return Math.floor(Math.exp(factorialLog(n)) + 0.5); } [CLASS] MathUtils [METHOD] factorialDouble [RETURN_TYPE] double  final int n [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	374	374	1	add	
9	[BUG] [BUGGY] return Math.floor(Math.exp(factorialLog(n)) + 0.5); [FE] AssertionFailedError [CONTEXT] public static double factorialDouble(final int n) { if (n < 0) { throw new IllegalArgumentException("must have n >= 0 for n!"); } [BUGGY] return Math.floor(Math.exp(factorialLog(n)) + 0.5); [BUGGY] } [CLASS] MathUtils [METHOD] factorialDouble [RETURN_TYPE] double  final int n [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static double factorialDouble(final int n) { if (n < 0) { throw new IllegalArgumentException("must have n >= 0 for n!"); } [BUGGY] [BUGGY] return Math.floor(Math.exp(factorialLog(n)) + 0.5); } [CLASS] MathUtils [METHOD] factorialDouble [RETURN_TYPE] double  final int n [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	377	377	1	add	
11	[BUG] [BUGGY] if (n < 0) { [FE] AssertionFailedError [CONTEXT] public static double factorialLog(final int n) { [BUGGY] if (n < 0) { [BUGGY] throw new IllegalArgumentException("must have n > 0 for n!"); } double logSum = 0; for (int i = 2; i <= n; i++) { logSum += Math.log((double)i); } return logSum; } [CLASS] MathUtils [METHOD] factorialLog [RETURN_TYPE] double  final int n [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int i n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static double factorialLog(final int n) { [BUGGY] [BUGGY] if (n < 0) { throw new IllegalArgumentException("must have n > 0 for n!"); } double logSum = 0; for (int i = 2; i <= n; i++) { logSum += Math.log((double)i); } return logSum; } [CLASS] MathUtils [METHOD] factorialLog [RETURN_TYPE] double  final int n [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int i n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	394	394	1	add	
13	[BUG] [BUGGY] double logSum = 0; [FE] AssertionFailedError [CONTEXT] public static double factorialLog(final int n) { if (n < 0) { throw new IllegalArgumentException("must have n > 0 for n!"); } [BUGGY] double logSum = 0; [BUGGY] for (int i = 2; i <= n; i++) { logSum += Math.log((double)i); } return logSum; } [CLASS] MathUtils [METHOD] factorialLog [RETURN_TYPE] double  final int n [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int i n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static double factorialLog(final int n) { if (n < 0) { throw new IllegalArgumentException("must have n > 0 for n!"); } [BUGGY] [BUGGY] double logSum = 0; for (int i = 2; i <= n; i++) { logSum += Math.log((double)i); } return logSum; } [CLASS] MathUtils [METHOD] factorialLog [RETURN_TYPE] double  final int n [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int i n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	add	
15	[BUG] [BUGGY] for (int i = 2; i <= n; i++) { [FE] AssertionFailedError [CONTEXT] public static double factorialLog(final int n) { if (n < 0) { throw new IllegalArgumentException("must have n > 0 for n!"); } double logSum = 0; [BUGGY] for (int i = 2; i <= n; i++) { [BUGGY] logSum += Math.log((double)i); } return logSum; } [CLASS] MathUtils [METHOD] factorialLog [RETURN_TYPE] double  final int n [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int i n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	398	398	1	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static double factorialLog(final int n) { if (n < 0) { throw new IllegalArgumentException("must have n > 0 for n!"); } double logSum = 0; [BUGGY] [BUGGY] for (int i = 2; i <= n; i++) { logSum += Math.log((double)i); } return logSum; } [CLASS] MathUtils [METHOD] factorialLog [RETURN_TYPE] double  final int n [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int i n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	398	398	1	add	
17	[BUG] [BUGGY] logSum += Math.log((double)i); [FE] AssertionFailedError [CONTEXT] public static double factorialLog(final int n) { if (n < 0) { throw new IllegalArgumentException("must have n > 0 for n!"); } double logSum = 0; for (int i = 2; i <= n; i++) { [BUGGY] logSum += Math.log((double)i); [BUGGY] } return logSum; } [CLASS] MathUtils [METHOD] factorialLog [RETURN_TYPE] double  final int n [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int i n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static double factorialLog(final int n) { if (n < 0) { throw new IllegalArgumentException("must have n > 0 for n!"); } double logSum = 0; for (int i = 2; i <= n; i++) { [BUGGY] [BUGGY] logSum += Math.log((double)i); } return logSum; } [CLASS] MathUtils [METHOD] factorialLog [RETURN_TYPE] double  final int n [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int i n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	399	399	1	add	
19	[BUG] [BUGGY] return logSum; [FE] AssertionFailedError [CONTEXT] public static double factorialLog(final int n) { if (n < 0) { throw new IllegalArgumentException("must have n > 0 for n!"); } double logSum = 0; for (int i = 2; i <= n; i++) { logSum += Math.log((double)i); } [BUGGY] return logSum; [BUGGY] } [CLASS] MathUtils [METHOD] factorialLog [RETURN_TYPE] double  final int n [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int i n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static double factorialLog(final int n) { if (n < 0) { throw new IllegalArgumentException("must have n > 0 for n!"); } double logSum = 0; for (int i = 2; i <= n; i++) { logSum += Math.log((double)i); } [BUGGY] [BUGGY] return logSum; } [CLASS] MathUtils [METHOD] factorialLog [RETURN_TYPE] double  final int n [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int i n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	401	401	1	add	
