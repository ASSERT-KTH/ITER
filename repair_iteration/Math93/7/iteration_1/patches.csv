bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  n  =  Math.log((  double)n  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.log((  double)n  +  1);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  n  =  Math.log((  double)n  +  1);	      double    n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
2	[BUG]  [BUGGY]  double  n  =  Math.log((  double)n  *  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.log((  double)n  *  2);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  n  =  Math.log((  double)n  *  2);	      double    n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
3	[BUG]  [BUGGY]  double  n  =  Math.log((  double)n  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.log((  double)n  +  2);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  n  =  Math.log((  double)n  +  2);	      double    n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
4	[BUG]  [BUGGY]  n  =  Math.log((  double)n  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  n  =  Math.log((  double)n  +  1);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	n  =  Math.log((  double)n  +  1);	      n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
5	[BUG]  [BUGGY]  n  =  Math.ceil((  double)n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  n  =  Math.ceil((  double)n);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	n  =  Math.ceil((  double)n);	      n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
6	[BUG]  [BUGGY]  n  =  Math.log((  double)n  *  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  n  =  Math.log((  double)n  *  2);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	n  =  Math.log((  double)n  *  2);	      n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
7	[BUG]  [BUGGY]  double  logSum  =  0.0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  logSum  =  0.0;  [BUGGY]    for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =  0.0;	  double    logSum    =    0L;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
8	[BUG]  [BUGGY]  double  logSum  =(n  <  0)?  1  :  0;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  logSum  =(n  <  0)?  1  :  0;  [BUGGY]    for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =(n  <  0)?  1  :  0;	  double    logSum    =(n    <    =    0)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
9	[BUG]  [BUGGY]  double  logSum  =(n  <  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  logSum  =(n  <  1)?  1  :  0;  [BUGGY]    for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =(n  <  1)?  1  :  0;	  double    logSum    =(n    <    =    0)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
10	[BUG]  [BUGGY]  double  logSum  =(n  <  2)?  1  :  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  logSum  =(n  <  2)?  1  :  0;  [BUGGY]    for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =(n  <  2)?  1  :  0;	  double    logSum    =(n    <    =    0)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
11	[BUG]  [BUGGY]  double  logSum  =  Math.log((  double)n  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  logSum  =  Math.log((  double)n  +  1);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =  Math.log((  double)n  +  1);	      double    logSum    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
12	[BUG]  [BUGGY]  double  logSum  =  Math.log((  double)n  -  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  logSum  =  Math.log((  double)n  -  1);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =  Math.log((  double)n  -  1);	      double    logSum    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
13	[BUG]  [BUGGY]  double  logSum  =  Math.log((  double)n  +  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  logSum  =  Math.log((  double)n  +  2);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =  Math.log((  double)n  +  2);	      double    logSum    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
14	[BUG]  [BUGGY]  double  logSum  =  3;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  logSum  =  3;  [BUGGY]    for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =  3;	  double    logSum    =    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
15	[BUG]  [BUGGY]  int  n  =  factorials.size()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  int  n  =  factorials.size()  +  1;  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	int  n  =  factorials.size()  +  1;	      int    n    =    factorials.size();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
16	[BUG]  [BUGGY]  int  n  =  factorials.size()  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  int  n  =  factorials.size()  -  1;  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	int  n  =  factorials.size()  -  1;	      int    n    =    factorials.size();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
17	[BUG]  [BUGGY]  int  n  =  this.factorials.size();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  int  n  =  this.factorials.size();  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	int  n  =  this.factorials.size();	      int    n    =    factorials.size();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
18	[BUG]  [BUGGY]  double  n  =  n;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  n  =  n;  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  n  =  n;	      double    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
19	[BUG]  [BUGGY]  double  n  =  factorials.length  -  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  n  =  factorials.length  -  1;  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  n  =  factorials.length  -  1;	      double    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
20	[BUG]  [BUGGY]  double  n  =(n  <  2)?  factorials.length  :  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  n  =(n  <  2)?  factorials.length  :  0;  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  n  =(n  <  2)?  factorials.length  :  0;	      double    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
21	[BUG]  [BUGGY]  double  n  =  factorials.length  -  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  n  =  factorials.length  -  2;  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  n  =  factorials.length  -  2;	      double    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
22	[BUG]  [BUGGY]  double  logSum  =  n  +  Math.log((  double)n  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  logSum  =  n  +  Math.log((  double)n  +  1);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =  n  +  Math.log((  double)n  +  1);	      double    logSum    =    n    +    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
23	[BUG]  [BUGGY]  double  logSum  =  n  *  Math.log((  double)n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  logSum  =  n  *  Math.log((  double)n);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =  n  *  Math.log((  double)n);	      double    logSum    =    n    +    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
24	[BUG]  [BUGGY]  double  x  =  Math.log((  double)n  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  x  =  Math.log((  double)n  +  1);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  x  =  Math.log((  double)n  +  1);	      double    x    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
25	[BUG]  [BUGGY]  double  x  =  Math.exp((  double)n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  x  =  Math.exp((  double)n);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  x  =  Math.exp((  double)n);	      double    x    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
26	[BUG]  [BUGGY]  double  x  =  Math.log((  double)n  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  x  =  Math.log((  double)n  +  2);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  x  =  Math.log((  double)n  +  2);	      double    x    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
27	[BUG]  [BUGGY]  int  n  =  Math.log((  double)n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  int  n  =  Math.log((  double)n);  [BUGGY]    for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	int  n  =  Math.log((  double)n);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
28	[BUG]  [BUGGY]  int  logSum  =  Math.log((  double)n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  int  logSum  =  Math.log((  double)n);  [BUGGY]    for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	int  logSum  =  Math.log((  double)n);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
29	[BUG]  [BUGGY]  int  n  =  n;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  int  n  =  n;  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	int  n  =  n;	      int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
30	[BUG]  [BUGGY]  int  n  =  factorials.length  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  int  n  =  factorials.length  -  1;  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	int  n  =  factorials.length  -  1;	      int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
31	[BUG]  [BUGGY]  int  n  =  this.factorials.length;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  int  n  =  this.factorials.length;  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	int  n  =  this.factorials.length;	      int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
32	[BUG]  [BUGGY]  n  =  Math.floor((  double)n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  n  =  Math.floor((  double)n);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	n  =  Math.floor((  double)n);	      n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
33	[BUG]  [BUGGY]  int  logSum  =  factorials.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  int  logSum  =  factorials.length;  [BUGGY]    for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	int  logSum  =  factorials.length;	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
34	[BUG]  [BUGGY]  int  logSum  =  factorials[n];  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  int  logSum  =  factorials[n];  [BUGGY]    for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	int  logSum  =  factorials[n];	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
35	[BUG]  [BUGGY]  double  logSum  =  Math.log((  double)n  -  2);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  logSum  =  Math.log((  double)n  -  2);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =  Math.log((  double)n  -  2);	      double    logSum    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
36	[BUG]  [BUGGY]  int  n  =  factorials.length  -  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  int  n  =  factorials.length  -  2;  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	int  n  =  factorials.length  -  2;	      int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
37	[BUG]  [BUGGY]  int  n  =  factorials.length  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  int  n  =  factorials.length  +  1;  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	int  n  =  factorials.length  +  1;	      int    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  double  n  =  factorials.length  +  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  n  =  factorials.length  +  1;  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  n  =  factorials.length  +  1;	      double    n    =    factorials.length;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
39	[BUG]  [BUGGY]  double  n  =  Math.log((  double)n  -  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.log((  double)n  -  1);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  n  =  Math.log((  double)n  -  1);	      double    n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
40	[BUG]  [BUGGY]  double  logSum  =(n  ==  0)?  1  :  0;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  logSum  =(n  ==  0)?  1  :  0;  [BUGGY]    for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =(n  ==  0)?  1  :  0;	  double    logSum    =(n    <    =    0)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
41	[BUG]  [BUGGY]  double  logSum  =(n  >=  0)?  1  :  0;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  logSum  =(n  >=  0)?  1  :  0;  [BUGGY]    for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =(n  >=  0)?  1  :  0;	  double    logSum    =(n    <    =    0)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
42	[BUG]  [BUGGY]  double  logSum  =  Math.sqrt((  double)n);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  logSum  =  Math.sqrt((  double)n);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =  Math.sqrt((  double)n);	      double    logSum    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
43	[BUG]  [BUGGY]  long  logSum  =  Math.log((  double)n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  long  logSum  =  Math.log((  double)n);  [BUGGY]    for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	long  logSum  =  Math.log((  double)n);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
44	[BUG]  [BUGGY]  double  x  =  Math.cos((  double)n);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  x  =  Math.cos((  double)n);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  x  =  Math.cos((  double)n);	      double    x    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
45	[BUG]  [BUGGY]  double  n  =  factorials.size();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  n  =  factorials.size();  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  n  =  factorials.size();	      int    n    =    factorials.size();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
46	[BUG]  [BUGGY]  double  n  =  Math.ceil((  double)n);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.ceil((  double)n);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  n  =  Math.ceil((  double)n);	      double    n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
47	[BUG]  [BUGGY]  double  n  =  Math.cos((  double)n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  n  =  Math.cos((  double)n);  [BUGGY]    double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  n  =  Math.cos((  double)n);	      double    n    =    Math.log((    double)n);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
48	[BUG]  [BUGGY]  double  logSum  =(n  <  =  0)?  0L  :  0L;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  logSum  =(n  <  =  0)?  0L  :  0L;  [BUGGY]    for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =(n  <  =  0)?  0L  :  0L;	  double    logSum    =    0L;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
49	[BUG]  [BUGGY]  double  logSum  =(n  <  0)?  0L  :  0L;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException(   "must  have  n  >  0  for  n!   ");  }    [BUGGY]  double  logSum  =(n  <  0)?  0L  :  0L;  [BUGGY]    for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =(n  <  0)?  0L  :  0L;	  double    logSum    =    0L;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
