bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  logSum  =  1;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]  double  logSum  =  1;  [BUGGY]  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =  1;	double  logSum  =  0;  	non-compiled	[CE]  <identifier>  expected	13	None	replace
2	[BUG]  [BUGGY]  double  logSum  =  2;  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]  double  logSum  =  2;  [BUGGY]  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =  2;	double  logSum  =  0;  	non-compiled	[CE]  <identifier>  expected	13	None	replace
3	[BUG]  [BUGGY]  double  logSum  =  0L;  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]  double  logSum  =  0L;  [BUGGY]  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =  0L;	double  logSum  =  0;  	non-compiled	[CE]  <identifier>  expected	13	None	replace
4	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]    [BUGGY]  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	  	double  logSum  =  0;  	non-compiled	[CE]  <identifier>  expected	13	None	replace
5	[BUG]  [BUGGY]    double  logSum  =  Math.log((  double)n);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]    double  logSum  =  Math.log((  double)n);  [BUGGY]  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	    double  logSum  =  Math.log((  double)n);		non-compiled	[CE]  <identifier>  expected	14	None	add
6	[BUG]  [BUGGY]    double  n  =  Math.log((  double)n);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]    double  n  =  Math.log((  double)n);  [BUGGY]  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	    double  n  =  Math.log((  double)n);		non-compiled	[CE]  <identifier>  expected	14	None	add
7	[BUG]  [BUGGY]    int  n  =  factorials.length;  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]    int  n  =  factorials.length;  [BUGGY]  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	    int  n  =  factorials.length;		non-compiled	[CE]  <identifier>  expected	14	None	add
8	[BUG]  [BUGGY]    double  logSum  =  n  +  Math.log((  double)n);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]    double  logSum  =  n  +  Math.log((  double)n);  [BUGGY]  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	    double  logSum  =  n  +  Math.log((  double)n);		non-compiled	[CE]  <identifier>  expected	14	None	add
9	[BUG]  [BUGGY]    n  =  Math.log((  double)n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]    n  =  Math.log((  double)n);  [BUGGY]  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	    n  =  Math.log((  double)n);		non-compiled	[CE]  <identifier>  expected	14	None	add
10	[BUG]  [BUGGY]    double  n  =  factorials.length;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]    double  n  =  factorials.length;  [BUGGY]  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	    double  n  =  factorials.length;		non-compiled	[CE]  <identifier>  expected	14	None	add
11	[BUG]  [BUGGY]    double  x  =  Math.log((  double)n);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]    double  x  =  Math.log((  double)n);  [BUGGY]  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	    double  x  =  Math.log((  double)n);		non-compiled	[CE]  <identifier>  expected	14	None	add
12	[BUG]  [BUGGY]    int  n  =  factorials.size();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]    int  n  =  factorials.size();  [BUGGY]  double  logSum  =  0;  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	    int  n  =  factorials.size();		non-compiled	[CE]  <identifier>  expected	14	None	add
13	[BUG]  [BUGGY]  double  logSum  =(n  <  =  0)?  1  :  0;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  double  factorialLog(final  int  n)  {  if  (n  <  0)  {  throw  new  IllegalArgumentException( "must  have  n  >  0  for  n! ");  }  [BUGGY]  double  logSum  =(n  <  =  0)?  1  :  0;  [BUGGY]  for  (int  i  =  2;  i  <=  n;  i++)  {  logSum  +=  Math.log((double)i);  }  return  logSum;  }  [CLASS]  MathUtils  [METHOD]  factorialLog  [RETURN_TYPE]  double  final  int  n  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  i  n  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	397	397	1	replace	double  logSum  =(n  <  =  0)?  1  :  0;	double  logSum  =  0;  	non-compiled	[CE]  <identifier>  expected	13	None	replace
