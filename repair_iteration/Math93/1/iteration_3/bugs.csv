bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  result  <  0?  factorials[n]  :  result  +  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  0?  factorials[n]  :  result  +  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  0?  factorials[n]  :  result  +  2;	  return    result    <    0?    factorials[n]    :    result    +    1;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
2	[BUG]  [BUGGY]  result  =  Math.sqrt(result,  n);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.sqrt(result,  n);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.sqrt(result,  n);	  return    result;    result    =    Math.sqrt(result);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
3	[BUG]  [BUGGY]  result  =  Math.sqrt(result)/  2;  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.sqrt(result)/  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.sqrt(result)/  2;	  return    result;    result    =    Math.sqrt(result);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
4	[BUG]  [BUGGY]  return  result;  result  =  Math.sqrt(result,  n);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result;  result  =  Math.sqrt(result,  n);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result;  result  =  Math.sqrt(result,  n);	  return    result;    result    =    Math.sqrt(result);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i],  result);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i],  result);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i],  result);  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.floor(factorials[i]);    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  result;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  result;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  result;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.floor(factorials[i]);    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
7	[BUG]  [BUGGY]  result  =  Math.round(factorials[n],  NS,  result);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n],  NS,  result);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n],  NS,  result);	  result    =    Math.round(factorialDouble(n),    NS,    result);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
8	[BUG]  [BUGGY]  result  =  Math.round(factorials[n].doubleValue(),  NS,  result);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n].doubleValue(),  NS,  result);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n].doubleValue(),  NS,  result);	  result    =    Math.round(factorialDouble(n),    NS,    result);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
9	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n),  NS,  result);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorialValue(n),  NS,  result);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialValue(n),  NS,  result);	  result    =    Math.round(factorialDouble(n),    NS,    result);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
10	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]);  if(result  ==  Long.MIN_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]);  if(result  ==  Long.MIN_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]);  if(result  ==  Long.MIN_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }	  result    =    Math.round(factorialDouble(n));    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "Failure    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
11	[BUG]  [BUGGY]  Result  result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }	  result    =    Math.round(factorialDouble(n));    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "Failure    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
12	[BUG]  [BUGGY]  result  =  result[n]  &&  result.length  >  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result[n]  &&  result.length  >  0;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result[n]  &&  result.length  >  0;	  return    result[n]    &&    result.length    >    0;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
13	[BUG]  [BUGGY]  return  result[n]  &&  result.length  >  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result[n]  &&  result.length  >  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n]  &&  result.length  >  1;	  return    result[n]    &&    result.length    >    0;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
14	[BUG]  [BUGGY]  return  result[n]  &&  result.length  >  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result[n]  &&  result.length  >  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n]  &&  result.length  >  2;	  return    result[n]    &&    result.length    >    0;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
15	[BUG]  [BUGGY]  result[n]  &&  result.length  >  1;  [CE]  ']'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result[n]  &&  result.length  >  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result[n]  &&  result.length  >  1;	  return    result[n]    &&    result.length    >    0;    	non-compiled	[CE]  ']'  expected	44	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factorials[i]  =  Math.round(factorialShort(i));  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factorials[i]  =  Math.round(factorialShort(i));  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factorials[i]  =  Math.round(factorialShort(i));  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.round(factorialShort(i));    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialShort(i),  result);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialShort(i),  result);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialShort(i),  result);  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.round(factorialShort(i));    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
18	[BUG]  [BUGGY]  result  =  result[0]  *  factorials;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result[0]  *  factorials;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result[0]  *  factorials;	  result    =    factorials[0]    *    result;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
19	[BUG]  [BUGGY]  result  =  factorials[0]  /  result;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[0]  /  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[0]  /  result;	  result    =    factorials[0]    *    result;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
20	[BUG]  [BUGGY]  result  =  factorials[0]  *  result  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[0]  *  result  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[0]  *  result  +  1;	  result    =    factorials[0]    *    result;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
21	[BUG]  [BUGGY]  result  =  result[n]  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result[n]  -  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result[n]  -  1;	  result    =    result[n];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
22	[BUG]  [BUGGY]  result  =  result[n  -  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result[n  -  1];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result[n  -  1];	  result    =    result[n];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
23	[BUG]  [BUGGY]  result  =  result[n]  /  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result[n]  /  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result[n]  /  2;	  result    =    result[n];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
24	[BUG]  [BUGGY]  result  =  result[n  +  1];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result[n  +  1];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result[n  +  1];	  result    =    result[n];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
25	[BUG]  [BUGGY]  result  =  result[1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result[1];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result[1];	  result    =    result[0];    	non-compiled	[CE]  <identifier>  expected	20	None	replace
26	[BUG]  [BUGGY]  result  =  result[0]  /  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result[0]  /  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result[0]  /  2;	  result    =    result[0];    	non-compiled	[CE]  <identifier>  expected	20	None	replace
27	[BUG]  [BUGGY]  result  =  result[0]  &  n;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result[0]  &  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result[0]  &  n;	  result    =    result[0];    	non-compiled	[CE]  <identifier>  expected	20	None	replace
28	[BUG]  [BUGGY]  result  =  result[0]  +  n;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result[0]  +  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result[0]  +  n;	  result    =    result[0];    	non-compiled	[CE]  <identifier>  expected	20	None	replace
29	[BUG]  [BUGGY]  return  result  <  =  n?  result  :  result[n  +  1];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  =  n?  result  :  result[n  +  1];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  =  n?  result  :  result[n  +  1];	  return    result    <    =    n?    result    :    result[n];    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
30	[BUG]  [BUGGY]  result  <  n?  result  :  result[n];  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  <  n?  result  :  result[n];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  <  n?  result  :  result[n];	  return    result    <    =    n?    result    :    result[n];    	non-compiled	[CE]  >  expected	87	None	replace
31	[BUG]  [BUGGY]  return  result  <  Math.abs(result)?  result  :  factorials[n  +  1];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  Math.abs(result)?  result  :  factorials[n  +  1];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  Math.abs(result)?  result  :  factorials[n  +  1];	  return    result    <    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
32	[BUG]  [BUGGY]  result  =  result  <  Math.abs(result)?  result  :  factorials[n  +  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result  <  Math.abs(result)?  result  :  factorials[n  +  1];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result  <  Math.abs(result)?  result  :  factorials[n  +  1];	  return    result    <    =    Math.abs(result)?    result    :    factorials[n    +    1];    	non-compiled	[CE]  <identifier>  expected	86	None	replace
33	[BUG]  [BUGGY]  return  result  >=  Math.abs(result)?  result  :  factorials[n  +  1];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  >=  Math.abs(result)?  result  :  factorials[n  +  1];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  >=  Math.abs(result)?  result  :  factorials[n  +  1];	  return    result    <    =    Math.abs(result)?    result    :    factorials[n    +    1];    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
34	[BUG]  [BUGGY]  n  =  Math.log(result)/  2  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  n  =  Math.log(result)/  2  +  1;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	n  =  Math.log(result)/  2  +  1;	  n    =    Math.log(result)/    2;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
35	[BUG]  [BUGGY]  n  =  Math.log(result)/  3;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  n  =  Math.log(result)/  3;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	n  =  Math.log(result)/  3;	  n    =    Math.log(result)/    2;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
36	[BUG]  [BUGGY]  n  =  Math.log(result)/  2L;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  n  =  Math.log(result)/  2L;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	n  =  Math.log(result)/  2L;	  n    =    Math.log(result)/    2;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
37	[BUG]  [BUGGY]  long[]  factorials  =  Math.round(factorials[n]);  [CE]  variable  factorials  is  already  defined  in  class  MathUtils  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  long[]  factorials  =  Math.round(factorials[n]);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	long[]  factorials  =  Math.round(factorials[n]);	          result    =    Math.round(factorials[n]);    long[]    factorials    =    Math.round(factorials[n]);    	non-compiled	[CE]  variable  factorials  is  already  defined  in  class  MathUtils	72	None	replace
38	[BUG]  [BUGGY]  result  =  Math.round(factorials[0]);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[0]);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[0]);	          result    =    Math.round(factorials[n]);    long[]    factorials    =    Math.round(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
39	[BUG]  [BUGGY]  result  =  result  <  Math.max(result,  n)?  result  :  factorials[n];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result  <  Math.max(result,  n)?  result  :  factorials[n];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result  <  Math.max(result,  n)?  result  :  factorials[n];	  result    =    result    <    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
40	[BUG]  [BUGGY]  result  =  result  <  Math.PI?  result  :  factorials[n];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result  <  Math.PI?  result  :  factorials[n];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result  <  Math.PI?  result  :  factorials[n];	  result    =    result    <    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
41	[BUG]  [BUGGY]  result  =  Math.round(factorials[n],  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n],  0);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n],  0);	  result    =    Math.round(factorials[n],    n);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
42	[BUG]  [BUGGY]  result  =  Math.round(factorials[0],  n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[0],  n);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[0],  n);	  result    =    Math.round(factorials[n],    n);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
43	[BUG]  [BUGGY]  result  =  Math.round(factorials[n],  n  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n],  n  +  1);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n],  n  +  1);	  result    =    Math.round(factorials[n],    n);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
44	[BUG]  [BUGGY]  result  =  Math.round(factorials[n],  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n],  1);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n],  1);	  result    =    Math.round(factorials[n],    n);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
45	[BUG]  [BUGGY]  result  =  factorials[n]  /  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[n]  /  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n]  /  1;	  result    =    factorials[n]    -    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
46	[BUG]  [BUGGY]  result  =  factorials[n]  -  1L;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[n]  -  1L;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n]  -  1L;	  result    =    factorials[n]    -    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
47	[BUG]  [BUGGY]  result  =  factorials[n]  -  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[n]  -  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n]  -  2;	  result    =    factorials[n]    -    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
48	[BUG]  [BUGGY]  result  =  Math.sqrt(result  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.sqrt(result  +  1);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.sqrt(result  +  1);	  result    =    Math.sqrt(result);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
49	[BUG]  [BUGGY]  result  =  Math.sqrt(result  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.sqrt(result  -  1);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.sqrt(result  -  1);	  result    =    Math.sqrt(result);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
50	[BUG]  [BUGGY]  result  =  Math.round(factorialShort(n));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorialShort(n));  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialShort(n));	  result    =    Math.round(factorialValue(n));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
51	[BUG]  [BUGGY]  return  result!=  n?  factorials[n]  :  result;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result!=  n?  factorials[n]  :  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result!=  n?  factorials[n]  :  result;	  return    result    >=    n?    factorials[n]    :    result;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
52	[BUG]  [BUGGY]  return  result  ==  n?  factorials[n]  :  result;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  ==  n?  factorials[n]  :  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  ==  n?  factorials[n]  :  result;	  return    result    >=    n?    factorials[n]    :    result;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
53	[BUG]  [BUGGY]  result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	  Result    <    Long.MAX_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  >  expected	36	None	replace
54	[BUG]  [BUGGY]  result  <  Long.MAX_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  <  Long.MAX_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  <  Long.MAX_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	  Result    <    Long.MAX_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  >  expected	36	None	replace
55	[BUG]  [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  >  expected	35	None	replace
56	[BUG]  [BUGGY]  result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  >  expected	35	None	replace
57	[BUG]  [BUGGY]  Result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  >  expected	35	None	replace
58	[BUG]  [BUGGY]  result  =  Math.max(result,  n  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.max(result,  n  +  1);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.max(result,  n  +  1);	  result    =    Math.max(result,    n);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
59	[BUG]  [BUGGY]  result  =  Math.max(result,  0,  n);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.max(result,  0,  n);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.max(result,  0,  n);	  result    =    Math.max(result,    n);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
60	[BUG]  [BUGGY]  result  =  Math.max(result,  n,  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.max(result,  n,  2);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.max(result,  n,  2);	  result    =    Math.max(result,    n);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
61	[BUG]  [BUGGY]  result  =  result[n]  &  n;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result[n]  &  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result[n]  &  n;	  return    result[n]    &    n;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
62	[BUG]  [BUGGY]  return  result[n]  &  n  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result[n]  &  n  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n]  &  n  +  1;	  return    result[n]    &    n;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
63	[BUG]  [BUGGY]  return  result[n]  &  EPSILON;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result[n]  &  EPSILON;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n]  &  EPSILON;	  return    result[n]    &    n;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
64	[BUG]  [BUGGY]  return  result[n]  &  n  *  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result[n]  &  n  *  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n]  &  n  *  2;	  return    result[n]    &    n;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
65	[BUG]  [BUGGY]  return  result  <  n?  factorials[n]  :  result  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  n?  factorials[n]  :  result  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  n?  factorials[n]  :  result  +  1;	  return    result    <    =    n?    factorials[n]    :    result    +    1;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
66	[BUG]  [BUGGY]  return  result  <  =  n?  factorials[n]  :  result  +  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  =  n?  factorials[n]  :  result  +  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  =  n?  factorials[n]  :  result  +  2;	  return    result    <    =    n?    factorials[n]    :    result    +    1;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
67	[BUG]  [BUGGY]  return  result  <  =  n?  factorials[n]  :  result  +  1L;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  =  n?  factorials[n]  :  result  +  1L;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  =  n?  factorials[n]  :  result  +  1L;	  return    result    <    =    n?    factorials[n]    :    result    +    1;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
68	[BUG]  [BUGGY]  return  result  <  0?  result  :  result[n  +  1];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  0?  result  :  result[n  +  1];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  0?  result  :  result[n  +  1];	  return    result    <    0?    result    :    result[n];    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
69	[BUG]  [BUGGY]  return  result  <  0?  result  :  factorials[n];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  0?  result  :  factorials[n];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  0?  result  :  factorials[n];	  return    result    <    0?    result    :    result[n];    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
70	[BUG]  [BUGGY]  result  <  0?  result  :  result[n];  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  <  0?  result  :  result[n];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  <  0?  result  :  result[n];	  return    result    <    0?    result    :    result[n];    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
71	[BUG]  [BUGGY]  long  n  =  Math.round(factorials[n]);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  long  n  =  Math.round(factorials[n]);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	long  n  =  Math.round(factorials[n]);	          result    =    Math.round(factorialDouble(n));    long    n    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  ';'  expected	68	None	replace
72	[BUG]  [BUGGY]  n  =  Math.round(factorials[n]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  n  =  Math.round(factorials[n]);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	n  =  Math.round(factorials[n]);	          result    =    Math.round(factorialDouble(n));    long    n    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  <identifier>  expected	68	None	replace
73	[BUG]  [BUGGY]  long[]  factorials  =  new  long[n];  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  long[]  factorials  =  new  long[n];  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	long[]  factorials  =  new  long[n];	          result    =    Math.round(factorials[n]);    long[]    factorials    =    new    long[n];    	non-compiled	[CE]  not  a  statement	57	None	replace
74	[BUG]  [BUGGY]  Result[]  factorials  =  new  long[n];  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result[]  factorials  =  new  long[n];  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result[]  factorials  =  new  long[n];	          result    =    Math.round(factorials[n]);    long[]    factorials    =    new    long[n];    	non-compiled	[CE]  not  a  statement	57	None	replace
75	[BUG]  [BUGGY]  return  result  -  1L;  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  -  1L;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  -  1L;	  return    result    -    1;    	non-compiled	[CE]  not  a  statement	77	None	replace
76	[BUG]  [BUGGY]  return  result  -  2;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  -  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  -  2;	  return    result    -    1;    	non-compiled	[CE]  not  a  statement	77	None	replace
77	[BUG]  [BUGGY]  return  result  /  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  /  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  /  1;	  return    result    -    1;    	non-compiled	[CE]  not  a  statement	77	None	replace
78	[BUG]  [BUGGY]  result  =  result  -  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result  -  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result  -  1;	  return    result    -    1;    	non-compiled	[CE]  not  a  statement	77	None	replace
79	[BUG]  [BUGGY]  n  =  Math.max(result,  n  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  n  =  Math.max(result,  n  +  1);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	n  =  Math.max(result,  n  +  1);	  n    =    Math.max(result,    n);    	non-compiled	[CE]  not  a  statement	6	None	replace
80	[BUG]  [BUGGY]  return  result  ==  0?  factorials[n]  :  result  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  ==  0?  factorials[n]  :  result  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  ==  0?  factorials[n]  :  result  +  1;	  return    result    ==    0?    factorials[n]    :    result;    	non-compiled	[CE]  not  a  statement	65	None	replace
81	[BUG]  [BUGGY]  return  result  ==  0?  factorials[n]  :  result.longValue();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  ==  0?  factorials[n]  :  result.longValue();  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  ==  0?  factorials[n]  :  result.longValue();	  return    result    ==    0?    factorials[n]    :    result;    	non-compiled	[CE]  not  a  statement	65	None	replace
82	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.log(factorials[i],  result);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.log(factorials[i],  result);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.log(factorials[i],  result);  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.log(factorials[i]);    }    	non-compiled	[CE]  not  a  statement	53	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  result;  ++i)  {  factorials[i]  =  Math.log(factorials[i]);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  result;  ++i)  {  factorials[i]  =  Math.log(factorials[i]);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  result;  ++i)  {  factorials[i]  =  Math.log(factorials[i]);  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.log(factorials[i]);    }    	non-compiled	[CE]  not  a  statement	53	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factorials[i]  =  Math.log(factorials[i]);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factorials[i]  =  Math.log(factorials[i]);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factorials[i]  =  Math.log(factorials[i]);  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.log(factorials[i]);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialValue(i),  result);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialValue(i),  result);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialValue(i),  result);  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.round(factorialValue(i));    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
86	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factorials[i]  =  Math.round(factorialValue(i));  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factorials[i]  =  Math.round(factorialValue(i));  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factorials[i]  =  Math.round(factorialValue(i));  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.round(factorialValue(i));    }    	non-compiled	[CE]  not  a  statement	75	None	replace
87	[BUG]  [BUGGY]  return  result  /  n;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  /  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  /  n;	  return    result    +    n;    	non-compiled	[CE]  not  a  statement	39	None	replace
88	[BUG]  [BUGGY]  return  result  +  n  +  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  +  n  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  +  n  +  1;	  return    result    +    n;    	non-compiled	[CE]  not  a  statement	39	None	replace
89	[BUG]  [BUGGY]  return  result  *  n;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  *  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  *  n;	  return    result    +    n;    	non-compiled	[CE]  not  a  statement	39	None	replace
90	[BUG]  [BUGGY]  return  result  +  n  +  2;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  +  n  +  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  +  n  +  2;	  return    result    +    n;    	non-compiled	[CE]  not  a  statement	39	None	replace
91	[BUG]  [BUGGY]  Result  =  Math.round(factorialValue(n),  result);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  =  Math.round(factorialValue(n),  result);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  =  Math.round(factorialValue(n),  result);	  Result    =    Math.round(factorialValue(n));    	non-compiled	[CE]  not  a  statement	101	None	replace
92	[BUG]  [BUGGY]  return  result  <  =  Math.abs(result[n]  -  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  =  Math.abs(result[n]  -  1);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  =  Math.abs(result[n]  -  1);	  return    result    <    =    Math.abs(result[n]);    	non-compiled	[CE]  not  a  statement	100	None	replace
93	[BUG]  [BUGGY]  result  =  Math.abs(result[n]);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.abs(result[n]);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.abs(result[n]);	  return    result    <    =    Math.abs(result[n]);    	non-compiled	[CE]  not  a  statement	100	None	replace
94	[BUG]  [BUGGY]  return  result  <  =  Math.abs(result[n  -  1]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  =  Math.abs(result[n  -  1]);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  =  Math.abs(result[n  -  1]);	  return    result    <    =    Math.abs(result[n]);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
95	[BUG]  [BUGGY]  result  =  Math.max(result,  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.max(result,  1);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.max(result,  1);	  result    =    Math.max(result,    0);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
96	[BUG]  [BUGGY]  result  =  Math.max(result,  0L);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.max(result,  0L);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.max(result,  0L);	  result    =    Math.max(result,    0);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
97	[BUG]  [BUGGY]  result  =  factorials[n]  /  result;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[n]  /  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n]  /  result;	  result    =    factorials[n]    *    result;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
98	[BUG]  [BUGGY]  result  =  factorials[n]  -  result;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[n]  -  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n]  -  result;	  result    =    factorials[n]    *    result;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
99	[BUG]  [BUGGY]  result  =  factorials[n]  *  result  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[n]  *  result  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n]  *  result  +  1;	  result    =    factorials[n]    *    result;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
100	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]  /  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]  /  1);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]  /  1);	  result    =    Math.round(factorials[n]    -    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
101	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]  -  2);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]  -  2);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]  -  2);	  result    =    Math.round(factorials[n]    -    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
102	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]  *  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]  *  n);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]  *  n);	  result    =    Math.round(factorials[n]    -    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
103	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  *  n  -  1]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n  *  n  -  1]);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n  *  n  -  1]);	  return    result;    result    =    Math.round(factorials[n    -    1]);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
104	[BUG]  [BUGGY]  result  =  result[n]  &&  factorials.length  >  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result[n]  &&  factorials.length  >  0;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result[n]  &&  factorials.length  >  0;	  return    result[n]    &&    factorials.length    >    0;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
105	[BUG]  [BUGGY]  return  result[n]  &&  factorials.length  >  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result[n]  &&  factorials.length  >  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n]  &&  factorials.length  >  1;	  return    result[n]    &&    factorials.length    >    0;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
106	[BUG]  [BUGGY]  return  result[n]  &&  factorials.length  >  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result[n]  &&  factorials.length  >  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n]  &&  factorials.length  >  2;	  return    result[n]    &&    factorials.length    >    0;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
107	[BUG]  [BUGGY]  result  =  result  +  1L;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result  +  1L;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result  +  1L;	  result    =    result    +    1;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
108	[BUG]  [BUGGY]  result  =  result  +  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result  +  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result  +  2;	  result    =    result    +    1;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
109	[BUG]  [BUGGY]  result  =  result  /  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result  /  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result  /  1;	  result    =    result    +    1;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
110	[BUG]  [BUGGY]  Result  result  =  Math.round(factorials[n]);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  result  =  Math.round(factorials[n]);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  result  =  Math.round(factorials[n]);	          result    =    Math.round(factorialDouble(n));    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
111	[BUG]  [BUGGY]  result  =  Math.rint(factorials[n]);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.rint(factorials[n]);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.rint(factorials[n]);	          result    =    Math.round(factorialDouble(n));    Math.round(factorialDouble(n));    	non-compiled	[CE]  <identifier>  expected	96	None	replace
112	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  +  2]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n  +  2]);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n  +  2]);	  return    result;    result    =    Math.round(factorials[n    +    1]);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
113	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  +  3]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n  +  3]);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n  +  3]);	  return    result;    result    =    Math.round(factorials[n    +    1]);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
114	[BUG]  [BUGGY]  result  =  Math.log(n)/  result  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.log(n)/  result  +  1;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.log(n)/  result  +  1;	  result    =    Math.log(n)/    result;    	non-compiled	[CE]  <identifier>  expected	93	None	replace
115	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factororials[i]  =  Math.round(factorialDouble(i));  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factororials[i]  =  Math.round(factorialDouble(i));  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factororials[i]  =  Math.round(factorialDouble(i));  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factororials[i]    =    Math.round(factorialDouble(i));    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factororials[i]  =  Math.round(factorialValue(i));  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factororials[i]  =  Math.round(factorialValue(i));  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factororials[i]  =  Math.round(factorialValue(i));  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factororials[i]    =    Math.round(factorialDouble(i));    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
117	[BUG]  [BUGGY]  return  result  <  n?  result  :  factorials[n];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  n?  result  :  factorials[n];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  n?  result  :  factorials[n];	  return    result    <    n?    result    :    result[n];    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
118	[BUG]  [BUGGY]  return  result  <  n?  result  :  result[n  +  1];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  n?  result  :  result[n  +  1];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  n?  result  :  result[n  +  1];	  return    result    <    n?    result    :    result[n];    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
119	[BUG]  [BUGGY]  long  result  =  Math.round(factorials[n]);  [CE]  cannot  find  symbol  n  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  long  result  =  Math.round(factorials[n]);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	long  result  =  Math.round(factorials[n]);	  return    result;    long    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  cannot  find  symbol  n	108	None	replace
120	[BUG]  [BUGGY]  n  result  =  Math.round(factorials[n]);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  n  result  =  Math.round(factorials[n]);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	n  result  =  Math.round(factorials[n]);	  return    result;    long    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
121	[BUG]  [BUGGY]  result  =  Math.round(factorials.length(n));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials.length(n));  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials.length(n));	  return    result;    long    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  <identifier>  expected	108	None	replace
122	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]);  if(result  ==  Long.MIN_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]);  if(result  ==  Long.MIN_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]);  if(result  ==  Long.MIN_VALUE)  {  throw  new  ArithmeticException( " ");  }	  result    =    Math.round(factorialDouble(n));    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
123	[BUG]  [BUGGY]  Result  result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	  result    =    Math.round(factorialDouble(n));    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
124	[BUG]  [BUGGY]  return  result  /  result;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  /  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  /  result;	  return    result    *    result;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
125	[BUG]  [BUGGY]  return  result  *  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  *  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  *  2;	  return    result    *    result;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
126	[BUG]  [BUGGY]  return  result  *  result  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  *  result  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  *  result  +  1;	  return    result    *    result;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
127	[BUG]  [BUGGY]  result  =  Math.round(factorials[n],  NS);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n],  NS);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n],  NS);	  result    =    Math.round(factorialDouble(n),    NS);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
128	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n),  NS);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorialValue(n),  NS);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialValue(n),  NS);	  result    =    Math.round(factorialDouble(n),    NS);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
129	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  +  1]  *  Long.MAX_VALUE);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n  +  1]  *  Long.MAX_VALUE);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n  +  1]  *  Long.MAX_VALUE);	  result    =    Math.round(factorials[n    +    1]);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
130	[BUG]  [BUGGY]  int  result  =  Math.round(factorials[n]);  [CE]  cannot  find  symbol  n  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  int  result  =  Math.round(factorials[n]);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	int  result  =  Math.round(factorials[n]);	  return    result;    long    result    =    Math.round(factorials[n]);    	non-compiled	[CE]  cannot  find  symbol  n	30	None	replace
131	[BUG]  [BUGGY]  return  result[n  -  2];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result[n  -  2];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n  -  2];	  return    result[n    -    1];    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
132	[BUG]  [BUGGY]  return  result[n  -  1]  +  result;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result[n  -  1]  +  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n  -  1]  +  result;	  return    result[n    -    1];    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
133	[BUG]  [BUGGY]  n  =  Math.min(result,  n  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  n  =  Math.min(result,  n  +  1);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	n  =  Math.min(result,  n  +  1);	  n    =    Math.min(result,    n);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
134	[BUG]  [BUGGY]  result  =  factorials[n].doubleValue();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[n].doubleValue();  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n].doubleValue();	  result    =    factorials[n].longValue();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
135	[BUG]  [BUGGY]  result  =  factorials[n].longValue()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[n].longValue()  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n].longValue()  +  1;	  result    =    factorials[n].longValue();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
136	[BUG]  [BUGGY]  result  =  n[factorials.length].longValue();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  n[factorials.length].longValue();  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  n[factorials.length].longValue();	  result    =    factorials[n].longValue();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
137	[BUG]  [BUGGY]  n  =  Math.log(result)/  factorials.length  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  n  =  Math.log(result)/  factorials.length  +  1;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	n  =  Math.log(result)/  factorials.length  +  1;	  n    =    Math.log(result)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
138	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]);  n  =  Math.round(factorialDouble(n));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]);  n  =  Math.round(factorialDouble(n));  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]);  n  =  Math.round(factorialDouble(n));	          result    =    Math.round(factorials[n]);    n    =    Math.round(factorials[n]);    	non-compiled	[CE]  ';'  expected	74	None	replace
139	[BUG]  [BUGGY]  result  =  Math.round(factorials[0]);  n  =  Math.round(factorials[1]);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[0]);  n  =  Math.round(factorials[1]);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[0]);  n  =  Math.round(factorials[1]);	          result    =    Math.round(factorials[n]);    n    =    Math.round(factorials[n]);    	non-compiled	[CE]  ';'  expected	74	None	replace
140	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.ceil(factorials[i],  result);  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.ceil(factorials[i],  result);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.ceil(factorials[i],  result);  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.ceil(factorials[i]);    }    	non-compiled	[CE]  ';'  expected	52	None	replace
141	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  result;  ++i)  {  factorials[i]  =  Math.ceil(factorials[i]);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  result;  ++i)  {  factorials[i]  =  Math.ceil(factorials[i]);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  result;  ++i)  {  factorials[i]  =  Math.ceil(factorials[i]);  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.ceil(factorials[i]);    }    	non-compiled	[CE]  ';'  expected	52	None	replace
142	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factorials[i]  =  Math.ceil(factorials[i]);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factorials[i]  =  Math.ceil(factorials[i]);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factorials[i]  =  Math.ceil(factorials[i]);  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.ceil(factorials[i]);    }    	non-compiled	[CE]  ';'  expected	52	None	replace
143	[BUG]  [BUGGY]  result  =  factorials[n  -  1]  *  result;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[n  -  1]  *  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n  -  1]  *  result;	  result    =    factorials[n    -    1];    	non-compiled	[CE]  ';'  expected	81	None	replace
144	[BUG]  [BUGGY]  result  =  factorials[n  -  2];  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[n  -  2];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n  -  2];	  result    =    factorials[n    -    1];    	non-compiled	[CE]  ';'  expected	81	None	replace
145	[BUG]  [BUGGY]  result  =  factorials[n  -  1]  +  result;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[n  -  1]  +  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n  -  1]  +  result;	  result    =    factorials[n    -    1];    	non-compiled	[CE]  ';'  expected	81	None	replace
146	[BUG]  [BUGGY]  result  =  Math.round(factorials[n].doubleValue()  -  1);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n].doubleValue()  -  1);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n].doubleValue()  -  1);	  result    =    Math.round(factorials[n].doubleValue());    	non-compiled	[CE]  ';'  expected	25	None	replace
147	[BUG]  [BUGGY]  result  =  Math.round(factorials[n].doubleValue()  +  n);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n].doubleValue()  +  n);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n].doubleValue()  +  n);	  result    =    Math.round(factorials[n].doubleValue());    	non-compiled	[CE]  ';'  expected	25	None	replace
148	[BUG]  [BUGGY]  result  =  Math.round(factorials[n].doubleValue()  *  n);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n].doubleValue()  *  n);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n].doubleValue()  *  n);	  result    =    Math.round(factorials[n].doubleValue());    	non-compiled	[CE]  ';'  expected	25	None	replace
149	[BUG]  [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "factorial  value  is  too  large  to  fit  in  a  long ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  <  Long.MIN_VALUE  ||  result  >  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "factorial  value  is  too  large  to  fit  in  a  long ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "factorial    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  	92	None	replace
150	[BUG]  [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Factory  value  is  too  large  to  fit  in  a  long ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "factorial    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  >  expected	92	None	replace
151	[BUG]  [BUGGY]  result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  <  Long.MIN_VALUE  &&  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "factorial    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  >  expected	92	None	replace
152	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  -  1]  *  Long.MAX_VALUE);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n  -  1]  *  Long.MAX_VALUE);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n  -  1]  *  Long.MAX_VALUE);	  result    =    Math.round(factorials[n    -    1]);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
153	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  -  2]);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n  -  2]);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n  -  2]);	  result    =    Math.round(factorials[n    -    1]);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
154	[BUG]  [BUGGY]  result  =  Math.min(result,  n  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.min(result,  n  +  1);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.min(result,  n  +  1);	  result    =    Math.min(result,    n);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
155	[BUG]  [BUGGY]  result  =  Math.min(result,  n)+  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.min(result,  n)+  1;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.min(result,  n)+  1;	  result    =    Math.min(result,    n);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
156	[BUG]  [BUGGY]  return  result  /  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  /  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  /  2;	  return    result    +    2;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
157	[BUG]  [BUGGY]  result  =  n[result  +  1];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  n[result  +  1];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  n[result  +  1];	  result    =    factorials[n    +    1];    	non-compiled	[CE]  <identifier>  expected	82	None	replace
158	[BUG]  [BUGGY]  result  =  factorials[n  +  2];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[n  +  2];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n  +  2];	  result    =    factorials[n    +    1];    	non-compiled	[CE]  <identifier>  expected	82	None	replace
159	[BUG]  [BUGGY]  result  =  factorials[n  +  1]  *  result;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[n  +  1]  *  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n  +  1]  *  result;	  result    =    factorials[n    +    1];    	non-compiled	[CE]  <identifier>  expected	82	None	replace
160	[BUG]  [BUGGY]  result  =  Math.round(factorialsToInt(n));  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorialsToInt(n));  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialsToInt(n));	  return    result;    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
161	[BUG]  [BUGGY]  result  =  Long.MAX_VALUE  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Long.MAX_VALUE  +  1;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Long.MAX_VALUE  +  1;	  result    =    Long.MAX_VALUE;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
162	[BUG]  [BUGGY]  result  =  Long.MAX_VALUE  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Long.MAX_VALUE  -  1;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Long.MAX_VALUE  -  1;	  result    =    Long.MAX_VALUE;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
163	[BUG]  [BUGGY]  result  =  result  ==  Math.abs(result)?  result  :  factorials[n];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result  ==  Math.abs(result)?  result  :  factorials[n];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result  ==  Math.abs(result)?  result  :  factorials[n];	  return    result    ==    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
164	[BUG]  [BUGGY]  result  =  Math.abs(result)?  result  :  factorials[n];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.abs(result)?  result  :  factorials[n];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.abs(result)?  result  :  factorials[n];	  return    result    ==    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
165	[BUG]  [BUGGY]  result  =  result  >=  Math.abs(result)?  result  :  factorials[n];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result  >=  Math.abs(result)?  result  :  factorials[n];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result  >=  Math.abs(result)?  result  :  factorials[n];	  return    result    ==    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
166	[BUG]  [BUGGY]  result  =  n[1];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  n[1];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  n[1];	  result    =    factorials[1];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
167	[BUG]  [BUGGY]  result  =  factorials[1]  -  result;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[1]  -  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[1]  -  result;	  result    =    factorials[1];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
168	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]);  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]);  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]);  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }	  result    =    Math.round(factorialDouble(n));    for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.floor(factorials[i]);    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
169	[BUG]  [BUGGY]  Result  result  =  Math.round(factorials[n]);  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  result  =  Math.round(factorials[n]);  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  result  =  Math.round(factorials[n]);  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }	  result    =    Math.round(factorialDouble(n));    for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.floor(factorials[i]);    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
170	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]);  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.ceil(factorials[i]);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]);  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.ceil(factorials[i]);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]);  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.ceil(factorials[i]);  }	  result    =    Math.round(factorialDouble(n));    for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.floor(factorials[i]);    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
171	[BUG]  [BUGGY]  result  =  Math.ceil(factorials[n]);  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.ceil(factorials[n]);  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.ceil(factorials[n]);  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }	  result    =    Math.round(factorialDouble(n));    for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.floor(factorials[i]);    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
172	[BUG]  [BUGGY]  Result  <  Long>  result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  <  Long>  result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  <  Long>  result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }	  Result    <    Long>    result    =    Math.round(factorialDouble(n));    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "Failure    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
173	[BUG]  [BUGGY]  Result  <  Long>  result  =  Math.round(factorials[n]);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  <  Long>  result  =  Math.round(factorials[n]);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  <  Long>  result  =  Math.round(factorials[n]);	  Result    <    Long>    result    =    Math.round(factorialDouble(n));    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "Failure    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
174	[BUG]  [BUGGY]  Result  <  Long>  result  =  Math.round(factorials.length);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  <  Long>  result  =  Math.round(factorials.length);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  <  Long>  result  =  Math.round(factorials.length);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }	  Result    <    Long>    result    =    Math.round(factorialDouble(n));    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "Failure    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
175	[BUG]  [BUGGY]  Result  <  Long>  result  =  Math.round(factorials[n]);  if(result  ==  Long.MIN_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  <  Long>  result  =  Math.round(factorials[n]);  if(result  ==  Long.MIN_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  <  Long>  result  =  Math.round(factorials[n]);  if(result  ==  Long.MIN_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }	  Result    <    Long>    result    =    Math.round(factorialDouble(n));    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "Failure    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
176	[BUG]  [BUGGY]  result  =  n[factorials.length  -  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  n[factorials.length  -  1];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  n[factorials.length  -  1];	  result    =    n[factorials.length];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
177	[BUG]  [BUGGY]  result  =  n[factorials.length  +  1];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  n[factorials.length  +  1];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  n[factorials.length  +  1];	  result    =    n[factorials.length];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
178	[BUG]  [BUGGY]  result  =  Math.log(result)/  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.log(result)/  2;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.log(result)/  2;	  result    =    Math.log(result)/    result;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
179	[BUG]  [BUGGY]  result  =  Math.log(result,  n)/  result;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.log(result,  n)/  result;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.log(result,  n)/  result;	  result    =    Math.log(result)/    result;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
180	[BUG]  [BUGGY]  result  =  Math.rint(result)/  result;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.rint(result)/  result;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.rint(result)/  result;	  result    =    Math.log(result)/    result;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
181	[BUG]  [BUGGY]  result  =  Math.min(result,  0);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.min(result,  0);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.min(result,  0);	  return    result;    result    =    Math.max(result,    0);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
182	[BUG]  [BUGGY]  result  =  Math.round(factorials[n].doubleValue(),  n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n].doubleValue(),  n);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n].doubleValue(),  n);	  result    =    Math.round(factorialDouble(n),    n);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
183	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n),  n);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorialValue(n),  n);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialValue(n),  n);	  return    result;    result    =    Math.round(factorialValue(n));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
184	[BUG]  [BUGGY]  return  result  [n  +  2];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  [n  +  2];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  [n  +  2];	  return    result    [n    +    1];    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
185	[BUG]  [BUGGY]  return  result  [N  +  1];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  [N  +  1];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  [N  +  1];	  return    result    [n    +    1];    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
186	[BUG]  [BUGGY]  result  =  factorials[0]  -  n;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[0]  -  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[0]  -  n;	  result    =    factorials[0]    -    result;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
187	[BUG]  [BUGGY]  result  =  n[0]  -  factorials[0];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  n[0]  -  factorials[0];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  n[0]  -  factorials[0];	  result    =    factorials[0]    -    result;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
188	[BUG]  [BUGGY]  result  =  n[0]  -  factorials;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  n[0]  -  factorials;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  n[0]  -  factorials;	  result    =    factorials[0]    -    result;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
189	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]  *  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]  *  1);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]  *  1);	  result    =    Math.round(factorials[n]    +    1);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
190	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]  +  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]  +  n);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]  +  n);	  result    =    Math.round(factorials[n]    +    1);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
191	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i).longValue());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i).longValue());  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i).longValue());  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.round(factorialDouble(i).longValue());    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
192	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i).doubleValue());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i).doubleValue());  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i).doubleValue());  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.round(factorialDouble(i).longValue());    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
193	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n  +  2;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i).longValue());  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n  +  2;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i).longValue());  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n  +  2;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i).longValue());  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.round(factorialDouble(i).longValue());    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
194	[BUG]  [BUGGY]  result  =  result  >>  Math.abs(result)?  result  :  factorials[n];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result  >>  Math.abs(result)?  result  :  factorials[n];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result  >>  Math.abs(result)?  result  :  factorials[n];	  return    result    >=    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  <identifier>  expected	85	None	replace
195	[BUG]  [BUGGY]  result  =  Math.log(result)/  n  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.log(result)/  n  +  1;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.log(result)/  n  +  1;	  result    =    Math.log(result)/    n;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
196	[BUG]  [BUGGY]  result  =  Math.log(result)/  3;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.log(result)/  3;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.log(result)/  3;	  result    =    Math.log(result)/    n;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
197	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]  /  NS,  result);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]  /  NS,  result);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]  /  NS,  result);	  result    =    Math.round(factorialDouble(n)/    NS,    result);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
198	[BUG]  [BUGGY]  result  =  Math.round(factorialDouble(n)/  2,  result);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorialDouble(n)/  2,  result);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialDouble(n)/  2,  result);	  result    =    Math.round(factorialDouble(n)/    NS,    result);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
199	[BUG]  [BUGGY]  result  =  Math.round(factorial(n)/  NS,  n);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorial(n)/  NS,  n);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorial(n)/  NS,  n);	  result    =    Math.round(factorialDouble(n)/    NS,    result);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
200	[BUG]  [BUGGY]  result  =  factorials[1].longValue();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[1].longValue();  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[1].longValue();	  result    =    factorials[0].longValue();    	non-compiled	[CE]  <identifier>  expected	97	None	replace
201	[BUG]  [BUGGY]  result  =  factorials[0].doubleValue();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[0].doubleValue();  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[0].doubleValue();	  result    =    factorials[0].longValue();    	non-compiled	[CE]  <identifier>  expected	97	None	replace
202	[BUG]  [BUGGY]  result  =  factorials[0].longValue()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[0].longValue()  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[0].longValue()  +  1;	  result    =    factorials[0].longValue();    	non-compiled	[CE]  <identifier>  expected	97	None	replace
203	[BUG]  [BUGGY]  long[]  factorials  =  getValues();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  long[]  factorials  =  getValues();  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	long[]  factorials  =  getValues();	          result    =    Math.round(factorials[n]);    long[]    factorials    =    getValues();    	non-compiled	[CE]  	58	None	replace
204	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  -  1]);  n  =  Math.round(factorials[n  -  1]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n  -  1]);  n  =  Math.round(factorials[n  -  1]);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n  -  1]);  n  =  Math.round(factorials[n  -  1]);	          result    =    Math.round(factorialDouble(n));    n    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
205	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]  /  Long.MAX_VALUE);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]  /  Long.MAX_VALUE);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]  /  Long.MAX_VALUE);	  result    =    Math.round(factorials[n]    *    Long.MAX_VALUE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
206	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]  *  Long.MAX_VALUE,  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]  *  Long.MAX_VALUE,  n);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]  *  Long.MAX_VALUE,  n);	  result    =    Math.round(factorials[n]    *    Long.MAX_VALUE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
207	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]  *  Long.MAX_VALUE)/  Long.MAX_VALUE;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]  *  Long.MAX_VALUE)/  Long.MAX_VALUE;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]  *  Long.MAX_VALUE)/  Long.MAX_VALUE;	  result    =    Math.round(factorials[n]    *    Long.MAX_VALUE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
208	[BUG]  [BUGGY]  result  =  n  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  n  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  n  +  1;	  result    =    n;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
209	[BUG]  [BUGGY]  result  =  Math.max(result,  Long.MAX_VALUE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.max(result,  Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.max(result,  Long.MAX_VALUE);	  result    =    n;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
210	[BUG]  [BUGGY]  Result  =  Math.round(factorials[n]  *  result);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  =  Math.round(factorials[n]  *  result);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  =  Math.round(factorials[n]  *  result);	  Result    =    Math.round(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
211	[BUG]  [BUGGY]  Result  =  Math.round(factorials[n],  result);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  =  Math.round(factorials[n],  result);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  =  Math.round(factorials[n],  result);	  Result    =    Math.round(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
212	[BUG]  [BUGGY]  result  <  n?  factorials[n]  :  result;  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  <  n?  factorials[n]  :  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  <  n?  factorials[n]  :  result;	  return    result    <    n?    factorials[n]    :    result;    	non-compiled	[CE]  >  expected	59	None	replace
213	[BUG]  [BUGGY]  return  result!=  0?  factorials[n]  :  result;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result!=  0?  factorials[n]  :  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result!=  0?  factorials[n]  :  result;	  return    result    >=    0?    factorials[n]    :    result;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
214	[BUG]  [BUGGY]  return  result  +  1L;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  +  1L;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  +  1L;	  return    result    +    1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
215	[BUG]  [BUGGY]  result  =  Math.log(result)/  result  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.log(result)/  result  +  1;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.log(result)/  result  +  1;	  n    =    Math.log(result)/    result    +    1;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
216	[BUG]  [BUGGY]  n  =  Math.log(result)/  result  +  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  n  =  Math.log(result)/  result  +  2;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	n  =  Math.log(result)/  result  +  2;	  n    =    Math.log(result)/    result    +    1;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
217	[BUG]  [BUGGY]  result  =  Math.round(factorials[0]);  Math.round(factorials[1]);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[0]);  Math.round(factorials[1]);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[0]);  Math.round(factorials[1]);	          result    =    Math.round(factorials[n]);    Math.round(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
218	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]);  Math.round(factorials[n].doubleValue());  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]);  Math.round(factorials[n].doubleValue());  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]);  Math.round(factorials[n].doubleValue());	          result    =    Math.round(factorials[n]);    Math.round(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
219	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i));  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i));  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n  +  1;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i));  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.round(factorialDouble(i));    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
220	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i),  result);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i),  result);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i),  result);  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.round(factorialDouble(i));    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
221	[BUG]  [BUGGY]  result  =  Math.sqrt(result)+  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.sqrt(result)+  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.sqrt(result)+  1;	  return    result;    result    =    Math.sqrt(result);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
222	[BUG]  [BUGGY]  return  result  =  Math.sqrt(result);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  =  Math.sqrt(result);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  =  Math.sqrt(result);	  return    result;    result    =    Math.sqrt(result);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
223	[BUG]  [BUGGY]  result  =  factorials[1]  *  result;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[1]  *  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[1]  *  result;	  result    =    factorials[0]    *    result;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
224	[BUG]  [BUGGY]  result  =  Math.round(factorials[1],  n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[1],  n);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[1],  n);	  result    =    Math.round(factorials[n],    n);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
225	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]  -  1  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]  -  1  +  1);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]  -  1  +  1);	  result    =    Math.round(factorials[n]    -    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
226	[BUG]  [BUGGY]  result  =  Math.round(factorials[0]);  Math.round(factorials[0]);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[0]);  Math.round(factorials[0]);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[0]);  Math.round(factorials[0]);	          result    =    Math.round(factorials[n]);    Math.round(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
227	[BUG]  [BUGGY]  result  =  Math.log(result)/  factorials.length;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.log(result)/  factorials.length;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.log(result)/  factorials.length;	  result    =    Math.log(result)/    n;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
228	[BUG]  [BUGGY]  return  result  >=  0?  result  :  result[n];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  >=  0?  result  :  result[n];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  >=  0?  result  :  result[n];	  return    result    <    0?    result    :    result[n];    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
229	[BUG]  [BUGGY]  result  =  factorials[2];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[2];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[2];	  result    =    factorials[1];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
230	[BUG]  [BUGGY]  Result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	  result    =    Math.round(factorialDouble(n));    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
231	[BUG]  [BUGGY]  return  result  =  Math.round(factorialValue(n));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  =  Math.round(factorialValue(n));  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  =  Math.round(factorialValue(n));	  return    result;    result    =    Math.round(factorialValue(n));    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
232	[BUG]  [BUGGY]  result  =  Math.round(factorials[0]);  n  =  Math.round(factorials[0]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[0]);  n  =  Math.round(factorials[0]);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[0]);  n  =  Math.round(factorials[0]);	          result    =    Math.round(factorials[n]);    n    =    Math.round(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
233	[BUG]  [BUGGY]  return  result  =  Math.round(factorials[n]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  =  Math.round(factorials[n]);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  =  Math.round(factorials[n]);	  return    result;    long    result    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
234	[BUG]  [BUGGY]  return  result;  result  =  Math.round(factorials[n],  n);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result;  result  =  Math.round(factorials[n],  n);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result;  result  =  Math.round(factorials[n],  n);	  return    result;    long    result    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
235	[BUG]  [BUGGY]  return  result  <  =  Math.abs(result)?  result  :  factorials[n  +  2];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  =  Math.abs(result)?  result  :  factorials[n  +  2];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  =  Math.abs(result)?  result  :  factorials[n  +  2];	  return    result    <    =    Math.abs(result)?    result    :    factorials[n    +    1];    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
236	[BUG]  [BUGGY]  long  result  =  Math.round(factorialValue(n));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  long  result  =  Math.round(factorialValue(n));  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	long  result  =  Math.round(factorialValue(n));	          result    =    Math.round(factorialDouble(n));    long    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  ';'  expected	70	None	replace
237	[BUG]  [BUGGY]  n  =  Math.min(factorials.length,  n);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  n  =  Math.min(factorials.length,  n);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	n  =  Math.min(factorials.length,  n);	  n    =    Math.min(result,    n);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
238	[BUG]  [BUGGY]  n  =  Math.log(result)/  factorials.length  +  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  n  =  Math.log(result)/  factorials.length  +  2;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	n  =  Math.log(result)/  factorials.length  +  2;	  n    =    Math.log(result)/    factorials.length;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
239	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  result;  ++i)  {  factorials[i]  =  Math.round(factorialShort(i));  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  result;  ++i)  {  factorials[i]  =  Math.round(factorialShort(i));  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  result;  ++i)  {  factorials[i]  =  Math.round(factorialShort(i));  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.round(factorialShort(i));    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
240	[BUG]  [BUGGY]  result  =  factorials[0]  -  result  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[0]  -  result  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[0]  -  result  +  1;	  result    =    factorials[0]    -    result;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
241	[BUG]  [BUGGY]  result  =  Math.log(result)/  factorials;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.log(result)/  factorials;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.log(result)/  factorials;	  result    =    Math.log(n)/    result;    	non-compiled	[CE]  <identifier>  expected	93	None	replace
242	[BUG]  [BUGGY]  result  =  Math.log(result)/  NS;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.log(result)/  NS;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.log(result)/  NS;	  result    =    Math.log(n)/    result;    	non-compiled	[CE]  <identifier>  expected	93	None	replace
243	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  result;  ++i)  {  factororials[i]  =  Math.round(factorialDouble(i));  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  result;  ++i)  {  factororials[i]  =  Math.round(factorialDouble(i));  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  result;  ++i)  {  factororials[i]  =  Math.round(factorialDouble(i));  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factororials[i]    =    Math.round(factorialDouble(i));    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
244	[BUG]  [BUGGY]  result  =  Math.min(result,  Long.MAX_VALUE);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.min(result,  Long.MAX_VALUE);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.min(result,  Long.MAX_VALUE);	  result    =    Math.min(result,    n);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
245	[BUG]  [BUGGY]  result  =  Math.min(result,  n)/  result;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.min(result,  n)/  result;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.min(result,  n)/  result;	  result    =    Math.log(result)/    result;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
246	[BUG]  [BUGGY]  result  =  Long.MIN_VALUE;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Long.MIN_VALUE;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Long.MIN_VALUE;	  result    =    Long.MAX_VALUE;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
247	[BUG]  [BUGGY]  return  result  [n  +  1]  -  result;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  [n  +  1]  -  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  [n  +  1]  -  result;	  return    result    [n    +    1];    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
248	[BUG]  [BUGGY]  result  =  n  +  factorials[n].longValue();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  n  +  factorials[n].longValue();  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  n  +  factorials[n].longValue();	  result    =    factorials[n].longValue();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
249	[BUG]  [BUGGY]  result  =  Math.round(factorialsToFront(n));  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorialsToFront(n));  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialsToFront(n));	  return    result;    long    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  <identifier>  expected	108	None	replace
250	[BUG]  [BUGGY]  return  result  +  3;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  +  3;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  +  3;	  return    result    +    2;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
251	[BUG]  [BUGGY]  result  =  Math.round(factorials[1]);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[1]);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[1]);	          result    =    Math.round(factorials[n]);    result    =    Math.round(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
252	[BUG]  [BUGGY]  return  result[0]  &&  factorials.length  >  0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result[0]  &&  factorials.length  >  0;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[0]  &&  factorials.length  >  0;	  return    result[n]    &&    factorials.length    >    0;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
253	[BUG]  [BUGGY]  return  result  >=  factorials[n]?  result  :  n;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  >=  factorials[n]?  result  :  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  >=  factorials[n]?  result  :  n;	  return    result    >=    n?    factorials[n]    :    result;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
254	[BUG]  [BUGGY]  return  result  >=  factorials[n]  :  result;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  >=  factorials[n]  :  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  >=  factorials[n]  :  result;	  return    result    >=    n?    factorials[n]    :    result;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
255	[BUG]  [BUGGY]  return  result  >=  factorials[n]?  result  :  Long.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  >=  factorials[n]?  result  :  Long.MAX_VALUE;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  >=  factorials[n]?  result  :  Long.MAX_VALUE;	  return    result    >=    n?    factorials[n]    :    result;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
256	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n)+  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorialValue(n)+  1);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialValue(n)+  1);	  result    =    Math.round(factorialValue(n));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
257	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n  +  1));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorialValue(n  +  1));  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialValue(n  +  1));	  result    =    Math.round(factorialValue(n));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
258	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  -  1]  +  Long.MAX_VALUE);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n  -  1]  +  Long.MAX_VALUE);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n  -  1]  +  Long.MAX_VALUE);	  result    =    Math.round(factorials[n    -    1]);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
259	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  -  1]  +  length);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n  -  1]  +  length);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n  -  1]  +  length);	  result    =    Math.round(factorials[n    -    1]);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
260	[BUG]  [BUGGY]  return  result  <  0?  factorials[n]  :  result  +  1L;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  0?  factorials[n]  :  result  +  1L;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  0?  factorials[n]  :  result  +  1L;	  return    result    <    0?    factorials[n]    :    result    +    1;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
261	[BUG]  [BUGGY]  return  result  <  factorials.length?  factorials[n]  :  result;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  factorials.length?  factorials[n]  :  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  factorials.length?  factorials[n]  :  result;	  return    result    <    n?    factorials[n]    :    result;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
262	[BUG]  [BUGGY]  return  result  <  n?  factorials[0]  :  result;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  n?  factorials[0]  :  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  n?  factorials[0]  :  result;	  return    result    <    n?    factorials[n]    :    result;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
263	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(n));  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(n));  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(n));  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.log(factorials[i]);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
264	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n));  n  =  Math.round(factorialValue(n));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorialValue(n));  n  =  Math.round(factorialValue(n));  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialValue(n));  n  =  Math.round(factorialValue(n));	          result    =    Math.round(factorialDouble(n));    n    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
265	[BUG]  [BUGGY]  result  =  result[0]  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result[0]  -  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result[0]  -  1;	  result    =    result[0];    	non-compiled	[CE]  <identifier>  expected	20	None	replace
266	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n)/  NS,  result);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorialValue(n)/  NS,  result);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialValue(n)/  NS,  result);	  result    =    Math.round(factorialDouble(n)/    NS,    result);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
267	[BUG]  [BUGGY]  result  =  Math.round(factorialShort(n)/  NS,  result);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorialShort(n)/  NS,  result);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialShort(n)/  NS,  result);	  result    =    Math.round(factorialDouble(n)/    NS,    result);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
268	[BUG]  [BUGGY]  result  =  Math.round(factorialDouble(n)/  NS,  3);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorialDouble(n)/  NS,  3);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialDouble(n)/  NS,  3);	  result    =    Math.round(factorialDouble(n)/    NS,    result);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
269	[BUG]  [BUGGY]  result  =  Math.log(result)/  factorials.length  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.log(result)/  factorials.length  +  1;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.log(result)/  factorials.length  +  1;	  n    =    Math.log(result)/    result    +    1;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
270	[BUG]  [BUGGY]  result  =  Math.round(factorials[n].doubleValue()  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n].doubleValue()  +  1);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n].doubleValue()  +  1);	  result    =    Math.round(factorials[n].doubleValue());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
271	[BUG]  [BUGGY]  result  =  Math.round(factorials[n].doubleValue()  /  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n].doubleValue()  /  2);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n].doubleValue()  /  2);	  result    =    Math.round(factorials[n].doubleValue());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
272	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorialValue(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialValue(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	  result    =    Math.round(factorials[n]);    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
273	[BUG]  [BUGGY]  result  =  factorials[n  -  1]  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[n  -  1]  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n  -  1]  +  1;	  result    =    factorials[n    -    1];    	non-compiled	[CE]  <identifier>  expected	81	None	replace
274	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(result);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(result);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(result);  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.floor(factorials[i]);    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
275	[BUG]  [BUGGY]  return  result  <  =  Math.abs(result[n  +  1]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  =  Math.abs(result[n  +  1]);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  =  Math.abs(result[n  +  1]);	  return    result    <    =    Math.abs(result[n]);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
276	[BUG]  [BUGGY]  return  result  <  =  Math.abs(result[0]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  =  Math.abs(result[0]);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  =  Math.abs(result[0]);	  return    result    <    =    Math.abs(result[n]);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
277	[BUG]  [BUGGY]  result  =  result  <  Math.abs(result)?  result  :  factorials[n]  *  result;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result  <  Math.abs(result)?  result  :  factorials[n]  *  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result  <  Math.abs(result)?  result  :  factorials[n]  *  result;	  result    =    result    <    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
278	[BUG]  [BUGGY]  result  =  result  <  Math.abs(result)?  result  :  factorials[0];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result  <  Math.abs(result)?  result  :  factorials[0];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result  <  Math.abs(result)?  result  :  factorials[0];	  result    =    result    <    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
279	[BUG]  [BUGGY]  result  =  factorials[n  +  1]  -  result;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[n  +  1]  -  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n  +  1]  -  result;	  result    =    factorials[n    +    1];    	non-compiled	[CE]  <identifier>  expected	82	None	replace
280	[BUG]  [BUGGY]  result  =  0?  factorials[n]  :  result;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  0?  factorials[n]  :  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  0?  factorials[n]  :  result;	  return    result    ==    0?    factorials[n]    :    result;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
281	[BUG]  [BUGGY]  Result  =  Math.round(factorialValue(result));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  =  Math.round(factorialValue(result));  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  =  Math.round(factorialValue(result));	  Result    =    Math.round(factorialValue(n));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
282	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  result;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i));  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  result;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i));  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  result;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i));  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.round(factorialDouble(i));    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
283	[BUG]  [BUGGY]  return  result[n]  &&  result.length  >  4;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result[n]  &&  result.length  >  4;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n]  &&  result.length  >  4;	  return    result[n]    &&    result.length    >    0;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
284	[BUG]  [BUGGY]  return  result  <  n  ||  result[n]  &  n;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  n  ||  result[n]  &  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  n  ||  result[n]  &  n;	  return    result[n]    &    n;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
285	[BUG]  [BUGGY]  return  result  &  n;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  &  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  &  n;	  return    result[n]    &    n;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
286	[BUG]  [BUGGY]  return  result  ==  Math.abs(result)?  result  :  factorials[n  +  1];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  ==  Math.abs(result)?  result  :  factorials[n  +  1];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  ==  Math.abs(result)?  result  :  factorials[n  +  1];	  return    result    ==    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
287	[BUG]  [BUGGY]  return  result  ==  Math.abs(result)?  result  :  factorials[n]  *  result;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  ==  Math.abs(result)?  result  :  factorials[n]  *  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  ==  Math.abs(result)?  result  :  factorials[n]  *  result;	  return    result    ==    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
288	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n));  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorialValue(n));  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialValue(n));  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }	  result    =    Math.round(factorialDouble(n));    for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.floor(factorials[i]);    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
289	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  -  1]);  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n  -  1]);  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n  -  1]);  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }	  result    =    Math.round(factorialDouble(n));    for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.floor(factorials[i]);    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
290	[BUG]  [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "result  is  too  large  to  fit  in  a  long ");  }	  Result    <    Long.MIN_VALUE    ||    result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "factorial    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  >  expected	92	None	replace
291	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]  *  Long.MAX_VALUE  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]  *  Long.MAX_VALUE  +  1);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]  *  Long.MAX_VALUE  +  1);	  result    =    Math.round(factorials[n]    *    Long.MAX_VALUE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
292	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]  *  Long.MAX_VALUE)+  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]  *  Long.MAX_VALUE)+  1;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]  *  Long.MAX_VALUE)+  1;	  result    =    Math.round(factorials[n]    *    Long.MAX_VALUE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
293	[BUG]  [BUGGY]  return  result  <  Math.abs(result)?  result  :  factorials[n]  *  result;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  Math.abs(result)?  result  :  factorials[n]  *  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  Math.abs(result)?  result  :  factorials[n]  *  result;	  return    result    <    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
294	[BUG]  [BUGGY]  return  result  <  =  n?  result  :  factorials[n];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  =  n?  result  :  factorials[n];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  =  n?  result  :  factorials[n];	  return    result    <    =    n?    result    :    result[n];    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
295	[BUG]  [BUGGY]  Result  <  Long>  result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  <  Long>  result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  <  Long>  result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	  Result    <    Long>    result    =    Math.round(factorialDouble(n));    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "Failure    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
296	[BUG]  [BUGGY]  return  result[n  -  1]  *  result;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result[n  -  1]  *  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n  -  1]  *  result;	  return    result[n    -    1];    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
297	[BUG]  [BUGGY]  return  result[n  -  1]  +  length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result[n  -  1]  +  length;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n  -  1]  +  length;	  return    result[n    -    1];    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
298	[BUG]  [BUGGY]  result  =  factorials[n]  &  result;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[n]  &  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n]  &  result;	  result    =    factorials[n]    *    result;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
299	[BUG]  [BUGGY]  return  result  >=  n?  result  :  result[n];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  >=  n?  result  :  result[n];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  >=  n?  result  :  result[n];	  return    result    <    n?    result    :    result[n];    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
300	[BUG]  [BUGGY]  Result  =  Math.round(factorials[n]  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  =  Math.round(factorials[n]  -  1);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  =  Math.round(factorials[n]  -  1);	  Result    =    Math.round(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
301	[BUG]  [BUGGY]  Result  =  Math.round(factorials[n]  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  =  Math.round(factorials[n]  +  1);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  =  Math.round(factorials[n]  +  1);	  Result    =    Math.round(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
302	[BUG]  [BUGGY]  return  result  =  Math.round(factorials[n  -  1]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  =  Math.round(factorials[n  -  1]);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  =  Math.round(factorials[n  -  1]);	  return    result;    result    =    Math.round(factorials[n    -    1]);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
303	[BUG]  [BUGGY]  return  result;  result  =  Math.round(factorials[n  -  1]  *  Long.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result;  result  =  Math.round(factorials[n  -  1]  *  Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result;  result  =  Math.round(factorials[n  -  1]  *  Long.MAX_VALUE);	  return    result;    result    =    Math.round(factorials[n    -    1]);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
304	[BUG]  [BUGGY]  return  result  *  3;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  *  3;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  *  3;	  return    result    *    result;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
305	[BUG]  [BUGGY]  return  result  <  =  Math.abs(result)?  factorials[n  +  1]  :  result;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  =  Math.abs(result)?  factorials[n  +  1]  :  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  =  Math.abs(result)?  factorials[n  +  1]  :  result;	  return    result    <    =    Math.abs(result)?    result    :    factorials[n    +    1];    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
306	[BUG]  [BUGGY]  return  result  <  =  Math.abs(result)?  factororials[n  +  1]  :  result;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  =  Math.abs(result)?  factororials[n  +  1]  :  result;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  =  Math.abs(result)?  factororials[n  +  1]  :  result;	  return    result    <    =    Math.abs(result)?    result    :    factorials[n    +    1];    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
307	[BUG]  [BUGGY]  int  n  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  int  n  =  Math.round(factorialDouble(n));  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	int  n  =  Math.round(factorialDouble(n));	          result    =    Math.round(factorialDouble(n));    long    n    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
308	[BUG]  [BUGGY]  long[]  factorials  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  long[]  factorials  =  Math.round(factorialDouble(n));  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	long[]  factorials  =  Math.round(factorialDouble(n));	          result    =    Math.round(factorials[n]);    long[]    factorials    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
309	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  result;  ++i)  {  factorials[i]  =  Math.round(factorialValue(i));  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  result;  ++i)  {  factorials[i]  =  Math.round(factorialValue(i));  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  result;  ++i)  {  factorials[i]  =  Math.round(factorialValue(i));  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.round(factorialValue(i));    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
310	[BUG]  [BUGGY]  result  =  result  *  factorials;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result  *  factorials;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result  *  factorials;	  result    =    factorials[0]    *    result;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
311	[BUG]  [BUGGY]  return  result;  result  =  Math.round(factorials[n].doubleValue());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result;  result  =  Math.round(factorials[n].doubleValue());  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result;  result  =  Math.round(factorials[n].doubleValue());	  return    result;    long    result    =    Math.round(factorials[n]);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
312	[BUG]  [BUGGY]  if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  result  =  Math.round(factorialDouble(n));  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  result  =  Math.round(factorialDouble(n));  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  result  =  Math.round(factorialDouble(n));  }	          result    =    Math.round(factorialDouble(n));    long    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
313	[BUG]  [BUGGY]  result  =  Math.round(factorials[n].doubleValue());  n  =  Math.round(factorials[n].doubleValue());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n].doubleValue());  n  =  Math.round(factorials[n].doubleValue());  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n].doubleValue());  n  =  Math.round(factorials[n].doubleValue());	          result    =    Math.round(factorialDouble(n));    n    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
314	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]);  n  =  Math.round(factorials[n].doubleValue());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]);  n  =  Math.round(factorials[n].doubleValue());  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]);  n  =  Math.round(factorials[n].doubleValue());	          result    =    Math.round(factorials[n]);    n    =    Math.round(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
315	[BUG]  [BUGGY]  if(result  ==  Long.MAX_VALUE)  {  return  result;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  if(result  ==  Long.MAX_VALUE)  {  return  result;  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	if(result  ==  Long.MAX_VALUE)  {  return  result;  }	  return    result;    long    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
316	[BUG]  [BUGGY]  if(result  ==  Long.MAX_VALUE)  {  return  result;  }  else  {  return  result;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  if(result  ==  Long.MAX_VALUE)  {  return  result;  }  else  {  return  result;  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	if(result  ==  Long.MAX_VALUE)  {  return  result;  }  else  {  return  result;  }	  return    result;    long    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
317	[BUG]  [BUGGY]  result  =  Math.ceil(result);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.ceil(result);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.ceil(result);	  result    =    Long.MAX_VALUE;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
318	[BUG]  [BUGGY]  result  =  Math.log(n)/  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.log(n)/  2;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.log(n)/  2;	  n    =    Math.log(result)/    2;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
319	[BUG]  [BUGGY]  result  =  Math.round(factorials[N]);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[N]);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[N]);	          result    =    Math.round(factorials[n]);    Result    =    Math.round(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
320	[BUG]  [BUGGY]  if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  }  else  {  throw  new  ArithmeticException( " ");  }	          result    =    Math.round(factorialDouble(n));    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
321	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialShort(result));  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialShort(result));  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialShort(result));  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.round(factorialShort(i));    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
322	[BUG]  [BUGGY]  Result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  Result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }	  result    =    Math.round(factorials[n]);    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "Failure    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
323	[BUG]  [BUGGY]  if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  Math.round(factorials[n]);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  Math.round(factorials[n]);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  Math.round(factorials[n]);  }	          result    =    Math.round(factorialDouble(n));    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
324	[BUG]  [BUGGY]  if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  Math.round(factorials[n]);  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  Math.round(factorials[n]);  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  Math.round(factorials[n]);  }  else  {  throw  new  ArithmeticException( " ");  }	          result    =    Math.round(factorialDouble(n));    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
325	[BUG]  [BUGGY]  if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  Math.round(factorialDouble(n));  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  Math.round(factorialDouble(n));  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  Math.round(factorialDouble(n));  }  else  {  throw  new  ArithmeticException( " ");  }	          result    =    Math.round(factorialDouble(n));    Math.round(factorialDouble(n));    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
326	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  +  1]  *  n);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n  +  1]  *  n);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n  +  1]  *  n);	  result    =    Math.round(factorials[n    +    1]);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
327	[BUG]  [BUGGY]  return  result  >=  factorials[n]  &&  result  <  =  MAX_VALUE;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  >=  factorials[n]  &&  result  <  =  MAX_VALUE;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  >=  factorials[n]  &&  result  <  =  MAX_VALUE;	  return    result    >=    n?    factorials[n]    :    result;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
328	[BUG]  [BUGGY]  return  result  >=  factorials[n]  &&  result  <  =  Math.abs(result);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  >=  factorials[n]  &&  result  <  =  Math.abs(result);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  >=  factorials[n]  &&  result  <  =  Math.abs(result);	  return    result    >=    n?    factorials[n]    :    result;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
329	[BUG]  [BUGGY]  return  result;  result  =  Math.max(result,  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result;  result  =  Math.max(result,  1);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result;  result  =  Math.max(result,  1);	  return    result;    result    =    Math.max(result,    0);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
330	[BUG]  [BUGGY]  result  =  Math.round(factorials.length);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials.length);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials.length);	  return    result;    result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
331	[BUG]  [BUGGY]  return  result  ==  Math.abs(result)?  result  :  factorials[n],  n);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  ==  Math.abs(result)?  result  :  factorials[n],  n);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  ==  Math.abs(result)?  result  :  factorials[n],  n);	  return    result    ==    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
332	[BUG]  [BUGGY]  return  result  >  n?  result  :  result[n];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  >  n?  result  :  result[n];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  >  n?  result  :  result[n];	  return    result    <    n?    result    :    result[n];    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
333	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorials[i]);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorials[i]);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorials[i]);  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.ceil(factorials[i]);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
334	[BUG]  [BUGGY]  result  =  Math.round(factorialShort(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorialShort(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialShort(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	  result    =    Math.round(factorials[n]);    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
335	[BUG]  [BUGGY]  result  =  Math.log(result)/  2  +  n;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.log(result)/  2  +  n;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.log(result)/  2  +  n;	  result    =    Math.log(result)/    result;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
336	[BUG]  [BUGGY]  return  result[n]  &  factorials;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result[n]  &  factorials;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n]  &  factorials;	  return    result[n]    &    n;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
337	[BUG]  [BUGGY]  return  result[n]  &  BYTE_PI;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result[n]  &  BYTE_PI;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n]  &  BYTE_PI;	  return    result[n]    &    n;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
338	[BUG]  [BUGGY]  result  =  Math.log(result)/  2.0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.log(result)/  2.0;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.log(result)/  2.0;	  result    =    Math.log(result)/    n;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
339	[BUG]  [BUGGY]  result  =  Math.max(result,  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.max(result,  2);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.max(result,  2);	  result    =    Math.max(result,    0);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
340	[BUG]  [BUGGY]  return  result  +  n  *  n;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  +  n  *  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  +  n  *  n;	  return    result    +    n;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
341	[BUG]  [BUGGY]  for(int  i  =  0;  n  <  factorials.length;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i).longValue());  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  for(int  i  =  0;  n  <  factorials.length;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i).longValue());  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  n  <  factorials.length;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i).longValue());  }	  for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.round(factorialDouble(i).longValue());    }    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
342	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]  -  1,  n);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n]  -  1,  n);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]  -  1,  n);	  result    =    Math.round(factorials[n]    -    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
343	[BUG]  [BUGGY]  return  result  <  Math.abs(result)?  n  :  factorials[n];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  Math.abs(result)?  n  :  factorials[n];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  Math.abs(result)?  n  :  factorials[n];	  return    result    <    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
344	[BUG]  [BUGGY]  return  result  <  Math.abs(factorials)?  result  :  result[n];  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  Math.abs(factorials)?  result  :  result[n];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  Math.abs(factorials)?  result  :  result[n];	  return    result    <    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
345	[BUG]  [BUGGY]  return  result  >=  Math.abs(result)?  n  :  factorials[n];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  >=  Math.abs(result)?  n  :  factorials[n];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  >=  Math.abs(result)?  n  :  factorials[n];	  return    result    >=    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
346	[BUG]  [BUGGY]  result  =  Math.round(factorials[n],  EPSILON);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n],  EPSILON);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n],  EPSILON);	  result    =    Math.round(factorials[n],    n);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
347	[BUG]  [BUGGY]  if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }	  result    =    Math.round(factorialDouble(n));    for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.floor(factorials[i]);    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
348	[BUG]  [BUGGY]  result  =  factorials[n  -  1]  &  n;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[n  -  1]  &  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n  -  1]  &  n;	  result    =    factorials[n    -    1];    	non-compiled	[CE]  <identifier>  expected	81	None	replace
349	[BUG]  [BUGGY]  return  result  <  =  Math.abs(factorials[n]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  <  =  Math.abs(factorials[n]);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  =  Math.abs(factorials[n]);	  return    result    <    =    Math.abs(result[n]);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
350	[BUG]  [BUGGY]  result  =  result[factorials.length];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result[factorials.length];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result[factorials.length];	  result    =    n[factorials.length];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
351	[BUG]  [BUGGY]  result  =  Math.max(result,  n  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.max(result,  n  -  1);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.max(result,  n  -  1);	  result    =    Math.max(result,    n);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
352	[BUG]  [BUGGY]  return  result  [result  +  1];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result  [result  +  1];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  [result  +  1];	  return    result    [n    +    1];    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
353	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  -  1]  +  n);  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.round(factorials[n  -  1]  +  n);  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n  -  1]  +  n);	  result    =    Math.round(factorials[n    -    1]);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
354	[BUG]  [BUGGY]  result  =  Math.log(result)/  2  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  Math.log(result)/  2  +  1;  [BUGGY]      return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.log(result)/  2  +  1;	  n    =    Math.log(result)/    result    +    1;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
355	[BUG]  [BUGGY]  result  =  factorials[n].longValue()  +  n;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  factorials[n].longValue()  +  n;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n].longValue()  +  n;	  result    =    factorials[n].longValue();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
356	[BUG]  [BUGGY]  return  result[n  -  1]  &&(result  ==  Long.MAX_VALUE  ||  result  ==  Long.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result[n  -  1]  &&(result  ==  Long.MAX_VALUE  ||  result  ==  Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n  -  1]  &&(result  ==  Long.MAX_VALUE  ||  result  ==  Long.MAX_VALUE);	  return    result[n    -    1];    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
357	[BUG]  [BUGGY]  return  result[n  -  1]  &&(result  ==  Long.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result[n  -  1]  &&(result  ==  Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n  -  1]  &&(result  ==  Long.MAX_VALUE);	  return    result[n    -    1];    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
358	[BUG]  [BUGGY]  return  result[n  -  1]  &&(result  <  =  Long.MAX_VALUE  ||  result  >  Long.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  return  result[n  -  1]  &&(result  <  =  Long.MAX_VALUE  ||  result  >  Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n  -  1]  &&(result  <  =  Long.MAX_VALUE  ||  result  >  Long.MAX_VALUE);	  return    result[n    -    1];    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
359	[BUG]  [BUGGY]  result  =  result  <  Math.abs(result)?  result  :  factorials[n],  n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result  <  Math.abs(result)?  result  :  factorials[n],  n);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result  <  Math.abs(result)?  result  :  factorials[n],  n);	  result    =    result    <    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
360	[BUG]  [BUGGY]  result  =  result  <  Math.abs(result)?  n  :  factorials[n];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(       "factorial  value  is  too  large  to  fit  in  a  long     ");  }      [BUGGY]  result  =  result  <  Math.abs(result)?  n  :  factorials[n];  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result  <  Math.abs(result)?  n  :  factorials[n];	  result    =    result    <    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
