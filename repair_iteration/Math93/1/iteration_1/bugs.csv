bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    result  =  Math.round(factorials[n]);  [BUGGY]  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	add	    result  =  Math.round(factorials[n]);		compilable	  [FE]  AssertionFailedError  	2	1	add
2	[BUG]  [BUGGY]    result  =  Math.round(factorials[n]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    result  =  Math.round(factorials[n]);  [BUGGY]  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	    result  =  Math.round(factorials[n]);		compilable	  [FE]  AssertionFailedError  	2	1	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    result  =  Math.round(factorialDouble(n));  [BUGGY]  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	add	    result  =  Math.round(factorialDouble(n));		compilable	  [FE]  AssertionFailedError  	2	1	add
4	[BUG]  [BUGGY]    result  =  Math.round(factorialDouble(n));  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    result  =  Math.round(factorialDouble(n));  [BUGGY]  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	    result  =  Math.round(factorialDouble(n));		compilable	  [FE]  AssertionFailedError  	2	1	add
5	[BUG]  [BUGGY]    result  =  Math.round(factorialDouble(n),  result);  [CE]  no  suitable  method  found  for  round(double,long)  [FE]        AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    result  =  Math.round(factorialDouble(n),  result);  [BUGGY]  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	    result  =  Math.round(factorialDouble(n),  result);		non-compiled	[CE]  no  suitable  method  found  for  round(double,long)	2	None	add
6	[BUG]  [BUGGY]    n  =  Math.log(result)/  result;  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    n  =  Math.log(result)/  result;  [BUGGY]  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	    n  =  Math.log(result)/  result;		non-compiled	[CE]  possible  loss  of  precision	2	None	add
7	[BUG]  [BUGGY]    n  =  Math.max(result,  result);  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    n  =  Math.max(result,  result);  [BUGGY]  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	    n  =  Math.max(result,  result);		non-compiled	[CE]  possible  loss  of  precision	2	None	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]  return  result;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	add	return  result;	return  factorials[n];  	compilable	  [FE]  AssertionFailedError  	1	1	replace
9	[BUG]  [BUGGY]  return  result;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]  return  result;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result;	return  factorials[n];  	compilable	  [FE]  AssertionFailedError  	1	1	replace
10	[BUG]  [BUGGY]  return  result[n];  [CE]  array  required,  but  long  found  [FE]      AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]  return  result[n];  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n];	return  factorials[n];  	non-compiled	[CE]  array  required,  but  long  found	1	None	replace
11	[BUG]  [BUGGY]  result  =  result;  [CE]  missing  return  statement  [FE]        AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]  result  =  result;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result;	return  factorials[n];  	non-compiled	[CE]  missing  return  statement	1	None	replace
12	[BUG]  [BUGGY]    if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	    if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
13	[BUG]  [BUGGY]    if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  missing  return  statement  [FE]      AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	    if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }		non-compiled	[CE]  missing  return  statement	2	None	add
14	[BUG]  [BUGGY]    if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	    if(result  ==  Long.MAX_VALUE)  {  result  =  Math.round(factorialDouble(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
15	[BUG]  [BUGGY]  result  =  factorials[n];  [CE]  missing  return  statement  [FE]    AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]  result  =  factorials[n];  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n];	return  factorials[n];  	non-compiled	[CE]  missing  return  statement	1	None	replace
16	[BUG]  [BUGGY]  result  =  factorials[0];  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]  result  =  factorials[0];  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[0];	return  factorials[n];  	non-compiled	[CE]  possible  loss  of  precision	1	None	replace
17	[BUG]  [BUGGY]  return  result  <  0?  factorials[n]  :  result;  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]  return  result  <  0?  factorials[n]  :  result;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  0?  factorials[n]  :  result;	return  factorials[n];  	non-compiled	[CE]  possible  loss  of  precision	1	None	replace
18	[BUG]  [BUGGY]  return  result  <  =  n?  factorials[n]  :  result;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]  return  result  <  =  n?  factorials[n]  :  result;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  =  n?  factorials[n]  :  result;	return  factorials[n];  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]  return  result  <  =  Math.abs(result)?  result  :  factorials[n];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]  return  result  <  =  Math.abs(result)?  result  :  factorials[n];  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  =  Math.abs(result)?  result  :  factorials[n];	return  factorials[n];  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
20	[BUG]  [BUGGY]    if(result  ==  Long.MAX_VALUE)  {  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i));  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    if(result  ==  Long.MAX_VALUE)  {  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i));  }  [BUGGY]  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	    if(result  ==  Long.MAX_VALUE)  {  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i));  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
21	[BUG]  [BUGGY]    if(result  ==  Long.MAX_VALUE)  {  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(   "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    if(result  ==  Long.MAX_VALUE)  {  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [BUGGY]  return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	    if(result  ==  Long.MAX_VALUE)  {  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
