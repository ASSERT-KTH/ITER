bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  result  =  factorials[n]  -  1;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  factorials[n]  -  1;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n]  -  1;	  result    =    factorials[n];    	non-compiled	[CE]  possible  loss  of  precision	15	None	replace
2	[BUG]  [BUGGY]  result  =  factorials[n]  *  result;  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  factorials[n]  *  result;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n]  *  result;	  result    =    factorials[n];    	non-compiled	[CE]  possible  loss  of  precision	15	None	replace
3	[BUG]  [BUGGY]  result  =  result[n];  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  result[n];  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result[n];	  result    =    factorials[n];    	non-compiled	[CE]  possible  loss  of  precision	15	None	replace
4	[BUG]  [BUGGY]  result  =  n[factorials.length];  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  n[factorials.length];  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  n[factorials.length];	  result    =    factorials[n];    	non-compiled	[CE]  possible  loss  of  precision	15	None	replace
5	[BUG]  [BUGGY]  result  =  Math.max(result,  n);  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.max(result,  n);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.max(result,  n);	      n    =    Math.max(result,    result);    	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
6	[BUG]  [BUGGY]  n  =  Math.max(result,  n);  [CE]  possible  loss  of  precision  [FE]                  AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  n  =  Math.max(result,  n);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	n  =  Math.max(result,  n);	      n    =    Math.max(result,    result);    	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
7	[BUG]  [BUGGY]  n  =  Math.min(result,  n);  [CE]  possible  loss  of  precision  [FE]                    AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  n  =  Math.min(result,  n);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	n  =  Math.min(result,  n);	      n    =    Math.max(result,    result);    	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
8	[BUG]  [BUGGY]  result  =  Math.min(result,  n);  [CE]  possible  loss  of  precision  [FE]                      AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.min(result,  n);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.min(result,  n);	      n    =    Math.max(result,    result);    	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
9	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]  -  1);  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.round(factorials[n]  -  1);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]  -  1);	      result    =    Math.round(factorials[n]);    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
10	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]  *  Long.MAX_VALUE);  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.round(factorials[n]  *  Long.MAX_VALUE);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]  *  Long.MAX_VALUE);	      result    =    Math.round(factorials[n]);    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
11	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]  +  1);  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.round(factorials[n]  +  1);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]  +  1);	      result    =    Math.round(factorials[n]);    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
12	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }	      if(result    ==    Long.MAX_VALUE)    {    result    =    Math.round(factorialDouble(n));    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "Failure    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  possible  loss  of  precision	14	None	replace
13	[BUG]  [BUGGY]  result  =  Math.round(factorialDouble(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [CE]  missing  return  statement  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.round(factorialDouble(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialDouble(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }	      if(result    ==    Long.MAX_VALUE)    {    result    =    Math.round(factorialDouble(n));    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "Failure    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  missing  return  statement	14	None	replace
14	[BUG]  [BUGGY]  Result  <  Long>  result  =  Math.round(factorialDouble(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  Result  <  Long>  result  =  Math.round(factorialDouble(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  <  Long>  result  =  Math.round(factorialDouble(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "Failure  value  is  too  large  to  fit  in  a  long ");  }	      if(result    ==    Long.MAX_VALUE)    {    result    =    Math.round(factorialDouble(n));    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "Failure    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  possible  loss  of  precision	14	None	replace
15	[BUG]  [BUGGY]  result  =  result  <  Math.abs(result)?  result  :  factorials[n];  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  result  <  Math.abs(result)?  result  :  factorials[n];  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result  <  Math.abs(result)?  result  :  factorials[n];	  return    result    <    =    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
16	[BUG]  [BUGGY]  return  result  ==  Math.abs(result)?  result  :  factorials[n];  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  ==  Math.abs(result)?  result  :  factorials[n];  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  ==  Math.abs(result)?  result  :  factorials[n];	  return    result    <    =    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
17	[BUG]  [BUGGY]  return  result  <  Math.abs(result)?  result  :  factorials[n];  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  <  Math.abs(result)?  result  :  factorials[n];  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  Math.abs(result)?  result  :  factorials[n];	  return    result    <    =    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
18	[BUG]  [BUGGY]  result  =  factorials[0]  -  result;  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  factorials[0]  -  result;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[0]  -  result;	  result    =    factorials[0];    	non-compiled	[CE]  possible  loss  of  precision	16	None	replace
19	[BUG]  [BUGGY]  result  =  factorials[1];  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  factorials[1];  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[1];	  result    =    factorials[0];    	non-compiled	[CE]  possible  loss  of  precision	16	None	replace
20	[BUG]  [BUGGY]  result  =  result[0];  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  result[0];  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result[0];	  result    =    factorials[0];    	non-compiled	[CE]  possible  loss  of  precision	16	None	replace
21	[BUG]  [BUGGY]  result  =  Math.log(result)/  result;  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.log(result)/  result;  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.log(result)/  result;	      n    =    Math.log(result)/    result;    	non-compiled	[CE]  possible  loss  of  precision	6	None	replace
22	[BUG]  [BUGGY]  n  =  Math.log(result)/  result  +  1;  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  n  =  Math.log(result)/  result  +  1;  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	n  =  Math.log(result)/  result  +  1;	      n    =    Math.log(result)/    result;    	non-compiled	[CE]  possible  loss  of  precision	6	None	replace
23	[BUG]  [BUGGY]  n  =  Math.log(result)/  2;  [CE]  possible  loss  of  precision  [FE]                  AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  n  =  Math.log(result)/  2;  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	n  =  Math.log(result)/  2;	      n    =    Math.log(result)/    result;    	non-compiled	[CE]  possible  loss  of  precision	6	None	replace
24	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  -  1]);  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.round(factorials[n  -  1]);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n  -  1]);	      result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  possible  loss  of  precision	4	None	replace
25	[BUG]  [BUGGY]  result  =  Math.round(factorials[n].doubleValue());  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.round(factorials[n].doubleValue());  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n].doubleValue());	      result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  possible  loss  of  precision	4	None	replace
26	[BUG]  [BUGGY]  result  =  Math.round(factorials[n));  [CE]  ']'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.round(factorials[n));  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n));	      result    =    Math.round(factorialDouble(n));    	non-compiled	[CE]  ']'  expected	4	None	replace
27	[BUG]  [BUGGY]  return  result;  result  =  Math.round(factorials[n]);  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result;  result  =  Math.round(factorials[n]);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return    result;    result  =  Math.round(factorials[n]);	  	non-compiled	[CE]  possible  loss  of  precision	8	None	add
28	[BUG]  [BUGGY]  return  result;  result  =  Math.round(factorialDouble(n));  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result;  result  =  Math.round(factorialDouble(n));  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return    result;    result  =  Math.round(factorialDouble(n));	  	non-compiled	[CE]  possible  loss  of  precision	8	None	add
29	[BUG]  [BUGGY]  return  result;  result  =  Math.round(factorials[n  -  1]);  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result;  result  =  Math.round(factorials[n  -  1]);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return    result;    result  =  Math.round(factorials[n  -  1]);	  	non-compiled	[CE]  possible  loss  of  precision	8	None	add
30	[BUG]  [BUGGY]  return  result;  long  result  =  Math.round(factorials[n]);  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result;  long  result  =  Math.round(factorials[n]);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return    result;    long  result  =  Math.round(factorials[n]);	  	non-compiled	[CE]  possible  loss  of  precision	8	None	add
31	[BUG]  [BUGGY]  return  result;  result  =  Math.round(factorials[n  +  1]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result;  result  =  Math.round(factorials[n  +  1]);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return    result;    result  =  Math.round(factorials[n  +  1]);	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i));  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i));  }  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i));  }	      if(result    ==    Long.MAX_VALUE)    {    for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.round(factorialDouble(i));    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factororials[i]  =  Math.round(factorialDouble(i));  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factororials[i]  =  Math.round(factorialDouble(i));  }  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factororials[i]  =  Math.round(factorialDouble(i));  }	      if(result    ==    Long.MAX_VALUE)    {    for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.round(factorialDouble(i));    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i).longValue());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i).longValue());  }  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialDouble(i).longValue());  }	      if(result    ==    Long.MAX_VALUE)    {    for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.round(factorialDouble(i));    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
35	[BUG]  [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	      if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  >  expected	13	None	replace
36	[BUG]  [BUGGY]  Result  <  Long.MAX_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  Result  <  Long.MAX_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  <  Long.MAX_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	      if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  >  expected	13	None	replace
37	[BUG]  [BUGGY]  result  =  Long.MAX_VALUE;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Long.MAX_VALUE;  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Long.MAX_VALUE;	      if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
38	[BUG]  [BUGGY]  return  result  +  1;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  +  1;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  +  1;	  return    result;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
39	[BUG]  [BUGGY]  return  result  +  n;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  +  n;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  +  n;	  return    result;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
40	[BUG]  [BUGGY]  return  result  +  2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  +  2;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  +  2;	  return    result;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
41	[BUG]  [BUGGY]  return  result  *  result;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  *  result;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  *  result;	  return    result;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
42	[BUG]  [BUGGY]  return  result[n  -  1];  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result[n  -  1];  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n  -  1];	  return    result[n];    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
43	[BUG]  [BUGGY]  return  result[n]  &&  factorials.length  >  0;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result[n]  &&  factorials.length  >  0;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n]  &&  factorials.length  >  0;	  return    result[n];    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
44	[BUG]  [BUGGY]  return  result[n]  &&  result.length  >  0;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result[n]  &&  result.length  >  0;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n]  &&  result.length  >  0;	  return    result[n];    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
45	[BUG]  [BUGGY]  result  =  Math.round(factorialDouble(n),  NS);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.round(factorialDouble(n),  NS);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialDouble(n),  NS);	      result    =    Math.round(factorialDouble(n),    result);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
46	[BUG]  [BUGGY]  result  =  Math.round(factorialDouble(n),  NS,  result);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.round(factorialDouble(n),  NS,  result);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialDouble(n),  NS,  result);	      result    =    Math.round(factorialDouble(n),    result);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
47	[BUG]  [BUGGY]  result  =  Math.round(factorialDouble(n)/  NS,  result);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.round(factorialDouble(n)/  NS,  result);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialDouble(n)/  NS,  result);	      result    =    Math.round(factorialDouble(n),    result);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
48	[BUG]  [BUGGY]  result  =  result  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  result  +  1;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  result  +  1;	  result    =    result;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
49	[BUG]  [BUGGY]  result  =  n;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  n;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  n;	  result    =    result;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
50	[BUG]  [BUGGY]  result  =  Math.max(result,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.max(result,  0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.max(result,  0);	  result    =    result;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }	      if(result    ==    Long.MAX_VALUE)    {    for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.floor(factorials[i]);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.ceil(factorials[i]);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.ceil(factorials[i]);  }  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.ceil(factorials[i]);  }	      if(result    ==    Long.MAX_VALUE)    {    for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.floor(factorials[i]);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.log(factorials[i]);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.log(factorials[i]);  }  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.log(factorials[i]);  }	      if(result    ==    Long.MAX_VALUE)    {    for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.floor(factorials[i]);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
54	[BUG]  [BUGGY]      result  =  Math.round(factorials[n]);  result  =  Math.round(factorials[n]);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]      result  =  Math.round(factorials[n]);  result  =  Math.round(factorials[n]);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	        result    =    Math.round(factorials[n]);    result  =  Math.round(factorials[n]);	  	non-compiled	[CE]  <identifier>  expected	1	None	add
55	[BUG]  [BUGGY]      result  =  Math.round(factorials[n]);  Result  =  Math.round(factorials[n]);  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]      result  =  Math.round(factorials[n]);  Result  =  Math.round(factorials[n]);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	        result    =    Math.round(factorials[n]);    Result  =  Math.round(factorials[n]);	  	non-compiled	[CE]  <identifier>  expected	1	None	add
56	[BUG]  [BUGGY]      result  =  Math.round(factorials[n]);  long  result  =  Math.round(factorials[n]);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]      result  =  Math.round(factorials[n]);  long  result  =  Math.round(factorials[n]);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	        result    =    Math.round(factorials[n]);    long  result  =  Math.round(factorials[n]);	  	non-compiled	[CE]  <identifier>  expected	1	None	add
57	[BUG]  [BUGGY]      result  =  Math.round(factorials[n]);  long[]  factorials  =  new  long[n];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]      result  =  Math.round(factorials[n]);  long[]  factorials  =  new  long[n];  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	        result    =    Math.round(factorials[n]);    long[]  factorials  =  new  long[n];	  	non-compiled	[CE]  <identifier>  expected	1	None	add
58	[BUG]  [BUGGY]      result  =  Math.round(factorials[n]);  long[]  factorials  =  getValues();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]      result  =  Math.round(factorials[n]);  long[]  factorials  =  getValues();  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	        result    =    Math.round(factorials[n]);    long[]  factorials  =  getValues();	  	non-compiled	[CE]  <identifier>  expected	1	None	add
59	[BUG]  [BUGGY]  return  result  <  n?  factorials[n]  :  result;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  <  n?  factorials[n]  :  result;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  n?  factorials[n]  :  result;	  return    result    <    =    n?    factorials[n]    :    result;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
60	[BUG]  [BUGGY]  return  result  <  =  n?  factorials[n]  :  result  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  <  =  n?  factorials[n]  :  result  +  1;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  =  n?  factorials[n]  :  result  +  1;	  return    result    <    =    n?    factorials[n]    :    result;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
61	[BUG]  [BUGGY]  return  result  >=  n?  factorials[n]  :  result;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  >=  n?  factorials[n]  :  result;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  >=  n?  factorials[n]  :  result;	  return    result    <    =    n?    factorials[n]    :    result;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
62	[BUG]  [BUGGY]  result  =  Math.round(factorialDouble(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.round(factorialDouble(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialDouble(n));  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	      if(result    ==    Long.MAX_VALUE)    {    result    =    Math.round(factorialDouble(n));    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
63	[BUG]  [BUGGY]  result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n]);  if(result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( " ");  }	      if(result    ==    Long.MAX_VALUE)    {    result    =    Math.round(factorialDouble(n));    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
64	[BUG]  [BUGGY]  return  result  >=  0?  factorials[n]  :  result;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  >=  0?  factorials[n]  :  result;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  >=  0?  factorials[n]  :  result;	  return    result    <    0?    factorials[n]    :    result;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
65	[BUG]  [BUGGY]  return  result  ==  0?  factorials[n]  :  result;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  ==  0?  factorials[n]  :  result;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  ==  0?  factorials[n]  :  result;	  return    result    <    0?    factorials[n]    :    result;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
66	[BUG]  [BUGGY]      result  =  Math.round(factorialDouble(n));  result  =  Math.round(factorialDouble(n));  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]      result  =  Math.round(factorialDouble(n));  result  =  Math.round(factorialDouble(n));  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	        result    =    Math.round(factorialDouble(n));    result  =  Math.round(factorialDouble(n));	  	non-compiled	[CE]  <identifier>  expected	3	None	add
67	[BUG]  [BUGGY]      result  =  Math.round(factorialDouble(n));  Result  =  Math.round(factorialDouble(n));  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]      result  =  Math.round(factorialDouble(n));  Result  =  Math.round(factorialDouble(n));  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	        result    =    Math.round(factorialDouble(n));    Result  =  Math.round(factorialDouble(n));	  	non-compiled	[CE]  <identifier>  expected	3	None	add
68	[BUG]  [BUGGY]      result  =  Math.round(factorialDouble(n));  long  n  =  Math.round(factorialDouble(n));  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]      result  =  Math.round(factorialDouble(n));  long  n  =  Math.round(factorialDouble(n));  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	        result    =    Math.round(factorialDouble(n));    long  n  =  Math.round(factorialDouble(n));	  	non-compiled	[CE]  <identifier>  expected	3	None	add
69	[BUG]  [BUGGY]      result  =  Math.round(factorialDouble(n));  n  =  Math.round(factorialDouble(n));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]      result  =  Math.round(factorialDouble(n));  n  =  Math.round(factorialDouble(n));  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	        result    =    Math.round(factorialDouble(n));    n  =  Math.round(factorialDouble(n));	  	non-compiled	[CE]  <identifier>  expected	3	None	add
70	[BUG]  [BUGGY]      result  =  Math.round(factorialDouble(n));  long  result  =  Math.round(factorialDouble(n));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]      result  =  Math.round(factorialDouble(n));  long  result  =  Math.round(factorialDouble(n));  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	        result    =    Math.round(factorialDouble(n));    long  result  =  Math.round(factorialDouble(n));	  	non-compiled	[CE]  <identifier>  expected	3	None	add
71	[BUG]  [BUGGY]  Result  =  Math.round(factorials[n]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  Result  =  Math.round(factorials[n]);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  =  Math.round(factorials[n]);	      if(result    ==    Long.MAX_VALUE)    {    result    =    Math.round(factorialDouble(n));    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "Failure    value    is    too    large    to    fit    in    a    long   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
72	[BUG]  [BUGGY]      result  =  Math.round(factorials[n]);  long[]  factorials  =  Math.round(factorials[n]);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]      result  =  Math.round(factorials[n]);  long[]  factorials  =  Math.round(factorials[n]);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	        result    =    Math.round(factorials[n]);    long[]  factorials  =  Math.round(factorials[n]);	  	non-compiled	[CE]  <identifier>  expected	1	None	add
73	[BUG]  [BUGGY]      result  =  Math.round(factorials[n]);  long  n  =  Math.round(factorials[n]);  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]      result  =  Math.round(factorials[n]);  long  n  =  Math.round(factorials[n]);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	        result    =    Math.round(factorials[n]);    long  n  =  Math.round(factorials[n]);	  	non-compiled	[CE]  <identifier>  expected	1	None	add
74	[BUG]  [BUGGY]      result  =  Math.round(factorials[n]);  n  =  Math.round(factorials[n]);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]      result  =  Math.round(factorials[n]);  n  =  Math.round(factorials[n]);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	        result    =    Math.round(factorials[n]);    n  =  Math.round(factorials[n]);	  	non-compiled	[CE]  <identifier>  expected	1	None	add
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialValue(i));  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialValue(i));  }  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialValue(i));  }	      if(result    ==    Long.MAX_VALUE)    {    for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.round(factorialDouble(i));    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialShort(i));  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialShort(i));  }  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.round(factorialShort(i));  }	      if(result    ==    Long.MAX_VALUE)    {    for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.round(factorialDouble(i));    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
77	[BUG]  [BUGGY]  return  result  -  1;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  -  1;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  -  1;	  return    result;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
78	[BUG]  [BUGGY]  result  =  Math.round(factorialValue(n));  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.round(factorialValue(n));  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialValue(n));	      if(result    ==    Long.MAX_VALUE)    {    result    =    Math.round(factorialDouble(n));    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
79	[BUG]  [BUGGY]  result  =  Math.round(factorialDouble(n));  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.round(factorialDouble(n));  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialDouble(n));  for(int  i  =  0;  i  <  n;  ++i)  {  factorials[i]  =  Math.floor(factorials[i]);  }	      if(result    ==    Long.MAX_VALUE)    {    for(int    i    =    0;    i    <    n;    ++i)    {    factorials[i]    =    Math.floor(factorials[i]);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
80	[BUG]  [BUGGY]  result  =  factorials[0]  *  result;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  factorials[0]  *  result;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[0]  *  result;	  result    =    factorials[0];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
81	[BUG]  [BUGGY]  result  =  factorials[n  -  1];  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  factorials[n  -  1];  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n  -  1];	  result    =    factorials[n];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
82	[BUG]  [BUGGY]  result  =  factorials[n  +  1];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  factorials[n  +  1];  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n  +  1];	  result    =    factorials[n];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
83	[BUG]  [BUGGY]  n  =  Math.log(result)/  factorials.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  n  =  Math.log(result)/  factorials.length;  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	n  =  Math.log(result)/  factorials.length;	      n    =    Math.log(result)/    result;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
84	[BUG]  [BUGGY]  return  result  <  0?  factorials[n]  :  result  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  <  0?  factorials[n]  :  result  +  1;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  0?  factorials[n]  :  result  +  1;	  return    result    <    0?    factorials[n]    :    result;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
85	[BUG]  [BUGGY]  return  result  >=  Math.abs(result)?  result  :  factorials[n];  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  >=  Math.abs(result)?  result  :  factorials[n];  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  >=  Math.abs(result)?  result  :  factorials[n];	  return    result    <    =    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
86	[BUG]  [BUGGY]  return  result  <  =  Math.abs(result)?  result  :  factorials[n  +  1];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  <  =  Math.abs(result)?  result  :  factorials[n  +  1];  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  =  Math.abs(result)?  result  :  factorials[n  +  1];	  return    result    <    =    Math.abs(result)?    result    :    factorials[n];    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
87	[BUG]  [BUGGY]  return  result  <  =  n?  result  :  result[n];  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  <  =  n?  result  :  result[n];  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  =  n?  result  :  result[n];	  return    result[n];    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
88	[BUG]  [BUGGY]  return  result  <  n?  result  :  result[n];  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  <  n?  result  :  result[n];  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  n?  result  :  result[n];	  return    result[n];    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
89	[BUG]  [BUGGY]  return  result  <  0?  result  :  result[n];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  <  0?  result  :  result[n];  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  0?  result  :  result[n];	  return    result[n];    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
90	[BUG]  [BUGGY]  return  result;  result  =  Math.sqrt(result);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result;  result  =  Math.sqrt(result);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return    result;    result  =  Math.sqrt(result);	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
91	[BUG]  [BUGGY]  return  result;  result  =  Math.max(result,  0);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result;  result  =  Math.max(result,  0);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return    result;    result  =  Math.max(result,  0);	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
92	[BUG]  [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "factorial  value  is  too  large  to  fit  in  a  long ");  }  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "factorial  value  is  too  large  to  fit  in  a  long ");  }  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  <  Long.MIN_VALUE  ||  result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException( "factorial  value  is  too  large  to  fit  in  a  long ");  }	      if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  >  expected	13	None	replace
93	[BUG]  [BUGGY]  result  =  Math.log(n)/  result;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.log(n)/  result;  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.log(n)/  result;	      n    =    Math.log(result)/    result;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
94	[BUG]  [BUGGY]  result  =  Math.log(result)/  n;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.log(result)/  n;  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.log(result)/  n;	      n    =    Math.log(result)/    result;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
95	[BUG]  [BUGGY]  result  =  factorials[n].longValue();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  factorials[n].longValue();  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[n].longValue();	  result    =    factorials[n];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
96	[BUG]  [BUGGY]      result  =  Math.round(factorialDouble(n));  Math.round(factorialDouble(n));  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]      result  =  Math.round(factorialDouble(n));  Math.round(factorialDouble(n));  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	        result    =    Math.round(factorialDouble(n));    Math.round(factorialDouble(n));	  	non-compiled	[CE]  <identifier>  expected	3	None	add
97	[BUG]  [BUGGY]  result  =  factorials[0].longValue();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  factorials[0].longValue();  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  factorials[0].longValue();	  result    =    factorials[0];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
98	[BUG]  [BUGGY]  return  result[n]  &  n;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result[n]  &  n;  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result[n]  &  n;	  return    result[n];    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
99	[BUG]  [BUGGY]  return  result  [n  +  1];  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  [n  +  1];  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  [n  +  1];	  return    result[n];    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
100	[BUG]  [BUGGY]  return  result  <  =  Math.abs(result[n]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result  <  =  Math.abs(result[n]);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return  result  <  =  Math.abs(result[n]);	  return    result[n];    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
101	[BUG]  [BUGGY]  Result  =  Math.round(factorialValue(n));  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  Result  =  Math.round(factorialValue(n));  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	Result  =  Math.round(factorialValue(n));	      if(result    ==    Long.MAX_VALUE)    {    result    =    Math.round(factorialDouble(n));    if(result    ==    Long.MAX_VALUE)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
102	[BUG]  [BUGGY]  result  =  Math.round(factorials[n],  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.round(factorials[n],  n);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n],  n);	      result    =    Math.round(factorialDouble(n),    result);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
103	[BUG]  [BUGGY]  result  =  Math.round(factorialDouble(n),  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.round(factorialDouble(n),  n);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorialDouble(n),  n);	      result    =    Math.round(factorialDouble(n),    result);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
104	[BUG]  [BUGGY]  result  =  Math.round(factorials[n  +  1]);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.round(factorials[n  +  1]);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.round(factorials[n  +  1]);	      result    =    Math.round(factorials[n]);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
105	[BUG]  [BUGGY]      result  =  Math.round(factorials[n]);  Math.round(factorials[n]);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]      result  =  Math.round(factorials[n]);  Math.round(factorials[n]);  [BUGGY]    return  factorials[n];  }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	        result    =    Math.round(factorials[n]);    Math.round(factorials[n]);	  	non-compiled	[CE]  not  a  statement	1	None	add
106	[BUG]  [BUGGY]  result  =  Math.sqrt(result);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  result  =  Math.sqrt(result);  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	result  =  Math.sqrt(result);	  result    =    result;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
107	[BUG]  [BUGGY]  return  result;  result  =  Math.round(factorialValue(n));  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result;  result  =  Math.round(factorialValue(n));  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return    result;    result  =  Math.round(factorialValue(n));	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
108	[BUG]  [BUGGY]  return  result;  long  result  =  Math.round(factorialDouble(n));  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  static  long  factorial(final  int  n)  {  long  result  =  Math.round(factorialDouble(n));  if  (result  ==  Long.MAX_VALUE)  {  throw  new  ArithmeticException(     "factorial  value  is  too  large  to  fit  in  a  long   ");  }    [BUGGY]  return  result;  long  result  =  Math.round(factorialDouble(n));  [BUGGY]    }  [CLASS]  MathUtils  [METHOD]  factorial  [RETURN_TYPE]  long  final  int  n  [VARIABLES]  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  short  NS  PS  ZS  int  n  long  result  	projects/Math93/src/java/org/apache/commons/math/util/MathUtils.java	1.0	350	350	1	replace	return    result;    long  result  =  Math.round(factorialDouble(n));	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
