bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	    StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	add
2	[BUG]  [BUGGY]    if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	    if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	add
3	[BUG]  [BUGGY]    StringWriter  writer  =  new  StringWriter(str.length()  *  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    StringWriter  writer  =  new  StringWriter(str.length()  *  2);  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	    StringWriter  writer  =  new  StringWriter(str.length()  *  2);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	add
4	[BUG]  [BUGGY]    if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  3);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  3);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	    if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  3);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	add
5	[BUG]  [BUGGY]    if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  4);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  4);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	    if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  4);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	add
6	[BUG]  [BUGGY]  return  writer.toString()  + "n ";  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]  return  writer.toString()  + "n ";  [BUGGY]  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + "n ";	return  writer.toString();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
7	[BUG]  [BUGGY]  return  writer.toString()  + ", "  +  str.substring(0,  str.length()  -  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]  return  writer.toString()  + ", "  +  str.substring(0,  str.length()  -  1));  [BUGGY]  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ", "  +  str.substring(0,  str.length()  -  1));	return  writer.toString();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
8	[BUG]  [BUGGY]  return  writer.toString()  + ": "+str.substring(0,  str.length()  -  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]  return  writer.toString()  + ": "+str.substring(0,  str.length()  -  2);  [BUGGY]  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ": "+str.substring(0,  str.length()  -  2);	return  writer.toString();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
9	[BUG]  [BUGGY]    if(escapeSingleQuotes)  {  if(writer!=  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if(escapeSingleQuotes)  {  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	    if(escapeSingleQuotes)  {  if(writer!=  null)  {  writer.append('n');  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	add
10	[BUG]  [BUGGY]    if(escapeSingleQuotes)  {  if(writer!=  null)  {  writer.append( "n ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if(escapeSingleQuotes)  {  if(writer!=  null)  {  writer.append( "n ");  }  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	    if(escapeSingleQuotes)  {  if(writer!=  null)  {  writer.append( "n ");  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	add
11	[BUG]  [BUGGY]    if(escapeSingleQuotes)  {  if(writer  ==  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if(escapeSingleQuotes)  {  if(writer  ==  null)  {  writer.append('n');  }  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	    if(escapeSingleQuotes)  {  if(writer  ==  null)  {  writer.append('n');  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	add
12	[BUG]  [BUGGY]  return  writer.toString()  +  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]  return  writer.toString()  +  escapeSingleQuotes;  [BUGGY]  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  escapeSingleQuotes;	return  writer.toString();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
13	[BUG]  [BUGGY]  return  writer.toString()  + ", "  +  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]  return  writer.toString()  + ", "  +  escapeSingleQuotes;  [BUGGY]  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ", "  +  escapeSingleQuotes;	return  writer.toString();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
14	[BUG]  [BUGGY]    StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes);  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	    StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	add
15	[BUG]  [BUGGY]    if(str  ==  null  ||  escapeSingleQuotes)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if(str  ==  null  ||  escapeSingleQuotes)  {  writer.append('n');  }  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	    if(str  ==  null  ||  escapeSingleQuotes)  {  writer.append('n');  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	add
16	[BUG]  [BUGGY]    if(escapeSingleQuotes)  {  if(writer!=  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if(escapeSingleQuotes)  {  if(writer!=  null)  {  writer.printStackTrace();  }  [BUGGY]  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	    if(escapeSingleQuotes)  {  if(writer!=  null)  {  writer.printStackTrace();  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	add
17	[BUG]  [BUGGY]  return  writer.toString()  + ": "  +  str;  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]  return  writer.toString()  + ": "  +  str;  [BUGGY]  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ": "  +  str;	return  writer.toString();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
18	[BUG]  [BUGGY]  return  writer.toString()  + "  - "  +  str;  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]  return  writer.toString()  + "  - "  +  str;  [BUGGY]  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + "  - "  +  str;	return  writer.toString();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
