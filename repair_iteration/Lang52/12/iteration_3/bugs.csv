bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
2	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
3	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  ioe);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  ioe);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  ioe);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
4	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  0);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  0);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
5	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  -  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  ioe);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  -  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  ioe);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  -  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  ioe);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    ioe);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
6	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  }	  StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    ioe);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
7	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes,  ioe);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes,  ioe);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes,  ioe);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    ioe);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
8	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  ioe);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  ioe);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  ioe);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    ioe);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
9	[BUG]  [BUGGY]  return  writer.toString()  + ",null ",  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",null ",  escapeSingleQuotes;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",null ",  escapeSingleQuotes;	  return    writer.toString()    +   ",n   "    +    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
10	[BUG]  [BUGGY]  return  writer.toString()  + ",null "  +  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",null "  +  escapeSingleQuotes;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",null "  +  escapeSingleQuotes;	  return    writer.toString()    +   ",n   "    +    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
11	[BUG]  [BUGGY]  return  writer.toString()  + ",null "  +  str;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",null "  +  str;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",null "  +  str;	  return    writer.toString()    +   ",n   "    +    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
12	[BUG]  [BUGGY]  EscapeSingleQuotes  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  EscapeSingleQuotes  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	EscapeSingleQuotes  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);	  if(escapeSingleQuotes)    {    StringWriter    writer    =    new    StringWriter(str.length()    +    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
13	[BUG]  [BUGGY]  if(escapeSingleQuotes  ||  writer.printStackTrace()!=  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes  ||  writer.printStackTrace()!=  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes  ||  writer.printStackTrace()!=  null)  {  writer.printStackTrace();  }	  if(escapeSingleQuotes)    {    if(writer!=    null    ||    writer.printStackTrace()!=    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
14	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(writer  ==  null  ||  writer.printStackTrace()!=  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  if(writer  ==  null  ||  writer.printStackTrace()!=  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  if(writer  ==  null  ||  writer.printStackTrace()!=  null)  {  writer.printStackTrace();  }	  if(escapeSingleQuotes)    {    if(writer!=    null    ||    writer.printStackTrace()!=    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
15	[BUG]  [BUGGY]  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	aughtExceptionHandler.handleEscapeSingleQuotes(writer,  str,  escapeSingleQuotes);	  aughtExceptionHandler.handleEscapeSingleQuotes(writer,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
16	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  str);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  str);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  str);  }	  aughtExceptionHandler.handleEscapeSingleQuotes(writer,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
17	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  str);  }  else  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  str);  }  else  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  str);  }  else  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  aughtExceptionHandler.handleEscapeSingleQuotes(writer,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
18	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  str);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  str);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  str);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.handleEscapeSingleQuotes(writer,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
19	[BUG]  [BUGGY]  ParchetUtils.checkState(escapeSingleQuotes,  writer);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  ParchetUtils.checkState(escapeSingleQuotes,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	ParchetUtils.checkState(escapeSingleQuotes,  writer);	  ParchetUtils.checkState(escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
20	[BUG]  [BUGGY]  ParchetUtils.checkState(escapeSingleQuotes  frumoase);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  ParchetUtils.checkState(escapeSingleQuotes  frumoase);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	ParchetUtils.checkState(escapeSingleQuotes  frumoase);	  ParchetUtils.checkState(escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
21	[BUG]  [BUGGY]  ParchetUtils.checkState(escapeSingleQuotes  ||  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  ParchetUtils.checkState(escapeSingleQuotes  ||  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	ParchetUtils.checkState(escapeSingleQuotes  ||  escapeSingleQuotes);	  ParchetUtils.checkState(escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
22	[BUG]  [BUGGY]  return  writer.toString()  + ",' "  +  str.substring(0,  str.length()  -  1),  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",' "  +  str.substring(0,  str.length()  -  1),  escapeSingleQuotes);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",' "  +  str.substring(0,  str.length()  -  1),  escapeSingleQuotes);	  return    writer.toString()    +   ",'   "    +    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
23	[BUG]  [BUGGY]  return  writer.toString()  + ",' "  +  str.substring(0,  str.length()));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",' "  +  str.substring(0,  str.length()));  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",' "  +  str.substring(0,  str.length()));	  return    writer.toString()    +   ",'   "    +    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
24	[BUG]  [BUGGY]  return  writer.toString()  *  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  *  escapeSingleQuotes;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  *  escapeSingleQuotes;	  return    writer.toString()    /    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
25	[BUG]  [BUGGY]  return  writer.toString()  /  str;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  /  str;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  /  str;	  return    writer.toString()    /    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
26	[BUG]  [BUGGY]  return  writer.toString()  /  escapeSingleQuotes,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  /  escapeSingleQuotes,  str);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  /  escapeSingleQuotes,  str);	  return    writer.toString()    /    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
27	[BUG]  [BUGGY]  if(escapeSingleQuotes  &&  str!=  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes  &&  str!=  null)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes  &&  str!=  null)  {  writer.append('n');  }	  if(escapeSingleQuotes    ||    str!=    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
28	[BUG]  [BUGGY]  writer.append(str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  writer.append(str,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	writer.append(str,  escapeSingleQuotes);	  if(escapeSingleQuotes    ||    str!=    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
29	[BUG]  [BUGGY]  &&  escapeSingleQuotes!=  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  &&  escapeSingleQuotes!=  null)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	&&  escapeSingleQuotes!=  null)  {  writer.append('n');  }	  if(escapeSingleQuotes    ||    str!=    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
30	[BUG]  [BUGGY]  return  writer.toString(),  escapeSingleQuotes,   "  +  str;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString(),  escapeSingleQuotes,   "  +  str;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString(),  escapeSingleQuotes,   "  +  str;	  return    writer.toString()    +   ",    escapeSingleQuotes,       "    +    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
31	[BUG]  [BUGGY]  return  writer.toString()  /  escapeJavaStyleString;  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  /  escapeJavaStyleString;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  /  escapeJavaStyleString;	  return    writer.toString()    +    escapeJavaStyleString;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
32	[BUG]  [BUGGY]  return  writer.toString()  +  escapeJavaStyleString,  str;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  escapeJavaStyleString,  str;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  escapeJavaStyleString,  str;	  return    writer.toString()    +    escapeJavaStyleString;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
33	[BUG]  [BUGGY]  return  writer.toString()  +  str,  escapeJavaStyleString;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str,  escapeJavaStyleString;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str,  escapeJavaStyleString;	  return    writer.toString()    +    escapeJavaStyleString;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
34	[BUG]  [BUGGY]  nisipToString(writer,  str)  {  if(escapeSingleQuotes!=  false)  {  writer.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  str)  {  if(escapeSingleQuotes!=  false)  {  writer.append( "null ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  str)  {  if(escapeSingleQuotes!=  false)  {  writer.append( "null ");  }	  nisipToString(writer)    {    if(escapeSingleQuotes!=    false)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
35	[BUG]  [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes  ==  false)  {  writer.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes  ==  false)  {  writer.append( "null ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer)  {  if(escapeSingleQuotes  ==  false)  {  writer.append( "null ");  }	  nisipToString(writer)    {    if(escapeSingleQuotes!=    false)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
36	[BUG]  [BUGGY]  return  writer.toString()  +  str.substring(0,  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str.substring(0,  str.length());  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str.substring(0,  str.length());	  return    writer.toString()    +    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
37	[BUG]  [BUGGY]  return  writer.toString()  +  str.substring(0,  str.length()  *  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str.substring(0,  str.length()  *  1);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str.substring(0,  str.length()  *  1);	  return    writer.toString()    +    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
38	[BUG]  [BUGGY]  Annotations.EscapeSingleQuotes(writer,  str)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  Annotations.EscapeSingleQuotes(writer,  str)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	Annotations.EscapeSingleQuotes(writer,  str)  {  writer.append('n');  }	  Annotations.EscapeSingleQuotes(writer,    escapeSingleQuotes)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
39	[BUG]  [BUGGY]  Annotations.EscapeSingleQuotes(writer,  str,  escapeSingleQuotes)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  Annotations.EscapeSingleQuotes(writer,  str,  escapeSingleQuotes)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	Annotations.EscapeSingleQuotes(writer,  str,  escapeSingleQuotes)  {  writer.append('n');  }	  Annotations.EscapeSingleQuotes(writer,    escapeSingleQuotes)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
40	[BUG]  [BUGGY]  Annotations.EscapeSingleQuotes(writer,  escapeSingleQuotes,  str)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  Annotations.EscapeSingleQuotes(writer,  escapeSingleQuotes,  str)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	Annotations.EscapeSingleQuotes(writer,  escapeSingleQuotes,  str)  {  writer.append('n');  }	  Annotations.EscapeSingleQuotes(writer,    escapeSingleQuotes)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
41	[BUG]  [BUGGY]  annotations.EscapeSingleQuotes(writer,  str)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  annotations.EscapeSingleQuotes(writer,  str)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	annotations.EscapeSingleQuotes(writer,  str)  {  writer.append('n');  }	  Annotations.EscapeSingleQuotes(writer,    escapeSingleQuotes)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
42	[BUG]  [BUGGY]  if(escapeSingleQuotes  ||  writer.printStackTrace()  ==  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes  ||  writer.printStackTrace()  ==  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes  ||  writer.printStackTrace()  ==  null)  {  writer.printStackTrace();  }	  if(escapeSingleQuotes)    {    if(writer!=    null    ||    writer.printStackTrace()    ==    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
43	[BUG]  [BUGGY]  return  writer.toString(),  str,  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString(),  str,  escapeSingleQuotes;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString(),  str,  escapeSingleQuotes;	  return    writer.toString()    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
44	[BUG]  [BUGGY]  return  writer.toString()  /  str,  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  /  str,  escapeSingleQuotes;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  /  str,  escapeSingleQuotes;	  return    writer.toString()    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
45	[BUG]  [BUGGY]  return  writer.toString()  +  str,  escapeSingleQuotes,  writer.restrictByNotNullOrUndefined();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str,  escapeSingleQuotes,  writer.restrictByNotNullOrUndefined();  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str,  escapeSingleQuotes,  writer.restrictByNotNullOrUndefined();	  return    writer.toString()    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
46	[BUG]  [BUGGY]  return  writer.toString()  +  str,  escapeSingleQuotes,  writer.getCharacters();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str,  escapeSingleQuotes,  writer.getCharacters();  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str,  escapeSingleQuotes,  writer.getCharacters();	  return    writer.toString()    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
47	[BUG]  [BUGGY]  return  writer.toString()  + ",   "  +  str.substring(0,  str.length()  -  2));  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",   "  +  str.substring(0,  str.length()  -  2));  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",   "  +  str.substring(0,  str.length()  -  2));	  return    writer.toString()    +   ",       "    +    str.substring(0,    str.length()));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
48	[BUG]  [BUGGY]  return  writer.toString()  + ": "+str.substring(0,  str.length()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ": "+str.substring(0,  str.length()  -  1);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ": "+str.substring(0,  str.length()  -  1);	  return    writer.toString()    +   ":       "+str.substring(0,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
49	[BUG]  [BUGGY]  return  writer.toString()  + ": "+str.substring(0,  str.length()  -  1,  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ": "+str.substring(0,  str.length()  -  1,  str.length());  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ": "+str.substring(0,  str.length()  -  1,  str.length());	  return    writer.toString()    +   ":       "+str.substring(0,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
50	[BUG]  [BUGGY]  return  writer.toString()  + ",  - "  +  str,  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",  - "  +  str,  escapeSingleQuotes;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",  - "  +  str,  escapeSingleQuotes;	  return    writer.toString()    +   "    -   "    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
51	[BUG]  [BUGGY]  return  writer.toString()  + "  - "  +  str,  escapeSingleQuotes,  writer.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + "  - "  +  str,  escapeSingleQuotes,  writer.toString();  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + "  - "  +  str,  escapeSingleQuotes,  writer.toString();	  return    writer.toString()    +   "    -   "    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
52	[BUG]  [BUGGY]  return  writer.toString()  + "  - "  +  str,  escapeSingleQuotes,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + "  - "  +  str,  escapeSingleQuotes,  null);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + "  - "  +  str,  escapeSingleQuotes,  null);	  return    writer.toString()    +   "    -   "    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
53	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
54	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes,  str);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes,  str);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
55	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length(),  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length(),  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  str.length(),  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
56	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  escapeSingleQuotes,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  escapeSingleQuotes,  str);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  escapeSingleQuotes,  str);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
57	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(str.length()  ==  2)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  if(str.length()  ==  2)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  if(str.length()  ==  2)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str.length()    ==    2    ||    escapeSingleQuotes)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
58	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(str.length()  ==  2  ||  escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQu  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  if(str.length()  ==  2  ||  escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQu  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  if(str.length()  ==  2  ||  escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQu	  if(str.length()    ==    2    ||    escapeSingleQuotes)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
59	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(str.length()  ==  2  ||  escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  if(str.length()  ==  2  ||  escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  if(str.length()  ==  2  ||  escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str.length()    ==    2    ||    escapeSingleQuotes)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
60	[BUG]  [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes  ==  false)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes  ==  false)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer)  {  if(escapeSingleQuotes  ==  false)  {  writer.append('n');  }	  nisipToString(str)    {    if(escapeSingleQuotes    ==    false)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
61	[BUG]  [BUGGY]  nisipToString(writer,  str)  {  if(escapeSingleQuotes  ==  false)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  str)  {  if(escapeSingleQuotes  ==  false)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  str)  {  if(escapeSingleQuotes  ==  false)  {  writer.append('n');  }	  nisipToString(str)    {    if(escapeSingleQuotes    ==    false)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
62	[BUG]  [BUGGY]  nisipToString(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes  ==  false)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes  ==  false)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes  ==  false)  {  writer.append('n');  }	  nisipToString(str)    {    if(escapeSingleQuotes    ==    false)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
63	[BUG]  [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  if(escapeSingleQuotes  ==  false)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  if(escapeSingleQuotes  ==  false)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  escapeSingleQuotes)  {  if(escapeSingleQuotes  ==  false)  {  writer.append('n');  }	  nisipToString(str)    {    if(escapeSingleQuotes    ==    false)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
64	[BUG]  [BUGGY]  return  writer.toString()  +  str.trim();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str.trim();  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str.trim();	  return    writer.toString()    +    str;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
65	[BUG]  [BUGGY]  nisipToString(writer,  str)  {  if(escapeSingleQuotes!=  false)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  str)  {  if(escapeSingleQuotes!=  false)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  str)  {  if(escapeSingleQuotes!=  false)  {  writer.append('n');  }	  nisipToString(str)    {    if(escapeSingleQuotes!=    false)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
66	[BUG]  [BUGGY]  nisipToString(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  false)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  false)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  false)  {  writer.append('n');  }	  nisipToString(str)    {    if(escapeSingleQuotes!=    false)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
67	[BUG]  [BUGGY]  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);	  if(escapeSingleQuotes)    {    writer    =    new    StringWriter(str.length()    *    3);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
68	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  3);  }  else  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  3);  }  else  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  3);  }  else  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    writer    =    new    StringWriter(str.length()    *    3);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
69	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  -  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  -  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  -  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  StringWriter    writer    =    new    StringWriter(str.length()    -    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
70	[BUG]  [BUGGY]  if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  -  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  -  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  -  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  StringWriter    writer    =    new    StringWriter(str.length()    -    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
71	[BUG]  [BUGGY]  return  writer.toString()  + ",: "  +  str.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",: "  +  str.toString();  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",: "  +  str.toString();	  return    writer.toString()    +   ":   "    +    str.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
72	[BUG]  [BUGGY]  return  writer.toString()  + ": "  +  str.toString()  +  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ": "  +  str.toString()  +  escapeSingleQuotes;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ": "  +  str.toString()  +  escapeSingleQuotes;	  return    writer.toString()    +   ":   "    +    str.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
73	[BUG]  [BUGGY]  return  writer.toString()  + ".: "  +  str.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ".: "  +  str.toString();  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ".: "  +  str.toString();	  return    writer.toString()    +   ":   "    +    str.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
74	[BUG]  [BUGGY]  if(escapeSingleQuotes  &&  str.length()  ==  0)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes  &&  str.length()  ==  0)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes  &&  str.length()  ==  0)  {  writer.append('n');  }	  if(escapeSingleQuotes    ||    str.length()    ==    0)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
75	[BUG]  [BUGGY]  if(escapeSingleQuotes  ||  str.length()  ==  0)  {  writer.append('n',  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes  ||  str.length()  ==  0)  {  writer.append('n',  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes  ||  str.length()  ==  0)  {  writer.append('n',  escapeSingleQuotes);  }	  if(escapeSingleQuotes    ||    str.length()    ==    0)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
76	[BUG]  [BUGGY]  nisipToString(str)  {  if(writer!=  null)  {  writer.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(str)  {  if(writer!=  null)  {  writer.append( "null ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(str)  {  if(writer!=  null)  {  writer.append( "null ");  }	  nisipToString(escapeSingleQuotes)    {    if(writer!=    null)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
77	[BUG]  [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  null)  {  writer.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  null)  {  writer.append( "null ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  null)  {  writer.append( "null ");  }	  nisipToString(escapeSingleQuotes)    {    if(writer!=    null)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
78	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str.length(),  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str.length(),  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str.length(),  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
79	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes,  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes,  str.length());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes,  str.length());	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
80	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length(),  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length(),  str.length());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  str.length(),  str.length());	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
81	[BUG]  [BUGGY]  if(escapeSingleQuotes  &&  str  ==  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes  &&  str  ==  null)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes  &&  str  ==  null)  {  writer.append('n');  }	  if(escapeSingleQuotes    ||    str    ==    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
82	[BUG]  [BUGGY]  &&  escapeSingleQuotes  ==  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  &&  escapeSingleQuotes  ==  null)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	&&  escapeSingleQuotes  ==  null)  {  writer.append('n');  }	  if(escapeSingleQuotes    ||    str    ==    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
83	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  StringWriter    writer    =    new    StringWriter(str.length()    /    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
84	[BUG]  [BUGGY]  if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  StringWriter    writer    =    new    StringWriter(str.length()    /    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
85	[BUG]  [BUGGY]  return  writer.toString(),  str  +  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString(),  str  +  escapeSingleQuotes;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString(),  str  +  escapeSingleQuotes;	  return    writer.toString()    +    str    +    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
86	[BUG]  [BUGGY]  return  writer.toString()  +  str  +  escapeSingleQuotes,  ioe);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str  +  escapeSingleQuotes,  ioe);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str  +  escapeSingleQuotes,  ioe);	  return    writer.toString()    +    str    +    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
87	[BUG]  [BUGGY]  nisipToString(str,  escapeSingleQuotes)  {  if(writer!=  null  ||  writer.length()  ==  0)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(str,  escapeSingleQuotes)  {  if(writer!=  null  ||  writer.length()  ==  0)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(str,  escapeSingleQuotes)  {  if(writer!=  null  ||  writer.length()  ==  0)  {  writer.append('n');  }	  if(escapeSingleQuotes)    {    if(writer!=    null    ||    writer.length()    ==    0)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
88	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(writer!=  null  ||  writer.length()  >=  0)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  if(writer!=  null  ||  writer.length()  >=  0)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  if(writer!=  null  ||  writer.length()  >=  0)  {  writer.append('n');  }	  if(escapeSingleQuotes)    {    if(writer!=    null    ||    writer.length()    ==    0)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
89	[BUG]  [BUGGY]  nisipToString(writer,  str,  escapeSingleQuotes)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  str,  escapeSingleQuotes)  {  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  str,  escapeSingleQuotes)  {	  nisipToString(str,    escapeSingleQuotes)    {    if(writer!=    null)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
90	[BUG]  [BUGGY]  nisipToString(writer,  str,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  null)  {  writer.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  str,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  null)  {  writer.append( "null ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  str,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  null)  {  writer.append( "null ");  }	  nisipToString(str,    escapeSingleQuotes)    {    if(writer!=    null)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
91	[BUG]  [BUGGY]  nisipToString(str,  escapeSingleQuotes,  writer)  {  if(writer!=  null)  {  writer.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(str,  escapeSingleQuotes,  writer)  {  if(writer!=  null)  {  writer.append( "null ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(str,  escapeSingleQuotes,  writer)  {  if(writer!=  null)  {  writer.append( "null ");  }	  nisipToString(str,    escapeSingleQuotes)    {    if(writer!=    null)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
92	[BUG]  [BUGGY]  return  writer.toString()  +  str.substring(0,  str.length()  -  1),  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str.substring(0,  str.length()  -  1),  escapeSingleQuotes);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str.substring(0,  str.length()  -  1),  escapeSingleQuotes);	  return    writer.toString()    +    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
93	[BUG]  [BUGGY]  return  writer.toString()  +  str.substring(0,  str.length()));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str.substring(0,  str.length()));  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str.substring(0,  str.length()));	  return    writer.toString()    +    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
94	[BUG]  [BUGGY]  return  writer.toString()  +  str.substring(0,  str.length()  *  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str.substring(0,  str.length()  *  1));  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str.substring(0,  str.length()  *  1));	  return    writer.toString()    +    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
95	[BUG]  [BUGGY]  nisipToString(writer,  str)  {  if(escapeSingleQuotes  ==  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  str)  {  if(escapeSingleQuotes  ==  null)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  str)  {  if(escapeSingleQuotes  ==  null)  {  writer.append('n');  }	  nisipToString(writer)    {    if(escapeSingleQuotes    ==    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
96	[BUG]  [BUGGY]  nisipToString(str)  {  if(escapeSingleQuotes  ==  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(str)  {  if(escapeSingleQuotes  ==  null)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(str)  {  if(escapeSingleQuotes  ==  null)  {  writer.append('n');  }	  nisipToString(writer)    {    if(escapeSingleQuotes    ==    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
97	[BUG]  [BUGGY]  nisipToString(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes  ==  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes  ==  null)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes  ==  null)  {  writer.append('n');  }	  nisipToString(writer)    {    if(escapeSingleQuotes    ==    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
98	[BUG]  [BUGGY]  nisipToString(str,  escapeSingleQuotes)  {  if(writer  ==  null  ||  writer.length()  ==  0)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(str,  escapeSingleQuotes)  {  if(writer  ==  null  ||  writer.length()  ==  0)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(str,  escapeSingleQuotes)  {  if(writer  ==  null  ||  writer.length()  ==  0)  {  writer.append('n');  }	  if(escapeSingleQuotes)    {    if(writer    ==    null    ||    writer.length()    ==    0)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
99	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(writer  ==  null  ||  writer.length()!=  0)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  if(writer  ==  null  ||  writer.length()!=  0)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  if(writer  ==  null  ||  writer.length()!=  0)  {  writer.append('n');  }	  if(escapeSingleQuotes)    {    if(writer    ==    null    ||    writer.length()    ==    0)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
100	[BUG]  [BUGGY]  return  writer.toString()  + ",   "  +  str,  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",   "  +  str,  escapeSingleQuotes;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",   "  +  str,  escapeSingleQuotes;	  return    writer.toString()    +   ",       "    +    str;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
101	[BUG]  [BUGGY]  return  writer.toString()  + ",   "  +  str.substring(0,  str.length()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",   "  +  str.substring(0,  str.length()  -  1);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",   "  +  str.substring(0,  str.length()  -  1);	  return    writer.toString()    +   ",       "    +    str;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
102	[BUG]  [BUGGY]  return  writer.toString()  +  str.substring(0,  str.length()  *  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str.substring(0,  str.length()  *  2);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str.substring(0,  str.length()  *  2);	  return    writer.toString()    +    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
103	[BUG]  [BUGGY]  return  writer.toString()  /  str.substring(0,  str.length()  -  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  /  str.substring(0,  str.length()  -  2);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  /  str.substring(0,  str.length()  -  2);	  return    writer.toString()    +    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
104	[BUG]  [BUGGY]  Parchet.checkState(escapeSingleQuotes,  writer);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  Parchet.checkState(escapeSingleQuotes,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	Parchet.checkState(escapeSingleQuotes,  writer);	  Parchet.checkState(escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
105	[BUG]  [BUGGY]  Parchet.checkState(escapeSingleQuotes,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  Parchet.checkState(escapeSingleQuotes,  str);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	Parchet.checkState(escapeSingleQuotes,  str);	  Parchet.checkState(escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
106	[BUG]  [BUGGY]  Parchet.checkState(escapeSingleQuotes  ||  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  Parchet.checkState(escapeSingleQuotes  ||  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	Parchet.checkState(escapeSingleQuotes  ||  escapeSingleQuotes);	  Parchet.checkState(escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
107	[BUG]  [BUGGY]  return  writer.toString()  + ": "  +  str,  escapeSingleQuotes,  writer.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ": "  +  str,  escapeSingleQuotes,  writer.toString();  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ": "  +  str,  escapeSingleQuotes,  writer.toString();	  return    writer.toString()    +   ":   "    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
108	[BUG]  [BUGGY]  return  writer.toString()  + ": "  +  str,  escapeSingleQuotes,  ioe;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ": "  +  str,  escapeSingleQuotes,  ioe;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ": "  +  str,  escapeSingleQuotes,  ioe;	  return    writer.toString()    +   ":   "    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
109	[BUG]  [BUGGY]  return  writer.toString()  + ": "  +  str,  escapeSingleQuotes,  ioe);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ": "  +  str,  escapeSingleQuotes,  ioe);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ": "  +  str,  escapeSingleQuotes,  ioe);	  return    writer.toString()    +   ":   "    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
110	[BUG]  [BUGGY]  return  writer.toString()  + ": "  +  str,  escapeSingleQuotes,  null;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ": "  +  str,  escapeSingleQuotes,  null;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ": "  +  str,  escapeSingleQuotes,  null;	  return    writer.toString()    +   ":   "    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
111	[BUG]  [BUGGY]  return  writer.toString()  + ",: "+str.substring(0,  str.length()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",: "+str.substring(0,  str.length()  -  1);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",: "+str.substring(0,  str.length()  -  1);	  return    writer.toString()    +   ",:       "+str.substring(0,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
112	[BUG]  [BUGGY]  return  writer.toString()  + ",: "+str.substring(0,  str.length()  -  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",: "+str.substring(0,  str.length()  -  2);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",: "+str.substring(0,  str.length()  -  2);	  return    writer.toString()    +   ",:       "+str.substring(0,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
113	[BUG]  [BUGGY]  ||  escapeSingleQuotes)  {  if(writer!=  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  ||  escapeSingleQuotes)  {  if(writer!=  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	||  escapeSingleQuotes)  {  if(writer!=  null)  {  writer.printStackTrace();  }	  if(escapeSingleQuotes)    {    if(writer    ==    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
114	[BUG]  [BUGGY]  ||  escapeSingleQuotes)  {  if(writer  ==  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  ||  escapeSingleQuotes)  {  if(writer  ==  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	||  escapeSingleQuotes)  {  if(writer  ==  null)  {  writer.printStackTrace();  }	  if(escapeSingleQuotes)    {    if(writer    ==    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
115	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  str.length());	  StringWriter    writer    =    new    StringWriter(str.length()    /    2    +    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
116	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length()  *  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length()  *  2);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  str.length()  *  2);	  StringWriter    writer    =    new    StringWriter(str.length()    /    2    +    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
117	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str    ==    null)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
118	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  }	  if(str    ==    null)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
119	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  }  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  }  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  }  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str    ==    null)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
120	[BUG]  [BUGGY]  nisipToString(str,  escapeSingleQuotes)  {  if(writer!=  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(str,  escapeSingleQuotes)  {  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(str,  escapeSingleQuotes)  {  if(writer!=  null)  {  writer.append('n');  }	  nisipToString(escapeSingleQuotes)    {    if(writer!=    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
121	[BUG]  [BUGGY]  nisipToString(str)  {  if(escapeSingleQuotes!=  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(str)  {  if(escapeSingleQuotes!=  null)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(str)  {  if(escapeSingleQuotes!=  null)  {  writer.append('n');  }	  nisipToString(escapeSingleQuotes)    {    if(writer!=    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
122	[BUG]  [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  null)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  null)  {  writer.append('n');  }	  nisipToString(escapeSingleQuotes)    {    if(writer!=    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
123	[BUG]  [BUGGY]  nisipToString(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  null)  {  writer.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  null)  {  writer.append( "null ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  null)  {  writer.append( "null ");  }	  nisipToString(str)    {    if(escapeSingleQuotes!=    null)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
124	[BUG]  [BUGGY]  nisipToString(writer,  str)  {  if(escapeSingleQuotes!=  null)  {  writer.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  str)  {  if(escapeSingleQuotes!=  null)  {  writer.append( "null ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  str)  {  if(escapeSingleQuotes!=  null)  {  writer.append( "null ");  }	  nisipToString(str)    {    if(escapeSingleQuotes!=    null)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
125	[BUG]  [BUGGY]  return  writer.toString()  + ",  escapeSingleQuotes: "  +  str;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",  escapeSingleQuotes: "  +  str;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",  escapeSingleQuotes: "  +  str;	  return    writer.toString()    +   ",    escapeSingleQuotes:   "    +    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
126	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  str,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  str,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
127	[BUG]  [BUGGY]  return  writer.toString()  + ".: "  +  str,  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ".: "  +  str,  escapeSingleQuotes;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ".: "  +  str,  escapeSingleQuotes;	  return    writer.toString()    +   ".:   "    +    str;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
128	[BUG]  [BUGGY]  return  writer.toString()  + ".: "  +  str.substring(0,  str.length()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ".: "  +  str.substring(0,  str.length()  -  1);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ".: "  +  str.substring(0,  str.length()  -  1);	  return    writer.toString()    +   ".:   "    +    str;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
129	[BUG]  [BUGGY]  return  writer.toString()  + ".: "  +  str.substring(0,  str.length()  -  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ".: "  +  str.substring(0,  str.length()  -  2);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ".: "  +  str.substring(0,  str.length()  -  2);	  return    writer.toString()    +   ".:   "    +    str;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
130	[BUG]  [BUGGY]  nisipToString(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  false)  {  writer.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  false)  {  writer.append( "null ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  false)  {  writer.append( "null ");  }	  nisipToString(str)    {    if(escapeSingleQuotes!=    false)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
131	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  -  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  -  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  -  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    -    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
132	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  -  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  -  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  2  -  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    -    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
133	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes,  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes,  str.length());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes,  str.length());	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    -    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
134	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes,  str);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes,  str);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    -    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
135	[BUG]  [BUGGY]  nisipTo(str)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipTo(str)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipTo(str)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }	  nisipTo(escapeSingleQuotes)    {    if(writer!=    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
136	[BUG]  [BUGGY]  nisipTo(str,  escapeSingleQuotes)  {  if(writer!=  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipTo(str,  escapeSingleQuotes)  {  if(writer!=  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipTo(str,  escapeSingleQuotes)  {  if(writer!=  null)  {  writer.printStackTrace();  }	  nisipTo(escapeSingleQuotes)    {    if(writer!=    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
137	[BUG]  [BUGGY]  nisipTo(str)  {  if(escapeSingleQuotes  ==  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipTo(str)  {  if(escapeSingleQuotes  ==  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipTo(str)  {  if(escapeSingleQuotes  ==  null)  {  writer.printStackTrace();  }	  nisipTo(escapeSingleQuotes)    {    if(writer!=    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
138	[BUG]  [BUGGY]  nisipTo(str)  {  if(escapeSingleQuotes!=  false)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipTo(str)  {  if(escapeSingleQuotes!=  false)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipTo(str)  {  if(escapeSingleQuotes!=  false)  {  writer.printStackTrace();  }	  nisipTo(escapeSingleQuotes)    {    if(writer!=    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
139	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  4);  }  else  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  4);  }  else  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  4);  }  else  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    writer    =    new    StringWriter(str.length()    *    4);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
140	[BUG]  [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes  ==  null)  {  writer.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes  ==  null)  {  writer.append( "null ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer)  {  if(escapeSingleQuotes  ==  null)  {  writer.append( "null ");  }	  nisipToString(writer)    {    if(escapeSingleQuotes!=    null)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
141	[BUG]  [BUGGY]  writer.append('n',  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  writer.append('n',  str);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	writer.append('n',  str);	  writer.append('n');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
142	[BUG]  [BUGGY]  writer.append(str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  writer.append(str);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	writer.append(str);	  writer.append('n');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
143	[BUG]  [BUGGY]  writer.append(str,  'n');  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  writer.append(str,  'n');  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	writer.append(str,  'n');	  writer.append('n');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
144	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    +    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
145	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  SINGLE_QUOTES);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  SINGLE_QUOTES);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  SINGLE_QUOTES);	  StringWriter    writer    =    new    StringWriter(str.length()    +    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
146	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  4  +  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  4  +  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  4  +  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    +    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
147	[BUG]  [BUGGY]  EscapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  EscapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	EscapeJavaStyleString(writer,  str,  escapeSingleQuotes);	  if(escapeSingleQuotes)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    3);    EscapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
148	[BUG]  [BUGGY]  aughtExceptionHandler(writer,  str,  escapeJavaStyleString,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  aughtExceptionHandler(writer,  str,  escapeJavaStyleString,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	aughtExceptionHandler(writer,  str,  escapeJavaStyleString,  escapeSingleQuotes);	  aughtExceptionHandler(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
149	[BUG]  [BUGGY]  aughtExceptionHandler(writer,  str,  escapeSingleQuotes,  writer);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  aughtExceptionHandler(writer,  str,  escapeSingleQuotes,  writer);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	aughtExceptionHandler(writer,  str,  escapeSingleQuotes,  writer);	  aughtExceptionHandler(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
150	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  aughtExceptionHandler(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  aughtExceptionHandler(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  aughtExceptionHandler(writer,  str,  escapeSingleQuotes);  }	  aughtExceptionHandler(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
151	[BUG]  [BUGGY]  aughtExceptionHandler(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  aughtExceptionHandler(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	aughtExceptionHandler(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);	  aughtExceptionHandler(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
152	[BUG]  [BUGGY]  nisipToString(str,  escapeSingleQuotes)  {  if(writer  ==  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(str,  escapeSingleQuotes)  {  if(writer  ==  null)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(str,  escapeSingleQuotes)  {  if(writer  ==  null)  {  writer.append('n');  }	  nisipToString(escapeSingleQuotes)    {    if(writer    ==    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
153	[BUG]  [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  if(escapeSingleQuotes  ==  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  if(escapeSingleQuotes  ==  null)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  escapeSingleQuotes)  {  if(escapeSingleQuotes  ==  null)  {  writer.append('n');  }	  nisipToString(escapeSingleQuotes)    {    if(writer    ==    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
154	[BUG]  [BUGGY]  return  writer.toString()  + ",  - "  +  str.substring(0,  str.length()  -  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",  - "  +  str.substring(0,  str.length()  -  2);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",  - "  +  str.substring(0,  str.length()  -  2);	  return    writer.toString()    +   ",    -   "    +    str;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
155	[BUG]  [BUGGY]  nisipToString(writer,  str)  {  if(escapeSingleQuotes!=  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  str)  {  if(escapeSingleQuotes!=  null)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  str)  {  if(escapeSingleQuotes!=  null)  {  writer.append('n');  }	  nisipToString(writer)    {    if(escapeSingleQuotes!=    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
156	[BUG]  [BUGGY]  EscapeSingleQuotes(writer,  str)  {  if(escapeSingleQuotes  ==  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  EscapeSingleQuotes(writer,  str)  {  if(escapeSingleQuotes  ==  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	EscapeSingleQuotes(writer,  str)  {  if(escapeSingleQuotes  ==  null)  {  writer.printStackTrace();  }	  EscapeSingleQuotes(writer,    escapeSingleQuotes)    {    if(escapeSingleQuotes    ==    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
157	[BUG]  [BUGGY]  EscapeSingleQuotes(writer,  escapeSingleQuotes,  str)  {  if(escapeSingleQuotes  ==  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  EscapeSingleQuotes(writer,  escapeSingleQuotes,  str)  {  if(escapeSingleQuotes  ==  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	EscapeSingleQuotes(writer,  escapeSingleQuotes,  str)  {  if(escapeSingleQuotes  ==  null)  {  writer.printStackTrace();  }	  EscapeSingleQuotes(writer,    escapeSingleQuotes)    {    if(escapeSingleQuotes    ==    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
158	[BUG]  [BUGGY]  EscapeSingleQuotes(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes  ==  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  EscapeSingleQuotes(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes  ==  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	EscapeSingleQuotes(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes  ==  null)  {  writer.printStackTrace();  }	  EscapeSingleQuotes(writer,    escapeSingleQuotes)    {    if(escapeSingleQuotes    ==    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
159	[BUG]  [BUGGY]  EscapeSingleQuotes(writer,  str,  escapeSingleQuotes)  {  if(escapeSingleQuotes  ==  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  EscapeSingleQuotes(writer,  str,  escapeSingleQuotes)  {  if(escapeSingleQuotes  ==  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	EscapeSingleQuotes(writer,  str,  escapeSingleQuotes)  {  if(escapeSingleQuotes  ==  null)  {  writer.printStackTrace();  }	  EscapeSingleQuotes(writer,    escapeSingleQuotes)    {    if(escapeSingleQuotes    ==    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
160	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  +  1);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  +  1);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  +  1);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    StringWriter    writer    =    new    StringWriter(str.length());    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
161	[BUG]  [BUGGY]  return  writer.toString()  + "  -   "  +  str.substring(0,  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + "  -   "  +  str.substring(0,  str.length());  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + "  -   "  +  str.substring(0,  str.length());	  return    writer.toString()    +   "    -   "    +    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
162	[BUG]  [BUGGY]  return  writer.toString()  + ",  -   "  +  str.substring(0,  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",  -   "  +  str.substring(0,  str.length());  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",  -   "  +  str.substring(0,  str.length());	  return    writer.toString()    +   "    -   "    +    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
163	[BUG]  [BUGGY]  return  writer.toString()  + ",: "  +  str,  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",: "  +  str,  escapeSingleQuotes;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",: "  +  str,  escapeSingleQuotes;	  return    writer.toString()    +   ",:   "    +    str;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
164	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length());	  StringWriter    writer    =    new    StringWriter(str.length()    +    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
165	[BUG]  [BUGGY]  return  writer.toString()  +  str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str,  escapeSingleQuotes);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str,  escapeSingleQuotes);	  return    writer.toString()    +    escapeSingleQuotes,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
166	[BUG]  [BUGGY]  return  writer.toString()  +  escapeSingleQuotes,  str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  escapeSingleQuotes,  str,  escapeSingleQuotes);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  escapeSingleQuotes,  str,  escapeSingleQuotes);	  return    writer.toString()    +    escapeSingleQuotes,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
167	[BUG]  [BUGGY]  return  writer.toString(),  str  +  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString(),  str  +  escapeSingleQuotes);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString(),  str  +  escapeSingleQuotes);	  return    writer.toString()    +    escapeSingleQuotes,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
168	[BUG]  [BUGGY]  return  writer.toString()  + ",null ",  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",null ",  str);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",null ",  str);	  return    writer.toString()    +   ",null   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
169	[BUG]  [BUGGY]  EscapeSingleQuotes(writer,  str)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  EscapeSingleQuotes(writer,  str)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	EscapeSingleQuotes(writer,  str)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }	  EscapeSingleQuotes(writer,    escapeSingleQuotes)    {    if(escapeSingleQuotes!=    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
170	[BUG]  [BUGGY]  EscapeSingleQuotes(writer,  escapeSingleQuotes,  str)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  EscapeSingleQuotes(writer,  escapeSingleQuotes,  str)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	EscapeSingleQuotes(writer,  escapeSingleQuotes,  str)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }	  EscapeSingleQuotes(writer,    escapeSingleQuotes)    {    if(escapeSingleQuotes!=    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
171	[BUG]  [BUGGY]  EscapeSingleQuotes(writer,  str,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  EscapeSingleQuotes(writer,  str,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	EscapeSingleQuotes(writer,  str,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }	  EscapeSingleQuotes(writer,    escapeSingleQuotes)    {    if(escapeSingleQuotes!=    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
172	[BUG]  [BUGGY]  EscapeSingleQuotes(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  EscapeSingleQuotes(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	EscapeSingleQuotes(str,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }	  EscapeSingleQuotes(writer,    escapeSingleQuotes)    {    if(escapeSingleQuotes!=    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
173	[BUG]  [BUGGY]  return  writer.toString()  + "  null. ";  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + "  null. ";  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + "  null. ";	  return    writer.toString()    +   "null   ";    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
174	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(str!=  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  if(str!=  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  if(str!=  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str!=    null)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
175	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(str!=  null)  {  writer  =  new  StringWriter(str.length()  *  2);  }  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  if(str!=  null)  {  writer  =  new  StringWriter(str.length()  *  2);  }  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  if(str!=  null)  {  writer  =  new  StringWriter(str.length()  *  2);  }  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str!=    null)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
176	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  2,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
177	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length(),  str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length(),  str,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length(),  str,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
178	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length(),  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length(),  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length(),  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
179	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
180	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  2);  }  else  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  2);  }  else  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  2);  }  else  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
181	[BUG]  [BUGGY]  EscapeJavaStyleString  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  EscapeJavaStyleString  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	EscapeJavaStyleString  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);	  EscapeJavaStyleString    writer    =    new    StringWriter(str.length()    /    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
182	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  EscapeJavaStyleString  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  EscapeJavaStyleString  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  EscapeJavaStyleString  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  EscapeJavaStyleString    writer    =    new    StringWriter(str.length()    /    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
183	[BUG]  [BUGGY]  if(escapeSingleQuotes  &&  escapeSingleQuotes)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes  &&  escapeSingleQuotes)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes  &&  escapeSingleQuotes)  {  writer.append('n');  }	  if(escapeSingleQuotes    ||    escapeSingleQuotes)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
184	[BUG]  [BUGGY]  if(escapeSingleQuotes  ||  escapeSingleQuotes)  {  writer.append('n',  str);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes  ||  escapeSingleQuotes)  {  writer.append('n',  str);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes  ||  escapeSingleQuotes)  {  writer.append('n',  str);  }	  if(escapeSingleQuotes    ||    escapeSingleQuotes)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
185	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
186	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeJavaStyleString,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeJavaStyleString,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeJavaStyleString,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
187	[BUG]  [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  false)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  false)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  escapeSingleQuotes)  {  if(escapeSingleQuotes!=  false)  {  writer.append('n');  }	  nisipToString(writer)    {    if(escapeSingleQuotes!=    false)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
188	[BUG]  [BUGGY]  escapeSingleQuotes(writer,  str)  {  if(writer  ==  null  ||  writer.length()  ==  0)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  escapeSingleQuotes(writer,  str)  {  if(writer  ==  null  ||  writer.length()  ==  0)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	escapeSingleQuotes(writer,  str)  {  if(writer  ==  null  ||  writer.length()  ==  0)  {  writer.append('n');  }	  if(escapeSingleQuotes)    {    if(writer    ==    null    ||    writer.length()    ==    0)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
189	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str.length()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str.length()  -  1);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str.length()  -  1);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
190	[BUG]  [BUGGY]  return  writer.toString()  +  str  +  escapeJavaStyleString;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str  +  escapeJavaStyleString;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str  +  escapeJavaStyleString;	  return    writer.toString()    +    str    +    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
191	[BUG]  [BUGGY]  return  writer.toString()  /  str  +  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  /  str  +  escapeSingleQuotes;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  /  str  +  escapeSingleQuotes;	  return    writer.toString()    +    str    +    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
192	[BUG]  [BUGGY]  if(escapeSingleQuotes!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str!=    null)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
193	[BUG]  [BUGGY]  if(escapeSingleQuotes  ==  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes  ==  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes  ==  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str!=    null)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
194	[BUG]  [BUGGY]  EscapeSingleQuotes(writer,  escapeSingleQuotes)  {  if(escapeSingleQuotes)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  EscapeSingleQuotes(writer,  escapeSingleQuotes)  {  if(escapeSingleQuotes)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	EscapeSingleQuotes(writer,  escapeSingleQuotes)  {  if(escapeSingleQuotes)  {  writer.printStackTrace();  }	  if(escapeSingleQuotes)    {    if(writer    ==    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
195	[BUG]  [BUGGY]  if(escapeSingleQuotes  ||  escapeSingleQuotes)  {  if(writer  ==  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes  ||  escapeSingleQuotes)  {  if(writer  ==  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes  ||  escapeSingleQuotes)  {  if(writer  ==  null)  {  writer.printStackTrace();  }	  if(escapeSingleQuotes)    {    if(writer    ==    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
196	[BUG]  [BUGGY]  if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  }	  StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    ioe);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
197	[BUG]  [BUGGY]  if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  }	  StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    ioe);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
198	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    ioe);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
199	[BUG]  [BUGGY]  nisipTo(writer)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipTo(writer)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipTo(writer)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }	  nisipTo(escapeSingleQuotes)    {    if(writer!=    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
200	[BUG]  [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  if(writer!=  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  escapeSingleQuotes)  {  if(writer!=  null)  {  writer.append('n');  }	  nisipToString(escapeSingleQuotes)    {    if(writer!=    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
201	[BUG]  [BUGGY]  nisipToString(str)  {  if(writer!=  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(str)  {  if(writer!=  null)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(str)  {  if(writer!=  null)  {  writer.append('n');  }	  nisipToString(escapeSingleQuotes)    {    if(writer!=    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
202	[BUG]  [BUGGY]  if(escapeSingleQuotes  ==  null)  {  aughtExceptionHandler(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes  ==  null)  {  aughtExceptionHandler(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes  ==  null)  {  aughtExceptionHandler(writer,  str,  escapeSingleQuotes);  }	  aughtExceptionHandler(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
203	[BUG]  [BUGGY]  if(escapeSingleQuotes!=  null)  {  aughtExceptionHandler(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes!=  null)  {  aughtExceptionHandler(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes!=  null)  {  aughtExceptionHandler(writer,  str,  escapeSingleQuotes);  }	  aughtExceptionHandler(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
204	[BUG]  [BUGGY]  escapedExceptionHandler(writer,  str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  escapedExceptionHandler(writer,  str,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	escapedExceptionHandler(writer,  str,  escapeSingleQuotes);	  aughtExceptionHandler(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
205	[BUG]  [BUGGY]  escapeSingleQuotes(writer,  str)  {  if(escapeSingleQuotes  ==  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  escapeSingleQuotes(writer,  str)  {  if(escapeSingleQuotes  ==  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	escapeSingleQuotes(writer,  str)  {  if(escapeSingleQuotes  ==  null)  {  writer.printStackTrace();  }	  EscapeSingleQuotes(writer,    escapeSingleQuotes)    {    if(escapeSingleQuotes    ==    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
206	[BUG]  [BUGGY]  return  writer.toString()  +  str,  escapeSingleQuotes,   "  +  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str,  escapeSingleQuotes,   "  +  escapeSingleQuotes;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str,  escapeSingleQuotes,   "  +  escapeSingleQuotes;	  return    writer.toString()    +   ",    escapeSingleQuotes,       "    +    str;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
207	[BUG]  [BUGGY]  nisipToString(writer.toString())  {  if(escapeSingleQuotes!=  false)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer.toString())  {  if(escapeSingleQuotes!=  false)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer.toString())  {  if(escapeSingleQuotes!=  false)  {  writer.append('n');  }	  nisipToString(str)    {    if(escapeSingleQuotes!=    false)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
208	[BUG]  [BUGGY]  writer.append(escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  writer.append(escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	writer.append(escapeSingleQuotes);	  if(escapeSingleQuotes    ||    escapeSingleQuotes)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
209	[BUG]  [BUGGY]  return  writer.toString()  + ",  escapeSingleQuotes, ",  +  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",  escapeSingleQuotes, ",  +  escapeSingleQuotes;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",  escapeSingleQuotes, ",  +  escapeSingleQuotes;	  return    writer.toString()    +   ",    escapeSingleQuotes,       "    +    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
210	[BUG]  [BUGGY]  Parchet.checkState(escapeSingleQuotes  ==  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  Parchet.checkState(escapeSingleQuotes  ==  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	Parchet.checkState(escapeSingleQuotes  ==  escapeSingleQuotes);	  Parchet.checkState(escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
211	[BUG]  [BUGGY]  if(str!=  null)  {  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(str!=  null)  {  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(str!=  null)  {  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  escapeSingleQuotes);  }	  aughtExceptionHandler.handleEscapeSingleQuotes(writer,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
212	[BUG]  [BUGGY]  if(str!=  null)  {  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  str);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(str!=  null)  {  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  str);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(str!=  null)  {  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  str);  }	  aughtExceptionHandler.handleEscapeSingleQuotes(writer,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
213	[BUG]  [BUGGY]  return  writer.toString()  +  str.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str.toString();  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str.toString();	  return    writer.toString()    +   ":   "    +    str.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
214	[BUG]  [BUGGY]  escapeSingleQuotes(writer,  str.length()  {  0)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  escapeSingleQuotes(writer,  str.length()  {  0)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	escapeSingleQuotes(writer,  str.length()  {  0)  {  writer.append('n');  }	  if(escapeSingleQuotes    ||    str.length()    ==    0)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
215	[BUG]  [BUGGY]  EscapeJavaStyleString  writer  =  new  StringWriter(str.length()  *  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  EscapeJavaStyleString  writer  =  new  StringWriter(str.length()  *  2);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	EscapeJavaStyleString  writer  =  new  StringWriter(str.length()  *  2);	  EscapeJavaStyleString    writer    =    new    StringWriter(str.length()    /    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
216	[BUG]  [BUGGY]  return  writer.toString()  /  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  /  2;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  /  2;	  return    writer.toString()    /    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
217	[BUG]  [BUGGY]  if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  StringWriter    writer    =    new    StringWriter(str.length()    /    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
218	[BUG]  [BUGGY]  ParchetUtils.checkState(escapeJavaStyleString,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  ParchetUtils.checkState(escapeJavaStyleString,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	ParchetUtils.checkState(escapeJavaStyleString,  escapeSingleQuotes);	  ParchetUtils.checkState(escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
219	[BUG]  [BUGGY]  ParchetUtils.checkState(escapeJavaStyleString);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  ParchetUtils.checkState(escapeJavaStyleString);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	ParchetUtils.checkState(escapeJavaStyleString);	  ParchetUtils.checkState(escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
220	[BUG]  [BUGGY]  writer.append('n',  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  writer.append('n',  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	writer.append('n',  escapeSingleQuotes);	  writer.append('n');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
221	[BUG]  [BUGGY]  return  writer.toString()  +  str,  escapeSingleQuotes,  ioe);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str,  escapeSingleQuotes,  ioe);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str,  escapeSingleQuotes,  ioe);	  return    writer.toString()    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
222	[BUG]  [BUGGY]  return  writer.toString()  +  str,  escapeSingleQuotes,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str,  escapeSingleQuotes,  0);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str,  escapeSingleQuotes,  0);	  return    writer.toString()    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
223	[BUG]  [BUGGY]  return  writer.toString()  + ":   "+str.substring(0,  str.length()  *  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ":   "+str.substring(0,  str.length()  *  2);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ":   "+str.substring(0,  str.length()  *  2);	  return    writer.toString()    +   ":       "+str.substring(0,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
224	[BUG]  [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  if(writer!=  null)  {  writer.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  if(writer!=  null)  {  writer.append( "null ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  escapeSingleQuotes)  {  if(writer!=  null)  {  writer.append( "null ");  }	  nisipToString(escapeSingleQuotes)    {    if(writer!=    null)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
225	[BUG]  [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes!=  null)  {  writer.append( ".null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes!=  null)  {  writer.append( ".null ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer)  {  if(escapeSingleQuotes!=  null)  {  writer.append( ".null ");  }	  nisipToString(str)    {    if(escapeSingleQuotes!=    null)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
226	[BUG]  [BUGGY]  return  writer.toString()  +  escapeJavaStyleString,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  escapeJavaStyleString,  str);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  escapeJavaStyleString,  str);	  return    writer.toString()    +    escapeSingleQuotes,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
227	[BUG]  [BUGGY]  escapeSingleQuotes(writer,  str)  {  if(writer!=  null  ||  writer.length()  ==  0)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  escapeSingleQuotes(writer,  str)  {  if(writer!=  null  ||  writer.length()  ==  0)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	escapeSingleQuotes(writer,  str)  {  if(writer!=  null  ||  writer.length()  ==  0)  {  writer.append('n');  }	  if(escapeSingleQuotes)    {    if(writer!=    null    ||    writer.length()    ==    0)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
228	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(writer!=  null  ||  writer.length()  ==  0)  {  writer.append('n',  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  if(writer!=  null  ||  writer.length()  ==  0)  {  writer.append('n',  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  if(writer!=  null  ||  writer.length()  ==  0)  {  writer.append('n',  escapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    if(writer!=    null    ||    writer.length()    ==    0)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
229	[BUG]  [BUGGY]  return  writer.toString()  +  escapeJavaStyleString(str);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  escapeJavaStyleString(str);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  escapeJavaStyleString(str);	  return    writer.toString()    +    escapeJavaStyleString;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
230	[BUG]  [BUGGY]  return  writer.toString()  +  escapeJavaStyleString(str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  escapeJavaStyleString(str,  escapeSingleQuotes);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  escapeJavaStyleString(str,  escapeSingleQuotes);	  return    writer.toString()    +    escapeJavaStyleString;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
231	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(str.length()  ==  0  ||  escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(str.length()  ==  0  ||  escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str.length()    ==    2    ||    escapeSingleQuotes)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
232	[BUG]  [BUGGY]  EscapeSingleQuotes  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  EscapeSingleQuotes  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	EscapeSingleQuotes  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);	  if(escapeSingleQuotes)    {    StringWriter    writer    =    new    StringWriter(str.length()    +    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
233	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
234	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    +    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
235	[BUG]  [BUGGY]  escapeSingleQuotes(writer,  str)  {  if(writer!=  null  ||  writer.printStackTrace()!=  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  escapeSingleQuotes(writer,  str)  {  if(writer!=  null  ||  writer.printStackTrace()!=  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	escapeSingleQuotes(writer,  str)  {  if(writer!=  null  ||  writer.printStackTrace()!=  null)  {  writer.printStackTrace();  }	  if(escapeSingleQuotes)    {    if(writer!=    null    ||    writer.printStackTrace()!=    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
236	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  3);  EscapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  3);  EscapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  3);  EscapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    3);    EscapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
237	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  EscapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  EscapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  EscapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    3);    EscapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
238	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  3  +  escapeSingleQuotes);  EscapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  3  +  escapeSingleQuotes);  EscapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  3  +  escapeSingleQuotes);  EscapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    3);    EscapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
239	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(writer  ==  null  ||  writer.printStackTrace()  ==  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  if(writer  ==  null  ||  writer.printStackTrace()  ==  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  if(writer  ==  null  ||  writer.printStackTrace()  ==  null)  {  writer.printStackTrace();  }	  if(escapeSingleQuotes)    {    if(writer!=    null    ||    writer.printStackTrace()    ==    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
240	[BUG]  [BUGGY]  escapeSingleQuotes(writer,  str)  {  if(writer!=  null  ||  writer.printStackTrace()  ==  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  escapeSingleQuotes(writer,  str)  {  if(writer!=  null  ||  writer.printStackTrace()  ==  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	escapeSingleQuotes(writer,  str)  {  if(writer!=  null  ||  writer.printStackTrace()  ==  null)  {  writer.printStackTrace();  }	  if(escapeSingleQuotes)    {    if(writer!=    null    ||    writer.printStackTrace()    ==    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
241	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes,  str);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes,  str);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
242	[BUG]  [BUGGY]  nisipToString(writer.toString())  {  if(escapeSingleQuotes  ==  false)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer.toString())  {  if(escapeSingleQuotes  ==  false)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer.toString())  {  if(escapeSingleQuotes  ==  false)  {  writer.append('n');  }	  nisipToString(str)    {    if(escapeSingleQuotes    ==    false)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
243	[BUG]  [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes  ==  true)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes  ==  true)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer)  {  if(escapeSingleQuotes  ==  true)  {  writer.append('n');  }	  nisipToString(str)    {    if(escapeSingleQuotes    ==    false)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
244	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    -    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
245	[BUG]  [BUGGY]  if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  StringWriter    writer    =    new    StringWriter(str.length()    -    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
246	[BUG]  [BUGGY]  nisipToString(writer,  str)  {  if(escapeSingleQuotes  ==  null)  {  writer.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  str)  {  if(escapeSingleQuotes  ==  null)  {  writer.append( "null ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  str)  {  if(escapeSingleQuotes  ==  null)  {  writer.append( "null ");  }	  nisipToString(str,    escapeSingleQuotes)    {    if(writer!=    null)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
247	[BUG]  [BUGGY]  return  writer.toString()  + "  - "  +  str,  escapeSingleQuotes,  null;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + "  - "  +  str,  escapeSingleQuotes,  null;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + "  - "  +  str,  escapeSingleQuotes,  null;	  return    writer.toString()    +   "    -   "    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
248	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(str.length()  ==  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(str.length()  ==  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str.length()    ==    2    ||    escapeSingleQuotes)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
249	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  escapeSingleQuotes)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(str.length()  ==  0  ||  escapeSingleQuotes)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(str.length()  ==  0  ||  escapeSingleQuotes)  {  writer.append('n');  }	  if(escapeSingleQuotes    ||    str.length()    ==    0)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
250	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  str.length()  *  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  str.length()  *  2);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str,  str.length()  *  2);	  StringWriter    writer    =    new    StringWriter(str.length()    /    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
251	[BUG]  [BUGGY]  Parchet.checkState(escapeSingleQuotes  frumoase);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  Parchet.checkState(escapeSingleQuotes  frumoase);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	Parchet.checkState(escapeSingleQuotes  frumoase);	  Parchet.checkState(escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
252	[BUG]  [BUGGY]  return  writer.toString()  +  str  +  escapeSingleQuotes,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str  +  escapeSingleQuotes,  escapeSingleQuotes);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str  +  escapeSingleQuotes,  escapeSingleQuotes);	  return    writer.toString()    +    str    +    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
253	[BUG]  [BUGGY]  return  writer.toString()  +  str  +  escapeSingleQuotes,  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str  +  escapeSingleQuotes,  escapeSingleQuotes;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str  +  escapeSingleQuotes,  escapeSingleQuotes;	  return    writer.toString()    +    str    +    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
254	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(writer  ==  null  ||  writer.length()  ==  0)  {  writer.append('n',  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  if(writer  ==  null  ||  writer.length()  ==  0)  {  writer.append('n',  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  if(writer  ==  null  ||  writer.length()  ==  0)  {  writer.append('n',  escapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    if(writer    ==    null    ||    writer.length()    ==    0)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
255	[BUG]  [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  if(writer  ==  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  if(writer  ==  null)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  escapeSingleQuotes)  {  if(writer  ==  null)  {  writer.append('n');  }	  nisipToString(escapeSingleQuotes)    {    if(writer    ==    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
256	[BUG]  [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  escapeSingleQuotes)  {  writer.append('n');  }	  nisipToString(escapeSingleQuotes)    {    if(writer    ==    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
257	[BUG]  [BUGGY]  nisipToString(str)  {  if(writer  ==  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(str)  {  if(writer  ==  null)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(str)  {  if(writer  ==  null)  {  writer.append('n');  }	  nisipToString(escapeSingleQuotes)    {    if(writer    ==    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
258	[BUG]  [BUGGY]  nisipToString(writer.toString())  {  if(escapeSingleQuotes!=  null)  {  writer.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer.toString())  {  if(escapeSingleQuotes!=  null)  {  writer.append( "null ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer.toString())  {  if(escapeSingleQuotes!=  null)  {  writer.append( "null ");  }	  nisipToString(str)    {    if(escapeSingleQuotes!=    null)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
259	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(writer  ==  null  ||  writer.length()  ==  0)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  if(writer  ==  null  ||  writer.length()  ==  0)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  if(writer  ==  null  ||  writer.length()  ==  0)  {  writer.printStackTrace();  }	  if(escapeSingleQuotes)    {    if(writer    ==    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
260	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(writer!=  null  &&  writer.printStackTrace()!=  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  if(writer!=  null  &&  writer.printStackTrace()!=  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  if(writer!=  null  &&  writer.printStackTrace()!=  null)  {  writer.printStackTrace();  }	  if(escapeSingleQuotes)    {    if(writer!=    null    ||    writer.printStackTrace()!=    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
261	[BUG]  [BUGGY]  if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str    ==    null)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
262	[BUG]  [BUGGY]  return  writer.toString()  + ",none "  +  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",none "  +  escapeSingleQuotes;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",none "  +  escapeSingleQuotes;	  return    writer.toString()    +   ",n   "    +    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
263	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes,  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes,  str.length());  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes,  str.length());	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
264	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
265	[BUG]  [BUGGY]  nisipToString(writer),  str)  {  if(escapeSingleQuotes  ==  false)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer),  str)  {  if(escapeSingleQuotes  ==  false)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer),  str)  {  if(escapeSingleQuotes  ==  false)  {  writer.append('n');  }	  nisipToString(str)    {    if(escapeSingleQuotes    ==    false)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
266	[BUG]  [BUGGY]  nisipToString(writer,  str,  escapeSingleQuotes)  {  if(writer!=  null)  {  writer.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  str,  escapeSingleQuotes)  {  if(writer!=  null)  {  writer.append( "null ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  str,  escapeSingleQuotes)  {  if(writer!=  null)  {  writer.append( "null ");  }	  nisipToString(str,    escapeSingleQuotes)    {    if(writer!=    null)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
267	[BUG]  [BUGGY]  nisipToString(writer,  str,  escapeSingleQuotes)  {  writer.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  str,  escapeSingleQuotes)  {  writer.append( "null ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  str,  escapeSingleQuotes)  {  writer.append( "null ");  }	  nisipToString(str,    escapeSingleQuotes)    {    if(writer!=    null)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
268	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  escapeSingleQuotes,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  escapeSingleQuotes,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  escapeSingleQuotes,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
269	[BUG]  [BUGGY]  return  writer.toString()  -  escapeSingleQuotes,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  -  escapeSingleQuotes,  str);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  -  escapeSingleQuotes,  str);	  return    writer.toString()    +    escapeSingleQuotes,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
270	[BUG]  [BUGGY]  if(str.length()  ==  2  ||  escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(str.length()  ==  2  ||  escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(str.length()  ==  2  ||  escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  }	  StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    ioe);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
271	[BUG]  [BUGGY]  if(str.length()  ==  2)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(str.length()  ==  2)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(str.length()  ==  2)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  }	  StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    ioe);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
272	[BUG]  [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes!=  null)  {  writer.append('n',  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes!=  null)  {  writer.append('n',  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer)  {  if(escapeSingleQuotes!=  null)  {  writer.append('n',  escapeSingleQuotes);  }	  nisipToString(writer)    {    if(escapeSingleQuotes!=    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
273	[BUG]  [BUGGY]  Parchet.checkState(escapeSingleQuotes, " ");  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  Parchet.checkState(escapeSingleQuotes, " ");  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	Parchet.checkState(escapeSingleQuotes, " ");	  if(escapeSingleQuotes)    {    if(writer!=    null)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
274	[BUG]  [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes  ==  null)  {  writer.append('n',  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes  ==  null)  {  writer.append('n',  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer)  {  if(escapeSingleQuotes  ==  null)  {  writer.append('n',  escapeSingleQuotes);  }	  nisipToString(writer)    {    if(escapeSingleQuotes    ==    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
275	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  EscapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  EscapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  EscapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    +    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
276	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  str);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(str.length()  ==  0)  {  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  str);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(str.length()  ==  0)  {  aughtExceptionHandler.handleEscapeSingleQuotes(writer,  str);  }	  aughtExceptionHandler.handleEscapeSingleQuotes(writer,    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
277	[BUG]  [BUGGY]  return  writer.toString()  + ",: "+str.substring(0,  str.length()  -  1,  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",: "+str.substring(0,  str.length()  -  1,  str.length());  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",: "+str.substring(0,  str.length()  -  1,  str.length());	  return    writer.toString()    +   ",:       "+str.substring(0,    str.length());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
278	[BUG]  [BUGGY]  escapeSingleQuotes(writer,  str)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  escapeSingleQuotes(writer,  str)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	escapeSingleQuotes(writer,  str)  {  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }	  EscapeSingleQuotes(writer,    escapeSingleQuotes)    {    if(escapeSingleQuotes!=    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
279	[BUG]  [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  writer.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer,  escapeSingleQuotes)  {  writer.append( "null ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer,  escapeSingleQuotes)  {  writer.append( "null ");  }	  nisipToString(escapeSingleQuotes)    {    if(writer!=    null)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
280	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(writer!=  null  &&  writer.printStackTrace()  ==  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  if(writer!=  null  &&  writer.printStackTrace()  ==  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  if(writer!=  null  &&  writer.printStackTrace()  ==  null)  {  writer.printStackTrace();  }	  if(escapeSingleQuotes)    {    if(writer!=    null    ||    writer.printStackTrace()    ==    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
281	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes)  {  if(writer!=  null  ||  writer.printStackTrace()  ==  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes)  {  if(writer!=  null  ||  writer.printStackTrace()  ==  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(str  ==  null  ||  escapeSingleQuotes)  {  if(writer!=  null  ||  writer.printStackTrace()  ==  null)  {  writer.printStackTrace();  }	  if(escapeSingleQuotes)    {    if(writer!=    null    ||    writer.printStackTrace()    ==    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
282	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  +  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  +  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  +  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
283	[BUG]  [BUGGY]  if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str!=    null)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
284	[BUG]  [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes!=  false)  {  writer.append(str);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes!=  false)  {  writer.append(str);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer)  {  if(escapeSingleQuotes!=  false)  {  writer.append(str);  }	  nisipToString(writer)    {    if(escapeSingleQuotes!=    false)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
285	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes,  escapeSingleQuotes);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    -    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
286	[BUG]  [BUGGY]  return  writer.toString()  +  str,  escapeSingleQuotes,  writer);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str,  escapeSingleQuotes,  writer);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str,  escapeSingleQuotes,  writer);	  return    writer.toString()    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
287	[BUG]  [BUGGY]  return  writer.toString()  +  str,  escapeSingleQuotes,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str,  escapeSingleQuotes,  null);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str,  escapeSingleQuotes,  null);	  return    writer.toString()    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
288	[BUG]  [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes!=  null)  {  writer.append(str);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes!=  null)  {  writer.append(str);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer)  {  if(escapeSingleQuotes!=  null)  {  writer.append(str);  }	  nisipToString(writer)    {    if(escapeSingleQuotes!=    null)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
289	[BUG]  [BUGGY]  if(str!=  null)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(str!=  null)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(str!=  null)  {  writer.append('n');  }	  if(escapeSingleQuotes    ||    str!=    null)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
290	[BUG]  [BUGGY]  aughtExceptionHandler(writer,  str,  escapeSingleQuotes,  escapeJavaStyleString);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  aughtExceptionHandler(writer,  str,  escapeSingleQuotes,  escapeJavaStyleString);  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	aughtExceptionHandler(writer,  str,  escapeSingleQuotes,  escapeJavaStyleString);	  aughtExceptionHandler(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
291	[BUG]  [BUGGY]  nisipTo(str)  {  if(writer!=  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipTo(str)  {  if(writer!=  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipTo(str)  {  if(writer!=  null)  {  writer.printStackTrace();  }	  nisipTo(escapeSingleQuotes)    {    if(writer!=    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
292	[BUG]  [BUGGY]  nisipTo(str)  ==  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipTo(str)  ==  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipTo(str)  ==  if(escapeSingleQuotes!=  null)  {  writer.printStackTrace();  }	  nisipTo(escapeSingleQuotes)    {    if(writer!=    null)    {    writer.printStackTrace();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
293	[BUG]  [BUGGY]  return  writer.toString()  + "  - "  +  str,  escapeSingleQuotes,  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + "  - "  +  str,  escapeSingleQuotes,  escapeSingleQuotes;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + "  - "  +  str,  escapeSingleQuotes,  escapeSingleQuotes;	  return    writer.toString()    +   "    -   "    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
294	[BUG]  [BUGGY]  return  writer.toString()  +  str.substring(0,  str.length()  -  1,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str.substring(0,  str.length()  -  1,  escapeSingleQuotes);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str.substring(0,  str.length()  -  1,  escapeSingleQuotes);	  return    writer.toString()    +   "    -   "    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
295	[BUG]  [BUGGY]  return  writer.toString()  +  str.substring(1);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str.substring(1);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str.substring(1);	  return    writer.toString()    +    str;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
296	[BUG]  [BUGGY]  return  writer.toString()  +  str.length();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  +  str.length();  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  +  str.length();	  return    writer.toString()    +    str;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
297	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  3  +  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  3  +  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  3  +  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    writer    =    new    StringWriter(str.length()    *    3);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
298	[BUG]  [BUGGY]  if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  StringWriter    writer    =    new    StringWriter(str.length()    /    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
299	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(writer!=  null  &&  writer.length()  ==  0)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  if(escapeSingleQuotes)  {  if(writer!=  null  &&  writer.length()  ==  0)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	if(escapeSingleQuotes)  {  if(writer!=  null  &&  writer.length()  ==  0)  {  writer.append('n');  }	  if(escapeSingleQuotes)    {    if(writer!=    null    ||    writer.length()    ==    0)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
300	[BUG]  [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes!=  true)  {  writer.append('n');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer)  {  if(escapeSingleQuotes!=  true)  {  writer.append('n');  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer)  {  if(escapeSingleQuotes!=  true)  {  writer.append('n');  }	  nisipToString(writer)    {    if(escapeSingleQuotes!=    false)    {    writer.append('n');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
301	[BUG]  [BUGGY]  nisipToString(writer.toString())  {  if(escapeSingleQuotes!=  false)  {  writer.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  nisipToString(writer.toString())  {  if(escapeSingleQuotes!=  false)  {  writer.append( "null ");  }  [BUGGY]      return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	nisipToString(writer.toString())  {  if(escapeSingleQuotes!=  false)  {  writer.append( "null ");  }	  nisipToString(str)    {    if(escapeSingleQuotes!=    false)    {    writer.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
302	[BUG]  [BUGGY]  return  writer.toString()  + ",n "  +  str;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ",n "  +  str;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ",n "  +  str;	  return    writer.toString()    +   ",       "    +    str;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
303	[BUG]  [BUGGY]  return  writer.toString()  + ": "  +  str,  escapeSingleQuotes,  escapeSingleQuotes;  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ": "  +  str,  escapeSingleQuotes,  escapeSingleQuotes;  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ": "  +  str,  escapeSingleQuotes,  escapeSingleQuotes;	  return    writer.toString()    +   ":   "    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
304	[BUG]  [BUGGY]  return  writer.toString()  + ": "  +  str,  escapeSingleQuotes,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);      [BUGGY]  return  writer.toString()  + ": "  +  str,  escapeSingleQuotes,  escapeSingleQuotes);  [BUGGY]      }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	155	155	1	replace	return  writer.toString()  + ": "  +  str,  escapeSingleQuotes,  escapeSingleQuotes);	  return    writer.toString()    +   ":   "    +    str,    escapeSingleQuotes;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
