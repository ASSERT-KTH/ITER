bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ||  str.length()  ==  0)  {  [BUGGY]    return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  escapeSingleQuotes  ||  str.length()  ==  0)  {	  if(str    ==    null    ||    escapeSingleQuotes)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
2	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ||  str.equals(escapeSingleQuotes))  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ||  str.equals(escapeSingleQuotes))  {  [BUGGY]    return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  escapeSingleQuotes  ||  str.equals(escapeSingleQuotes))  {	  if(str    ==    null    ||    escapeSingleQuotes)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
3	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ||  str.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ||  str.length()!=  0)  {  [BUGGY]    return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  escapeSingleQuotes  ||  str.length()!=  0)  {	  if(str    ==    null    ||    escapeSingleQuotes)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeJavaStyleString);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeJavaStyleString);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str,  escapeJavaStyleString);	      StringWriter    writer    =    new    StringWriter(str,    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
5	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes,  str.length());  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes,  str.length());  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes,  str.length());	      StringWriter    writer    =    new    StringWriter(str,    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
6	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuotes)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuotes)  {  [BUGGY]    return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuotes)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
7	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  >=  0)  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null  ||  str.length()  >=  0)  {  [BUGGY]    return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  str.length()  >=  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
8	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str.length());  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str.length());  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str.length());	      StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
9	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
10	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
11	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length()  *  2);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length()  *  2);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  str.length()  *  2);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
12	[BUG]  [BUGGY]  boolean  escapeSingleQuotes  =  str.length()  ==  0;  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  boolean  escapeSingleQuotes  =  str.length()  ==  0;  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	boolean  escapeSingleQuotes  =  str.length()  ==  0;	      boolean    escapeSingleQuotes    =    str.length()    >    0;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
13	[BUG]  [BUGGY]  boolean  escapeSingleQuotes  =  str.length()!=  0;  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  boolean  escapeSingleQuotes  =  str.length()!=  0;  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	boolean  escapeSingleQuotes  =  str.length()!=  0;	      boolean    escapeSingleQuotes    =    str.length()    >    0;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
14	[BUG]  [BUGGY]  boolean  escapeSingleQuotes  =  str.length()  >=  0;  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  boolean  escapeSingleQuotes  =  str.length()  >=  0;  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	boolean  escapeSingleQuotes  =  str.length()  >=  0;	      boolean    escapeSingleQuotes    =    str.length()    >    0;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
15	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  -  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  -  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  -  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
17	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
18	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
19	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length());  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length());  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length());	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    str    =    writer.toString();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
20	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  2);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    str    =    writer.toString();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length());  str  =  writer.toString();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length());  str  =  writer.toString();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length());  str  =  writer.toString();	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    str    =    writer.toString();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  1);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  1);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  1);	      StringWriter    writer    =    new    StringWriter(str);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
23	[BUG]  [BUGGY]  ||  str.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  ||  str.length()  ==  0)  {  return  null;  }  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	||  str.length()  ==  0)  {  return  null;  }	      if(str    ==    null    ||    str.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
24	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  return  null;  }  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  str.length()!=  0)  {  return  null;  }	      if(str    ==    null    ||    str.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
25	[BUG]  [BUGGY]  if(str!=  null  ||  str.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str!=  null  ||  str.length()!=  0)  {  [BUGGY]    return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str!=  null  ||  str.length()!=  0)  {	  if(str    ==    null    ||    str.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
26	[BUG]  [BUGGY]  if(escapeSingleQuotes  ==  null  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(escapeSingleQuotes  ==  null  ||  str.length()  ==  0)  {  [BUGGY]    return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(escapeSingleQuotes  ==  null  ||  str.length()  ==  0)  {	  if(str    ==    null    ||    escapeSingleQuotes)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
28	[BUG]  [BUGGY]  if(str  ==  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
29	[BUG]  [BUGGY]  if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
30	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
31	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes  +  1);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes  +  1);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes  +  1);	      StringWriter    writer    =    new    StringWriter(str,    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
32	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  >>  0)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null  ||  str.length()  >>  0)  {  [BUGGY]    return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  str.length()  >>  0)  {	  if(str    ==    null    ||    str.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
33	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  2);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  2);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  2);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
34	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str  +  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str  +  escapeSingleQuotes);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str  +  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
35	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  4);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  4);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  4);	      StringWriter    writer    =    new    StringWriter(str);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
36	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  3);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  3);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  3);	      StringWriter    writer    =    new    StringWriter(str);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
37	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeStyleStrings);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeStyleStrings);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str,  escapeStyleStrings);	      StringWriter    writer    =    new    StringWriter(str,    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
38	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
39	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  >=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null  ||  str.length()  >=  0)  {  return  null;  }  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  str.length()  >=  0)  {  return  null;  }	      if(str    ==    null    ||    str.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
40	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  <  =  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  if(str  ==  null  ||  str.length()  <  =  0)  {  return  null;  }  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  str.length()  <  =  0)  {  return  null;  }	      if(str    ==    null    ||    str.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
41	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  escapeSingleQuotes);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
