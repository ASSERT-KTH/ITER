bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ||  str.equals(escapeJavaStyleString))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ||  str.equals(escapeJavaStyleString))  {  [BUGGY]      return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  escapeSingleQuotes  ||  str.equals(escapeJavaStyleString))  {	  if(str    ==    null    ||    escapeSingleQuotes    ||    str.equals(escapeSingleQuotes))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  if(escapeSingleQuotes  ==  null  ||  str.equals(escapeSingleQuotes))  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(escapeSingleQuotes  ==  null  ||  str.equals(escapeSingleQuotes))  {  [BUGGY]      return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(escapeSingleQuotes  ==  null  ||  str.equals(escapeSingleQuotes))  {	  if(str    ==    null    ||    escapeSingleQuotes    ||    str.equals(escapeSingleQuotes))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ||  str.startsWith(escapeSingleQuotes))  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ||  str.startsWith(escapeSingleQuotes))  {  [BUGGY]      return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  escapeSingleQuotes  ||  str.startsWith(escapeSingleQuotes))  {	  if(str    ==    null    ||    escapeSingleQuotes    ||    str.equals(escapeSingleQuotes))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
4	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(escapeSingleQuotes)  {  if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(escapeSingleQuotes)  {  if(str  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str    ==    null)    {    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
5	[BUG]  [BUGGY]  if(str  ==  null)  {  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null)  {  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null)  {  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str    ==    null)    {    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
6	[BUG]  [BUGGY]  if(str!=  null)  {  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str!=  null)  {  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str!=  null)  {  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str    ==    null)    {    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
7	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(str  ==  null)  {  writer  =  new  StringWriter(str.length());  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(escapeSingleQuotes)  {  if(str  ==  null)  {  writer  =  new  StringWriter(str.length());  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(escapeSingleQuotes)  {  if(str  ==  null)  {  writer  =  new  StringWriter(str.length());  }	  if(str    ==    null)    {    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
8	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes.length()  ==  0)  {  [BUGGY]      return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  escapeSingleQuotes.length()  ==  0)  {	  if(escapeSingleQuotes    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
9	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes!=  null  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes!=  null  ||  str.length()  ==  0)  {  [BUGGY]      return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  escapeSingleQuotes!=  null  ||  str.length()  ==  0)  {	  if(escapeSingleQuotes    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
10	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str,  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str,  escapeSingleQuotes);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  str,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
11	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length(),  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length(),  escapeSingleQuotes);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  str.length(),  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
12	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes,  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes,  escapeSingleQuotes);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
13	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  4);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  4);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  4);	  StringWriter    writer    =    new    StringWriter(str.length()    *    4);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
14	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  4  +  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  4  +  escapeSingleQuotes);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  4  +  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    4);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
15	[BUG]  [BUGGY]  boolean  escapeSingleQuotes  =  str.length()  ==  1;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  boolean  escapeSingleQuotes  =  str.length()  ==  1;  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	boolean  escapeSingleQuotes  =  str.length()  ==  1;	  boolean    escapeSingleQuotes    =    str.length()!=    0;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
16	[BUG]  [BUGGY]  ||  str.length()!=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  ||  str.length()!=  0)  {  return  null;  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	||  str.length()!=  0)  {  return  null;  }	  if(str    ==    null    ||    str.length()!=    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
17	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeJavaStyleString,  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeJavaStyleString,  escapeSingleQuotes);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str,  escapeJavaStyleString,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str,    escapeJavaStyleString);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
18	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeStyleString,  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeStyleString,  escapeSingleQuotes);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str,  escapeStyleString,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str,    escapeJavaStyleString);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
19	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
20	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  +  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  +  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  +  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
21	[BUG]  [BUGGY]  EscapeSingleQuotes  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  EscapeSingleQuotes  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	EscapeSingleQuotes  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);	  if(escapeSingleQuotes)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
22	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(str  ==  null  ||  str.length()  ==  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(escapeSingleQuotes)  {  if(str  ==  null  ||  str.length()  ==  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(escapeSingleQuotes)  {  if(str  ==  null  ||  str.length()  ==  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str    ==    null    ||    str.length()    ==    0)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
23	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str    ==    null    ||    str.length()    ==    0)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
24	[BUG]  [BUGGY]  if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  StringWriter    writer    =    new    StringWriter(str.length()    /    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
25	[BUG]  [BUGGY]  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    /    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
26	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes,  str);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes,  str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes,  str);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    str);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
27	[BUG]  [BUGGY]  ||  str.length()  >=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  ||  str.length()  >=  0)  {  return  null;  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	||  str.length()  >=  0)  {  return  null;  }	  ||    str.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
28	[BUG]  [BUGGY]  ||  str.length()  <  =  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  ||  str.length()  <  =  0)  {  return  null;  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	||  str.length()  <  =  0)  {  return  null;  }	  ||    str.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
29	[BUG]  [BUGGY]  if(str  ==  null)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str!=    null)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
30	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  if(str!=  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(escapeSingleQuotes)  {  if(str!=  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(escapeSingleQuotes)  {  if(str!=  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str!=    null)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
31	[BUG]  [BUGGY]  if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str!=    null)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
32	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes,  str.length()  *  2);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes,  str.length()  *  2);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes,  str.length()  *  2);	  StringWriter    writer    =    new    StringWriter(str,    escapeSingleQuotes,    str.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
33	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes,  str.length()  +  1);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes,  str.length()  +  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes,  str.length()  +  1);	  StringWriter    writer    =    new    StringWriter(str,    escapeSingleQuotes,    str.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
34	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  str.length()  *  2);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  str.length()  *  2);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str,  str.length()  *  2);	  StringWriter    writer    =    new    StringWriter(str,    escapeSingleQuotes,    str.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
35	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes,  string.length()  *  2);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes,  string.length()  *  2);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes,  string.length()  *  2);	  StringWriter    writer    =    new    StringWriter(str,    escapeSingleQuotes,    str.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
36	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length()  /  2);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length()  /  2);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  str.length()  /  2);	  StringWriter    writer    =    new    StringWriter(str.length()    +    str.length()    *    2);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
37	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length());  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  str.length());	  StringWriter    writer    =    new    StringWriter(str.length()    +    str.length()    *    2);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
38	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str  +  escapeSingleQuotes,  str.length());  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str  +  escapeSingleQuotes,  str.length());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str  +  escapeSingleQuotes,  str.length());	  StringWriter    writer    =    new    StringWriter(str    +    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
39	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str  +  escapeSingleQuotes,  str);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str  +  escapeSingleQuotes,  str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str  +  escapeSingleQuotes,  str);	  StringWriter    writer    =    new    StringWriter(str    +    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
40	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes  +  2);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes  +  2);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes  +  2);	  StringWriter    writer    =    new    StringWriter(str,    escapeSingleQuotes    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
41	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  str.length()  +  1);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  str.length()  +  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str,  str.length()  +  1);	  StringWriter    writer    =    new    StringWriter(str,    escapeSingleQuotes    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
42	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes  *  1);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes  *  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes  *  1);	  StringWriter    writer    =    new    StringWriter(str,    escapeSingleQuotes    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
43	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeJavaStyleStrings);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeJavaStyleStrings);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str,  escapeJavaStyleStrings);	  StringWriter    writer    =    new    StringWriter(str,    escapeStyleStrings);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
44	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  str.length());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  str.length());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str,  str.length());	  StringWriter    writer    =    new    StringWriter(str,    escapeStyleStrings);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
45	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  3);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  3);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  3);	  StringWriter    writer    =    new    StringWriter(str.length()    *    3);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
46	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  3  +  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  3  +  escapeSingleQuotes);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  3  +  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    3);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
47	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes,  str.length());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes,  str.length());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes,  str.length());	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    str.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
48	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length(),  str.length());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length(),  str.length());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  str.length(),  str.length());	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    str.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
49	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes,  str.length());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes,  str.length());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes,  str.length());	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    str.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
50	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  escapeSingleQuotes);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    +    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
51	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuotes.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuotes.length()  ==  0)  {  [BUGGY]      return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuotes.length()  ==  0)  {	  if(str    ==    null    ||    escapeSingleQuotes    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
52	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()!=  0  ||  escapeSingleQuotes)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null  ||  str.length()!=  0  ||  escapeSingleQuotes)  {  [BUGGY]      return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  str.length()!=  0  ||  escapeSingleQuotes)  {	  if(str    ==    null    ||    str.length()    ==    0    ||    escapeSingleQuotes)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
53	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  >=  0  ||  escapeSingleQuotes)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null  ||  str.length()  >=  0  ||  escapeSingleQuotes)  {  [BUGGY]      return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  str.length()  >=  0  ||  escapeSingleQuotes)  {	  if(str    ==    null    ||    str.length()    ==    0    ||    escapeSingleQuotes)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
54	[BUG]  [BUGGY]  if(str!=  null  ||  str.length()  ==  0  ||  escapeSingleQuotes)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str!=  null  ||  str.length()  ==  0  ||  escapeSingleQuotes)  {  [BUGGY]      return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str!=  null  ||  str.length()  ==  0  ||  escapeSingleQuotes)  {	  if(str    ==    null    ||    str.length()    ==    0    ||    escapeSingleQuotes)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
55	[BUG]  [BUGGY]  if(str  ==  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  str  =  writer.toString();  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  str  =  writer.toString();  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  str  =  writer.toString();  }	  StringWriter    writer    =    new    StringWriter(str.length());    str    =    writer.toString();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
56	[BUG]  [BUGGY]  if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  str  =  writer.toString();  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  str  =  writer.toString();  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str!=  null)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  str  =  writer.toString();  }	  StringWriter    writer    =    new    StringWriter(str.length());    str    =    writer.toString();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
57	[BUG]  [BUGGY]  if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  -  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  -  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  -  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  StringWriter    writer    =    new    StringWriter(str.length()    -    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
58	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  <  =  0)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null  ||  str.length()  <  =  0)  {  [BUGGY]      return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  str.length()  <  =  0)  {	  if(str    ==    null    ||    str.length()    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
59	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  1);	  StringWriter    writer    =    new    StringWriter(str.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
60	[BUG]  [BUGGY]  if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length());  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  StringWriter    writer    =    new    StringWriter(str.length());    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
61	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()!=  0  ||  escapeSingleQuotes.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null  ||  str.length()!=  0  ||  escapeSingleQuotes.length()!=  0)  {  [BUGGY]      return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  str.length()!=  0  ||  escapeSingleQuotes.length()!=  0)  {	  if(str    ==    null    ||    escapeSingleQuotes    ||    str.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
62	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ||  str.length()  >=  0)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ||  str.length()  >=  0)  {  [BUGGY]      return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  escapeSingleQuotes  ||  str.length()  >=  0)  {	  if(str    ==    null    ||    escapeSingleQuotes    ||    str.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
63	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length()  *  2  +  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length()  *  2  +  escapeSingleQuotes);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  str.length()  *  2  +  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    +    str.length()    *    2);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
64	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes  +  3);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes  +  3);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes  +  3);	  StringWriter    writer    =    new    StringWriter(str,    escapeSingleQuotes    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
65	[BUG]  [BUGGY]  if(str!=  null  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str!=  null  ||  str.length()  ==  0)  {  [BUGGY]      return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str!=  null  ||  str.length()  ==  0)  {	  if(str!=    null    ||    str.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
66	[BUG]  [BUGGY]  if(escapeSingleQuotes  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuotes)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(escapeSingleQuotes  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuotes)  {  [BUGGY]      return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(escapeSingleQuotes  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuotes)  {	  if(str    ==    null    ||    str.length()    ==    0    ||    escapeSingleQuotes)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
67	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  <  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null  ||  str.length()  <  0)  {  return  null;  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  str.length()  <  0)  {  return  null;  }	  if(str    ==    null    ||    str.length()    <    =    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
68	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuotes  ||  str.equals(escapeSingleQuotes))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuotes  ||  str.equals(escapeSingleQuotes))  {  [BUGGY]      return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  str.length()  ==  0  ||  escapeSingleQuotes  ||  str.equals(escapeSingleQuotes))  {	  if(str    ==    null    ||    escapeSingleQuotes    ||    str.equals(escapeSingleQuotes))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
69	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeJavaStyleString,  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeJavaStyleString,  escapeSingleQuotes);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeJavaStyleString,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
70	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes,  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes,  escapeSingleQuotes);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
71	[BUG]  [BUGGY]  boolean  escapeSingleQuotes  =  str.length()!=  2;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  boolean  escapeSingleQuotes  =  str.length()!=  2;  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	boolean  escapeSingleQuotes  =  str.length()!=  2;	  boolean    escapeSingleQuotes    =    str.length()    >=    0;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
72	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null  ||  str.length()  >  0)  {  [BUGGY]      return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  str.length()  >  0)  {	  if(str    ==    null    ||    str.length()    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
73	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeJavaStyleString,  str.length());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeJavaStyleString,  str.length());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str,  escapeJavaStyleString,  str.length());	  StringWriter    writer    =    new    StringWriter(str,    escapeSingleQuotes,    str.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
74	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes,  str.toCharArray());  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes,  str.toCharArray());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str,  escapeSingleQuotes,  str.toCharArray());	  StringWriter    writer    =    new    StringWriter(str,    escapeSingleQuotes,    str.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
75	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str  *  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str  *  escapeSingleQuotes);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str  *  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str    +    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
76	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
77	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ==  null  ||  str.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ==  null  ||  str.length()  ==  0)  {  [BUGGY]      return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  escapeSingleQuotes  ==  null  ||  str.length()  ==  0)  {	  if(escapeSingleQuotes    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
78	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  6);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  6);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  6);	  StringWriter    writer    =    new    StringWriter(str.length()    +    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
79	[BUG]  [BUGGY]  if(escapeSingleQuotes  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(escapeSingleQuotes  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(escapeSingleQuotes  ==  null)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str    ==    null)    {    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
80	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeStyleStrings,  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str,  escapeStyleStrings,  escapeSingleQuotes);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str,  escapeStyleStrings,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str,    escapeStyleStrings);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
81	[BUG]  [BUGGY]  ||  str.length()  ==  1)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  ||  str.length()  ==  1)  {  return  null;  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	||  str.length()  ==  1)  {  return  null;  }	  ||    str.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
82	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str.length()  -  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str.length()  -  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str.length()  -  1);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    str.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
83	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeJavaStyleString,  str.length());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeJavaStyleString,  str.length());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeJavaStyleString,  str.length());	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    str.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
84	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  -  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  -  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  -  1);	  StringWriter    writer    =    new    StringWriter(str.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
85	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes,  str);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes,  str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes,  str);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    str);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
86	[BUG]  [BUGGY]  if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str.length()  >  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  StringWriter    writer    =    new    StringWriter(str.length());    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
87	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ==  null)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes  ==  null)  {  [BUGGY]      return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  escapeSingleQuotes  ==  null)  {	  if(escapeSingleQuotes    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
88	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes,  str.length());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes,  str.length());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes,  str.length());	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    str.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
89	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  escapeSingleQuotes)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
90	[BUG]  [BUGGY]  if(str  ==  null)  {  if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null)  {  if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null)  {  if(escapeSingleQuotes)  {  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
91	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null  ||  str.length()!=  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  str.length()!=  0)  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(str    ==    null    ||    str.length()    ==    0)    {    StringWriter    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
92	[BUG]  [BUGGY]  comboSequence(str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  comboSequence(str,  escapeSingleQuotes);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	comboSequence(str,  escapeSingleQuotes);	  if(str    ==    null)    {    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
93	[BUG]  [BUGGY]  comboStructure(str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  comboStructure(str,  escapeSingleQuotes);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	comboStructure(str,  escapeSingleQuotes);	  if(str    ==    null)    {    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
94	[BUG]  [BUGGY]  comboStructure(str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  comboStructure(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	comboStructure(str);	  if(str    ==    null)    {    writer    =    new    StringWriter(str.length()    *    2);    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
95	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes,  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes,  escapeSingleQuotes);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  escapeSingleQuotes,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes,    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
96	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  <  0  ||  escapeSingleQuotes)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  if(str  ==  null  ||  str.length()  <  0  ||  escapeSingleQuotes)  {  [BUGGY]      return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	if(str  ==  null  ||  str.length()  <  0  ||  escapeSingleQuotes)  {	  if(str    ==    null    ||    str.length()    ==    0    ||    escapeSingleQuotes)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
97	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str  +  escapeSingleQuotes,  escapeSingleQuotes);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {      [BUGGY]  StringWriter  writer  =  new  StringWriter(str  +  escapeSingleQuotes,  escapeSingleQuotes);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	149	149	1	replace	StringWriter  writer  =  new  StringWriter(str  +  escapeSingleQuotes,  escapeSingleQuotes);	  StringWriter    writer    =    new    StringWriter(str    +    escapeSingleQuotes);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
