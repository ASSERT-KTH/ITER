bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  2);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
2	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2,  escapeSingleQuotes);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2,  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
3	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  4);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  4);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  4);	      StringWriter    writer    =    new    StringWriter(str.length()    *    4);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
4	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  4  +  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  4  +  escapeSingleQuotes);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  4  +  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    4);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
5	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  1);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  1);	      StringWriter    writer    =    new    StringWriter(str.length()    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
6	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  1);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  1);	      StringWriter    writer    =    new    StringWriter(str.length()    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
7	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length());  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	StringWriter  writer  =  new  StringWriter(str.length());	      StringWriter    writer    =    new    StringWriter(str.length()    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
8	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes,  writer);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes,  writer);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes,  writer);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
9	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
10	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes,  writer,  ioe);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes,  writer,  ioe);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes,  writer,  ioe);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
11	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes,  writer,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes,  writer,  null);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  escapeSingleQuotes,  writer,  null);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
12	[BUG]  [BUGGY]  writer.append(str);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  writer.append(str);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	writer.append(str);	      writer.append('n');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
13	[BUG]  [BUGGY]  writer.append('n',  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  writer.append('n',  str);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	writer.append('n',  str);	      writer.append('n');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
14	[BUG]  [BUGGY]  writer.append(str.substring(0,  str.length()  -  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  writer.append(str.substring(0,  str.length()  -  1));  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	writer.append(str.substring(0,  str.length()  -  1));	      writer.append('n');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
15	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  writer.toString());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  writer.toString());  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  writer.toString());	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
16	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  ioe.toString());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  ioe.toString());  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  ioe.toString());	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
17	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString(),  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString(),  null);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString(),  null);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
18	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
19	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  +  str.length());  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  +  str.length());	      StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
20	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str.length());  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str.length());	      StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
21	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  2  +  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
22	[BUG]  [BUGGY]  writer.append(str.charAt(0),  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  writer.append(str.charAt(0),  escapeSingleQuotes);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	writer.append(str.charAt(0),  escapeSingleQuotes);	      writer.append(str.charAt(0));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
23	[BUG]  [BUGGY]  writer.append(str.charAt(0),  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  writer.append(str.charAt(0),  str.length());  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	writer.append(str.charAt(0),  str.length());	      writer.append(str.charAt(0));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
24	[BUG]  [BUGGY]  writer.append(str.charAt(0),  str.length()  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  writer.append(str.charAt(0),  str.length()  -  1);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	writer.append(str.charAt(0),  str.length()  -  1);	      writer.append(str.charAt(0));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
25	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  3);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  /  3);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  /  3);	      StringWriter    writer    =    new    StringWriter(str.length()    *    3);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
26	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  3  +  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  3  +  escapeSingleQuotes);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  3  +  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    3);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
27	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  0,  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  0,  str.length());  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  0,  str.length());	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
28	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  false);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
29	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  1);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  1);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
30	[BUG]  [BUGGY]  EscapeSingleQuotes  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  EscapeSingleQuotes  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	EscapeSingleQuotes  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
31	[BUG]  [BUGGY]  writer.append(str.substring(0,  str.length()));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  writer.append(str.substring(0,  str.length()));  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	writer.append(str.substring(0,  str.length()));	      writer.append(str.charAt(0));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
32	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  else  {  writer.toString();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  else  {  writer.toString();  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  else  {  writer.toString();  }	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
33	[BUG]  [BUGGY]  if(escapeSingleQuotes  ||  escapeJavaStyleString(str,  escapeSingleQuotes))  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  if(escapeSingleQuotes  ||  escapeJavaStyleString(str,  escapeSingleQuotes))  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	if(escapeSingleQuotes  ||  escapeJavaStyleString(str,  escapeSingleQuotes))  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
34	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  ioe);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  ioe);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  ioe);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
35	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  escapeSingleQuotes);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  escapeSingleQuotes);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
36	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  null);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  null);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
37	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  true);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
38	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString(),  true);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString(),  true);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString(),  true);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
39	[BUG]  [BUGGY]  writer.append('n',  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  writer.append('n',  escapeSingleQuotes);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	writer.append('n',  escapeSingleQuotes);	      writer.append('n');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
40	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  str);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
41	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  1);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  -  1);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
42	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  }  else  {  return  writer.toString();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  }  else  {  return  writer.toString();  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString());  }  else  {  return  writer.toString();  }	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
43	[BUG]  [BUGGY]  if(escapeSingleQuotes  ||  escapeJavaStyleString(str,  escapeSingleQuotes))  {  return  writer.toString();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  if(escapeSingleQuotes  ||  escapeJavaStyleString(str,  escapeSingleQuotes))  {  return  writer.toString();  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	if(escapeSingleQuotes  ||  escapeJavaStyleString(str,  escapeSingleQuotes))  {  return  writer.toString();  }	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    else    {    return    writer.toString();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
44	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  column);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  column);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  column);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
45	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  str.toString());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  str.toString());  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer,  str.toString());	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
46	[BUG]  [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString(),  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString(),  escapeSingleQuotes);  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer.toString(),  escapeSingleQuotes);	  escapeJavaStyleString(writer,    str,    escapeSingleQuotes,    writer.toString());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
47	[BUG]  [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	if(escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes,  writer);  }	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
48	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  if(str  ==  null  ||  escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }  [BUGGY]    return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	if(str  ==  null  ||  escapeSingleQuotes)  {  escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  }	  if(escapeSingleQuotes)    {    escapeJavaStyleString(writer,    str,    escapeSingleQuotes);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
49	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  1);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  1);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
50	[BUG]  [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  escapeSingleQuotes);  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]    private  static  String  escapeJavaStyleString(String  str,  boolean  escapeSingleQuotes)  {  if  (str  ==  null)  {  return  null;  }  try  {  StringWriter  writer  =  new  StringWriter(str.length()  *  2);    [BUGGY]  StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  escapeSingleQuotes);  [BUGGY]    escapeJavaStyleString(writer,  str,  escapeSingleQuotes);  return  writer.toString();  }  catch  (IOException  ioe)  {  ioe.printStackTrace();  return  null;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  String  String  str  boolean  escapeSingleQuotes  [VARIABLES]  boolean  escapeSingleQuotes  StringWriter  writer  String  str  IOException  ioe  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	154	154	1	replace	StringWriter  writer  =  new  StringWriter(str.length()  *  2  +  escapeSingleQuotes,  escapeSingleQuotes);	      StringWriter    writer    =    new    StringWriter(str.length()    *    2    +    escapeSingleQuotes);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
