bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
35	[BUG] [BUGGY] if (ch > 0xfff) { [FE] ComparisonFailure [CONTEXT] } if (str == null) { return; } int sz; sz = str.length(); for (int i = 0; i < sz; i++) { char ch = str.charAt(i);  [BUGGY] if (ch > 0xfff) { [BUGGY] out.write("\\u" + hex(ch)); } else if (ch > 0xff) { out.write("\\u0" + hex(ch)); } else if (ch > 0x7f) { out.write("\\u00" + hex(ch)); } else if (ch < 32) { switch (ch) { case '\b': out.write('\\'); out.write('b'); [CLASS] StringEscapeUtils [METHOD] escapeJavaStyleString [RETURN_TYPE] void  Writer out String str boolean escapeSingleQuote [VARIABLES] boolean escapeSingleQuote char ch String str Writer out int i sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	
36	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] } if (str == null) { return; } int sz; sz = str.length(); for (int i = 0; i < sz; i++) { char ch = str.charAt(i);  [BUGGY] [BUGGY] if (ch > 0xfff) { out.write("\\u" + hex(ch)); } else if (ch > 0xff) { out.write("\\u0" + hex(ch)); } else if (ch > 0x7f) { out.write("\\u00" + hex(ch)); } else if (ch < 32) { switch (ch) { case '\b': out.write('\\'); out.write('b'); [CLASS] StringEscapeUtils [METHOD] escapeJavaStyleString [RETURN_TYPE] void  Writer out String str boolean escapeSingleQuote [VARIABLES] boolean escapeSingleQuote char ch String str Writer out int i sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	add	
