bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(ch  >=  '')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  >=  '')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  >=  '')  {	  if(ch!=    '')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
2	[BUG]  [BUGGY]  Char  ch  =  str.charAt(i  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  Char  ch  =  str.charAt(i  +  1);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	Char  ch  =  str.charAt(i  +  1);	  if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i    +    1);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
3	[BUG]  [BUGGY]  Character(ch)  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i  +  1);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  Character(ch)  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i  +  1);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	Character(ch)  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i  +  1);  }	  if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i    +    1);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
4	[BUG]  [BUGGY]  if(ch  <  =  0x7f  ||  ch  >  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  =  0x7f  ||  ch  >  0x7f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  =  0x7f  ||  ch  >  0x7f)  {	  if(ch    <    =    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
5	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'e')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'e')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  ==  'e')  {	  if(ch    ==    'u'    ||    ch    ==    '')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
6	[BUG]  [BUGGY]  out.write( "u00 "  +  hex  >>  invalid  method  declaration;  return  type  required;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( "u00 "  +  hex  >>  invalid  method  declaration;  return  type  required;  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( "u00 "  +  hex  >>  invalid  method  declaration;  return  type  required;	  out.write(   "u000   "    +    hex    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
7	[BUG]  [BUGGY]  out.write( "u00 "  +  hex!=  invalid  method  declaration;  return  type  required;  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( "u00 "  +  hex!=  invalid  method  declaration;  return  type  required;  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( "u00 "  +  hex!=  invalid  method  declaration;  return  type  required;	  out.write(   "u000   "    +    hex    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
8	[BUG]  [BUGGY]  out.write( "u000 "  +  hex(ch)  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( "u000 "  +  hex(ch)  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( "u000 "  +  hex(ch)	  out.write(   "u000   "    +    hex    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
9	[BUG]  [BUGGY]  out.write( ".s.IFJDCS ".charAt(i),  ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( ".s.IFJDCS ".charAt(i),  ch);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( ".s.IFJDCS ".charAt(i),  ch);	  out.write(   ".s.IFJDCS   ".charAt(i));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
10	[BUG]  [BUGGY]  out.write( ".s.IFJDCS "  +  charAt(i));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( ".s.IFJDCS "  +  charAt(i));  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( ".s.IFJDCS "  +  charAt(i));	  out.write(   ".s.IFJDCS   ".charAt(i));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
11	[BUG]  [BUGGY]  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }	  if(ch    ==    '')    {    out.write('');    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
12	[BUG]  [BUGGY]  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i  +  1);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i  +  1);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i  +  1);  }	  if(ch    ==    '')    {    out.write('');    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
13	[BUG]  [BUGGY]  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  String  ch  =  str.charAt(i);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  String  ch  =  str.charAt(i);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  String  ch  =  str.charAt(i);  }	  if(ch    ==    '')    {    out.write('');    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
14	[BUG]  [BUGGY]  if(ch  <  =  0xff  ||  ch  >  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  =  0xff  ||  ch  >  0x7f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  =  0xff  ||  ch  >  0x7f)  {	  if(ch    <    =    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
15	[BUG]  [BUGGY]  if(ch  <  =  0xff  ||  ch  >  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  =  0xff  ||  ch  >  0xff)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  =  0xff  ||  ch  >  0xff)  {	  if(ch    <    =    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
16	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'A')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'A')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'A')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
17	[BUG]  [BUGGY]  if(ch!=  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch!=  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch!=  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
18	[BUG]  [BUGGY]  if(ch  >=  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  >=  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  >=  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
19	[BUG]  [BUGGY]  if(ch!=  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch!=  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch!=  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
20	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'A')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'A')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'A')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
21	[BUG]  [BUGGY]  if(ch  >=  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  >=  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  >=  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
22	[BUG]  [BUGGY]  if(ch  <  0xff  ||  ch  >=  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0xff  ||  ch  >=  0x7f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0xff  ||  ch  >=  0x7f)  {	  if(ch    <    0xff    ||    ch    >    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
23	[BUG]  [BUGGY]  if(ch  <  0x7f  ||  ch  >  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7f  ||  ch  >  0xff)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7f  ||  ch  >  0xff)  {	  if(ch    <    0xff    ||    ch    >    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
24	[BUG]  [BUGGY]  if(ch  <  0xff  ||  ch  ==  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0xff  ||  ch  ==  0x7f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0xff  ||  ch  ==  0x7f)  {	  if(ch    <    0xff    ||    ch    >    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
25	[BUG]  [BUGGY]  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  out.write( "u   "  +  hex  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  out.write( "u   "  +  hex  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  out.write( "u   "  +  hex	  if(escapeSingleQuote)    {    if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    out.write(   "u       "    +    hex    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
26	[BUG]  [BUGGY]  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  out.write( "u   "  +  hex  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  out.write( "u   "  +  hex  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  out.write( "u   "  +  hex  }	  if(escapeSingleQuote)    {    if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    out.write(   "u       "    +    hex    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
27	[BUG]  [BUGGY]  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  out.write( ".u "  +  hex  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  out.write( ".u "  +  hex  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  out.write( ".u "  +  hex	  if(escapeSingleQuote)    {    if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    out.write(   "u       "    +    hex    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
28	[BUG]  [BUGGY]  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  out.write( ",u   "  +  hex  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  out.write( ",u   "  +  hex  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  out.write( ",u   "  +  hex	  if(escapeSingleQuote)    {    if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    out.write(   "u       "    +    hex    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
29	[BUG]  [BUGGY]  if(ch  <  0xff  ||  hex  <  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0xff  ||  hex  <  0x7f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0xff  ||  hex  <  0x7f)  {	  if(ch    >    0xff    ||    hex    <    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
30	[BUG]  [BUGGY]  if(ch  <  0x7f  ||  hex  <  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7f  ||  hex  <  0xff)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7f  ||  hex  <  0xff)  {	  if(ch    >    0xff    ||    hex    <    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
31	[BUG]  [BUGGY]  if(ch  ==  0xff  ||  hex  <  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  0xff  ||  hex  <  0x7f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  0xff  ||  hex  <  0x7f)  {	  if(ch    >    0xff    ||    hex    <    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
32	[BUG]  [BUGGY]  if(ch  >=  0xff  ||  hex  <  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  >=  0xff  ||  hex  <  0x7f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  >=  0xff  ||  hex  <  0x7f)  {	  if(ch    >    0xff    ||    hex    <    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
33	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'e')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'e')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'e')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    '')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
34	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  '/')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  '/')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  '/')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    '')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
35	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  '.')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  '.')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  '.')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    '')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
36	[BUG]  [BUGGY]  if(ch  <  0x80  &&  ch  >  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x80  &&  ch  >  0x7f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x80  &&  ch  >  0x7f)  {	  if(ch    <    0x80    ||    ch    >    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
37	[BUG]  [BUGGY]  if(ch  <  0x80  ||  ch  >=  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x80  ||  ch  >=  0x7f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x80  ||  ch  >=  0x7f)  {	  if(ch    <    0x80    ||    ch    >    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
38	[BUG]  [BUGGY]  if(ch  <  0x80  ||  ch  >  0x7e)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x80  ||  ch  >  0x7e)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x80  ||  ch  >  0x7e)  {	  if(ch    <    0x80    ||    ch    >    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
39	[BUG]  [BUGGY]  if(ch  ==  0x7F)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  0x7F)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  0x7F)  {	  if(ch    >    0x7F)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
40	[BUG]  [BUGGY]  if(ch!=  0x7F)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch!=  0x7F)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch!=  0x7F)  {	  if(ch    >    0x7F)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
41	[BUG]  [BUGGY]  char  ch  =  str.charAt(i  +  1,  sz);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  char  ch  =  str.charAt(i  +  1,  sz);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	char  ch  =  str.charAt(i  +  1,  sz);	  char    ch    =    str.charAt(i    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
42	[BUG]  [BUGGY]  char  ch  =  str.charAt(i,  sz  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  char  ch  =  str.charAt(i,  sz  +  1);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	char  ch  =  str.charAt(i,  sz  +  1);	  char    ch    =    str.charAt(i    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
43	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >  'a'  ||  ch  >  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >  'a'  ||  ch  >  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >  'a'  ||  ch  >  'z')  {	  if(ch    >    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
44	[BUG]  [BUGGY]  out.write( "u  }   "  +  hex(ch));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( "u  }   "  +  hex(ch));  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( "u  }   "  +  hex(ch));	  if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    if(ch!=    '')    {    out.write(   "u    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
45	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'z')  {	  if(ch    <    'u'    ||    ch    >    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
46	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'a'  ||  ch  >  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'a'  ||  ch  >  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'a'  ||  ch  >  'z')  {	  if(ch    <    'u'    ||    ch    >    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
47	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >=  'a'  &&  ch  <  =  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >=  'a'  &&  ch  <  =  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >=  'a'  &&  ch  <  =  'z')  {	  if(ch    <    'u'    ||    ch    >    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
48	[BUG]  [BUGGY]  out.write( "u000 "  +  hex  >>  invalid  method  declaration;  return  type  required;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( "u000 "  +  hex  >>  invalid  method  declaration;  return  type  required;  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( "u000 "  +  hex  >>  invalid  method  declaration;  return  type  required;	  out.write(   "u       "    +    hex    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
49	[BUG]  [BUGGY]  out.write( "utf-8 "  +  hex  >>  invalid  method  declaration;  return  type  required;  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( "utf-8 "  +  hex  >>  invalid  method  declaration;  return  type  required;  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( "utf-8 "  +  hex  >>  invalid  method  declaration;  return  type  required;	  out.write(   "u       "    +    hex    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
50	[BUG]  [BUGGY]  out.write(''  +  ch  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write(''  +  ch  +  1);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write(''  +  ch  +  1);	  out.write(''    +    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
51	[BUG]  [BUGGY]  out.write(''  +  hex(ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write(''  +  hex(ch);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write(''  +  hex(ch);	  out.write(''    +    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	32	None	replace
52	[BUG]  [BUGGY]  char  ch  =  str.charAt(i++,  sz);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  char  ch  =  str.charAt(i++,  sz);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	char  ch  =  str.charAt(i++,  sz);	  char    ch    =    str.charAt(i++);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
53	[BUG]  [BUGGY]  char  ch  =  str.charAt(i,  sz++);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  char  ch  =  str.charAt(i,  sz++);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	char  ch  =  str.charAt(i,  sz++);	  char    ch    =    str.charAt(i++);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
54	[BUG]  [BUGGY]  char  ch  =  str.charAt(i)+  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  char  ch  =  str.charAt(i)+  2;  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	char  ch  =  str.charAt(i)+  2;	  char    ch    =    str.charAt(i)+    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
55	[BUG]  [BUGGY]  char  ch  =  str.charAt(i)+  3;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  char  ch  =  str.charAt(i)+  3;  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	char  ch  =  str.charAt(i)+  3;	  char    ch    =    str.charAt(i)+    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
56	[BUG]  [BUGGY]  char  ch  =  str.charAt(i)/  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  char  ch  =  str.charAt(i)/  1;  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	char  ch  =  str.charAt(i)/  1;	  char    ch    =    str.charAt(i)+    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
57	[BUG]  [BUGGY]  if(ch!=  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch!=  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch!=  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
58	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'A')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'A')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'A')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
59	[BUG]  [BUGGY]  while(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  ch  =  str.charAt(i);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  while(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  ch  =  str.charAt(i);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	while(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  ch  =  str.charAt(i);  }	  if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    String    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
60	[BUG]  [BUGGY]  while(ch!=  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  ch  =  str.charAt(i);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  while(ch!=  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  ch  =  str.charAt(i);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	while(ch!=  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  ch  =  str.charAt(i);  }	  if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    String    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
61	[BUG]  [BUGGY]  char  ch  =  str.charAt(i,  sz,  sz);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  char  ch  =  str.charAt(i,  sz,  sz);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	char  ch  =  str.charAt(i,  sz,  sz);	  char    ch    =    str.charAt(i,    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
62	[BUG]  [BUGGY]  char  ch  =  str.charAt(i,  sz  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  char  ch  =  str.charAt(i,  sz  -  1);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	char  ch  =  str.charAt(i,  sz  -  1);	  char    ch    =    str.charAt(i,    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
63	[BUG]  [BUGGY]  out.write(''  +  hex(ch)+  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write(''  +  hex(ch)+  1);  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write(''  +  hex(ch)+  1);	  out.write(''    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
64	[BUG]  [BUGGY]  out.write(''  +  hex(ch)+ "' ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write(''  +  hex(ch)+ "' ");  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write(''  +  hex(ch)+ "' ");	  out.write(''    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
65	[BUG]  [BUGGY]  out.write(''  +  hex(ch),  i);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write(''  +  hex(ch),  i);  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write(''  +  hex(ch),  i);	  out.write(''    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
66	[BUG]  [BUGGY]  out.write(''  +  hex(ch,  i));  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write(''  +  hex(ch,  i));  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write(''  +  hex(ch,  i));	  out.write(''    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
67	[BUG]  [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x20  ||  ch  >  0x10)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x20  ||  ch  >  0x10)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7f  ||  ch  >  0x20  ||  ch  >  0x10)  {	  if(ch    <    0x7f    ||    ch    >    0x10)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
68	[BUG]  [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x10FF)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x10FF)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7f  ||  ch  >  0x10FF)  {	  if(ch    <    0x7f    ||    ch    >    0x10)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
69	[BUG]  [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x10FFFF)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x10FFFF)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7f  ||  ch  >  0x10FFFF)  {	  if(ch    <    0x7f    ||    ch    >    0x10)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
70	[BUG]  [BUGGY]  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if(!escapeSingleQuote)  {  out.  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if(!escapeSingleQuote)  {  out.  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if(!escapeSingleQuote)  {  out.	  if(escapeSingleQuote)    {    if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    if(!escapeSingleQuote)    {    out.    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
71	[BUG]  [BUGGY]  out.write( "UTF-8 "  +  hex(ch),  i);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( "UTF-8 "  +  hex(ch),  i);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( "UTF-8 "  +  hex(ch),  i);	  out.write(   "UTF-8   "    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
72	[BUG]  [BUGGY]  out.write( "UTF-8 "  +  hex(ch)+  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( "UTF-8 "  +  hex(ch)+  1);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( "UTF-8 "  +  hex(ch)+  1);	  out.write(   "UTF-8   "    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
73	[BUG]  [BUGGY]  out.write( "UTF-8 "  +  hex(ch,  i));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( "UTF-8 "  +  hex(ch,  i));  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( "UTF-8 "  +  hex(ch,  i));	  out.write(   "UTF-8   "    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
74	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'A')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
75	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'A')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
76	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'	  if(ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'A')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
77	[BUG]  [BUGGY]  if(ch  >=  'u'  &&  ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >=  'a'  &&  ch  <  =  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  >=  'u'  &&  ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >=  'a'  &&  ch  <  =  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  >=  'u'  &&  ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >=  'a'  &&  ch  <  =  'z')  {	  if(ch!=    'u'    &&    ch    <    =    'A'    &&    ch    <    =    'Z'    ||    ch    >=    'a'    &&    ch    <    =    'z')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
78	[BUG]  [BUGGY]  if(ch  ==  'u'  &&  ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >=  'a'  &&  ch  <  =  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  &&  ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >=  'a'  &&  ch  <  =  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  &&  ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >=  'a'  &&  ch  <  =  'z')  {	  if(ch!=    'u'    &&    ch    <    =    'A'    &&    ch    <    =    'Z'    ||    ch    >=    'a'    &&    ch    <    =    'z')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
79	[BUG]  [BUGGY]  if(ch!=  'u'  &&  ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >  'a'  &&  ch  <  =  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch!=  'u'  &&  ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >  'a'  &&  ch  <  =  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch!=  'u'  &&  ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >  'a'  &&  ch  <  =  'z')  {	  if(ch!=    'u'    &&    ch    <    =    'A'    &&    ch    <    =    'Z'    ||    ch    >=    'a'    &&    ch    <    =    'z')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
80	[BUG]  [BUGGY]  if(ch  <  0x7F  ||  ch  >=  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7F  ||  ch  >=  0xff)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7F  ||  ch  >=  0xff)  {	  if(ch    <    0x7F    ||    ch    >    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
81	[BUG]  [BUGGY]  if(ch  <  0x7F  ||  ch  ==  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7F  ||  ch  ==  0xff)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7F  ||  ch  ==  0xff)  {	  if(ch    <    0x7F    ||    ch    >    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
82	[BUG]  [BUGGY]  if(ch  <  0x7F  ||  ch  >  0xf)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7F  ||  ch  >  0xf)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7F  ||  ch  >  0xf)  {	  if(ch    <    0x7F    ||    ch    >    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
83	[BUG]  [BUGGY]  if(ch  ==  0xff  ||  ch  ==  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  0xff  ||  ch  ==  0x7f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  0xff  ||  ch  ==  0x7f)  {	  if(ch    ==    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
84	[BUG]  [BUGGY]  if(ch  ==  0xff  ||  ch  ==  0x80)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  0xff  ||  ch  ==  0x80)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  0xff  ||  ch  ==  0x80)  {	  if(ch    ==    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
85	[BUG]  [BUGGY]  if(ch  <  =  0x7F  ||  ch  >  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  =  0x7F  ||  ch  >  0xff)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  =  0x7F  ||  ch  >  0xff)  {	  if(ch    <    =    0x7F)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
86	[BUG]  [BUGGY]  Char  ch)  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  Char  ch)  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	Char  ch)  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }	  Character(ch)    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
87	[BUG]  [BUGGY]  Char  ch)  {  for(int  i  =  0;  i  <  sz;  i++)  {  ch  =  str.charAt(i);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  Char  ch)  {  for(int  i  =  0;  i  <  sz;  i++)  {  ch  =  str.charAt(i);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	Char  ch)  {  for(int  i  =  0;  i  <  sz;  i++)  {  ch  =  str.charAt(i);  }	  Character(ch)    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
88	[BUG]  [BUGGY]  Character  ch  =  str.charAt(i);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  Character  ch  =  str.charAt(i);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	Character  ch  =  str.charAt(i);	  Character(ch)    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
89	[BUG]  [BUGGY]  Character(ch)  {  out.write( "u00 "  +  hex(ch));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  Character(ch)  {  out.write( "u00 "  +  hex(ch));  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	Character(ch)  {  out.write( "u00 "  +  hex(ch));	  Character(ch)    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
90	[BUG]  [BUGGY]  if(ch  <  0x7f  ||  ch  >=  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7f  ||  ch  >=  0x7f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7f  ||  ch  >=  0x7f)  {	  if(ch    <    0x7f    ||    ch    >    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
91	[BUG]  [BUGGY]  if(ch  <  0x7f  ||  ch  ==  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7f  ||  ch  ==  0x7f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7f  ||  ch  ==  0x7f)  {	  if(ch    <    0x7f    ||    ch    >    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
92	[BUG]  [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x7e)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x7e)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7f  ||  ch  >  0x7e)  {	  if(ch    <    0x7f    ||    ch    >    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
93	[BUG]  [BUGGY]  if(ch  <  =  0xff  ||  ch  >  0x80)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  =  0xff  ||  ch  >  0x80)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  =  0xff  ||  ch  >  0x80)  {	  if(ch    <    0xff    ||    ch    >    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
94	[BUG]  [BUGGY]  if(ch  <  0xff  ||  ch  >  0x800)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0xff  ||  ch  >  0x800)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0xff  ||  ch  >  0x800)  {	  if(ch    <    0xff    ||    ch    >    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
95	[BUG]  [BUGGY]  if(ch  <  0xff  ||  ch  >=  0x80)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0xff  ||  ch  >=  0x80)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0xff  ||  ch  >=  0x80)  {	  if(ch    <    0xff    ||    ch    >    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
96	[BUG]  [BUGGY]  if(ch  <  0x7FF  ||  ch  >  0x10FF)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7FF  ||  ch  >  0x10FF)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7FF  ||  ch  >  0x10FF)  {	  if(ch    <    0x7F    ||    ch    >    0x10FF)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
97	[BUG]  [BUGGY]  if(ch  <  0x7F  ||  ch  >=  0x10FF)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7F  ||  ch  >=  0x10FF)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7F  ||  ch  >=  0x10FF)  {	  if(ch    <    0x7F    ||    ch    >    0x10FF)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
98	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'	  if(ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'A')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
99	[BUG]  [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x7f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7F  ||  ch  >  0x7f)  {	  if(ch    <    0x7F    ||    ch    >    0x7F)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
100	[BUG]  [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x7FF)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x7FF)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7F  ||  ch  >  0x7FF)  {	  if(ch    <    0x7F    ||    ch    >    0x7F)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
101	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  >  'a'  ||  ch  >  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  >  'a'  ||  ch  >  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  >  'a'  ||  ch  >  'z')  {	  if(ch    <    'u'    ||    ch    >    'a'    ||    ch    >    'z')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
102	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >=  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >=  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >=  'z')  {	  if(ch    <    'u'    ||    ch    >    'a'    ||    ch    >    'z')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
103	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  <  'a'  ||  ch  >  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  <  'a'  ||  ch  >  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  <  'a'  ||  ch  >  'z')  {	  if(ch    <    'u'    ||    ch    >    'a'    ||    ch    >    'z')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
104	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  '9')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  '9')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  '9')  {	  if(ch    <    'u'    ||    ch    >    '')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
105	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'e'  ||  ch  <  'E')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'e'  ||  ch  <  'E')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'e'  ||  ch  <  'E')  {	  if(ch    <    'u'    ||    ch    >    '')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
106	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  't')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  't')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  't')  {	  if(ch    <    'u'    ||    ch    >    '')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
107	[BUG]  [BUGGY]  if(ch  <  0x7f  ||  ch  >=  0x3f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7f  ||  ch  >=  0x3f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7f  ||  ch  >=  0x3f)  {	  if(ch    <    0x7f    ||    ch    >    0x3f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
108	[BUG]  [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x10f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x10f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7f  ||  ch  >  0x10f)  {	  if(ch    <    0x7f    ||    ch    >    0x3f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
109	[BUG]  [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x3e)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x3e)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7f  ||  ch  >  0x3e)  {	  if(ch    <    0x7f    ||    ch    >    0x3f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
110	[BUG]  [BUGGY]  if(ch  <  0xff  ||  ch  >=  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0xff  ||  ch  >=  0xff)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0xff  ||  ch  >=  0xff)  {	  if(ch    <    0xff    ||    ch    >    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
111	[BUG]  [BUGGY]  if(ch  <  0xff  ||  ch  ==  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0xff  ||  ch  ==  0xff)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0xff  ||  ch  ==  0xff)  {	  if(ch    <    0xff    ||    ch    >    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
112	[BUG]  [BUGGY]  if(ch  ==  0x80)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  0x80)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  0x80)  {	  if(ch    >    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
113	[BUG]  [BUGGY]  if(ch!=  0x80)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch!=  0x80)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch!=  0x80)  {	  if(ch    >    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
114	[BUG]  [BUGGY]  if(ch  ==  'u'  &&  ch  <  =  'a'  &&  ch  <  =  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  &&  ch  <  =  'a'  &&  ch  <  =  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  &&  ch  <  =  'a'  &&  ch  <  =  'z')  {	  if(ch!=    'u'    &&    ch    <    =    'a'    &&    ch    <    =    'z')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
115	[BUG]  [BUGGY]  if(ch!=  'u'  &&  ch  <  =  'a'  ||  ch  <  =  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch!=  'u'  &&  ch  <  =  'a'  ||  ch  <  =  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch!=  'u'  &&  ch  <  =  'a'  ||  ch  <  =  'z')  {	  if(ch!=    'u'    &&    ch    <    =    'a'    &&    ch    <    =    'z')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
116	[BUG]  [BUGGY]  if(ch  >=  'u'  &&  ch  <  =  'a'  &&  ch  <  =  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  >=  'u'  &&  ch  <  =  'a'  &&  ch  <  =  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  >=  'u'  &&  ch  <  =  'a'  &&  ch  <  =  'z')  {	  if(ch!=    'u'    &&    ch    <    =    'a'    &&    ch    <    =    'z')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
117	[BUG]  [BUGGY]  if(escapeSingleQuote)  {  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(escapeSingleQuote)  {  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(escapeSingleQuote)  {  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }  }	  if(escapeSingleQuote)    {    if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
118	[BUG]  [BUGGY]  if(escapeSingleQuote)  {  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  ch  =  str.charAt(i);  }  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(escapeSingleQuote)  {  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  ch  =  str.charAt(i);  }  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(escapeSingleQuote)  {  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  ch  =  str.charAt(i);  }  }	  if(escapeSingleQuote)    {    if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
119	[BUG]  [BUGGY]  if(escapeSingleQuote)  {  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  ch  =  str.charAt(i);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(escapeSingleQuote)  {  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  ch  =  str.charAt(i);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(escapeSingleQuote)  {  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  ch  =  str.charAt(i);  }	  if(escapeSingleQuote)    {    if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
120	[BUG]  [BUGGY]  if(ch  <  0x80  ||  ch  >  0x90)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x80  ||  ch  >  0x90)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x80  ||  ch  >  0x90)  {	  if(ch    <    0x80    ||    ch    >    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
121	[BUG]  [BUGGY]  out.write( "utf-8 "  +  hex(ch),  i);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( "utf-8 "  +  hex(ch),  i);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( "utf-8 "  +  hex(ch),  i);	  out.write(   "utf-8   "    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
122	[BUG]  [BUGGY]  if(ch  <  =  0x7FF)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  =  0x7FF)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  =  0x7FF)  {	  if(ch    <    0x7FF)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
123	[BUG]  [BUGGY]  if(ch  <  0x7FF  ||  ch  >  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7FF  ||  ch  >  0xff)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7FF  ||  ch  >  0xff)  {	  if(ch    <    0x7FF)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
124	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'A'  ||  ch  >  'Z'  ||  ch  <  'a'  ||  ch  >  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'A'  ||  ch  >  'Z'  ||  ch  <  'a'  ||  ch  >  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'A'  ||  ch  >  'Z'  ||  ch  <  'a'  ||  ch  >  'z')  {	  if(ch    <    'u'    ||    ch    >    'A'    ||    ch    >    'Z')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
125	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'A'  ||  ch  >  'Z'  ||  ch  <  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'A'  ||  ch  >  'Z'  ||  ch  <  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'A'  ||  ch  >  'Z'  ||  ch  <  'z')  {	  if(ch    <    'u'    ||    ch    >    'A'    ||    ch    >    'Z')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
126	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'A'  ||  ch  >  'Z'  ||  ch  >=  'a'  ||  ch  >  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'A'  ||  ch  >  'Z'  ||  ch  >=  'a'  ||  ch  >  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'A'  ||  ch  >  'Z'  ||  ch  >=  'a'  ||  ch  >  'z')  {	  if(ch    <    'u'    ||    ch    >    'A'    ||    ch    >    'Z')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
127	[BUG]  [BUGGY]  if(ch  <  0x80  ||  ch  >=  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x80  ||  ch  >=  0xff)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x80  ||  ch  >=  0xff)  {	  if(ch    <    0x80    ||    ch    >    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
128	[BUG]  [BUGGY]  if(ch  <  0x80  &&  ch  >  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x80  &&  ch  >  0xff)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x80  &&  ch  >  0xff)  {	  if(ch    <    0x80    ||    ch    >    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
129	[BUG]  [BUGGY]  if(ch  ==  ''  ||  ch  ==  '')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  ''  ||  ch  ==  '')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  ''  ||  ch  ==  '')  {	  if(ch    ==    '')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
130	[BUG]  [BUGGY]  if(ch  >=  0xff)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  >=  0xff)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  >=  0xff)  {	  if(ch!=    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
131	[BUG]  [BUGGY]  if(ch!=  0xff  ||  ch  ==  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch!=  0xff  ||  ch  ==  0x7f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch!=  0xff  ||  ch  ==  0x7f)  {	  if(ch!=    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
132	[BUG]  [BUGGY]  if(ch  <  0x80  &&  ch  >  0x800)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x80  &&  ch  >  0x800)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x80  &&  ch  >  0x800)  {	  if(ch    <    0x80    ||    ch    >    0x800)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
133	[BUG]  [BUGGY]  if(ch  <  0x800  ||  ch  >  0x80)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x800  ||  ch  >  0x80)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x800  ||  ch  >  0x80)  {	  if(ch    <    0x80    ||    ch    >    0x800)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
134	[BUG]  [BUGGY]  if(ch  <  0x80  ||  ch  >=  0x800)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x80  ||  ch  >=  0x800)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x80  ||  ch  >=  0x800)  {	  if(ch    <    0x80    ||    ch    >    0x800)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
135	[BUG]  [BUGGY]  if(ch  <  ''  ||  ch  >  '')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  ''  ||  ch  >  '')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  ''  ||  ch  >  '')  {	  if(ch    <    '')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
136	[BUG]  [BUGGY]  out.write('u'  +  hex(ch)+  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write('u'  +  hex(ch)+  1);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write('u'  +  hex(ch)+  1);	  out.write('u'    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
137	[BUG]  [BUGGY]  out.write('u'  +  hex(ch),  i);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write('u'  +  hex(ch),  i);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write('u'  +  hex(ch),  i);	  out.write('u'    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
138	[BUG]  [BUGGY]  out.write('u'  +  hex(ch,  i));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write('u'  +  hex(ch,  i));  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write('u'  +  hex(ch,  i));	  out.write('u'    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
139	[BUG]  [BUGGY]  if(ch  ==  0x7f  ||  ch  ==  0x80)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  0x7f  ||  ch  ==  0x80)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  0x7f  ||  ch  ==  0x80)  {	  if(ch    ==    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
140	[BUG]  [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x20  ||  ch  >  0x10)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x20  ||  ch  >  0x10)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7F  ||  ch  >  0x20  ||  ch  >  0x10)  {	  if(ch    <    0x7F    ||    ch    >    0x10)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
141	[BUG]  [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x100)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x100)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7F  ||  ch  >  0x100)  {	  if(ch    <    0x7F    ||    ch    >    0x10)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
142	[BUG]  [BUGGY]  OutputStream  escapeSingleQuote  =  ch.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  OutputStream  escapeSingleQuote  =  ch.toString();  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	OutputStream  escapeSingleQuote  =  ch.toString();	  OutputStream    escapeSingleQuote    =    out.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
143	[BUG]  [BUGGY]  OutputStream  escapeSingleQuote  =  str.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  OutputStream  escapeSingleQuote  =  str.toString();  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	OutputStream  escapeSingleQuote  =  str.toString();	  OutputStream    escapeSingleQuote    =    out.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
144	[BUG]  [BUGGY]  OutputStream  out  =  str.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  OutputStream  out  =  str.toString();  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	OutputStream  out  =  str.toString();	  OutputStream    escapeSingleQuote    =    out.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
145	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  ==  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  ==  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  ==  'a')  {	  if(ch    <    'u'    ||    ch    >    'a'    ||    ch    >=    'a'    ||    ch    >=    'a'    ||    ch    >=    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
146	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {	  if(ch    <    'u'    ||    ch    >    'a'    ||    ch    >=    'a'    ||    ch    >=    'a'    ||    ch    >=    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
147	[BUG]  [BUGGY]  if(ch  >=  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  >=  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  >=  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {	  if(ch    <    'u'    ||    ch    >    'a'    ||    ch    >=    'a'    ||    ch    >=    'a'    ||    ch    >=    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
148	[BUG]  [BUGGY]  if(ch  >=  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  >=  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  >=  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {	  if(ch    <    'u'    ||    ch    >    'a'    ||    ch    >=    'a'    ||    ch    >=    'a'    ||    ch    >=    'a'    ||    ch    >=    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
149	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {	  if(ch    <    'u'    ||    ch    >    'a'    ||    ch    >=    'a'    ||    ch    >=    'a'    ||    ch    >=    'a'    ||    ch    >=    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
150	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  ==  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  ==  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  ==  'a')  {	  if(ch    <    'u'    ||    ch    >    'a'    ||    ch    >=    'a'    ||    ch    >=    'a'    ||    ch    >=    'a'    ||    ch    >=    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
151	[BUG]  [BUGGY]  if(ch  <  0x7f  ||  ch  >=  0x80)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7f  ||  ch  >=  0x80)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7f  ||  ch  >=  0x80)  {	  if(ch    <    0x7f    ||    ch    >    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
152	[BUG]  [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x80)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x80)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7F  ||  ch  >  0x80)  {	  if(ch    <    0x7f    ||    ch    >    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
153	[BUG]  [BUGGY]  if(ch  <  =  0x7f  ||  ch  >  0x80)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  =  0x7f  ||  ch  >  0x80)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  =  0x7f  ||  ch  >  0x80)  {	  if(ch    <    0x7f    ||    ch    >    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
154	[BUG]  [BUGGY]  if(ch  ==  ''  ||  ch  ==  'u'  ||  ch  ==  '')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  ''  ||  ch  ==  'u'  ||  ch  ==  '')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  ''  ||  ch  ==  'u'  ||  ch  ==  '')  {	  if(ch    ==    'u'    ||    ch    ==    '')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
155	[BUG]  [BUGGY]  if(ch  ==  ''  ||  ch  ==  'u')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  ''  ||  ch  ==  'u')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  ''  ||  ch  ==  'u')  {	  if(ch    ==    'u'    ||    ch    ==    '')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
156	[BUG]  [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x800)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x800)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7f  ||  ch  >  0x800)  {	  if(ch    <    0x7f    ||    ch    >    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
157	[BUG]  [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x90)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x90)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7f  ||  ch  >  0x90)  {	  if(ch    <    0x7f    ||    ch    >    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
158	[BUG]  [BUGGY]  Character(ch)  {  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  Character(ch)  {  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	Character(ch)  {  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }	  Character(ch)    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
159	[BUG]  [BUGGY]  Character(ch)  {  out.write( "u0 "  +  hex(ch));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  Character(ch)  {  out.write( "u0 "  +  hex(ch));  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	Character(ch)  {  out.write( "u0 "  +  hex(ch));	  Character(ch)    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
160	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  '')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  '')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  '')  {	  if(ch    <    'u'    ||    ch    >    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
161	[BUG]  [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x20FF)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x20FF)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7F  ||  ch  >  0x20FF)  {	  if(ch    <    0x7F    ||    ch    >    0x10FF)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
162	[BUG]  [BUGGY]  if(ch  ==  ' "')  {  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  ' "')  {  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  ' "')  {  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }	  if(ch    ==    '   "')    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
163	[BUG]  [BUGGY]  if(ch!=  'u'  &&  ch  <  =  'a'  &&  ch  <  =  'z'  ||  ch  >=  'a'  &&  ch  <  =  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch!=  'u'  &&  ch  <  =  'a'  &&  ch  <  =  'z'  ||  ch  >=  'a'  &&  ch  <  =  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch!=  'u'  &&  ch  <  =  'a'  &&  ch  <  =  'z'  ||  ch  >=  'a'  &&  ch  <  =  'z')  {	  if(ch!=    'u'    &&    ch    <    =    'a'    &&    ch    <    =    'z')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
164	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >=  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >=  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >=  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
165	[BUG]  [BUGGY]  out.write( "' ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( "' ");  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( "' ");	  if(ch    <    '')    {    out.write('');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
166	[BUG]  [BUGGY]  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  out.write( "u00 "  +  hex  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  out.write( "u00 "  +  hex  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  out.write( "u00 "  +  hex	  if(escapeSingleQuote)    {    if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    out.write(   "u       "    +    hex    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
167	[BUG]  [BUGGY]  if(ch  ==  '')  {  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  String  ch  =  str.charAt(i);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  '')  {  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  String  ch  =  str.charAt(i);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  '')  {  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  String  ch  =  str.charAt(i);  }	  if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    String    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
168	[BUG]  [BUGGY]  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  String  ch  =  str.charAt(i  +  1);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  String  ch  =  str.charAt(i  +  1);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  String  ch  =  str.charAt(i  +  1);  }	  if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    String    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
169	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {	  if(ch    <    'u'    ||    ch    >    'a'    ||    ch    >=    'a'    ||    ch    >=    'a'    ||    ch    >=    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
170	[BUG]  [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x10F)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x10F)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7F  ||  ch  >  0x10F)  {	  if(ch    <    0x7F    ||    ch    >    0x7F)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
171	[BUG]  [BUGGY]  out.write( "utf-8 "  +  hex(ch)+  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( "utf-8 "  +  hex(ch)+  1);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( "utf-8 "  +  hex(ch)+  1);	  out.write(   "utf-8   "    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
172	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  	  if(ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'A')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
173	[BUG]  [BUGGY]  if(ch  <  'a'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'a'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'a'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'	  if(ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'A')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
174	[BUG]  [BUGGY]  if(ch  <  'A'  ||  ch  >  'Z'  ||  ch  >=  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'A'  ||  ch  >  'Z'  ||  ch  >=  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'A'  ||  ch  >  'Z'  ||  ch  >=  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'	  if(ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'A')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
175	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'e')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'e')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'e')  {	  if(ch    <    'u'    ||    ch    >    '')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
176	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >  'f')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >  'f')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >  'f')  {	  if(ch    <    'u'    ||    ch    >    '')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
177	[BUG]  [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x3f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x3f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7F  ||  ch  >  0x3f)  {	  if(ch    <    0x7f    ||    ch    >    0x3f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
178	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'A'  ||  ch  >  'Z'  ||  ch  >=  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'A'  ||  ch  >  'Z'  ||  ch  >=  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'A'  ||  ch  >  'Z'  ||  ch  >=  'a')  {	  if(ch    <    'u'    ||    ch    >    'A'    ||    ch    >    'Z')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
179	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'A'  ||  ch  >  'Z'  ||  ch  <  'a'  ||  ch  >  'f')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'A'  ||  ch  >  'Z'  ||  ch  <  'a'  ||  ch  >  'f')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'A'  ||  ch  >  'Z'  ||  ch  <  'a'  ||  ch  >  'f')  {	  if(ch    <    'u'    ||    ch    >    'A'    ||    ch    >    'Z')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
180	[BUG]  [BUGGY]  if(ch  >=  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  >=  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  >=  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'	  if(ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'A')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
181	[BUG]  [BUGGY]  if(ch  ==  ' "')  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i  +  1);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  ' "')  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i  +  1);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  ' "')  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i  +  1);  }	  if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i    +    1);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
182	[BUG]  [BUGGY]  if(ch  ==  '')  {  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i  +  1);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  '')  {  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i  +  1);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  '')  {  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i  +  1);  }	  if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i    +    1);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
183	[BUG]  [BUGGY]  char  ch  =  str.charAt(i  +  11);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  char  ch  =  str.charAt(i  +  11);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	char  ch  =  str.charAt(i  +  11);	  char    ch    =    str.charAt(i    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
184	[BUG]  [BUGGY]  if(ch  <  0x800)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x800)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x800)  {	  if(ch    >    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
185	[BUG]  [BUGGY]  if(ch  >=  0x80)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  >=  0x80)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  >=  0x80)  {	  if(ch    >    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
186	[BUG]  [BUGGY]  if(ch  >  0x7f  ||  ch  <  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  >  0x7f  ||  ch  <  0x7f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  >  0x7f  ||  ch  <  0x7f)  {	  if(ch    <    0x7f    ||    ch    >    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
187	[BUG]  [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x8f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7f  ||  ch  >  0x8f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7f  ||  ch  >  0x8f)  {	  if(ch    <    0x7f    ||    ch    >    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
188	[BUG]  [BUGGY]  OutputStream  escapeSingleQuote)  {  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  OutputStream  escapeSingleQuote)  {  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	OutputStream  escapeSingleQuote)  {  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }	  if(escapeSingleQuote)    {    if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
189	[BUG]  [BUGGY]  if(escapeSingleQuote)  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(escapeSingleQuote)  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(escapeSingleQuote)  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }	  if(escapeSingleQuote)    {    if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
190	[BUG]  [BUGGY]  if(ch  <  0xff  ||  ch  >  0x10)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0xff  ||  ch  >  0x10)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0xff  ||  ch  >  0x10)  {	  if(ch    <    0xff    ||    ch    >    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
191	[BUG]  [BUGGY]  if(ch  <  0x80  ||  ch  >  0x7F)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x80  ||  ch  >  0x7F)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x80  ||  ch  >  0x7F)  {	  if(ch    <    0x80    ||    ch    >    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
192	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'z')  {	  if(ch    <    'u'    ||    ch    >    'a'    ||    ch    >    'z')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
193	[BUG]  [BUGGY]  if(ch  >=  'u'  ||  ch  ==  'a'  ||  ch  ==  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  >=  'u'  ||  ch  ==  'a'  ||  ch  ==  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  >=  'u'  ||  ch  ==  'a'  ||  ch  ==  'z')  {	  if(ch    <    'u'    ||    ch    >    'a'    ||    ch    >    'z')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
194	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'a'  ||  ch  >=  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'a'  ||  ch  >=  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'a'  ||  ch  >=  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
195	[BUG]  [BUGGY]  if(ch  >=  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  >=  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  >=  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
196	[BUG]  [BUGGY]  OutputStream  hex  =  out.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  OutputStream  hex  =  out.toString();  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	OutputStream  hex  =  out.toString();	  OutputStream    escapeSingleQuote    =    out.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
197	[BUG]  [BUGGY]  out.write( "u   "  +  hex(ch)  >>  invalid  method  declaration;  return  type  required;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( "u   "  +  hex(ch)  >>  invalid  method  declaration;  return  type  required;  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( "u   "  +  hex(ch)  >>  invalid  method  declaration;  return  type  required;	  out.write(   "u       "    +    hex    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
198	[BUG]  [BUGGY]  if(ch  >  0x7FF)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  >  0x7FF)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  >  0x7FF)  {	  if(ch    <    0x7FF)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
199	[BUG]  [BUGGY]  if(ch  <  =  0x80  ||  ch  >  0x800)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  =  0x80  ||  ch  >  0x800)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  =  0x80  ||  ch  >  0x800)  {	  if(ch    <    0x80    ||    ch    >    0x800)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
200	[BUG]  [BUGGY]  char  ch  =  str.charAt(i,  sz  +  1,  sz);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  char  ch  =  str.charAt(i,  sz  +  1,  sz);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	char  ch  =  str.charAt(i,  sz  +  1,  sz);	  char    ch    =    str.charAt(i,    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
201	[BUG]  [BUGGY]  out.write( "u000 "  +  hex!=  invalid  method  declaration;  return  type  required;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( "u000 "  +  hex!=  invalid  method  declaration;  return  type  required;  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( "u000 "  +  hex!=  invalid  method  declaration;  return  type  required;	  out.write(   "u000   "    +    hex    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
202	[BUG]  [BUGGY]  out.write( "u00000 "  +  hex(ch));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( "u00000 "  +  hex(ch));  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( "u00000 "  +  hex(ch));	  out.write(   "u0000   "    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
203	[BUG]  [BUGGY]  if(ch  <  0xff  ||  hex  >  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0xff  ||  hex  >  0x7f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0xff  ||  hex  >  0x7f)  {	  if(ch    >    0xff    ||    hex    <    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
204	[BUG]  [BUGGY]  if(ch  <  0x80  ||  ch  >  0x10FF)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x80  ||  ch  >  0x10FF)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x80  ||  ch  >  0x10FF)  {	  if(ch    <    0x80    ||    ch    >    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
205	[BUG]  [BUGGY]  if(ch  <  0xff  ||  ch  >  0x7F)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0xff  ||  ch  >  0x7F)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0xff  ||  ch  >  0x7F)  {	  if(ch    <    0x7F    ||    ch    >    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
206	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {	  if(ch    <    'u'    ||    ch    >    'a'    ||    ch    >=    'a'    ||    ch    >=    'a'    ||    ch    >=    'a'    ||    ch    >=    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
207	[BUG]  [BUGGY]  if(ch!=  'u'  ||  ch  ==  'e')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch!=  'u'  ||  ch  ==  'e')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch!=  'u'  ||  ch  ==  'e')  {	  if(ch!=    'u'    ||    ch    ==    '')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
208	[BUG]  [BUGGY]  if(ch  <  0xff  ||  ch  >  0x90)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0xff  ||  ch  >  0x90)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0xff  ||  ch  >  0x90)  {	  if(ch    <    0xff    ||    ch    >    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
209	[BUG]  [BUGGY]  if(ch  <  0x80  ||  ch  >  0x3f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x80  ||  ch  >  0x3f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x80  ||  ch  >  0x3f)  {	  if(ch    <    0x80    ||    ch    >    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
210	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'a'  ||  ch  >  'a'  ||  ch  >=  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'a'  ||  ch  >  'a'  ||  ch  >=  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'a'  ||  ch  >  'a'  ||  ch  >=  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
211	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'a'  ||  ch  >  'a'  ||  ch  <  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'a'  ||  ch  >  'a'  ||  ch  <  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'a'  ||  ch  >  'a'  ||  ch  <  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
212	[BUG]  [BUGGY]  if(ch  >  0xff  ||  hex  ==  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  >  0xff  ||  hex  ==  0x7f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  >  0xff  ||  hex  ==  0x7f)  {	  if(ch    >    0xff    ||    hex    <    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
213	[BUG]  [BUGGY]  if(ch  <  =  0xff  ||  ch  >  0x3f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  =  0xff  ||  ch  >  0x3f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  =  0xff  ||  ch  >  0x3f)  {	  if(ch    <    =    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
214	[BUG]  [BUGGY]  if(ch!=  'u'  &&  ch  ==  '')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch!=  'u'  &&  ch  ==  '')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch!=  'u'  &&  ch  ==  '')  {	  if(ch!=    'u'    ||    ch    ==    '')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
215	[BUG]  [BUGGY]  out.write( ",UTF-8 "  +  hex(ch));  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( ",UTF-8 "  +  hex(ch));  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( ",UTF-8 "  +  hex(ch));	  out.write(   "UTF-8   "    +    hex(ch));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
216	[BUG]  [BUGGY]  if(ch  >=  'u'  ||  ch  >  'a'  ||  ch  >  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  >=  'u'  ||  ch  >  'a'  ||  ch  >  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  >=  'u'  ||  ch  >  'a'  ||  ch  >  'z')  {	  if(ch    <    'u'    ||    ch    >    'a'    ||    ch    >    'z')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
217	[BUG]  [BUGGY]  if(ch  <  =  0x7F  ||  ch  >  0x7F)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  =  0x7F  ||  ch  >  0x7F)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  =  0x7F  ||  ch  >  0x7F)  {	  if(ch    <    =    0x7F)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
218	[BUG]  [BUGGY]  if(ch  <  =  0x7F  ||  ch  >  0x10FF)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  =  0x7F  ||  ch  >  0x10FF)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  =  0x7F  ||  ch  >  0x10FF)  {	  if(ch    <    =    0x7F)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
219	[BUG]  [BUGGY]  if(ch  <  =  0x7F  ||  ch  >  0x10)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  =  0x7F  ||  ch  >  0x10)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  =  0x7F  ||  ch  >  0x10)  {	  if(ch    <    =    0x7F)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
220	[BUG]  [BUGGY]  OutputStream  escapeSingleQuote  =  hex.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  OutputStream  escapeSingleQuote  =  hex.toString();  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	OutputStream  escapeSingleQuote  =  hex.toString();	  OutputStream    escapeSingleQuote    =    out.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
221	[BUG]  [BUGGY]  Character(ch)  ==  ' "')  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  Character(ch)  ==  ' "')  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	Character(ch)  ==  ' "')  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }	  if(ch    ==    '   "')    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
222	[BUG]  [BUGGY]  if(ch  <  0xff  ||  ch  >  0x10FF)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0xff  ||  ch  >  0x10FF)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0xff  ||  ch  >  0x10FF)  {	  if(ch    <    0xff    ||    ch    >    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
223	[BUG]  [BUGGY]  if(ch  <  'A'  ||  ch  >  'Z'  ||  ch  >=  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'A'  ||  ch  >  'Z'  ||  ch  >=  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'A'  ||  ch  >  'Z'  ||  ch  >=  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'	  if(ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'A')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
224	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'	  if(ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'A')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
225	[BUG]  [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x20)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x20)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7F  ||  ch  >  0x20)  {	  if(ch    <    0x7F    ||    ch    >    0x7F)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
226	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'a'  ||  ch  >  'f')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'a'  ||  ch  >  'f')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'a'  ||  ch  >  'f')  {	  if(ch    <    'u'    ||    ch    >    'u')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
227	[BUG]  [BUGGY]  out.write(ch  +  hex  >>  invalid  method  declaration;  return  type  required;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write(ch  +  hex  >>  invalid  method  declaration;  return  type  required;  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write(ch  +  hex  >>  invalid  method  declaration;  return  type  required;	  out.write(   "u00   "    +    hex    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
228	[BUG]  [BUGGY]  out.write(ch  +  '0');  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write(ch  +  '0');  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write(ch  +  '0');	  out.write(   "u00   "    +    hex    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
229	[BUG]  [BUGGY]  if(ch  >  0x80  ||  ch  <  0x80)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  >  0x80  ||  ch  <  0x80)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  >  0x80  ||  ch  <  0x80)  {	  if(ch    >    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
230	[BUG]  [BUGGY]  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(0);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(0);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write('');  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(0);  }	  if(ch    ==    '')    {    out.write('');    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
231	[BUG]  [BUGGY]  if(ch  <  0x7FF  ||  ch  >  0x10)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7FF  ||  ch  >  0x10)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7FF  ||  ch  >  0x10)  {	  if(ch    <    0x7F    ||    ch    >    0x10)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
232	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'a'  ||  ch  <  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'a'  ||  ch  <  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >  'a'  ||  ch  <  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
233	[BUG]  [BUGGY]  if(ch  <  =  0x7F  ||  ch  >  0x7f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  =  0x7F  ||  ch  >  0x7f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  =  0x7F  ||  ch  >  0x7f)  {	  if(ch    <    =    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
234	[BUG]  [BUGGY]  if(ch  <  0x7FF  ||  ch  >  0x7FF)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7FF  ||  ch  >  0x7FF)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7FF  ||  ch  >  0x7FF)  {	  if(ch    <    0x7f    ||    ch    >    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
235	[BUG]  [BUGGY]  if(ch  <  0x10FF  ||  ch  >  0x7F)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x10FF  ||  ch  >  0x7F)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x10FF  ||  ch  >  0x7F)  {	  if(ch    <    0x7F    ||    ch    >    0x10FF)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
236	[BUG]  [BUGGY]  if(ch!=  0xff  ||  ch  ==  'u')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch!=  0xff  ||  ch  ==  'u')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch!=  0xff  ||  ch  ==  'u')  {	  if(ch!=    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
237	[BUG]  [BUGGY]  Character(ch)  {  int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  Character(ch)  {  int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	Character(ch)  {  int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  }	  Character(ch)    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
238	[BUG]  [BUGGY]  Character(ch)  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(0);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  Character(ch)  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(0);  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	Character(ch)  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(0);  }	  Character(ch)    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
239	[BUG]  [BUGGY]  if(ch  >  0x7F  ||  hex  <  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  >  0x7F  ||  hex  <  0)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  >  0x7F  ||  hex  <  0)  {	  if(ch    >    0x7F)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
240	[BUG]  [BUGGY]  if(ch!=  'n'  ||  ch  ==  'r'  ||  ch  ==  't')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch!=  'n'  ||  ch  ==  'r'  ||  ch  ==  't')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch!=  'n'  ||  ch  ==  'r'  ||  ch  ==  't')  {	  if(ch!=    '')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
241	[BUG]  [BUGGY]  out.write( "u!=  invalid  method  declaration;  return  type  required);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( "u!=  invalid  method  declaration;  return  type  required);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( "u!=  invalid  method  declaration;  return  type  required);	  if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    if(ch!=    '')    {    out.write(   "u    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
242	[BUG]  [BUGGY]  out.write( "u  ==  invalid  method  declaration;  return  type  required);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( "u  ==  invalid  method  declaration;  return  type  required);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( "u  ==  invalid  method  declaration;  return  type  required);	  if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    if(ch!=    '')    {    out.write(   "u    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
243	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
244	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
245	[BUG]  [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  ',')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  ',')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  'u'  ||  ch  ==  'u'  ||  ch  ==  ',')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    '')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
246	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {	  if(ch    <    'u'    ||    ch    >    'a'    ||    ch    >=    'a'    ||    ch    >=    'a'    ||    ch    >=    'a'    ||    ch    >=    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
247	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >=  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >=  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'u'  ||  ch  >=  'a'  ||  ch  ==  'a'  ||  ch  ==  'a')  {	  if(ch    ==    'u'    ||    ch    ==    'u'    ||    ch    ==    'a'    ||    ch    ==    'a'    ||    ch    ==    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
248	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'A'  ||  ch  >  'Z'  ||  ch  >  'z')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'A'  ||  ch  >  'Z'  ||  ch  >  'z')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'A'  ||  ch  >  'Z'  ||  ch  >  'z')  {	  if(ch    <    'u'    ||    ch    >    'A'    ||    ch    >    'Z')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
249	[BUG]  [BUGGY]  if(ch  <  0xff  ||  ch  >  0x3f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0xff  ||  ch  >  0x3f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0xff  ||  ch  >  0x3f)  {	  if(ch    <    0xff    ||    ch    >    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
250	[BUG]  [BUGGY]  String  ch  =  str.charAt(i,  sz);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  String  ch  =  str.charAt(i,  sz);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	String  ch  =  str.charAt(i,  sz);	  char    ch    =    str.charAt(i,    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
251	[BUG]  [BUGGY]  out.write( ".s.IFJDCS "  +  hex(ch));  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( ".s.IFJDCS "  +  hex(ch));  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( ".s.IFJDCS "  +  hex(ch));	  out.write(   ".s.IFJDCS   ".charAt(i));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
252	[BUG]  [BUGGY]  out.write( ".s.IFJDCS ").charAt(i);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  out.write( ".s.IFJDCS ").charAt(i);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	out.write( ".s.IFJDCS ").charAt(i);	  out.write(   ".s.IFJDCS   ".charAt(i));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
253	[BUG]  [BUGGY]  String  ch  =  str.charAt(i++);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  String  ch  =  str.charAt(i++);  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	String  ch  =  str.charAt(i++);	  char    ch    =    str.charAt(i++);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
254	[BUG]  [BUGGY]  if(ch  <  'e'  ||  ch  >  'E')  {  out.write('E');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'e'  ||  ch  >  'E')  {  out.write('E');  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'e'  ||  ch  >  'E')  {  out.write('E');  }	  if(ch    <    '')    {    out.write('');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
255	[BUG]  [BUGGY]  if(ch  <  '0'  ||  ch  >  '9')  {  out.write('');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  '0'  ||  ch  >  '9')  {  out.write('');  }  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  '0'  ||  ch  >  '9')  {  out.write('');  }	  if(ch    <    '')    {    out.write('');    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
256	[BUG]  [BUGGY]  if(ch  <  0x80  ||  ch  >  0x10)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x80  ||  ch  >  0x10)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x80  ||  ch  >  0x10)  {	  if(ch    <    0x80    ||    ch    >    0xff)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
257	[BUG]  [BUGGY]  if(ch  <  0x7FF  ||  ch  >  0x80)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x7FF  ||  ch  >  0x80)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x7FF  ||  ch  >  0x80)  {	  if(ch    <    0x7f    ||    ch    >    0x80)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
258	[BUG]  [BUGGY]  if(ch  <  0x80  ||  ch  >  0x8f)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  0x80  ||  ch  >  0x8f)  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  0x80  ||  ch  >  0x8f)  {	  if(ch    <    0x80    ||    ch    >    0x7f)    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
259	[BUG]  [BUGGY]  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if(!escapedSingleQuote)  {  out.  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if(!escapedSingleQuote)  {  out.  [BUGGY]      if  (ch  >  0xfff)  {  out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  ==  '')  {  for(int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if(!escapedSingleQuote)  {  out.	  if(escapeSingleQuote)    {    if(ch    ==    '')    {    for(int    i    =    0;    i    <    sz;    i++)    {    char    ch    =    str.charAt(i);    if(!escapeSingleQuote)    {    out.    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
260	[BUG]  [BUGGY]  if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);        [BUGGY]  if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {  [BUGGY]      out.write(     "\\u     "  +  hex(ch));  }  else  if  (ch  >  0xff)  {  out.write(     "\\u0     "  +  hex(ch));  }  else  if  (ch  >  0x7f)  {  out.write(     "\\u00     "  +  hex(ch));  }  else  if  (ch  <  32)  {  switch  (ch)  {  case  '\b':  out.write('\\');  out.write('b');  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	184	184	1	replace	if(ch  <  'u'  ||  ch  >  'a'  ||  ch  >  'a'  ||  ch  >=  'a'  ||  ch  >=  'a')  {	  if(ch    <    'u'    ||    ch    >    'a'    ||    ch    >=    'a'    ||    ch    >=    'a'    ||    ch    >=    'a')    {    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
