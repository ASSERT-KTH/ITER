bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  [BUGGY]  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	175	175	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {	if  (str  ==  null)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
2	[BUG]  [BUGGY]  if(str  ==  null  ||  escapeSingleQuote)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [BUGGY]  if(str  ==  null  ||  escapeSingleQuote)  {  [BUGGY]  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	175	175	1	replace	if(str  ==  null  ||  escapeSingleQuote)  {	if  (str  ==  null)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
3	[BUG]  [BUGGY]    [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [BUGGY]    [BUGGY]  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	175	175	1	replace	  	if  (str  ==  null)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
4	[BUG]  [BUGGY]    String  str  =(String)out.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [BUGGY]    String  str  =(String)out.getValue();  [BUGGY]  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	175	175	1	replace	    String  str  =(String)out.getValue();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
5	[BUG]  [BUGGY]    out.write( "u "  +  str.charAt(0));  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [BUGGY]    out.write( "u "  +  str.charAt(0));  [BUGGY]  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	175	175	1	replace	    out.write( "u "  +  str.charAt(0));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
6	[BUG]  [BUGGY]    out.write( "u "  +  hex(ch));  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [BUGGY]    out.write( "u "  +  hex(ch));  [BUGGY]  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	175	175	1	replace	    out.write( "u "  +  hex(ch));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
7	[BUG]  [BUGGY]    String  str  =  escapeSingleQuote.toCharArray();  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [BUGGY]    String  str  =  escapeSingleQuote.toCharArray();  [BUGGY]  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	175	175	1	replace	    String  str  =  escapeSingleQuote.toCharArray();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
8	[BUG]  [BUGGY]    String  str  =  escapeSingleQuote.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [BUGGY]    String  str  =  escapeSingleQuote.toString();  [BUGGY]  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	175	175	1	replace	    String  str  =  escapeSingleQuote.toString();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
9	[BUG]  [BUGGY]    OutputStream  str  =  out.readLine();  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [BUGGY]    OutputStream  str  =  out.readLine();  [BUGGY]  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	175	175	1	replace	    OutputStream  str  =  out.readLine();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
10	[BUG]  [BUGGY]    String  str  =  escapeSingleQuote(out);  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [BUGGY]    String  str  =  escapeSingleQuote(out);  [BUGGY]  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	175	175	1	replace	    String  str  =  escapeSingleQuote(out);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
11	[BUG]  [BUGGY]    String  str  =  escapeSingleQuote(out,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [BUGGY]    String  str  =  escapeSingleQuote(out,  str);  [BUGGY]  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	175	175	1	replace	    String  str  =  escapeSingleQuote(out,  str);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
12	[BUG]  [BUGGY]  if(str  ==  null  ||  out.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [BUGGY]  if(str  ==  null  ||  out.length()  ==  0)  {  [BUGGY]  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	175	175	1	replace	if(str  ==  null  ||  out.length()  ==  0)  {	if  (str  ==  null)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
13	[BUG]  [BUGGY]    int  sz  =  str.length();  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [BUGGY]    int  sz  =  str.length();  [BUGGY]  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  if  (ch  >  0xfff)  {  out.write( "\\u "  +  hex(ch));  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	175	175	1	replace	    int  sz  =  str.length();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	add
