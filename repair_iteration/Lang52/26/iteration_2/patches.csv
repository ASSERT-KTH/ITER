bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  out.write(''  +  str,  ch,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(''  +  str,  ch,  escapeSingleQuote);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(''  +  str,  ch,  escapeSingleQuote);	  out.write(''    +    str,    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
2	[BUG]  [BUGGY]  out.write(''  +  ch  +  str,  sz);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(''  +  ch  +  str,  sz);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(''  +  ch  +  str,  sz);	  out.write(''    +    str,    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
3	[BUG]  [BUGGY]  out.write(''  +  ch  +  1,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(''  +  ch  +  1,  str);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(''  +  ch  +  1,  str);	  out.write(''    +    str,    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
4	[BUG]  [BUGGY]  out.write(''  +  str,  sz);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(''  +  str,  sz);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(''  +  str,  sz);	  out.write(''    +    str,    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
5	[BUG]  [BUGGY]  out.write(''  +  str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(''  +  str.length());  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(''  +  str.length());	  out.write(''    +    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
6	[BUG]  [BUGGY]  out.write(''  +  str.toCharArray());  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(''  +  str.toCharArray());  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(''  +  str.toCharArray());	  out.write(''    +    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
7	[BUG]  [BUGGY]  out.write(''  +  str.trim());  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(''  +  str.trim());  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(''  +  str.trim());	  out.write(''    +    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
8	[BUG]  [BUGGY]  out.write(''  +  str.charAt(0));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(''  +  str.charAt(0));  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(''  +  str.charAt(0));	  out.write(''    +    str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
9	[BUG]  [BUGGY]  char  ch  =  str.charAt(i  +  1,  sz);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(i  +  1,  sz);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(i  +  1,  sz);	  char    ch    =    str.charAt(i    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
10	[BUG]  [BUGGY]  char  ch  =  str.charAt(i,  sz  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(i,  sz  +  1);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(i,  sz  +  1);	  char    ch    =    str.charAt(i    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
11	[BUG]  [BUGGY]  char  ch  =  str.charAt(sz)+  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(sz)+  1;  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(sz)+  1;	  String    ch    =    str.charAt(sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
12	[BUG]  [BUGGY]  String  ch  =  str.charAt(1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  String  ch  =  str.charAt(1);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	String  ch  =  str.charAt(1);	  char    ch    =    str.charAt(1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
13	[BUG]  [BUGGY]  String  ch  =  str.charAt(sz,  i);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  String  ch  =  str.charAt(sz,  i);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	String  ch  =  str.charAt(sz,  i);	  char    ch    =    str.charAt(sz,    i);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
14	[BUG]  [BUGGY]  char  ch  =  str.charAt(sz,  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(sz,  2);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(sz,  2);	  char    ch    =    str.charAt(sz,    i);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
15	[BUG]  [BUGGY]  char  ch  =  str.charAt(sz,  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(sz,  1);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(sz,  1);	  char    ch    =    str.charAt(sz,    i);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
16	[BUG]  [BUGGY]  out.write(ch,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(ch,  0);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(ch,  0);	  out.write(ch,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
17	[BUG]  [BUGGY]  out.write(ch,  escapeSingleQuote,  sz);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(ch,  escapeSingleQuote,  sz);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(ch,  escapeSingleQuote,  sz);	  out.write(ch,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
18	[BUG]  [BUGGY]  out.write(ch,  escapeSingleQuote,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(ch,  escapeSingleQuote,  str);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(ch,  escapeSingleQuote,  str);	  out.write(ch,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
19	[BUG]  [BUGGY]  out.write('',  i);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('',  i);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('',  i);	  out.write('',    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
20	[BUG]  [BUGGY]  out.write('',  sz  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('',  sz  +  1);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('',  sz  +  1);	  out.write('',    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
21	[BUG]  [BUGGY]  out.write('',  sz,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('',  sz,  escapeSingleQuote);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('',  sz,  escapeSingleQuote);	  out.write('',    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
22	[BUG]  [BUGGY]  out.write(''  +  ch  +  1,  sz);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(''  +  ch  +  1,  sz);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(''  +  ch  +  1,  sz);	  out.write(''    +    ch    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
23	[BUG]  [BUGGY]  out.write(''  +  ch  +  1,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(''  +  ch  +  1,  escapeSingleQuote);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(''  +  ch  +  1,  escapeSingleQuote);	  out.write(''    +    ch    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
24	[BUG]  [BUGGY]  out.write(ch,  '');  break;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(ch,  '');  break;  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(ch,  '');  break;	  out.write(ch,    escapeSingleQuote);    break;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
25	[BUG]  [BUGGY]  out.write(ch,  escapeSingleQuote,  sz);  break;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(ch,  escapeSingleQuote,  sz);  break;  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(ch,  escapeSingleQuote,  sz);  break;	  out.write(ch,    escapeSingleQuote);    break;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
26	[BUG]  [BUGGY]  out.write(ch,  0);  break;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(ch,  0);  break;  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(ch,  0);  break;	  out.write(ch,    escapeSingleQuote);    break;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
27	[BUG]  [BUGGY]  out.write(ch,  escapeSingleQuote,  str);  break;  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(ch,  escapeSingleQuote,  str);  break;  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(ch,  escapeSingleQuote,  str);  break;	  out.write(ch,    escapeSingleQuote);    break;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
28	[BUG]  [BUGGY]  out.write('-'  +  sz  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('-'  +  sz  +  1);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('-'  +  sz  +  1);	  out.write('-'    +    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
29	[BUG]  [BUGGY]  out.write('-'  +  sz,  ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('-'  +  sz,  ch);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('-'  +  sz,  ch);	  out.write('-'    +    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
30	[BUG]  [BUGGY]  out.write('-'  +  sz,  0,  sz);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('-'  +  sz,  0,  sz);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('-'  +  sz,  0,  sz);	  out.write('-'    +    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
31	[BUG]  [BUGGY]  char  ch  =  str.charAt(sz  +  1,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(sz  +  1,  escapeSingleQuote);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(sz  +  1,  escapeSingleQuote);	  char    ch    =    str.charAt(sz    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
32	[BUG]  [BUGGY]  char  ch  =  str.charAt(sz  *  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(sz  *  1);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(sz  *  1);	  char    ch    =    str.charAt(sz    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
33	[BUG]  [BUGGY]  out.write('-',  char  ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('-',  char  ch);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('-',  char  ch);	  out.write('-',    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
34	[BUG]  [BUGGY]  out.write('-',  ch,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('-',  ch,  escapeSingleQuote);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('-',  ch,  escapeSingleQuote);	  out.write('-',    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
35	[BUG]  [BUGGY]  out.write('-',  ch  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('-',  ch  +  1);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('-',  ch  +  1);	  out.write('-',    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
36	[BUG]  [BUGGY]  out.write('',  char  ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('',  char  ch);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('',  char  ch);	  out.write('',    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
37	[BUG]  [BUGGY]  char  ch  =  str.charAt(sz  +  1)+  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(sz  +  1)+  1;  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(sz  +  1)+  1;	  char    ch    =    str.charAt(0)    +    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
38	[BUG]  [BUGGY]  char  ch  =  str.charAt(i  +  1)+  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(i  +  1)+  1;  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(i  +  1)+  1;	  char    ch    =    str.charAt(0)    +    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
39	[BUG]  [BUGGY]  char  ch  =  str.charAt(i++,  sz);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(i++,  sz);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(i++,  sz);	  char    ch    =    str.charAt(i++);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
40	[BUG]  [BUGGY]  out.write('');  out.write(ch,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('');  out.write(ch,  escapeSingleQuote);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('');  out.write(ch,  escapeSingleQuote);	  out.write('');    out.write(ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
41	[BUG]  [BUGGY]  out.write(''  +  ch  +  3);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(''  +  ch  +  3);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(''  +  ch  +  3);	  out.write(''    +    ch    +    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
42	[BUG]  [BUGGY]  char  ch  =  str.charAt(sz++,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(sz++,  escapeSingleQuote);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(sz++,  escapeSingleQuote);	  char    ch    =    str.charAt(sz++);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
43	[BUG]  [BUGGY]  char  ch  =  str.charAt(sz++,  i);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(sz++,  i);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(sz++,  i);	  char    ch    =    str.charAt(sz++);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
44	[BUG]  [BUGGY]  out.write(''  +  sz  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(''  +  sz  +  1);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(''  +  sz  +  1);	  out.write(''    +    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
45	[BUG]  [BUGGY]  out.write(''  +  sz,  ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(''  +  sz,  ch);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(''  +  sz,  ch);	  out.write(''    +    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
46	[BUG]  [BUGGY]  out.write(''  +  sz,  0,  sz);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(''  +  sz,  0,  sz);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(''  +  sz,  0,  sz);	  out.write(''    +    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
47	[BUG]  [BUGGY]  out.write(ch  +  '',  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(ch  +  '',  escapeSingleQuote);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(ch  +  '',  escapeSingleQuote);	  out.write(ch    +    '');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
48	[BUG]  [BUGGY]  out.write(ch,  sz  +  '');  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(ch,  sz  +  '');  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(ch,  sz  +  '');	  out.write(ch    +    '');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
49	[BUG]  [BUGGY]  char  ch  =  str.charAt(0,  i);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(0,  i);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(0,  i);	  char    ch    =    str.charAt(0,    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
50	[BUG]  [BUGGY]  char  ch  =  str.charAt(0,  sz  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(0,  sz  +  1);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(0,  sz  +  1);	  char    ch    =    str.charAt(0,    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
51	[BUG]  [BUGGY]  char  ch  =  str.charAt(0,  sz  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(0,  sz  -  1);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(0,  sz  -  1);	  char    ch    =    str.charAt(0,    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
52	[BUG]  [BUGGY]  char  ch  =  str.charAt(i,  sz,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(i,  sz,  escapeSingleQuote);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(i,  sz,  escapeSingleQuote);	  char    ch    =    str.charAt(i,    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
53	[BUG]  [BUGGY]  out.write('-'  +  ch  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('-'  +  ch  +  1);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('-'  +  ch  +  1);	  out.write('-'    +    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
54	[BUG]  [BUGGY]  out.write('-'  +  str,  ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('-'  +  str,  ch);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('-'  +  str,  ch);	  out.write('-'    +    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
55	[BUG]  [BUGGY]  out.write('-'  +  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('-'  +  str);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('-'  +  str);	  out.write('-'    +    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
56	[BUG]  [BUGGY]  out.write(ch,  0,  '');  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(ch,  0,  '');  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(ch,  0,  '');	  out.write(ch,    '');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
57	[BUG]  [BUGGY]  out.write('-',  sz  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('-',  sz  +  1);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('-',  sz  +  1);	  out.write('-',    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
58	[BUG]  [BUGGY]  out.write('-',  i);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('-',  i);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('-',  i);	  out.write('-',    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
59	[BUG]  [BUGGY]  out.write('-',  sz,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('-',  sz,  escapeSingleQuote);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('-',  sz,  escapeSingleQuote);	  out.write('-',    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
60	[BUG]  [BUGGY]  String  ch  =  str.charAt(i);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  String  ch  =  str.charAt(i);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	String  ch  =  str.charAt(i);	  String    ch    =    str.charAt(sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
61	[BUG]  [BUGGY]  String  ch  =  str.charAt(sz  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  String  ch  =  str.charAt(sz  +  1);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	String  ch  =  str.charAt(sz  +  1);	  String    ch    =    str.charAt(sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
62	[BUG]  [BUGGY]  out.write(''  +  str,  ch  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(''  +  str,  ch  +  1);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(''  +  str,  ch  +  1);	  out.write(''    +    str,    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
63	[BUG]  [BUGGY]  out.write(''  +  ch,  str);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(''  +  ch,  str);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(''  +  ch,  str);	  out.write(''    +    str,    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
64	[BUG]  [BUGGY]  out.write(''  +  i);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(''  +  i);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(''  +  i);	  out.write(''    +    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
65	[BUG]  [BUGGY]  out.write(''  +  ch  +  4);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(''  +  ch  +  4);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(''  +  ch  +  4);	  out.write(''    +    ch    +    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
66	[BUG]  [BUGGY]  char  ch  =  str.charAt(i  +  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(i  +  2);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(i  +  2);	  char    ch    =    str.charAt(i    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
67	[BUG]  [BUGGY]  out.write('-'  +  i);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('-'  +  i);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('-'  +  i);	  out.write('-'    +    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
68	[BUG]  [BUGGY]  char  ch  =  str.charAt(sz++  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(sz++  +  1);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(sz++  +  1);	  char    ch    =    str.charAt(sz++);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
69	[BUG]  [BUGGY]  char  ch  =  str.charAt(0,  sz++);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(0,  sz++);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(0,  sz++);	  char    ch    =    str.charAt(sz++);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
70	[BUG]  [BUGGY]  char  ch  =  str.charAt(i,  sz  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  char  ch  =  str.charAt(i,  sz  -  1);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	char  ch  =  str.charAt(i,  sz  -  1);	  char    ch    =    str.charAt(i,    sz);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
71	[BUG]  [BUGGY]  String  ch  =  str.charAt(0)  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  String  ch  =  str.charAt(0)  +  1;  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	String  ch  =  str.charAt(0)  +  1;	  char    ch    =    str.charAt(0)    +    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
72	[BUG]  [BUGGY]  Char  ch  =  str.charAt(0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  Char  ch  =  str.charAt(0);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	Char  ch  =  str.charAt(0);	  char    ch    =    str.charAt(0)    +    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
73	[BUG]  [BUGGY]  out.write('',  '');  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('',  '');  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('',  '');	  out.write('',    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
74	[BUG]  [BUGGY]  out.write(ch  +  ''  +  ch  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(ch  +  ''  +  ch  +  1);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(ch  +  ''  +  ch  +  1);	  out.write(''    +    ch    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
75	[BUG]  [BUGGY]  out.write(ch  +  '/');  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(ch  +  '/');  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(ch  +  '/');	  out.write(ch    +    '');    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
76	[BUG]  [BUGGY]  String  ch  =  str.charAt(sz++);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  String  ch  =  str.charAt(sz++);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	String  ch  =  str.charAt(sz++);	  char    ch    =    str.charAt(sz++);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
77	[BUG]  [BUGGY]  out.write('-'  +  ch,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write('-'  +  ch,  escapeSingleQuote);  [BUGGY]      break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write('-'  +  ch,  escapeSingleQuote);	  out.write('-'    +    ch);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
78	[BUG]  [BUGGY]  out.write(str,  escapeSingleQuote);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ComparisonFailure      [CONTEXT]      break;  case  '     "':  out.write('\\');  out.write('     "');  break;  case  '\\':  out.write('\\');  out.write('\\');  break;  default  :      [BUGGY]  out.write(str,  escapeSingleQuote);  [BUGGY]      out.write(ch);  break;  }  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	237	237	1	replace	out.write(str,  escapeSingleQuote);	  out.write(ch,    escapeSingleQuote);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
