bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  escapeJavaStringEscape(str,  true);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStringEscape(str,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStringEscape(str,  true);	  return    escapeJavaStringEscape(str,    false);    	non-compiled	[CE]  empty  character  literal	17	None	replace
2	[BUG]  [BUGGY]  return  escapeJavaStringEscape(str,  false,  null);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStringEscape(str,  false,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStringEscape(str,  false,  null);	  return    escapeJavaStringEscape(str,    false);    	non-compiled	[CE]  empty  character  literal	17	None	replace
3	[BUG]  [BUGGY]  String  str  =  escapeJavaStringEscape(str,  false);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStringEscape(str,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStringEscape(str,  false);	  return    escapeJavaStringEscape(str,    false);    	non-compiled	[CE]  empty  character  literal	17	None	replace
4	[BUG]  [BUGGY]  return  escapeJavaStringEscape(str,  false,  true);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStringEscape(str,  false,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStringEscape(str,  false,  true);	  return    escapeJavaStringEscape(str,    false);    	non-compiled	[CE]  empty  character  literal	17	None	replace
5	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  null);  [CE]  empty  character  literal  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  null);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringEscapeUtils.escapeJavaStyleString(str,  null);	  StringEscapeUtils.escapeJavaStyleString(str);    	non-compiled	[CE]  empty  character  literal	11	None	replace
6	[BUG]  [BUGGY]  String  str  =  getEscapeJavaStyle().escapeJava(str,  true);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getEscapeJavaStyle().escapeJava(str,  true);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getEscapeJavaStyle().escapeJava(str,  true);	  String    str    =    getStyle().escapeJava(str,    true);    	non-compiled	[CE]  empty  character  literal	22	None	replace
7	[BUG]  [BUGGY]  return  str!=  null?  null  :  str.toLowerCase();  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  str!=  null?  null  :  str.toLowerCase();  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  str!=  null?  null  :  str.toLowerCase();	  return    str    ==    null?    null    :    str.toLowerCase();    	non-compiled	[CE]  empty  character  literal	2	None	replace
8	[BUG]  [BUGGY]  String  str  =  getStyle().escapeJavaStyleString(str,  false);  [CE]  empty  character  literal  [FE]            junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getStyle().escapeJavaStyleString(str,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getStyle().escapeJavaStyleString(str,  false);	  return    escapeJavaStyleString(str,    false);    String    str    =    getStyle().escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	42	None	replace
9	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  [CE]  empty  character  literal  [FE]              junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str,  false);	  return    escapeJavaStyleString(str,    false);    String    str    =    getStyle().escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	42	None	replace
10	[BUG]  [BUGGY]  String  str  =  getStyle().escapeJavaStyleString(str,  true);  [CE]  empty  character  literal  [FE]                junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getStyle().escapeJavaStyleString(str,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getStyle().escapeJavaStyleString(str,  true);	  return    escapeJavaStyleString(str,    false);    String    str    =    getStyle().escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	42	None	replace
11	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  true);  Characteristics.escapeJavaStyleString(str,  false);  [CE]  empty  character  literal  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  true);  Characteristics.escapeJavaStyleString(str,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringEscapeUtils.escapeJavaStyleString(str,  true);  Characteristics.escapeJavaStyleString(str,  false);	          StringEscapeUtils.escapeJavaStyleString(str,    false);    Characteristics.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	71	None	replace
12	[BUG]  [BUGGY]  Characteristics.escapeJavaStyleString(str,  false);  [CE]  empty  character  literal  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  Characteristics.escapeJavaStyleString(str,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	Characteristics.escapeJavaStyleString(str,  false);	          StringEscapeUtils.escapeJavaStyleString(str,    false);    Characteristics.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	71	None	replace
13	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  Characteristics.escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  Characteristics.escapeJavaStyleString(str,  false);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  Characteristics.escapeJavaStyleString(str,  false);  }	          StringEscapeUtils.escapeJavaStyleString(str,    false);    Characteristics.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	71	None	replace
14	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]          junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  false);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  false);  }	  return    escapeJavaStyleString(str,    false);    if(str.length()    ==    0)    {    String    str    =    str.substring(0,    str.length()    -    1);    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	77	None	replace
15	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  return  escapeJavaStyleString(str,  false);  [CE]  empty  character  literal  [FE]            junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  return  escapeJavaStyleString(str,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  str.substring(0,  str.length()  -  1);  return  escapeJavaStyleString(str,  false);	  return    escapeJavaStyleString(str,    false);    if(str.length()    ==    0)    {    String    str    =    str.substring(0,    str.length()    -    1);    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	77	None	replace
16	[BUG]  [BUGGY]  return  escapeJavaString(str,  true,  false);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaString(str,  true,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaString(str,  true,  false);	  return    escapeJavaString(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	65	None	replace
17	[BUG]  [BUGGY]  return  escapeJavaString(str,  true,  true);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaString(str,  true,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaString(str,  true,  true);	  return    escapeJavaString(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	65	None	replace
18	[BUG]  [BUGGY]  return  escapeJavaString(str,  false,  false);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaString(str,  false,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaString(str,  false,  false);	  return    escapeJavaString(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	65	None	replace
19	[BUG]  [BUGGY]  return  escapeJavaString(str,  false,  false,  true);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaString(str,  false,  false,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaString(str,  false,  false,  true);	  return    escapeJavaString(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	65	None	replace
20	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  StringEscapeUtils.EMPTY_STRING,  true);  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  StringEscapeUtils.EMPTY_STRING,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  StringEscapeUtils.EMPTY_STRING,  true);	  return    escapeJavaStyleString(str,    StringEscapeUtils.EMPTY_STRING);    	non-compiled	[CE]  empty  character  literal	69	None	replace
21	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  false,  StringEscapeUtils.EMPTY_STRING);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  false,  StringEscapeUtils.EMPTY_STRING);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  false,  StringEscapeUtils.EMPTY_STRING);	  return    escapeJavaStyleString(str,    StringEscapeUtils.EMPTY_STRING);    	non-compiled	[CE]  empty  character  literal	69	None	replace
22	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  StringEscapeUtils.EMPTY_STRING);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  StringEscapeUtils.EMPTY_STRING);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  StringEscapeUtils.EMPTY_STRING);	  return    escapeJavaStyleString(str,    StringEscapeUtils.EMPTY_STRING);    	non-compiled	[CE]  empty  character  literal	69	None	replace
23	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  StringEscapeUtils.EMPTY_STRING,  false);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  StringEscapeUtils.EMPTY_STRING,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  StringEscapeUtils.EMPTY_STRING,  false);	  return    escapeJavaStyleString(str,    StringEscapeUtils.EMPTY_STRING);    	non-compiled	[CE]  empty  character  literal	69	None	replace
24	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  false,  false);  [CE]  empty  character  literal  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  false,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringEscapeUtils.escapeJavaStyleString(str,  false,  false);	  StringEscapeUtils.escapeJavaStyleString(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	12	None	replace
25	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  true,  true);  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  true,  true);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringEscapeUtils.escapeJavaStyleString(str,  true,  true);	  StringEscapeUtils.escapeJavaStyleString(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	12	None	replace
26	[BUG]  [BUGGY]  return  escapeJavaScript(str,  true,  false);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(str,  true,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(str,  true,  false);	  return    escapeJavaScript(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	37	None	replace
27	[BUG]  [BUGGY]  return  escapeJavaScript(str,  false,  false);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(str,  false,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(str,  false,  false);	  return    escapeJavaScript(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	37	None	replace
28	[BUG]  [BUGGY]  return  escapeJavaScript(str,  true,  true);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(str,  true,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(str,  true,  true);	  return    escapeJavaScript(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	37	None	replace
29	[BUG]  [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escape(str),  false,  true);  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escape(str),  false,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(StringEscapeUtils.escape(str),  false,  true);	  return    escapeJavaScript(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	37	None	replace
30	[BUG]  [BUGGY]  return  escapeJavaScript(str,  true,  str);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(str,  true,  str);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(str,  true,  str);	  return    escapeJavaScript(str,    false,    str);    	non-compiled	[CE]  empty  character  literal	74	None	replace
31	[BUG]  [BUGGY]  return  escapeJavaScript(str,  true,  null);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(str,  true,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(str,  true,  null);	  return    escapeJavaScript(str,    false,    str);    	non-compiled	[CE]  empty  character  literal	74	None	replace
32	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  empty  character  literal  [FE]        junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  str.substring(0,  str.length());	  return    escapeJavaStyleString(str,    false);    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  empty  character  literal	40	None	replace
33	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  empty  character  literal  [FE]          junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  str.substring(0,  str.length()  -  1);	  return    escapeJavaStyleString(str,    false);    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  empty  character  literal	40	None	replace
34	[BUG]  [BUGGY]  String  str  =  getStyle().escapeJavaStyleString(str);  [CE]  empty  character  literal  [FE]          junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getStyle().escapeJavaStyleString(str);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getStyle().escapeJavaStyleString(str);	  return    escapeJavaStyleString(str,    false);    String    str    =    getStyle().escapeJavaStyleString(str);    	non-compiled	[CE]  empty  character  literal	41	None	replace
35	[BUG]  [BUGGY]  String  str  =  getEscapeJavaStyle().escapeJavaScript(str,  true);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getEscapeJavaStyle().escapeJavaScript(str,  true);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getEscapeJavaStyle().escapeJavaScript(str,  true);	  String    str    =    getStyle().escapeJavaScript(str,    true);    	non-compiled	[CE]  empty  character  literal	45	None	replace
36	[BUG]  [BUGGY]  while(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  while(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	while(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }	  while(str!=    null)    {    return    escapeJavaStyleString(str,    true);    }    	non-compiled	[CE]  empty  character  literal	20	None	replace
37	[BUG]  [BUGGY]  while(str  ==  null)  {  return  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  while(str  ==  null)  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	while(str  ==  null)  {  return  escapeJavaStyleString(str,  true);  }	  while(str!=    null)    {    return    escapeJavaStyleString(str,    true);    }    	non-compiled	[CE]  empty  character  literal	20	None	replace
38	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  if(str  ==  null)  {  return  str.escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]        junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  if(str  ==  null)  {  return  str.escapeJavaStyleString(str,  false);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str,  false);  if(str  ==  null)  {  return  str.escapeJavaStyleString(str,  false);  }	  return    escapeJavaStyleString(str,    false);    if(str    ==    null)    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	54	None	replace
39	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  if(str!=  null)  {  return  str.escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]          junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  if(str!=  null)  {  return  str.escapeJavaStyleString(str,  false);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str,  false);  if(str!=  null)  {  return  str.escapeJavaStyleString(str,  false);  }	  return    escapeJavaStyleString(str,    false);    if(str    ==    null)    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	54	None	replace
40	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  if(str  ==  null)  {  return  str;  }  [CE]  empty  character  literal  [FE]            junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  if(str  ==  null)  {  return  str;  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str,  false);  if(str  ==  null)  {  return  str;  }	  return    escapeJavaStyleString(str,    false);    if(str    ==    null)    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	54	None	replace
41	[BUG]  [BUGGY]  return  escapeJavaStyleStringEscape(str,  true);  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleStringEscape(str,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleStringEscape(str,  true);	  return    escapeJavaStyleStringEscape(str);    	non-compiled	[CE]  empty  character  literal	47	None	replace
42	[BUG]  [BUGGY]  return  escapeJavaStyleStringEscape(str,  false);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleStringEscape(str,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleStringEscape(str,  false);	  return    escapeJavaStyleStringEscape(str);    	non-compiled	[CE]  empty  character  literal	47	None	replace
43	[BUG]  [BUGGY]  return  escapeJavaStyleStringEscape(str,  null);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleStringEscape(str,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleStringEscape(str,  null);	  return    escapeJavaStyleStringEscape(str);    	non-compiled	[CE]  empty  character  literal	47	None	replace
44	[BUG]  [BUGGY]  return  escapeJavaStyleStringEscape(str,  StringEscapeUtils.EMPTY_STRING);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleStringEscape(str,  StringEscapeUtils.EMPTY_STRING);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleStringEscape(str,  StringEscapeUtils.EMPTY_STRING);	  return    escapeJavaStyleStringEscape(str);    	non-compiled	[CE]  empty  character  literal	47	None	replace
45	[BUG]  [BUGGY]  String  str  =  str  ==  null?  null  :  str.toString();  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  str  ==  null?  null  :  str.toString();  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  str  ==  null?  null  :  str.toString();	  return    str    ==    null?    null    :    str.toString();    	non-compiled	[CE]  empty  character  literal	3	None	replace
46	[BUG]  [BUGGY]  return  str!=  null?  null  :  str.toString();  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  str!=  null?  null  :  str.toString();  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  str!=  null?  null  :  str.toString();	  return    str    ==    null?    null    :    str.toString();    	non-compiled	[CE]  empty  character  literal	3	None	replace
47	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  false,  true);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  false,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  false,  true);	  return    escapeJavaStyleString(str,    null,    false);    	non-compiled	[CE]  empty  character  literal	31	None	replace
48	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  null,  false);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str,  null,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str,  null,  false);	  return    escapeJavaStyleString(str,    null,    false);    	non-compiled	[CE]  empty  character  literal	31	None	replace
49	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  false,  null);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  false,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  false,  null);	  return    escapeJavaStyleString(str,    null,    false);    	non-compiled	[CE]  empty  character  literal	31	None	replace
50	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  false,  false,  null);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  false,  false,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  false,  false,  null);	  return    escapeJavaStyleString(str,    true,    false,    null);    	non-compiled	[CE]  empty  character  literal	61	None	replace
51	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  true,  false,  null,  null);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  true,  false,  null,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  true,  false,  null,  null);	  return    escapeJavaStyleString(str,    true,    false,    null);    	non-compiled	[CE]  empty  character  literal	61	None	replace
52	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  false,  true,  null);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  false,  true,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  false,  true,  null);	  return    escapeJavaStyleString(str,    true,    false,    null);    	non-compiled	[CE]  empty  character  literal	61	None	replace
53	[BUG]  [BUGGY]  return  escapeJavaScript(str,  null,  null);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(str,  null,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(str,  null,  null);	  return    escapeJavaScript(str,    null);    	non-compiled	[CE]  empty  character  literal	1	None	replace
54	[BUG]  [BUGGY]  return  escapeJavaScript(str,  null,  true);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(str,  null,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(str,  null,  true);	  return    escapeJavaScript(str,    null);    	non-compiled	[CE]  empty  character  literal	1	None	replace
55	[BUG]  [BUGGY]  return  escapeJavaScript(str,  StringEscapeUtils.EMPTY_STRING);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(str,  StringEscapeUtils.EMPTY_STRING);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(str,  StringEscapeUtils.EMPTY_STRING);	  return    escapeJavaScript(str,    null);    	non-compiled	[CE]  empty  character  literal	1	None	replace
56	[BUG]  [BUGGY]  String  str  =  getStyle().escapeJavaScript(str,  null,  true);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getStyle().escapeJavaScript(str,  null,  true);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getStyle().escapeJavaScript(str,  null,  true);	  String    str    =    getStyle().escapeJavaScript(str,    null);    	non-compiled	[CE]  empty  character  literal	62	None	replace
57	[BUG]  [BUGGY]  while(str!=  null)  {  if(str  ==  null)  {  return  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  while(str!=  null)  {  if(str  ==  null)  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	while(str!=  null)  {  if(str  ==  null)  {  return  escapeJavaStyleString(str,  true);  }	  if(str!=    null)    {    return    escapeJavaStyleString(str);    }    	non-compiled	[CE]  empty  character  literal	70	None	replace
58	[BUG]  [BUGGY]  while(str!=  null)  {  if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  while(str!=  null)  {  if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	while(str!=  null)  {  if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }	  if(str!=    null)    {    return    escapeJavaStyleString(str);    }    	non-compiled	[CE]  empty  character  literal	70	None	replace
59	[BUG]  [BUGGY]  while(str!=  null  &&  str.length()  >  0)  {  return  escapeJavaStyleString(str);  }  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  while(str!=  null  &&  str.length()  >  0)  {  return  escapeJavaStyleString(str);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	while(str!=  null  &&  str.length()  >  0)  {  return  escapeJavaStyleString(str);  }	  if(str!=    null)    {    return    escapeJavaStyleString(str);    }    	non-compiled	[CE]  empty  character  literal	70	None	replace
60	[BUG]  [BUGGY]  while(str!=  null)  {  if(str  ==  null)  {  return  escapeJavaStyleString(str);  }  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  while(str!=  null)  {  if(str  ==  null)  {  return  escapeJavaStyleString(str);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	while(str!=  null)  {  if(str  ==  null)  {  return  escapeJavaStyleString(str);  }	  if(str!=    null)    {    return    escapeJavaStyleString(str);    }    	non-compiled	[CE]  empty  character  literal	70	None	replace
61	[BUG]  [BUGGY]  return  escapeJava(str,  null,  null);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJava(str,  null,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJava(str,  null,  null);	  return    escapeJava(str,    null);    	non-compiled	[CE]  empty  character  literal	59	None	replace
62	[BUG]  [BUGGY]  return  escapeJava(str,  null,  false);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJava(str,  null,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJava(str,  null,  false);	  return    escapeJava(str,    null);    	non-compiled	[CE]  empty  character  literal	59	None	replace
63	[BUG]  [BUGGY]  return  escapeJava(str,  null,  true);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJava(str,  null,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJava(str,  null,  true);	  return    escapeJava(str,    null);    	non-compiled	[CE]  empty  character  literal	59	None	replace
64	[BUG]  [BUGGY]  return  escapeJava(str,  StringEscapeUtils.EMPTY_STRING);  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJava(str,  StringEscapeUtils.EMPTY_STRING);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJava(str,  StringEscapeUtils.EMPTY_STRING);	  return    escapeJava(str,    null);    	non-compiled	[CE]  empty  character  literal	59	None	replace
65	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  null,  null);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  null,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  null,  null);	  return    escapeJavaStyleString(str,    null,    str);    	non-compiled	[CE]  empty  character  literal	67	None	replace
66	[BUG]  [BUGGY]  CharacterEscapeUtils.escapeJavaStyleString(str,  false);  [CE]  empty  character  literal  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  CharacterEscapeUtils.escapeJavaStyleString(str,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	CharacterEscapeUtils.escapeJavaStyleString(str,  false);	  if(str    ==    null)    {    StringEscapeUtils.escapeJavaStyleString(str,    false);    }    else    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	81	None	replace
67	[BUG]  [BUGGY]  while(str!=  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  while(str!=  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	while(str!=  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }	  if(str    ==    null)    {    StringEscapeUtils.escapeJavaStyleString(str,    false);    }    else    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	81	None	replace
68	[BUG]  [BUGGY]  String  str  =(String)str.toUpperCase();  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =(String)str.toUpperCase();  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =(String)str.toUpperCase();	  String    str    =(String)str.toLowerCase();    	non-compiled	[CE]  empty  character  literal	75	None	replace
69	[BUG]  [BUGGY]  String  str  =(String)str.toLowerCase(Locale.ENGLISH);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =(String)str.toLowerCase(Locale.ENGLISH);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =(String)str.toLowerCase(Locale.ENGLISH);	  String    str    =(String)str.toLowerCase();    	non-compiled	[CE]  empty  character  literal	75	None	replace
70	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  true,  true);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  true,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  true,  true);	  return    escapeJavaStyleString(str,    false,    false);    	non-compiled	[CE]  empty  character  literal	27	None	replace
71	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  false,  false);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str,  false,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str,  false,  false);	  return    escapeJavaStyleString(str,    false,    false);    	non-compiled	[CE]  empty  character  literal	27	None	replace
72	[BUG]  [BUGGY]  String  str  =  escapeJavaString(str,  true);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaString(str,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaString(str,  true);	  String    str    =    escapeJavaString(str,    false);    	non-compiled	[CE]  empty  character  literal	19	None	replace
73	[BUG]  [BUGGY]  String  str  =  escapeJavaString(str,  false,  null);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaString(str,  false,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaString(str,  false,  null);	  String    str    =    escapeJavaString(str,    false);    	non-compiled	[CE]  empty  character  literal	19	None	replace
74	[BUG]  [BUGGY]  String  str  =  escapeJavaString(str,  false,  true);  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaString(str,  false,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaString(str,  false,  true);	  String    str    =    escapeJavaString(str,    false);    	non-compiled	[CE]  empty  character  literal	19	None	replace
75	[BUG]  [BUGGY]  StringUtils.escapeJavaStyleString(str,  false);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringUtils.escapeJavaStyleString(str,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringUtils.escapeJavaStyleString(str,  false);	          StringEscapeUtils.escapeJavaStyleString(str,    false);    StringUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	52	None	replace
76	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  true);  StringUtils.escapeJavaStyleString(str,  false);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  true);  StringUtils.escapeJavaStyleString(str,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringEscapeUtils.escapeJavaStyleString(str,  true);  StringUtils.escapeJavaStyleString(str,  false);	          StringEscapeUtils.escapeJavaStyleString(str,    false);    StringUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	52	None	replace
77	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringUtils.escapeJavaStyleString(str,  true);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringUtils.escapeJavaStyleString(str,  true);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringEscapeUtils.escapeJavaStyleString(str,  false);  StringUtils.escapeJavaStyleString(str,  true);	          StringEscapeUtils.escapeJavaStyleString(str,    false);    StringUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	52	None	replace
78	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  null,  true);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str,  null,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str,  null,  true);	  return    escapeJavaStyleString(str,    null,    true);    	non-compiled	[CE]  empty  character  literal	32	None	replace
79	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  true,  false);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  true,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  true,  false);	  return    escapeJavaStyleString(str,    null,    true);    	non-compiled	[CE]  empty  character  literal	32	None	replace
80	[BUG]  [BUGGY]  if(str!=  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]                junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str!=  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  escapeJavaStyleString(str,  true);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str!=  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  escapeJavaStyleString(str,  true);  }	  return    escapeJavaStyleString(str,    false);    String    str    =    escapeJavaStyleString(str,    true);    	non-compiled	[CE]  empty  character  literal	58	None	replace
81	[BUG]  [BUGGY]  if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]                  junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  escapeJavaStyleString(str,  true);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  escapeJavaStyleString(str,  true);  }	  return    escapeJavaStyleString(str,    false);    String    str    =    escapeJavaStyleString(str,    true);    	non-compiled	[CE]  empty  character  literal	58	None	replace
82	[BUG]  [BUGGY]  if(str!=  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  str  =  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]                    junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str!=  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  str  =  escapeJavaStyleString(str,  true);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str!=  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  str  =  escapeJavaStyleString(str,  true);  }	  return    escapeJavaStyleString(str,    false);    String    str    =    escapeJavaStyleString(str,    true);    	non-compiled	[CE]  empty  character  literal	58	None	replace
83	[BUG]  [BUGGY]  while(str!=  null  &&  str.length()!=  0)  {  return  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  while(str!=  null  &&  str.length()!=  0)  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	while(str!=  null  &&  str.length()!=  0)  {  return  escapeJavaStyleString(str,  true);  }	  if(str    ==    null    ||    str.length()!=    0)    {    return    escapeJavaStyleString(str,    true);    }    	non-compiled	[CE]  empty  character  literal	38	None	replace
84	[BUG]  [BUGGY]  while(str!=  null  &&  str.length()  ==  0)  {  return  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  while(str!=  null  &&  str.length()  ==  0)  {  return  escapeJavaStyleString(str,  false);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	while(str!=  null  &&  str.length()  ==  0)  {  return  escapeJavaStyleString(str,  false);  }	  if(str!=    null    ||    str.length()    ==    0)    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	73	None	replace
85	[BUG]  [BUGGY]  while(str!=  null  &&  str.length()  ==  0)  {  return  escapeJavaStyleString(str);  }  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  while(str!=  null  &&  str.length()  ==  0)  {  return  escapeJavaStyleString(str);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	while(str!=  null  &&  str.length()  ==  0)  {  return  escapeJavaStyleString(str);  }	  if(str!=    null    ||    str.length()    ==    0)    {    return    escapeJavaStyleString(str);    }    	non-compiled	[CE]  empty  character  literal	72	None	replace
86	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  true);  String  str  =  str.substring(0,  str.length());  [CE]  empty  character  literal  [FE]              junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  true);  String  str  =  str.substring(0,  str.length());  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  true);  String  str  =  str.substring(0,  str.length());	  return    escapeJavaStyleString(str,    false);    String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  empty  character  literal	43	None	replace
87	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  false);  String  str  =  str.substring(0,  str.length());  [CE]  empty  character  literal  [FE]                junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  false);  String  str  =  str.substring(0,  str.length());  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  false);  String  str  =  str.substring(0,  str.length());	  return    escapeJavaStyleString(str,    false);    String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  empty  character  literal	43	None	replace
88	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  if(str  ==  null)  {  return  str.escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]              junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  if(str  ==  null)  {  return  str.escapeJavaStyleString(str,  true);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str,  false);  if(str  ==  null)  {  return  str.escapeJavaStyleString(str,  true);  }	  return    escapeJavaStyleString(str,    false);    if(str    ==    null)    {    return    escapeJavaStyleString(str,    true);    }    	non-compiled	[CE]  empty  character  literal	57	None	replace
89	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  if(str!=  null)  {  return  str.escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]                junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  if(str!=  null)  {  return  str.escapeJavaStyleString(str,  true);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str,  false);  if(str!=  null)  {  return  str.escapeJavaStyleString(str,  true);  }	  return    escapeJavaStyleString(str,    false);    if(str    ==    null)    {    return    escapeJavaStyleString(str,    true);    }    	non-compiled	[CE]  empty  character  literal	57	None	replace
90	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  escapeJavaStyleString(false));  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  escapeJavaStyleString(false));  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  escapeJavaStyleString(false));	  return    escapeJavaStyleString(str,    escapeJavaStyleString());    	non-compiled	[CE]  empty  character  literal	79	None	replace
91	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  true);  StringescapeUtils.escapeJavaStyleString(str,  false);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  true);  StringescapeUtils.escapeJavaStyleString(str,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringEscapeUtils.escapeJavaStyleString(str,  true);  StringescapeUtils.escapeJavaStyleString(str,  false);	          StringEscapeUtils.escapeJavaStyleString(str,    false);    StringescapeUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	51	None	replace
92	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringescapeUtils.escapeJavaStyleString(str,  true);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringescapeUtils.escapeJavaStyleString(str,  true);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringEscapeUtils.escapeJavaStyleString(str,  false);  StringescapeUtils.escapeJavaStyleString(str,  true);	          StringEscapeUtils.escapeJavaStyleString(str,    false);    StringescapeUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	51	None	replace
93	[BUG]  [BUGGY]  String  str  =  getEscapeJavaStyleString(str,  true,  false);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getEscapeJavaStyleString(str,  true,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getEscapeJavaStyleString(str,  true,  false);	  String    str    =    getEscapeJavaStyleString(str,    true);    	non-compiled	[CE]  empty  character  literal	9	None	replace
94	[BUG]  [BUGGY]  String  str  =  getEscapeJavaStyleString(str,  true,  null);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getEscapeJavaStyleString(str,  true,  null);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getEscapeJavaStyleString(str,  true,  null);	  String    str    =    getEscapeJavaStyleString(str,    true);    	non-compiled	[CE]  empty  character  literal	9	None	replace
95	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  false,  false,  true);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  false,  false,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  false,  false,  true);	  return    escapeJavaStyleString(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	26	None	replace
96	[BUG]  [BUGGY]  String  str  =(String)this.escapeJavaScript.clone();  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =(String)this.escapeJavaScript.clone();  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =(String)this.escapeJavaScript.clone();	  String    str    =(String)this.str.clone();    	non-compiled	[CE]  empty  character  literal	13	None	replace
97	[BUG]  [BUGGY]  String  str  =(String)this.str,  str.clone();  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =(String)this.str,  str.clone();  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =(String)this.str,  str.clone();	  String    str    =(String)this.str.clone();    	non-compiled	[CE]  empty  character  literal	13	None	replace
98	[BUG]  [BUGGY]  if(str!=  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]          junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str!=  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  escapeJavaStyleString(str,  false);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str!=  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  escapeJavaStyleString(str,  false);  }	  return    escapeJavaStyleString(str,    false);    String    str    =    escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	55	None	replace
99	[BUG]  [BUGGY]  if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]            junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  escapeJavaStyleString(str,  false);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  escapeJavaStyleString(str,  false);  }	  return    escapeJavaStyleString(str,    false);    String    str    =    escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	55	None	replace
100	[BUG]  [BUGGY]  return  escapeJavaScript(str,  false,  null,  null);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(str,  false,  null,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(str,  false,  null,  null);	  return    escapeJavaScript(str,    false,    null);    	non-compiled	[CE]  empty  character  literal	35	None	replace
101	[BUG]  [BUGGY]  return  escapeJavaScript(str,  false,  null,  true);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(str,  false,  null,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(str,  false,  null,  true);	  return    escapeJavaScript(str,    false,    null);    	non-compiled	[CE]  empty  character  literal	35	None	replace
102	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  false,  null);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  false,  null);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringEscapeUtils.escapeJavaStyleString(str,  false,  null);	  StringEscapeUtils.escapeJavaStyleString(str,    true,    null);    	non-compiled	[CE]  empty  character  literal	25	None	replace
103	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  true,  null,  null);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  true,  null,  null);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringEscapeUtils.escapeJavaStyleString(str,  true,  null,  null);	  StringEscapeUtils.escapeJavaStyleString(str,    true,    null);    	non-compiled	[CE]  empty  character  literal	25	None	replace
104	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  true,  null,  false);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  true,  null,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringEscapeUtils.escapeJavaStyleString(str,  true,  null,  false);	  StringEscapeUtils.escapeJavaStyleString(str,    true,    null);    	non-compiled	[CE]  empty  character  literal	25	None	replace
105	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]            junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  true);  }	  return    escapeJavaStyleString(str,    false);    if(str.length()    ==    0)    {    return    escapeJavaStyleString(str,    false);    }    else    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	78	None	replace
106	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  false,  false,  false);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  false,  false,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  false,  false,  false);	  return    escapeJavaStyleString(str,    true,    true,    true);    	non-compiled	[CE]  empty  character  literal	29	None	replace
107	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  true,  false,  false);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  true,  false,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  true,  false,  false);	  return    escapeJavaStyleString(str,    true,    true,    true);    	non-compiled	[CE]  empty  character  literal	29	None	replace
108	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  false,  true,  false);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  false,  true,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  false,  true,  false);	  return    escapeJavaStyleString(str,    true,    true,    true);    	non-compiled	[CE]  empty  character  literal	29	None	replace
109	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  true,  false);  [CE]  empty  character  literal  [FE]        junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str,  true,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str,  true,  false);	  String    str    =    escapeJavaStyleString(str,    true);    	non-compiled	[CE]  empty  character  literal	53	None	replace
110	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  true,  null);  [CE]  empty  character  literal  [FE]          junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str,  true,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str,  true,  null);	  String    str    =    escapeJavaStyleString(str,    true);    	non-compiled	[CE]  empty  character  literal	53	None	replace
111	[BUG]  [BUGGY]  String  str  =  getStructure().escapeJava(str,  false);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getStructure().escapeJava(str,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getStructure().escapeJava(str,  false);	  String    str    =    getStyle().escapeJava(str,    false);    	non-compiled	[CE]  empty  character  literal	23	None	replace
112	[BUG]  [BUGGY]  return  escapeJavaScript(str,  str);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(str,  str);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(str,  str);	  return    escapeJavaScript(str);    	non-compiled	[CE]  empty  character  literal	60	None	replace
113	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  false,  stringEscapeUtils);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  false,  stringEscapeUtils);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  false,  stringEscapeUtils);	  return    escapeJavaStyleString(str,    null,    stringEscapeUtils);    	non-compiled	[CE]  empty  character  literal	68	None	replace
114	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  escapeJavaScriptUtils);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  escapeJavaScriptUtils);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  escapeJavaScriptUtils);	  return    escapeJavaStyleString(str,    null,    stringEscapeUtils);    	non-compiled	[CE]  empty  character  literal	68	None	replace
115	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  escapeJavaStyleString(null,  stringEscapeUtils));  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  escapeJavaStyleString(null,  stringEscapeUtils));  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  escapeJavaStyleString(null,  stringEscapeUtils));	  return    escapeJavaStyleString(str,    null,    stringEscapeUtils);    	non-compiled	[CE]  empty  character  literal	68	None	replace
116	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  escapeJavaStyleString(str));  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  escapeJavaStyleString(str));  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  escapeJavaStyleString(str));	  return    escapeJavaStyleString(str,    null,    stringEscapeUtils);    	non-compiled	[CE]  empty  character  literal	68	None	replace
117	[BUG]  [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escape(str),  true);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escape(str),  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(StringEscapeUtils.escape(str),  true);	  return    escapeJavaScript(str,    true);    	non-compiled	[CE]  empty  character  literal	34	None	replace
118	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaScript(str,  true);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringEscapeUtils.escapeJavaScript(str,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringEscapeUtils.escapeJavaScript(str,  true);	  return    escapeJavaScript(str,    true);    	non-compiled	[CE]  empty  character  literal	34	None	replace
119	[BUG]  [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeStructure(str),  true);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeStructure(str),  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(StringEscapeUtils.escapeStructure(str),  true);	  return    escapeJavaScript(str,    true);    	non-compiled	[CE]  empty  character  literal	34	None	replace
120	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  null,  false);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  null,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  null,  false);	  return    escapeJavaStyleString(str,    null,    null);    	non-compiled	[CE]  empty  character  literal	30	None	replace
121	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  null,  true);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  null,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  null,  true);	  return    escapeJavaStyleString(str,    null,    null);    	non-compiled	[CE]  empty  character  literal	30	None	replace
122	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  str.length(),  false);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  str.length(),  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  str.length(),  false);	  return    escapeJavaStyleString(str,    null,    str.length());    	non-compiled	[CE]  empty  character  literal	33	None	replace
123	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  str.length(),  true);  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  str.length(),  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  str.length(),  true);	  return    escapeJavaStyleString(str,    null,    str.length());    	non-compiled	[CE]  empty  character  literal	33	None	replace
124	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  str.length()  +  1);  [CE]  empty  character  literal  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  str.length()  +  1);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  str.length()  +  1);	  return    escapeJavaStyleString(str,    null,    str.length());    	non-compiled	[CE]  empty  character  literal	33	None	replace
125	[BUG]  [BUGGY]  String  str  =  getStructure().escapeJavaScript(str,  false);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getStructure().escapeJavaScript(str,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getStructure().escapeJavaScript(str,  false);	  String    str    =    getStyle().escapeJavaScript(str,    false);    	non-compiled	[CE]  empty  character  literal	46	None	replace
126	[BUG]  [BUGGY]  String  str  =(String)StdUtils.clone(str,  false);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =(String)StdUtils.clone(str,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =(String)StdUtils.clone(str,  false);	  String    str    =(String)StdUtils.clone(str);    	non-compiled	[CE]  empty  character  literal	14	None	replace
127	[BUG]  [BUGGY]  String  str  =(String)StdUtils.clone(str,  true);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =(String)StdUtils.clone(str,  true);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =(String)StdUtils.clone(str,  true);	  String    str    =(String)StdUtils.clone(str);    	non-compiled	[CE]  empty  character  literal	14	None	replace
128	[BUG]  [BUGGY]  String  str  =(String)StdUtils.clone(str,  null);  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =(String)StdUtils.clone(str,  null);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =(String)StdUtils.clone(str,  null);	  String    str    =(String)StdUtils.clone(str);    	non-compiled	[CE]  empty  character  literal	14	None	replace
129	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }	  if(str    ==    null)    {    StringEscapeUtils.escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	80	None	replace
130	[BUG]  [BUGGY]  String  str  =  getStyle().escape(str);  [CE]  empty  character  literal  [FE]                junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getStyle().escape(str);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getStyle().escape(str);	  return    escapeJavaStyleString(str,    false);    String    str    =    getStyle().escape(str);    	non-compiled	[CE]  empty  character  literal	44	None	replace
131	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str.toUpperCase());  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str.toUpperCase());  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str.toUpperCase());	  String    str    =    escapeJavaStyleString(str);    	non-compiled	[CE]  empty  character  literal	8	None	replace
132	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  true);  CharacterEscapeUtils.escapeJavaStyleString(str,  false);  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  true);  CharacterEscapeUtils.escapeJavaStyleString(str,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringEscapeUtils.escapeJavaStyleString(str,  true);  CharacterEscapeUtils.escapeJavaStyleString(str,  false);	          StringEscapeUtils.escapeJavaStyleString(str,    false);    CharacterEscapeUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	50	None	replace
133	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  false);  CharacterEscapeUtils.escapeJavaStyleString(str,  true);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  false);  CharacterEscapeUtils.escapeJavaStyleString(str,  true);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringEscapeUtils.escapeJavaStyleString(str,  false);  CharacterEscapeUtils.escapeJavaStyleString(str,  true);	          StringEscapeUtils.escapeJavaStyleString(str,    false);    CharacterEscapeUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	50	None	replace
134	[BUG]  [BUGGY]  StringStructure.escapeJavaStyleString(str,  false);  CharacterEscapeUtils.escapeJavaStyleString(str,  false);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringStructure.escapeJavaStyleString(str,  false);  CharacterEscapeUtils.escapeJavaStyleString(str,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringStructure.escapeJavaStyleString(str,  false);  CharacterEscapeUtils.escapeJavaStyleString(str,  false);	          StringEscapeUtils.escapeJavaStyleString(str,    false);    CharacterEscapeUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	50	None	replace
135	[BUG]  [BUGGY]  String  str  =  getStyle().escapeJava(str,  null,  true);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getStyle().escapeJava(str,  null,  true);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getStyle().escapeJava(str,  null,  true);	  String    str    =    getStyle().escapeJava(str,    null);    	non-compiled	[CE]  empty  character  literal	64	None	replace
136	[BUG]  [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escape(str),  null,  false);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escape(str),  null,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(StringEscapeUtils.escape(str),  null,  false);	  return    escapeJavaScript(str,    null,    false);    	non-compiled	[CE]  empty  character  literal	36	None	replace
137	[BUG]  [BUGGY]  return  escapeJavaScript(str,  null,  false,  true);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(str,  null,  false,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(str,  null,  false,  true);	  return    escapeJavaScript(str,    null,    false);    	non-compiled	[CE]  empty  character  literal	36	None	replace
138	[BUG]  [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeStructure(str),  null,  false);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeStructure(str),  null,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(StringEscapeUtils.escapeStructure(str),  null,  false);	  return    escapeJavaScript(str,    null,    false);    	non-compiled	[CE]  empty  character  literal	36	None	replace
139	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  true,  null);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  true,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  true,  null);	  return    escapeJavaStyleString(str,    false,    null);    	non-compiled	[CE]  empty  character  literal	28	None	replace
140	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  false,  null,  null);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  false,  null,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  false,  null,  null);	  return    escapeJavaStyleString(str,    false,    null);    	non-compiled	[CE]  empty  character  literal	28	None	replace
141	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  false,  null);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str,  false,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str,  false,  null);	  return    escapeJavaStyleString(str,    false,    null);    	non-compiled	[CE]  empty  character  literal	28	None	replace
142	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringEscapeUtils.escapeJavaStyleString(str,  true);  }	          StringEscapeUtils.escapeJavaStyleString(str,    false);    StringEscapeUtils.escapeJavaStyleString(str,    true);    	non-compiled	[CE]  empty  character  literal	49	None	replace
143	[BUG]  [BUGGY]  return  escapeJavaString(str,  true,  null);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaString(str,  true,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaString(str,  true,  null);	  return    escapeJavaString(str,    false,    null);    	non-compiled	[CE]  empty  character  literal	18	None	replace
144	[BUG]  [BUGGY]  return  escapeJavaString(str,  false,  null,  null);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaString(str,  false,  null,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaString(str,  false,  null,  null);	  return    escapeJavaString(str,    false,    null);    	non-compiled	[CE]  empty  character  literal	18	None	replace
145	[BUG]  [BUGGY]  while(str!=  null  &&  str.length()  ==  0)  {  return  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  while(str!=  null  &&  str.length()  ==  0)  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	while(str!=  null  &&  str.length()  ==  0)  {  return  escapeJavaStyleString(str,  true);  }	  if(str    ==    null    ||    str.length()    ==    0)    {    return    escapeJavaStyleString(str,    true);    }    	non-compiled	[CE]  empty  character  literal	6	None	replace
146	[BUG]  [BUGGY]  String  str  =  getEscapeJavaStyleString(str,  false,  true);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getEscapeJavaStyleString(str,  false,  true);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getEscapeJavaStyleString(str,  false,  true);	  String    str    =    getEscapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	10	None	replace
147	[BUG]  [BUGGY]  String  str  =  getEscapeJavaStyleString(str,  false,  null);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getEscapeJavaStyleString(str,  false,  null);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getEscapeJavaStyleString(str,  false,  null);	  String    str    =    getEscapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	10	None	replace
148	[BUG]  [BUGGY]  String  str  =(String)str.escapeJavaStyleString(this);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =(String)str.escapeJavaStyleString(this);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =(String)str.escapeJavaStyleString(this);	  String    str    =(String)this.escapeJavaStyleString(str);    	non-compiled	[CE]  empty  character  literal	63	None	replace
149	[BUG]  [BUGGY]  String  str  =(String)escapeJavaStyleString(str);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =(String)escapeJavaStyleString(str);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =(String)escapeJavaStyleString(str);	  String    str    =(String)this.escapeJavaStyleString(str);    	non-compiled	[CE]  empty  character  literal	63	None	replace
150	[BUG]  [BUGGY]  String  str  =(String)this.escapeJavaStyleString(str,  true);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =(String)this.escapeJavaStyleString(str,  true);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =(String)this.escapeJavaStyleString(str,  true);	  String    str    =(String)this.escapeJavaStyleString(str);    	non-compiled	[CE]  empty  character  literal	63	None	replace
151	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  true);  StringEscapeUtils.escapeJavaStyleString(str,  false);  [CE]  empty  character  literal  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  true);  StringEscapeUtils.escapeJavaStyleString(str,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringEscapeUtils.escapeJavaStyleString(str,  true);  StringEscapeUtils.escapeJavaStyleString(str,  false);	          StringEscapeUtils.escapeJavaStyleString(str,    false);    StringEscapeUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	48	None	replace
152	[BUG]  [BUGGY]  return  escapeJavaString(str,  null,  false);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaString(str,  null,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaString(str,  null,  false);	  return    escapeJavaString(str,    null);    	non-compiled	[CE]  empty  character  literal	66	None	replace
153	[BUG]  [BUGGY]  return  escapeJavaString(str,  null,  true);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaString(str,  null,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaString(str,  null,  true);	  return    escapeJavaString(str,    null);    	non-compiled	[CE]  empty  character  literal	66	None	replace
154	[BUG]  [BUGGY]  return  escapeJavaString(str,  null,  null);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaString(str,  null,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaString(str,  null,  null);	  return    escapeJavaString(str,    null);    	non-compiled	[CE]  empty  character  literal	66	None	replace
155	[BUG]  [BUGGY]  return  escapeJavaString(str,  null,  0);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaString(str,  null,  0);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaString(str,  null,  0);	  return    escapeJavaString(str,    null);    	non-compiled	[CE]  empty  character  literal	66	None	replace
156	[BUG]  [BUGGY]  String  str  =(String)this.str.toCharArray();  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =(String)this.str.toCharArray();  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =(String)this.str.toCharArray();	  String    str    =(String)str.toCharArray();    	non-compiled	[CE]  empty  character  literal	15	None	replace
157	[BUG]  [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeJava(str,  false,  true);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeJava(str,  false,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(StringEscapeUtils.escapeJava(str,  false,  true);	  return    escapeJavaScript(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	37	None	replace
158	[BUG]  [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeJava(str),  false,  true);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeJava(str),  false,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(StringEscapeUtils.escapeJava(str),  false,  true);	  return    escapeJavaScript(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	37	None	replace
159	[BUG]  [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeJavaScript(str,  false,  true);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeJavaScript(str,  false,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(StringEscapeUtils.escapeJavaScript(str,  false,  true);	  return    escapeJavaScript(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	37	None	replace
160	[BUG]  [BUGGY]  CharacterEscapeUtils.escapeJavaStyleString(str,  true);  [CE]  empty  character  literal  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  CharacterEscapeUtils.escapeJavaStyleString(str,  true);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	CharacterEscapeUtils.escapeJavaStyleString(str,  true);	  if(str    ==    null)    {    StringEscapeUtils.escapeJavaStyleString(str,    false);    }    else    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	81	None	replace
161	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]          junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  escapeJavaStyleString(str,  false);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  escapeJavaStyleString(str,  false);  }	  return    escapeJavaStyleString(str,    false);    String    str    =    escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	55	None	replace
162	[BUG]  [BUGGY]  String  str  =  getEscapeJavaStyle().escapeJava(str,  false);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getEscapeJavaStyle().escapeJava(str,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getEscapeJavaStyle().escapeJava(str,  false);	  String    str    =    getStyle().escapeJava(str,    false);    	non-compiled	[CE]  empty  character  literal	23	None	replace
163	[BUG]  [BUGGY]  String  str  =  getStdStyle().escapeJava(str,  false);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getStdStyle().escapeJava(str,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getStdStyle().escapeJava(str,  false);	  String    str    =    getStyle().escapeJava(str,    false);    	non-compiled	[CE]  empty  character  literal	23	None	replace
164	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  false,  true,  true);  [CE]  empty  character  literal  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  false,  true,  true);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringEscapeUtils.escapeJavaStyleString(str,  false,  true,  true);	  StringEscapeUtils.escapeJavaStyleString(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	12	None	replace
165	[BUG]  [BUGGY]  StringSeparator.escapeJavaStyleString(str,  false);  CharacterEscapeUtils.escapeJavaStyleString(str,  false);  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringSeparator.escapeJavaStyleString(str,  false);  CharacterEscapeUtils.escapeJavaStyleString(str,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringSeparator.escapeJavaStyleString(str,  false);  CharacterEscapeUtils.escapeJavaStyleString(str,  false);	          StringEscapeUtils.escapeJavaStyleString(str,    false);    CharacterEscapeUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	50	None	replace
166	[BUG]  [BUGGY]  return  str  ==  null?  null  :  str.toUpperCase();  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  str  ==  null?  null  :  str.toUpperCase();  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  str  ==  null?  null  :  str.toUpperCase();	  return    str    ==    null?    null    :    str.toLowerCase();    	non-compiled	[CE]  empty  character  literal	2	None	replace
167	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  true);  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  empty  character  literal  [FE]        junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  true);  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  true);  String  str  =  str.substring(0,  str.length()  -  1);	  return    escapeJavaStyleString(str,    false);    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  empty  character  literal	40	None	replace
168	[BUG]  [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeJava(str,  true);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeJava(str,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(StringEscapeUtils.escapeJava(str,  true);	  return    escapeJavaScript(str,    true);    	non-compiled	[CE]  empty  character  literal	34	None	replace
169	[BUG]  [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeJava(str),  true);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeJava(str),  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(StringEscapeUtils.escapeJava(str),  true);	  return    escapeJavaScript(str,    true);    	non-compiled	[CE]  empty  character  literal	34	None	replace
170	[BUG]  [BUGGY]  return  escapeJavaScript(StringEscapeUtils.EMPTY_STRING,  str,  true);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(StringEscapeUtils.EMPTY_STRING,  str,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(StringEscapeUtils.EMPTY_STRING,  str,  true);	  return    escapeJavaScript(str,    true);    	non-compiled	[CE]  empty  character  literal	34	None	replace
171	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  StringEscapeUtils.EMPTY_STRING,  str);  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  StringEscapeUtils.EMPTY_STRING,  str);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  StringEscapeUtils.EMPTY_STRING,  str);	  return    escapeJavaStyleString(str,    StringEscapeUtils.EMPTY_STRING);    	non-compiled	[CE]  empty  character  literal	69	None	replace
172	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  StringEscapeUtils.EMPTY_STRING,  CharacterEscapeUtils.EMPTY_STRING);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  StringEscapeUtils.EMPTY_STRING,  CharacterEscapeUtils.EMPTY_STRING);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  StringEscapeUtils.EMPTY_STRING,  CharacterEscapeUtils.EMPTY_STRING);	  return    escapeJavaStyleString(str,    StringEscapeUtils.EMPTY_STRING);    	non-compiled	[CE]  empty  character  literal	69	None	replace
173	[BUG]  [BUGGY]  if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  getEscapeJavaStyleString(str);  }  [CE]  empty  character  literal  [FE]            junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  getEscapeJavaStyleString(str);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  getEscapeJavaStyleString(str);  }	  return    escapeJavaStyleString(str,    false);    String    str    =    getEscapeJavaStyleString(str);    	non-compiled	[CE]  empty  character  literal	56	None	replace
174	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  [CE]  ')'  expected  [FE]        junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str,  false);  if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }	  return    escapeJavaStyleString(str,    false);    if(str    ==    null)    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  ')'  expected	54	None	replace
175	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  if(str!=  null)  {  return  escapeJavaStyleString(str,  false);  }  [CE]  ')'  expected  [FE]          junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  if(str!=  null)  {  return  escapeJavaStyleString(str,  false);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str,  false);  if(str!=  null)  {  return  escapeJavaStyleString(str,  false);  }	  return    escapeJavaStyleString(str,    false);    if(str    ==    null)    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  ')'  expected	54	None	replace
176	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  false,  true,  true);  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  false,  true,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  false,  true,  true);	  return    escapeJavaStyleString(str,    false,    true);    	non-compiled	[CE]  ')'  expected	26	None	replace
177	[BUG]  [BUGGY]  return  escapeJavaString(str,  null,  false,  true);  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaString(str,  null,  false,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaString(str,  null,  false,  true);	  return    escapeJavaString(str,    false,    true);    	non-compiled	[CE]  ')'  expected	65	None	replace
178	[BUG]  [BUGGY]  safeEscape(str)  {  return  escapeJavaStyleString(str);  }  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  safeEscape(str)  {  return  escapeJavaStyleString(str);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	safeEscape(str)  {  return  escapeJavaStyleString(str);  }	  if(str!=    null)    {    return    escapeJavaStyleString(str);    }    	non-compiled	[CE]  ')'  expected	70	None	replace
179	[BUG]  [BUGGY]  safeEscape(str)  {  return  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  safeEscape(str)  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	safeEscape(str)  {  return  escapeJavaStyleString(str,  true);  }	  if(str!=    null)    {    return    escapeJavaStyleString(str);    }    	non-compiled	[CE]  empty  character  literal	70	None	replace
180	[BUG]  [BUGGY]  safeEscape(str)  {  return  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  safeEscape(str)  {  return  escapeJavaStyleString(str,  false);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	safeEscape(str)  {  return  escapeJavaStyleString(str,  false);  }	  if(str!=    null)    {    return    escapeJavaStyleString(str);    }    	non-compiled	[CE]  empty  character  literal	70	None	replace
181	[BUG]  [BUGGY]  aughtExceptionHandler.handleEscapeJavaScript(str);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  aughtExceptionHandler.handleEscapeJavaScript(str);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	aughtExceptionHandler.handleEscapeJavaScript(str);	  if(str!=    null)    {    return    escapeJavaStyleString(str);    }    	non-compiled	[CE]  empty  character  literal	70	None	replace
182	[BUG]  [BUGGY]  String  str  =  getStyle().escapeJavaScript(StringEscapeUtils.EMPTY_STRING,  str,  true);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getStyle().escapeJavaScript(StringEscapeUtils.EMPTY_STRING,  str,  true);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getStyle().escapeJavaScript(StringEscapeUtils.EMPTY_STRING,  str,  true);	  String    str    =    getStyle().escapeJavaScript(str,    true);    	non-compiled	[CE]  empty  character  literal	45	None	replace
183	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str.toLowerCase());  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str.toLowerCase());  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str.toLowerCase());	  String    str    =    escapeJavaStyleString(str);    	non-compiled	[CE]  empty  character  literal	8	None	replace
184	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringEscapeUtils.escapeJavaStyleString(str,  false);  }	          StringEscapeUtils.escapeJavaStyleString(str,    false);    StringEscapeUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	48	None	replace
185	[BUG]  [BUGGY]  if(str!=  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str!=  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str!=  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringEscapeUtils.escapeJavaStyleString(str,  false);  }	          StringEscapeUtils.escapeJavaStyleString(str,    false);    StringEscapeUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	48	None	replace
186	[BUG]  [BUGGY]  StringescapeUtils.escapeJavaStyleString(str,  false);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringescapeUtils.escapeJavaStyleString(str,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringescapeUtils.escapeJavaStyleString(str,  false);	          StringEscapeUtils.escapeJavaStyleString(str,    false);    StringescapeUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	51	None	replace
187	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  escapeJavaStyleString(true));  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  escapeJavaStyleString(true));  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  escapeJavaStyleString(true));	  return    escapeJavaStyleString(str,    escapeJavaStyleString());    	non-compiled	[CE]  ';'  expected	79	None	replace
188	[BUG]  [BUGGY]  String  str  =(String)EscapeJavaStyleString.escape(str);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =(String)EscapeJavaStyleString.escape(str);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =(String)EscapeJavaStyleString.escape(str);	  String    str    =(String)this.escapeJavaStyleString(str);    	non-compiled	[CE]  empty  character  literal	63	None	replace
189	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  true);  String  str  =  getStyle().escapeJavaStyleString(str,  false);  [CE]  empty  character  literal  [FE]            junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  true);  String  str  =  getStyle().escapeJavaStyleString(str,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  true);  String  str  =  getStyle().escapeJavaStyleString(str,  false);	  return    escapeJavaStyleString(str,    false);    String    str    =    getStyle().escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	42	None	replace
190	[BUG]  [BUGGY]  if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  getStyle().escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]              junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  getStyle().escapeJavaStyleString(str,  false);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  getStyle().escapeJavaStyleString(str,  false);  }	  return    escapeJavaStyleString(str,    false);    String    str    =    getStyle().escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	42	None	replace
191	[BUG]  [BUGGY]  if(str!=  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  getStyle().escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]                junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str!=  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  getStyle().escapeJavaStyleString(str,  false);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str!=  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  getStyle().escapeJavaStyleString(str,  false);  }	  return    escapeJavaStyleString(str,    false);    String    str    =    getStyle().escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	42	None	replace
192	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  StringEscapeUtils);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  StringEscapeUtils);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  StringEscapeUtils);	  return    escapeJavaStyleString(str,    null,    stringEscapeUtils);    	non-compiled	[CE]  empty  character  literal	68	None	replace
193	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  null,  StringEscapeUtils);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  null,  StringEscapeUtils);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  null,  StringEscapeUtils);	  return    escapeJavaStyleString(str,    null,    stringEscapeUtils);    	non-compiled	[CE]  empty  character  literal	68	None	replace
194	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  escapeJavaStyleString(StringEscapeUtils.class));  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  escapeJavaStyleString(StringEscapeUtils.class));  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  escapeJavaStyleString(StringEscapeUtils.class));	  return    escapeJavaStyleString(str,    null,    stringEscapeUtils);    	non-compiled	[CE]  empty  character  literal	68	None	replace
195	[BUG]  [BUGGY]  if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  String  str  =  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]                junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  String  str  =  escapeJavaStyleString(str,  true);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  String  str  =  escapeJavaStyleString(str,  true);  }	  return    escapeJavaStyleString(str,    false);    String    str    =    escapeJavaStyleString(str,    true);    	non-compiled	[CE]  empty  character  literal	58	None	replace
196	[BUG]  [BUGGY]  if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  return  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]            junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  return  escapeJavaStyleString(str,  false);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str  ==  null)  {  return  escapeJavaStyleString(str,  false);  }  else  {  return  escapeJavaStyleString(str,  false);  }	  return    escapeJavaStyleString(str,    false);    if(str.length()    ==    0)    {    return    escapeJavaStyleString(str,    false);    }    else    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	78	None	replace
197	[BUG]  [BUGGY]  String  str  =  getStdStyle().escapeJava(str,  true);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getStdStyle().escapeJava(str,  true);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getStdStyle().escapeJava(str,  true);	  String    str    =    getStyle().escapeJava(str,    true);    	non-compiled	[CE]  empty  character  literal	22	None	replace
198	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringUtils.escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringUtils.escapeJavaStyleString(str,  false);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringUtils.escapeJavaStyleString(str,  false);  }	          StringEscapeUtils.escapeJavaStyleString(str,    false);    StringUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	52	None	replace
199	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  str.length(),  null);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  str.length(),  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  str.length(),  null);	  return    escapeJavaStyleString(str,    null,    str.length());    	non-compiled	[CE]  empty  character  literal	33	None	replace
200	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  str.length()  -  1);  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  str.length()  -  1);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  str.length()  -  1);	  return    escapeJavaStyleString(str,    null,    str.length());    	non-compiled	[CE]  empty  character  literal	33	None	replace
201	[BUG]  [BUGGY]  String  str  =  getStdStyle().escapeJava(str,  null);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getStdStyle().escapeJava(str,  null);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getStdStyle().escapeJava(str,  null);	  String    str    =    getStyle().escapeJava(str,    null);    	non-compiled	[CE]  empty  character  literal	64	None	replace
202	[BUG]  [BUGGY]  return  escapeJavaScript(str,  null,  StringEscapeUtils.EMPTY);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(str,  null,  StringEscapeUtils.EMPTY);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(str,  null,  StringEscapeUtils.EMPTY);	  return    escapeJavaScript(str,    null);    	non-compiled	[CE]  empty  character  literal	1	None	replace
203	[BUG]  [BUGGY]  String  str  =  getEscapeJavaStyle().escapeJavaScript(str,  false);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getEscapeJavaStyle().escapeJavaScript(str,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getEscapeJavaStyle().escapeJavaScript(str,  false);	  String    str    =    getStyle().escapeJavaScript(str,    false);    	non-compiled	[CE]  empty  character  literal	46	None	replace
204	[BUG]  [BUGGY]  String  str  =  getStdStyle().escapeJavaScript(str,  false);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getStdStyle().escapeJavaScript(str,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getStdStyle().escapeJavaScript(str,  false);	  String    str    =    getStyle().escapeJavaScript(str,    false);    	non-compiled	[CE]  empty  character  literal	46	None	replace
205	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  if(str  ==  null)  {  return  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]              junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  if(str  ==  null)  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str,  false);  if(str  ==  null)  {  return  escapeJavaStyleString(str,  true);  }	  return    escapeJavaStyleString(str,    false);    if(str    ==    null)    {    return    escapeJavaStyleString(str,    true);    }    	non-compiled	[CE]  empty  character  literal	57	None	replace
206	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  if(str!=  null)  {  return  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]                junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str,  false);  if(str!=  null)  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str,  false);  if(str!=  null)  {  return  escapeJavaStyleString(str,  true);  }	  return    escapeJavaStyleString(str,    false);    if(str    ==    null)    {    return    escapeJavaStyleString(str,    true);    }    	non-compiled	[CE]  empty  character  literal	57	None	replace
207	[BUG]  [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeJavaScript(str,  null,  false);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeJavaScript(str,  null,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(StringEscapeUtils.escapeJavaScript(str,  null,  false);	  return    escapeJavaScript(str,    null,    false);    	non-compiled	[CE]  empty  character  literal	36	None	replace
208	[BUG]  [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeJava(str,  null,  false);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeJava(str,  null,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(StringEscapeUtils.escapeJava(str,  null,  false);	  return    escapeJavaScript(str,    null,    false);    	non-compiled	[CE]  empty  character  literal	36	None	replace
209	[BUG]  [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeJavaValue(str,  null,  false);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeJavaValue(str,  null,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(StringEscapeUtils.escapeJavaValue(str,  null,  false);	  return    escapeJavaScript(str,    null,    false);    	non-compiled	[CE]  empty  character  literal	36	None	replace
210	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  true);  String  str  =  getStyle().escape(str);  [CE]  empty  character  literal  [FE]                junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  true);  String  str  =  getStyle().escape(str);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  true);  String  str  =  getStyle().escape(str);	  return    escapeJavaStyleString(str,    false);    String    str    =    getStyle().escape(str);    	non-compiled	[CE]  empty  character  literal	44	None	replace
211	[BUG]  [BUGGY]  if(str!=  null)  {  return  escapeJavaStyleString(str,  false);  str  =  getStyle().escape(str);  }  [CE]  empty  character  literal  [FE]                  junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str!=  null)  {  return  escapeJavaStyleString(str,  false);  str  =  getStyle().escape(str);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str!=  null)  {  return  escapeJavaStyleString(str,  false);  str  =  getStyle().escape(str);  }	  return    escapeJavaStyleString(str,    false);    String    str    =    getStyle().escape(str);    	non-compiled	[CE]  empty  character  literal	44	None	replace
212	[BUG]  [BUGGY]  String  str  =  escapeJavaString(str.toLowerCase(),  false);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaString(str.toLowerCase(),  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaString(str.toLowerCase(),  false);	  String    str    =    escapeJavaString(str,    false);    	non-compiled	[CE]  empty  character  literal	19	None	replace
213	[BUG]  [BUGGY]  String  str  =  escapeJavaString(str.toUpperCase(),  false);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaString(str.toUpperCase(),  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaString(str.toUpperCase(),  false);	  String    str    =    escapeJavaString(str,    false);    	non-compiled	[CE]  empty  character  literal	19	None	replace
214	[BUG]  [BUGGY]  return  escapeJava(str,  null,  StringEscapeUtils.EMPTY);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJava(str,  null,  StringEscapeUtils.EMPTY);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJava(str,  null,  StringEscapeUtils.EMPTY);	  return    escapeJava(str,    null);    	non-compiled	[CE]  empty  character  literal	59	None	replace
215	[BUG]  [BUGGY]  return  escapeJava(str,  null,  StringEscapeUtils.EMPTY_STRING);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJava(str,  null,  StringEscapeUtils.EMPTY_STRING);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJava(str,  null,  StringEscapeUtils.EMPTY_STRING);	  return    escapeJava(str,    null);    	non-compiled	[CE]  empty  character  literal	59	None	replace
216	[BUG]  [BUGGY]  return  escapeJavaString(str,  null,  StringEscapeUtils.EMPTY_STRING);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaString(str,  null,  StringEscapeUtils.EMPTY_STRING);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaString(str,  null,  StringEscapeUtils.EMPTY_STRING);	  return    escapeJavaString(str,    null);    	non-compiled	[CE]  empty  character  literal	66	None	replace
217	[BUG]  [BUGGY]  return  escapeJavaString(str,  StringEscapeUtils.EMPTY_STRING);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaString(str,  StringEscapeUtils.EMPTY_STRING);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaString(str,  StringEscapeUtils.EMPTY_STRING);	  return    escapeJavaString(str,    null);    	non-compiled	[CE]  empty  character  literal	66	None	replace
218	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  true);  if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]        junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str,  true);  if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str,  true);  if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  true);  }	  return    escapeJavaStyleString(str,    false);    if(str.length()    ==    0)    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	76	None	replace
219	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringUtils.escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str.length()  ==  0)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringUtils.escapeJavaStyleString(str,  false);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str.length()  ==  0)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringUtils.escapeJavaStyleString(str,  false);  }	          StringEscapeUtils.escapeJavaStyleString(str,    false);    StringUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	52	None	replace
220	[BUG]  [BUGGY]  return  escapeJavaString(str,  null,  str.length());  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaString(str,  null,  str.length());  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaString(str,  null,  str.length());	  return    escapeJavaString(str,    null);    	non-compiled	[CE]  empty  character  literal	66	None	replace
221	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  CharacterEscapeUtils.escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  CharacterEscapeUtils.escapeJavaStyleString(str,  false);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  CharacterEscapeUtils.escapeJavaStyleString(str,  false);  }	          StringEscapeUtils.escapeJavaStyleString(str,    false);    CharacterEscapeUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	50	None	replace
222	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringescapeUtils.escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringescapeUtils.escapeJavaStyleString(str,  false);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringescapeUtils.escapeJavaStyleString(str,  false);  }	          StringEscapeUtils.escapeJavaStyleString(str,    false);    StringescapeUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	51	None	replace
223	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  false);  }  else  {  return  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]                junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  false);  }  else  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  false);  }  else  {  return  escapeJavaStyleString(str,  true);  }	  return    escapeJavaStyleString(str,    false);    String    str    =    escapeJavaStyleString(str,    true);    	non-compiled	[CE]  empty  character  literal	58	None	replace
224	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]                  junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  escapeJavaStyleString(str,  true);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  false);  }  else  {  String  str  =  escapeJavaStyleString(str,  true);  }	  return    escapeJavaStyleString(str,    false);    String    str    =    escapeJavaStyleString(str,    true);    	non-compiled	[CE]  empty  character  literal	58	None	replace
225	[BUG]  [BUGGY]  Character(str)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  Character(str)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	Character(str)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }	  if(str    ==    null)    {    StringEscapeUtils.escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	80	None	replace
226	[BUG]  [BUGGY]  return  escapeJavaString(str,  false,  true,  null);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaString(str,  false,  true,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaString(str,  false,  true,  null);	  return    escapeJavaString(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	65	None	replace
227	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  false);  }  else  {  return  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]          junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  false);  }  else  {  return  escapeJavaStyleString(str,  false);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str.length()  ==  0)  {  return  escapeJavaStyleString(str,  false);  }  else  {  return  escapeJavaStyleString(str,  false);  }	  return    escapeJavaStyleString(str,    false);    String    str    =    escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	55	None	replace
228	[BUG]  [BUGGY]  return  str  ==  null? "null "  :  str.toString();  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  str  ==  null? "null "  :  str.toString();  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  str  ==  null? "null "  :  str.toString();	  return    str    ==    null?    null    :    str.toString();    	non-compiled	[CE]  empty  character  literal	3	None	replace
229	[BUG]  [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeJavaScript(str,  true);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(StringEscapeUtils.escapeJavaScript(str,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(StringEscapeUtils.escapeJavaScript(str,  true);	  return    escapeJavaScript(str,    true);    	non-compiled	[CE]  empty  character  literal	34	None	replace
230	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  String  str  =  str.substring(0,  str.length()  -  1);  return  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]          junit.framework.ComparisonFailure:  expected:<He  didn[\]'t  say      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str.length()  ==  0)  {  String  str  =  str.substring(0,  str.length()  -  1);  return  escapeJavaStyleString(str,  false);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str.length()  ==  0)  {  String  str  =  str.substring(0,  str.length()  -  1);  return  escapeJavaStyleString(str,  false);  }	  return    escapeJavaStyleString(str,    false);    if(str.length()    ==    0)    {    String    str    =    str.substring(0,    str.length()    -    1);    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	77	None	replace
231	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  false,  true,  null);  [CE]  empty  character  literal  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  StringEscapeUtils.escapeJavaStyleString(str,  false,  true,  null);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	StringEscapeUtils.escapeJavaStyleString(str,  false,  true,  null);	  StringEscapeUtils.escapeJavaStyleString(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	12	None	replace
232	[BUG]  [BUGGY]  while(str!=  null  &&  str.length()  >  0)  {  return  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  while(str!=  null  &&  str.length()  >  0)  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	while(str!=  null  &&  str.length()  >  0)  {  return  escapeJavaStyleString(str,  true);  }	  while(str!=    null)    {    return    escapeJavaStyleString(str,    true);    }    	non-compiled	[CE]  empty  character  literal	20	None	replace
233	[BUG]  [BUGGY]  if(str!=  null  ||  str.length()  ==  0)  {  return  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str!=  null  ||  str.length()  ==  0)  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str!=  null  ||  str.length()  ==  0)  {  return  escapeJavaStyleString(str,  true);  }	  if(str!=    null    ||    str.length()    ==    0)    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	73	None	replace
234	[BUG]  [BUGGY]  while(str!=  null  &&  str.length()  >  0)  {  return  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  while(str!=  null  &&  str.length()  >  0)  {  return  escapeJavaStyleString(str,  false);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	while(str!=  null  &&  str.length()  >  0)  {  return  escapeJavaStyleString(str,  false);  }	  while(str!=    null)    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	4	None	replace
235	[BUG]  [BUGGY]  if(str!=  null  ||  str.length()!=  0)  {  return  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str!=  null  ||  str.length()!=  0)  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str!=  null  ||  str.length()!=  0)  {  return  escapeJavaStyleString(str,  true);  }	  if(str    ==    null    ||    str.length()!=    0)    {    return    escapeJavaStyleString(str,    true);    }    	non-compiled	[CE]  empty  character  literal	38	None	replace
236	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  false,  null,  true);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  false,  null,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  false,  null,  true);	  return    escapeJavaStyleString(str,    false,    null);    	non-compiled	[CE]  empty  character  literal	28	None	replace
237	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  this.stringEscapeUtils);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  this.stringEscapeUtils);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  this.stringEscapeUtils);	  return    escapeJavaStyleString(str,    null,    stringEscapeUtils);    	non-compiled	[CE]  empty  character  literal	68	None	replace
238	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str.length()  ==  0)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str.length()  ==  0)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  StringEscapeUtils.escapeJavaStyleString(str,  false);  }	          StringEscapeUtils.escapeJavaStyleString(str,    false);    StringEscapeUtils.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	48	None	replace
239	[BUG]  [BUGGY]  String  str  =  escapeJavaStyleString(str,  null);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  escapeJavaStyleString(str,  null);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  escapeJavaStyleString(str,  null);	  String    str    =    getStyle().escapeJavaScript(str,    null);    	non-compiled	[CE]  empty  character  literal	62	None	replace
240	[BUG]  [BUGGY]  return  escapeJavaString(str,  false,  null,  true);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaString(str,  false,  null,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaString(str,  false,  null,  true);	  return    escapeJavaString(str,    false,    null);    	non-compiled	[CE]  empty  character  literal	18	None	replace
241	[BUG]  [BUGGY]  return  escapeJavaString(str,  false,  null,  StringEscapeUtils);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaString(str,  false,  null,  StringEscapeUtils);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaString(str,  false,  null,  StringEscapeUtils);	  return    escapeJavaString(str,    false,    null);    	non-compiled	[CE]  empty  character  literal	18	None	replace
242	[BUG]  [BUGGY]  String  str  =  getEscapeJavaStyleString().escapeJavaScript(str,  true);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =  getEscapeJavaStyleString().escapeJavaScript(str,  true);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =  getEscapeJavaStyleString().escapeJavaScript(str,  true);	  String    str    =    getStyle().escapeJavaScript(str,    true);    	non-compiled	[CE]  empty  character  literal	45	None	replace
243	[BUG]  [BUGGY]  [Delete]  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  [Delete]  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	[Delete]	  if(str!=    null)    {    return    escapeJavaStyleString(str);    }    	non-compiled	[CE]  empty  character  literal	70	None	replace
244	[BUG]  [BUGGY]  aughtExceptionUtils.escapeJavaStyleString(str);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  aughtExceptionUtils.escapeJavaStyleString(str);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	aughtExceptionUtils.escapeJavaStyleString(str);	  if(str!=    null)    {    return    escapeJavaStyleString(str);    }    	non-compiled	[CE]  empty  character  literal	70	None	replace
245	[BUG]  [BUGGY]  aughtExceptionUtils.escapeJavaStyleString(str,  false);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  aughtExceptionUtils.escapeJavaStyleString(str,  false);  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	aughtExceptionUtils.escapeJavaStyleString(str,  false);	  if(str!=    null)    {    return    escapeJavaStyleString(str);    }    	non-compiled	[CE]  empty  character  literal	70	None	replace
246	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  null,  str.length()  +  1,  str.length());  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  null,  str.length()  +  1,  str.length());  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  null,  str.length()  +  1,  str.length());	  return    escapeJavaStyleString(str,    null,    str.length());    	non-compiled	[CE]  empty  character  literal	33	None	replace
247	[BUG]  [BUGGY]  String  str  =(String)str.replace('',  '/');  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  String  str  =(String)str.replace('',  '/');  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	String  str  =(String)str.replace('',  '/');	  String    str    =(String)str.toLowerCase();    	non-compiled	[CE]  empty  character  literal	75	None	replace
248	[BUG]  [BUGGY]  return  escapeJavaScript(str,  false,  true,  null);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaScript(str,  false,  true,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaScript(str,  false,  true,  null);	  return    escapeJavaScript(str,    false,    true);    	non-compiled	[CE]  empty  character  literal	37	None	replace
249	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  Characteristics.escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]        ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  if(str.length()  ==  0)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  Characteristics.escapeJavaStyleString(str,  false);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	if(str.length()  ==  0)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  Characteristics.escapeJavaStyleString(str,  false);  }	          StringEscapeUtils.escapeJavaStyleString(str,    false);    Characteristics.escapeJavaStyleString(str,    false);    	non-compiled	[CE]  empty  character  literal	71	None	replace
250	[BUG]  [BUGGY]  Character(str)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  else  {  return  escapeJavaStyleString(str,  false);  }  [CE]  empty  character  literal  [FE]          ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  Character(str)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  else  {  return  escapeJavaStyleString(str,  false);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	Character(str)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  else  {  return  escapeJavaStyleString(str,  false);  }	  if(str    ==    null)    {    StringEscapeUtils.escapeJavaStyleString(str,    false);    }    else    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	81	None	replace
251	[BUG]  [BUGGY]  Character(str)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  else  {  return  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  Character(str)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  else  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	Character(str)  {  StringEscapeUtils.escapeJavaStyleString(str,  false);  }  else  {  return  escapeJavaStyleString(str,  true);  }	  if(str    ==    null)    {    StringEscapeUtils.escapeJavaStyleString(str,    false);    }    else    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	81	None	replace
252	[BUG]  [BUGGY]  Character(str)  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  else  {  return  escapeJavaStyleString(str,  true);  }  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  Character(str)  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  else  {  return  escapeJavaStyleString(str,  true);  }  [BUGGY]      return  escapeJavaStyleString(str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	Character(str)  {  StringEscapeUtils.escapeJavaStyleString(str,  true);  }  else  {  return  escapeJavaStyleString(str,  true);  }	  if(str    ==    null)    {    StringEscapeUtils.escapeJavaStyleString(str,    false);    }    else    {    return    escapeJavaStyleString(str,    false);    }    	non-compiled	[CE]  empty  character  literal	81	None	replace
253	[BUG]  [BUGGY]  return  escapeJavaStyleStringEscape(str,  escapeJavaStyleStringEscape(str));  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleStringEscape(str,  escapeJavaStyleStringEscape(str));  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleStringEscape(str,  escapeJavaStyleStringEscape(str));	  return    escapeJavaStyleStringEscape(str);    	non-compiled	[CE]  empty  character  literal	47	None	replace
254	[BUG]  [BUGGY]  return  escapeJavaStyleString(str,  true,  true,  false);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  escapeJavaScript(String  str)  {      [BUGGY]  return  escapeJavaStyleString(str,  true,  true,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  String  String  str  [VARIABLES]  boolean  String  str  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	122	122	1	replace	return  escapeJavaStyleString(str,  true,  true,  false);	  return    escapeJavaStyleString(str,    true,    true,    true);    	non-compiled	[CE]  empty  character  literal	29	None	replace
