bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(escapeSingleQuote)  {  out.write('ufffd');  }  else  {  out.write('ufffd');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  [BUGGY]    if(escapeSingleQuote)  {  out.write('ufffd');  }  else  {  out.write('ufffd');  }  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	172	172	1	replace	    if(escapeSingleQuote)  {  out.write('ufffd');  }  else  {  out.write('ufffd');  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
2	[BUG]  [BUGGY]    if(escapeSingleQuote)  {  out.write(str);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  [BUGGY]    if(escapeSingleQuote)  {  out.write(str);  }  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	172	172	1	replace	    if(escapeSingleQuote)  {  out.write(str);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
3	[BUG]  [BUGGY]    if(escapeSingleQuote)  {  out.write(str);  }  else  {  out.write(ch);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  [BUGGY]    if(escapeSingleQuote)  {  out.write(str);  }  else  {  out.write(ch);  }  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	172	172	1	replace	    if(escapeSingleQuote)  {  out.write(str);  }  else  {  out.write(ch);  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
4	[BUG]  [BUGGY]    if(escapeSingleQuote)  {  out.write(str);  }  else  {  out.write('ufffd');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  [BUGGY]    if(escapeSingleQuote)  {  out.write(str);  }  else  {  out.write('ufffd');  }  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	172	172	1	replace	    if(escapeSingleQuote)  {  out.write(str);  }  else  {  out.write('ufffd');  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
5	[BUG]  [BUGGY]    if(escapeSingleQuote)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  [BUGGY]    if(escapeSingleQuote)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	172	172	1	replace	    if(escapeSingleQuote)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
6	[BUG]  [BUGGY]  if  (escapeSingleQuote)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  [BUGGY]  if  (escapeSingleQuote)  {  [BUGGY]  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	172	172	1	replace	if  (escapeSingleQuote)  {	if  (out  ==  null)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
7	[BUG]  [BUGGY]  if(out  ==  null  ||  escapeSingleQuote)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  [BUGGY]  if(out  ==  null  ||  escapeSingleQuote)  {  [BUGGY]  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	172	172	1	replace	if(out  ==  null  ||  escapeSingleQuote)  {	if  (out  ==  null)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
8	[BUG]  [BUGGY]  if  (str  ==  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  [BUGGY]  if  (str  ==  null)  {  [BUGGY]  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	172	172	1	replace	if  (str  ==  null)  {	if  (out  ==  null)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
9	[BUG]  [BUGGY]    out.write(ch);  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  [BUGGY]    out.write(ch);  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	172	172	1	replace	    out.write(ch);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
10	[BUG]  [BUGGY]    OutputStream  out  =  getOutputStream();  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  [BUGGY]    OutputStream  out  =  getOutputStream();  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	172	172	1	replace	    OutputStream  out  =  getOutputStream();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
11	[BUG]  [BUGGY]    out.write('ufffd');  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  [BUGGY]    out.write('ufffd');  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	172	172	1	replace	    out.write('ufffd');		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
12	[BUG]  [BUGGY]    OutputStream  out  =  new  FileOutputStream(str.length());  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  [BUGGY]    OutputStream  out  =  new  FileOutputStream(str.length());  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	172	172	1	replace	    OutputStream  out  =  new  FileOutputStream(str.length());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
13	[BUG]  [BUGGY]    OutputStream  out  =  new  FileOutputStream(str.getPath());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  [BUGGY]    OutputStream  out  =  new  FileOutputStream(str.getPath());  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	172	172	1	replace	    OutputStream  out  =  new  FileOutputStream(str.getPath());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
14	[BUG]  [BUGGY]  if(out  ==  null  ||  out.length()  ==  0)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  [BUGGY]  if(out  ==  null  ||  out.length()  ==  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	172	172	1	replace	if(out  ==  null  ||  out.length()  ==  0)  {	if  (out  ==  null)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
15	[BUG]  [BUGGY]  if(out  ==  null  ||  str  ==  null)  {  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  [BUGGY]  if(out  ==  null  ||  str  ==  null)  {  [BUGGY]  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	172	172	1	replace	if(out  ==  null  ||  str  ==  null)  {	if  (out  ==  null)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
16	[BUG]  [BUGGY]    if(escapeSingleQuote)  {  out.write('ufffd');  out.write('ufffd');  }  else  {  out.write('ufffd');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  [BUGGY]    if(escapeSingleQuote)  {  out.write('ufffd');  out.write('ufffd');  }  else  {  out.write('ufffd');  }  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	172	172	1	replace	    if(escapeSingleQuote)  {  out.write('ufffd');  out.write('ufffd');  }  else  {  out.write('ufffd');  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
17	[BUG]  [BUGGY]    if(escapeSingleQuote)  {  out.write('ufffd');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  [BUGGY]    if(escapeSingleQuote)  {  out.write('ufffd');  }  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	172	172	1	replace	    if(escapeSingleQuote)  {  out.write('ufffd');  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
18	[BUG]  [BUGGY]    if(escapeSingleQuote)  {  out.write('ufffd');  out.write('ufffd');  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  private  static  void  escapeJavaStyleString(Writer  out,  String  str,  boolean  escapeSingleQuote)  throws  IOException  {  [BUGGY]    if(escapeSingleQuote)  {  out.write('ufffd');  out.write('ufffd');  }  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (str  ==  null)  {  return;  }  int  sz;  sz  =  str.length();  for  (int  i  =  0;  i  <  sz;  i++)  {  char  ch  =  str.charAt(i);  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaStyleString  [RETURN_TYPE]  void  Writer  out  String  str  boolean  escapeSingleQuote  [VARIABLES]  boolean  escapeSingleQuote  char  ch  String  str  Writer  out  int  i  sz  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	0.5773502691896258	172	172	1	replace	    if(escapeSingleQuote)  {  out.write('ufffd');  out.write('ufffd');  }		non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	add
