bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  out.write('%',  str);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('%',  str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('%',  str);	  out.write('ufffd',    str);    	non-compiled	[CE]  empty  character  literal	4	None	replace
2	[BUG]  [BUGGY]  out.write('.',  str);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('.',  str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('.',  str);	  out.write('ufffd',    str);    	non-compiled	[CE]  empty  character  literal	4	None	replace
3	[BUG]  [BUGGY]  out.write('-',  str);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('-',  str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('-',  str);	  out.write('ufffd',    str);    	non-compiled	[CE]  empty  character  literal	4	None	replace
4	[BUG]  [BUGGY]  out.write(str,  0,  true);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write(str,  0,  true);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write(str,  0,  true);	  out.write(str,    true);    	non-compiled	[CE]  empty  character  literal	20	None	replace
5	[BUG]  [BUGGY]  out.write(str,  null);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write(str,  null);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write(str,  null);	  out.write(str,    true);    	non-compiled	[CE]  empty  character  literal	20	None	replace
6	[BUG]  [BUGGY]  if(str  ==  null)  {  out.write('ufffd');  out.write(str);  }  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  if(str  ==  null)  {  out.write('ufffd');  out.write(str);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	if(str  ==  null)  {  out.write('ufffd');  out.write(str);  }	  if(str    ==    null)    {    out.write('ufffd');    out.write(str);    }    else    {    out.write('ufffd');    }    	non-compiled	[CE]  empty  character  literal	38	None	replace
7	[BUG]  [BUGGY]  _escapeJavaStyleString(out,  str,  true);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  _escapeJavaStyleString(out,  str,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	_escapeJavaStyleString(out,  str,  true);	  _escapeJavaStyleString(out,    str,    false);    	non-compiled	[CE]  empty  character  literal	22	None	replace
8	[BUG]  [BUGGY]  _escapeJavaStyleString(out,  str,  null);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  _escapeJavaStyleString(out,  str,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	_escapeJavaStyleString(out,  str,  null);	  _escapeJavaStyleString(out,    str,    false);    	non-compiled	[CE]  empty  character  literal	22	None	replace
9	[BUG]  [BUGGY]  _escapeJavaStyleString(out,  str);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  _escapeJavaStyleString(out,  str);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	_escapeJavaStyleString(out,  str);	  _escapeJavaStyleString(out,    str,    false);    	non-compiled	[CE]  empty  character  literal	22	None	replace
10	[BUG]  [BUGGY]  _escapeJavaStyleString(out,  str,  false,  true);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  _escapeJavaStyleString(out,  str,  false,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	_escapeJavaStyleString(out,  str,  false,  true);	  _escapeJavaStyleString(out,    str,    false);    	non-compiled	[CE]  empty  character  literal	22	None	replace
11	[BUG]  [BUGGY]  out.write( "-- ");  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "-- ");  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "-- ");	  out.write(   "-   ");    	non-compiled	[CE]  empty  character  literal	43	None	replace
12	[BUG]  [BUGGY]  out.write( "-n ");  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "-n ");  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "-n ");	  out.write(   "-   ");    	non-compiled	[CE]  empty  character  literal	43	None	replace
13	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str,  null,  0,  0);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  escapeJavaStyleString(out,  str,  null,  0,  0);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str,  null,  0,  0);	  escapeJavaStyleString(out,    str,    null,    0);    	non-compiled	[CE]  empty  character  literal	17	None	replace
14	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str,  null,  1);  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  escapeJavaStyleString(out,  str,  null,  1);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str,  null,  1);	  escapeJavaStyleString(out,    str,    null,    0);    	non-compiled	[CE]  empty  character  literal	17	None	replace
15	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str,  false,  0);  [CE]  empty  character  literal  [FE]                            ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  escapeJavaStyleString(out,  str,  false,  0);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str,  false,  0);	  escapeJavaStyleString(out,    str,    null,    0);    	non-compiled	[CE]  empty  character  literal	17	None	replace
16	[BUG]  [BUGGY]  EscapeJavaStyleString(out,  str,  true,  null);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  EscapeJavaStyleString(out,  str,  true,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	EscapeJavaStyleString(out,  str,  true,  null);	  EscapeJavaStyleString(out,    str,    false,    null);    	non-compiled	[CE]  empty  character  literal	42	None	replace
17	[BUG]  [BUGGY]  EscapeJavaStyleString(out,  str,  false,  null,  null);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  EscapeJavaStyleString(out,  str,  false,  null,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	EscapeJavaStyleString(out,  str,  false,  null,  null);	  EscapeJavaStyleString(out,    str,    false,    null);    	non-compiled	[CE]  empty  character  literal	42	None	replace
18	[BUG]  [BUGGY]  EscapeJavaStyleString(out,  str,  false,  null,  true);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  EscapeJavaStyleString(out,  str,  false,  null,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	EscapeJavaStyleString(out,  str,  false,  null,  true);	  EscapeJavaStyleString(out,    str,    false,    null);    	non-compiled	[CE]  empty  character  literal	42	None	replace
19	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  true);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  true);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(out,  true);	  OutputStream    out    =    new    FileOutputStream(str,    true);    	non-compiled	[CE]  empty  character  literal	24	None	replace
20	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str,  0,  str.length);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  escapeJavaStyleString(out,  str,  0,  str.length);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str,  0,  str.length);	  escapeJavaStyleString(out,    str,    0);    	non-compiled	[CE]  empty  character  literal	23	None	replace
21	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str,  0,  str.length());  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  escapeJavaStyleString(out,  str,  0,  str.length());  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str,  0,  str.length());	  escapeJavaStyleString(out,    str,    0);    	non-compiled	[CE]  empty  character  literal	23	None	replace
22	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str,  1);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  escapeJavaStyleString(out,  str,  1);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str,  1);	  escapeJavaStyleString(out,    str,    0);    	non-compiled	[CE]  empty  character  literal	23	None	replace
23	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str,  true,  false);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  escapeJavaStyleString(out,  str,  true,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str,  true,  false);	  escapeJavaStyleString(out,    str,    null,    false);    	non-compiled	[CE]  empty  character  literal	15	None	replace
24	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str,  false,  null);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  escapeJavaStyleString(out,  str,  false,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str,  false,  null);	  escapeJavaStyleString(out,    str,    null,    false);    	non-compiled	[CE]  empty  character  literal	15	None	replace
25	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  false);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  false);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(out,  false);	  OutputStream    out    =    new    FileOutputStream(str,    false);    	non-compiled	[CE]  empty  character  literal	25	None	replace
26	[BUG]  [BUGGY]  out  =  new  FileOutputStream(str,  true);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out  =  new  FileOutputStream(str,  true);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out  =  new  FileOutputStream(str,  true);	  OutputStream    out    =    new    FileOutputStream(str,    false);    	non-compiled	[CE]  empty  character  literal	25	None	replace
27	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  out.write('n');  }  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  out.write('n');  }  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {  out.write('n');  }	  if(str    ==    null)    {    out.write('n');    }    	non-compiled	[CE]  empty  character  literal	10	None	replace
28	[BUG]  [BUGGY]  out.write('n',  str);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('n',  str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('n',  str);	  out.write('n');    	non-compiled	[CE]  empty  character  literal	9	None	replace
29	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str,  this,  null);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  escapeJavaStyleString(out,  str,  this,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str,  this,  null);	  escapeJavaStyleString(out,    str,    this);    	non-compiled	[CE]  empty  character  literal	14	None	replace
30	[BUG]  [BUGGY]  EscapeJavaStyleString(out,  str,  this);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  EscapeJavaStyleString(out,  str,  this);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	EscapeJavaStyleString(out,  str,  this);	  EscapeJavaStyleString(out,    str,    null);    	non-compiled	[CE]  empty  character  literal	13	None	replace
31	[BUG]  [BUGGY]  EscapeJavaStyleString(out,  str,  null,  false);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  EscapeJavaStyleString(out,  str,  null,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	EscapeJavaStyleString(out,  str,  null,  false);	  EscapeJavaStyleString(out,    str,    null);    	non-compiled	[CE]  empty  character  literal	13	None	replace
32	[BUG]  [BUGGY]  EscapeJavaStyleString(out,  str,  null,  true);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  EscapeJavaStyleString(out,  str,  null,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	EscapeJavaStyleString(out,  str,  null,  true);	  EscapeJavaStyleString(out,    str,    null);    	non-compiled	[CE]  empty  character  literal	13	None	replace
33	[BUG]  [BUGGY]  EscapeJavaStyleString(out,  str,  null,  0);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  EscapeJavaStyleString(out,  str,  null,  0);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	EscapeJavaStyleString(out,  str,  null,  0);	  EscapeJavaStyleString(out,    str,    null);    	non-compiled	[CE]  empty  character  literal	13	None	replace
34	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  1);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  1);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(str,  1);	  OutputStream    out    =    new    FileOutputStream(str,    0);    	non-compiled	[CE]  empty  character  literal	27	None	replace
35	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  0,  str.length);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  0,  str.length);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(str,  0,  str.length);	  OutputStream    out    =    new    FileOutputStream(str,    0);    	non-compiled	[CE]  empty  character  literal	27	None	replace
36	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  4);  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  4);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(str,  4);	  OutputStream    out    =    new    FileOutputStream(str,    0);    	non-compiled	[CE]  empty  character  literal	27	None	replace
37	[BUG]  [BUGGY]  out.write( "utf-8 ");  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "utf-8 ");  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "utf-8 ");	  out.write(   "u000   ");    	non-compiled	[CE]  empty  character  literal	41	None	replace
38	[BUG]  [BUGGY]  out.write('u',  str);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('u',  str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('u',  str);	  out.write('u');    	non-compiled	[CE]  empty  character  literal	48	None	replace
39	[BUG]  [BUGGY]  out.write('u',  str.length());  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('u',  str.length());  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('u',  str.length());	  out.write('u');    	non-compiled	[CE]  empty  character  literal	48	None	replace
40	[BUG]  [BUGGY]  EscapeJavaStyleString(out,  str,  false,  false);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  EscapeJavaStyleString(out,  str,  false,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	EscapeJavaStyleString(out,  str,  false,  false);	  EscapeJavaStyleString(out,    str,    false,    true);    	non-compiled	[CE]  empty  character  literal	12	None	replace
41	[BUG]  [BUGGY]  EscapeJavaStyleString(out,  str,  true,  false);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  EscapeJavaStyleString(out,  str,  true,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	EscapeJavaStyleString(out,  str,  true,  false);	  EscapeJavaStyleString(out,    str,    false,    true);    	non-compiled	[CE]  empty  character  literal	12	None	replace
42	[BUG]  [BUGGY]  EscapeJavaStyleString(out,  str,  true,  true);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  EscapeJavaStyleString(out,  str,  true,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	EscapeJavaStyleString(out,  str,  true,  true);	  EscapeJavaStyleString(out,    str,    false,    true);    	non-compiled	[CE]  empty  character  literal	12	None	replace
43	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str,  0,  true);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  escapeJavaStyleString(out,  str,  0,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str,  0,  true);	  escapeJavaStyleString(out,    str,    null,    true);    	non-compiled	[CE]  empty  character  literal	16	None	replace
44	[BUG]  [BUGGY]  if(str  ==  null)  {  out.write(str);  }  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  if(str  ==  null)  {  out.write(str);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	if(str  ==  null)  {  out.write(str);  }	  if(str    ==    null)    {    out.write(str);    }    else    {    escapeJavaScript(out,    str);    }    	non-compiled	[CE]  empty  character  literal	2	None	replace
45	[BUG]  [BUGGY]  EscapeJavaStyleString(str,  false);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  EscapeJavaStyleString(str,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	EscapeJavaStyleString(str,  false);	  EscapeJavaStyleString(out,    str,    true);    	non-compiled	[CE]  empty  character  literal	11	None	replace
46	[BUG]  [BUGGY]  out.write( "null ",  str);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "null ",  str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "null ",  str);	  out.write(   "null   ");    	non-compiled	[CE]  empty  character  literal	5	None	replace
47	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str,  false,  false);  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  escapeJavaStyleString(out,  str,  false,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str,  false,  false);	  escapeJavaStyleString(out,    str,    false,    true);    	non-compiled	[CE]  empty  character  literal	21	None	replace
48	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str,  true,  true);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  escapeJavaStyleString(out,  str,  true,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str,  true,  true);	  escapeJavaStyleString(out,    str,    false,    true);    	non-compiled	[CE]  empty  character  literal	21	None	replace
49	[BUG]  [BUGGY]  out.write(str,  false,  true);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write(str,  false,  true);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write(str,  false,  true);	  out.write(str,    false);    	non-compiled	[CE]  empty  character  literal	19	None	replace
50	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(out);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(out);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  BufferedOutputStream(out);	  OutputStream    out    =    new    FileOutputStream(out);    	non-compiled	[CE]  empty  character  literal	39	None	replace
51	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath());  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath());  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(str.getAbsolutePath());	  if(str    ==    null)    {    out.write('n');    }    else    {    escapeJavaScript(out,    str);    }    	non-compiled	[CE]  empty  character  literal	45	None	replace
52	[BUG]  [BUGGY]  out.write( "no-string  value ");  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "no-string  value ");  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "no-string  value ");	  out.write(   "no-string   ");    	non-compiled	[CE]  empty  character  literal	36	None	replace
53	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes( "UTF-8 "),  str);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes( "UTF-8 "),  str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(str.getBytes( "UTF-8 "),  str);	  OutputStream    out    =    new    FileOutputStream(str.getBytes(   "UTF-8   "));    	non-compiled	[CE]  empty  character  literal	34	None	replace
54	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes( ".UTF-8 "));  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes( ".UTF-8 "));  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(str.getBytes( ".UTF-8 "));	  OutputStream    out    =    new    FileOutputStream(str.getBytes(   "UTF-8   "));    	non-compiled	[CE]  empty  character  literal	34	None	replace
55	[BUG]  [BUGGY]  OutputStream  str  =  this.out.readLine();  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  str  =  this.out.readLine();  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  str  =  this.out.readLine();	  OutputStream    str    =    out.readLine();    	non-compiled	[CE]  empty  character  literal	47	None	replace
56	[BUG]  [BUGGY]  OutputStream  str  =  out.readFully(str);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  str  =  out.readFully(str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  str  =  out.readFully(str);	  OutputStream    str    =    out.readLine();    	non-compiled	[CE]  empty  character  literal	47	None	replace
57	[BUG]  [BUGGY]  OutputStream  str  =  out.read();  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  str  =  out.read();  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  str  =  out.read();	  OutputStream    str    =    out.readLine();    	non-compiled	[CE]  empty  character  literal	47	None	replace
58	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes(),  str);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes(),  str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(str.getBytes(),  str);	  OutputStream    out    =    new    FileOutputStream(str.getBytes());    	non-compiled	[CE]  empty  character  literal	8	None	replace
59	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes()  +  1);  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes()  +  1);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(str.getBytes()  +  1);	  OutputStream    out    =    new    FileOutputStream(str.getBytes());    	non-compiled	[CE]  empty  character  literal	8	None	replace
60	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes(),  true);  [CE]  empty  character  literal  [FE]                            ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes(),  true);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(str.getBytes(),  true);	  OutputStream    out    =    new    FileOutputStream(str.getBytes());    	non-compiled	[CE]  empty  character  literal	8	None	replace
61	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str,  false);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str,  false);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(out,  str,  false);	  OutputStream    out    =    new    FileOutputStream(out,    str);    	non-compiled	[CE]  empty  character  literal	26	None	replace
62	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str,  true);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str,  true);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(out,  str,  true);	  OutputStream    out    =    new    FileOutputStream(out,    str);    	non-compiled	[CE]  empty  character  literal	26	None	replace
63	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  out);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  out);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(str,  out);	  OutputStream    out    =    new    FileOutputStream(out,    str);    	non-compiled	[CE]  empty  character  literal	26	None	replace
64	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.length);  [CE]  empty  character  literal  [FE]                          ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.length);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(out,  str.length);	  OutputStream    out    =    new    FileOutputStream(out,    str);    	non-compiled	[CE]  empty  character  literal	26	None	replace
65	[BUG]  [BUGGY]  out.write( "[null] ");  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "[null] ");  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "[null] ");	  out.write(   "none   ");    	non-compiled	[CE]  empty  character  literal	40	None	replace
66	[BUG]  [BUGGY]  out.write(str,  0,  str.length()  +  1);  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write(str,  0,  str.length()  +  1);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write(str,  0,  str.length()  +  1);	  out.write(str,    0,    str.length());    	non-compiled	[CE]  empty  character  literal	18	None	replace
67	[BUG]  [BUGGY]  out.write(str,  0,  str.length()  -  1);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write(str,  0,  str.length()  -  1);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write(str,  0,  str.length()  -  1);	  out.write(str,    0,    str.length());    	non-compiled	[CE]  empty  character  literal	18	None	replace
68	[BUG]  [BUGGY]  out.write(str,  0,  str.length()  +  2);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write(str,  0,  str.length()  +  2);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write(str,  0,  str.length()  +  2);	  out.write(str,    0,    str.length());    	non-compiled	[CE]  empty  character  literal	18	None	replace
69	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.getBytes());  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.getBytes());  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(out,  str.getBytes());	  OutputStream    out    =    new    FileOutputStream(out.getBytes());    	non-compiled	[CE]  empty  character  literal	44	None	replace
70	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.getBytes(),  str);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.getBytes(),  str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(out.getBytes(),  str);	  OutputStream    out    =    new    FileOutputStream(out.getBytes());    	non-compiled	[CE]  empty  character  literal	44	None	replace
71	[BUG]  [BUGGY]  out.write( "null ").append(str);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "null ").append(str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "null ").append(str);	  out.write(   "null   ").write(str);    	non-compiled	[CE]  empty  character  literal	35	None	replace
72	[BUG]  [BUGGY]  out.write( "n ").write(str);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "n ").write(str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "n ").write(str);	  out.write(   "null   ").write(str);    	non-compiled	[CE]  empty  character  literal	35	None	replace
73	[BUG]  [BUGGY]  out.write( "null ").write(str,  false);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "null ").write(str,  false);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "null ").write(str,  false);	  out.write(   "null   ").write(str);    	non-compiled	[CE]  empty  character  literal	35	None	replace
74	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getPath()  +  1);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getPath()  +  1);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(str.getPath()  +  1);	  OutputStream    out    =    new    FileOutputStream(str.getPath());    	non-compiled	[CE]  empty  character  literal	7	None	replace
75	[BUG]  [BUGGY]  out.write( "#n ");  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "#n ");  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "#n ");	  out.write(   "#   ");    	non-compiled	[CE]  empty  character  literal	30	None	replace
76	[BUG]  [BUGGY]  out.write('#');  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('#');  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('#');	  out.write(   "#   ");    	non-compiled	[CE]  empty  character  literal	30	None	replace
77	[BUG]  [BUGGY]  out.write('%');  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('%');  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('%');	  out.write('ufffd');    	non-compiled	[CE]  empty  character  literal	3	None	replace
78	[BUG]  [BUGGY]  out.write('/');  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('/');  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('/');	  out.write('ufffd');    	non-compiled	[CE]  empty  character  literal	3	None	replace
79	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaScript(out,  str,  false);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  StringEscapeUtils.escapeJavaScript(out,  str,  false);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	StringEscapeUtils.escapeJavaScript(out,  str,  false);	  StringEscapeUtils.escapeJavaScript(out,    str);    	non-compiled	[CE]  empty  character  literal	1	None	replace
80	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaScript(out,  str,  true);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  StringEscapeUtils.escapeJavaScript(out,  str,  true);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	StringEscapeUtils.escapeJavaScript(out,  str,  true);	  StringEscapeUtils.escapeJavaScript(out,    str);    	non-compiled	[CE]  empty  character  literal	1	None	replace
81	[BUG]  [BUGGY]  StringEscapeUtils.escapeJavaScript(out,  str,  0);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  StringEscapeUtils.escapeJavaScript(out,  str,  0);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	StringEscapeUtils.escapeJavaScript(out,  str,  0);	  StringEscapeUtils.escapeJavaScript(out,    str);    	non-compiled	[CE]  empty  character  literal	1	None	replace
82	[BUG]  [BUGGY]  out.write('-',  str.length());  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('-',  str.length());  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('-',  str.length());	  out.write('-');    	non-compiled	[CE]  empty  character  literal	33	None	replace
83	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.toString(),  true);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.toString(),  true);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(str.toString(),  true);	  OutputStream    out    =    new    FileOutputStream(str.toString());    	non-compiled	[CE]  empty  character  literal	29	None	replace
84	[BUG]  [BUGGY]  out.write( "no-str ",  str);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "no-str ",  str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "no-str ",  str);	  out.write(   "no-str   ");    	non-compiled	[CE]  empty  character  literal	37	None	replace
85	[BUG]  [BUGGY]  out.write('.',  str.length());  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('.',  str.length());  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('.',  str.length());	  out.write('ufffd',    str.length());    	non-compiled	[CE]  empty  character  literal	31	None	replace
86	[BUG]  [BUGGY]  out.write('%',  str.length());  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('%',  str.length());  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('%',  str.length());	  out.write('ufffd',    str.length());    	non-compiled	[CE]  empty  character  literal	31	None	replace
87	[BUG]  [BUGGY]  out.write('0',  str.length());  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('0',  str.length());  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('0',  str.length());	  out.write('ufffd',    str.length());    	non-compiled	[CE]  empty  character  literal	31	None	replace
88	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes( "UTF-8 ")));  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getBytes( "UTF-8 ")));  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(str.getBytes( "UTF-8 ")));	  OutputStream    out    =    new    FileOutputStream(str.getBytes(   "UTF-8   "));    	non-compiled	[CE]  empty  character  literal	34	None	replace
89	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.getPath());  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.getPath());  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(out.getPath());	  OutputStream    out    =    new    FileOutputStream(str.getPath());    	non-compiled	[CE]  empty  character  literal	7	None	replace
90	[BUG]  [BUGGY]  out.write('-'  +  str);  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('-'  +  str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('-'  +  str);	  out.write('-');    	non-compiled	[CE]  empty  character  literal	33	None	replace
91	[BUG]  [BUGGY]  out.write(str, "n ");  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write(str, "n ");  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write(str, "n ");	  out.write(str,    true);    	non-compiled	[CE]  empty  character  literal	20	None	replace
92	[BUG]  [BUGGY]  out.write( "no-java-str ");  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "no-java-str ");  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "no-java-str ");	  out.write(   "no-str   ");    	non-compiled	[CE]  empty  character  literal	37	None	replace
93	[BUG]  [BUGGY]  out.write( "no-java/str ");  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "no-java/str ");  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "no-java/str ");	  out.write(   "no-str   ");    	non-compiled	[CE]  empty  character  literal	37	None	replace
94	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str,  0,  0);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  escapeJavaStyleString(out,  str,  0,  0);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str,  0,  0);	  escapeJavaStyleString(out,    str,    0);    	non-compiled	[CE]  empty  character  literal	23	None	replace
95	[BUG]  [BUGGY]  out.write( "no-string  string ");  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "no-string  string ");  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "no-string  string ");	  out.write(   "no-string   ");    	non-compiled	[CE]  empty  character  literal	36	None	replace
96	[BUG]  [BUGGY]  out.write( "JavaStyle: ");  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "JavaStyle: ");  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "JavaStyle: ");	  out.write(   "n   ");    	non-compiled	[CE]  empty  character  literal	6	None	replace
97	[BUG]  [BUGGY]  OutputStream  out  =  new  PrintStream(out,  str.length());  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  PrintStream(out,  str.length());  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  PrintStream(out,  str.length());	  if(str    ==    null)    {    out.write('n');    }    else    {    escapeJavaScript(out,    str);    }    	non-compiled	[CE]  empty  character  literal	45	None	replace
98	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream();  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream();  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  getOutputStream();	  if(str    ==    null)    {    out.write('n');    }    else    {    escapeJavaScript(out,    str);    }    	non-compiled	[CE]  empty  character  literal	45	None	replace
99	[BUG]  [BUGGY]  OutputStream  out  =  new  PrintStream(out,  0,  str.length());  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  PrintStream(out,  0,  str.length());  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  PrintStream(out,  0,  str.length());	  if(str    ==    null)    {    out.write('n');    }    else    {    escapeJavaScript(out,    str);    }    	non-compiled	[CE]  empty  character  literal	45	None	replace
100	[BUG]  [BUGGY]  out.write('  ');  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('  ');  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('  ');	  out.write('ufffd');    out.write('ufffd');    	non-compiled	[CE]  empty  character  literal	32	None	replace
101	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str,  0,  null);  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  escapeJavaStyleString(out,  str,  0,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str,  0,  null);	  escapeJavaStyleString(out,    str,    null,    0);    	non-compiled	[CE]  empty  character  literal	17	None	replace
102	[BUG]  [BUGGY]  if(out!=  null)  {  out.write('ufffd');  out.write('ufffd');  }  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  if(out!=  null)  {  out.write('ufffd');  out.write('ufffd');  }  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	if(out!=  null)  {  out.write('ufffd');  out.write('ufffd');  }	  if(str    ==    null)    {    out.write('ufffd');    out.write('ufffd');    }    	non-compiled	[CE]  empty  character  literal	28	None	replace
103	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaScript(out,  str);  }  else  {  out.write('n');  }  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaScript(out,  str);  }  else  {  out.write('n');  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJavaScript(out,  str);  }  else  {  out.write('n');  }	  StringEscapeUtils.escapeJavaScript(out,    str);    	non-compiled	[CE]  empty  character  literal	1	None	replace
104	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaScript(out,  str);  }  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaScript(out,  str);  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJavaScript(out,  str);  }	  StringEscapeUtils.escapeJavaScript(out,    str);    	non-compiled	[CE]  empty  character  literal	1	None	replace
105	[BUG]  [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaScript(out,  str);  }  else  {  out.write( "n ");  }  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  if(str  ==  null)  {  StringEscapeUtils.escapeJavaScript(out,  str);  }  else  {  out.write( "n ");  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	if(str  ==  null)  {  StringEscapeUtils.escapeJavaScript(out,  str);  }  else  {  out.write( "n ");  }	  StringEscapeUtils.escapeJavaScript(out,    str);    	non-compiled	[CE]  empty  character  literal	1	None	replace
106	[BUG]  [BUGGY]  out.write(StringEscapeUtils.EMPTY_STRING,  false);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write(StringEscapeUtils.EMPTY_STRING,  false);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write(StringEscapeUtils.EMPTY_STRING,  false);	  out.write(str,    false);    	non-compiled	[CE]  empty  character  literal	19	None	replace
107	[BUG]  [BUGGY]  out.write(StringEscapeUtils.escapeJavaScript(str),  false);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write(StringEscapeUtils.escapeJavaScript(str),  false);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write(StringEscapeUtils.escapeJavaScript(str),  false);	  out.write(str,    false);    	non-compiled	[CE]  empty  character  literal	19	None	replace
108	[BUG]  [BUGGY]  out.write('  ',  str.length());  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('  ',  str.length());  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('  ',  str.length());	  out.write('ufffd',    str.length());    	non-compiled	[CE]  empty  character  literal	31	None	replace
109	[BUG]  [BUGGY]  out.write(',',  str.length());  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write(',',  str.length());  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write(',',  str.length());	  out.write('ufffd',    str.length());    	non-compiled	[CE]  empty  character  literal	31	None	replace
110	[BUG]  [BUGGY]  if(out!=  null)  {  out.write('n');  }  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  if(out!=  null)  {  out.write('n');  }  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	if(out!=  null)  {  out.write('n');  }	  if(str    ==    null)    {    out.write('n');    }    	non-compiled	[CE]  empty  character  literal	10	None	replace
111	[BUG]  [BUGGY]  if(out!=  null)  {  out.write(str);  }  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  if(out!=  null)  {  out.write(str);  }  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	if(out!=  null)  {  out.write(str);  }	  if(str    ==    null)    {    out.write('n');    }    	non-compiled	[CE]  empty  character  literal	10	None	replace
112	[BUG]  [BUGGY]  out.write( "no  character  literal ");  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "no  character  literal ");  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "no  character  literal ");	  if(str    ==    null)    {    out.write(   "n   ");    }    else    {    escapeJavaScript(out,    str);    }    	non-compiled	[CE]  empty  character  literal	46	None	replace
113	[BUG]  [BUGGY]  out.write('  ',  str);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('  ',  str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('  ',  str);	  out.write('ufffd',    str);    	non-compiled	[CE]  empty  character  literal	4	None	replace
114	[BUG]  [BUGGY]  OutputStream  str  =  out.readFully();  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  str  =  out.readFully();  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  str  =  out.readFully();	  OutputStream    str    =    out.readLine();    	non-compiled	[CE]  empty  character  literal	47	None	replace
115	[BUG]  [BUGGY]  EscapeJavaStyleString(out,  str,  null,  out);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  EscapeJavaStyleString(out,  str,  null,  out);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	EscapeJavaStyleString(out,  str,  null,  out);	  EscapeJavaStyleString(out,    str,    null);    	non-compiled	[CE]  empty  character  literal	13	None	replace
116	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  0);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  0);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(out,  0);	  OutputStream    out    =    new    FileOutputStream(str,    0);    	non-compiled	[CE]  empty  character  literal	27	None	replace
117	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.length());  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out,  str.length());  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(out,  str.length());	  OutputStream    out    =    new    FileOutputStream(out);    	non-compiled	[CE]  empty  character  literal	39	None	replace
118	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str,  this,  out);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  escapeJavaStyleString(out,  str,  this,  out);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str,  this,  out);	  escapeJavaStyleString(out,    str,    this);    	non-compiled	[CE]  empty  character  literal	14	None	replace
119	[BUG]  [BUGGY]  out.write('ufffd');  out.write(str);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('ufffd');  out.write(str);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('ufffd');  out.write(str);	  if(str    ==    null)    {    out.write('ufffd');    out.write(str);    }    else    {    out.write('ufffd');    }    	non-compiled	[CE]  empty  character  literal	38	None	replace
120	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.toUpperCase());  [CE]  '.class'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.toUpperCase());  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(str.toUpperCase());	  OutputStream    out    =    new    FileOutputStream(str.toString());    	non-compiled	[CE]  '.class'  expected	29	None	replace
121	[BUG]  [BUGGY]  out.write( "null ").write(str,  true);  [CE]  '.class'  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "null ").write(str,  true);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "null ").write(str,  true);	  out.write(   "null   ").write(str);    	non-compiled	[CE]  '.class'  expected	35	None	replace
122	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str,  true,  null);  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  escapeJavaStyleString(out,  str,  true,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str,  true,  null);	  escapeJavaStyleString(out,    str,    false,    true);    	non-compiled	[CE]  empty  character  literal	21	None	replace
123	[BUG]  [BUGGY]  out.write(':');  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write(':');  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write(':');	  out.write('ufffd');    	non-compiled	[CE]  empty  character  literal	3	None	replace
124	[BUG]  [BUGGY]  out.write('u'  +  str);  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('u'  +  str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('u'  +  str);	  out.write('u');    	non-compiled	[CE]  empty  character  literal	48	None	replace
125	[BUG]  [BUGGY]  out.write( "u00000 ");  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "u00000 ");  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "u00000 ");	  out.write(   "u000   ");    	non-compiled	[CE]  empty  character  literal	41	None	replace
126	[BUG]  [BUGGY]  out.write( "#000 ");  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "#000 ");  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "#000 ");	  out.write(   "u000   ");    	non-compiled	[CE]  empty  character  literal	41	None	replace
127	[BUG]  [BUGGY]  out.write(str,  0,  str.length()  -  2);  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write(str,  0,  str.length()  -  2);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write(str,  0,  str.length()  -  2);	  out.write(str,    0,    str.length());    	non-compiled	[CE]  empty  character  literal	18	None	replace
128	[BUG]  [BUGGY]  out.append('ufffd');  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.append('ufffd');  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.append('ufffd');	  out.write('ufffd');    	non-compiled	[CE]  empty  character  literal	3	None	replace
129	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(str);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(str);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  getOutputStream(str);	  if(str    ==    null)    {    out.write('n');    }    else    {    escapeJavaScript(out,    str);    }    	non-compiled	[CE]  empty  character  literal	45	None	replace
130	[BUG]  [BUGGY]  OutputStream  str  =  getStyle().readLine();  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  str  =  getStyle().readLine();  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  str  =  getStyle().readLine();	  OutputStream    str    =    out.readLine();    	non-compiled	[CE]  empty  character  literal	47	None	replace
131	[BUG]  [BUGGY]  OutputStream  str  =  outputStream(out,  str);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  str  =  outputStream(out,  str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  str  =  outputStream(out,  str);	  OutputStream    str    =    out.readLine();    	non-compiled	[CE]  empty  character  literal	47	None	replace
132	[BUG]  [BUGGY]  EscapeJavaStyleString(out,  str,  null,  null);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  EscapeJavaStyleString(out,  str,  null,  null);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	EscapeJavaStyleString(out,  str,  null,  null);	  EscapeJavaStyleString(out,    str,    false,    null);    	non-compiled	[CE]  empty  character  literal	42	None	replace
133	[BUG]  [BUGGY]  out.write(str,  0,  str.length()  +  1,  str.length());  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write(str,  0,  str.length()  +  1,  str.length());  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write(str,  0,  str.length()  +  1,  str.length());	  out.write(str,    0,    str.length());    	non-compiled	[CE]  empty  character  literal	18	None	replace
134	[BUG]  [BUGGY]  out.write(String.valueOf(str));  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write(String.valueOf(str));  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write(String.valueOf(str));	  out.write(str,    false);    	non-compiled	[CE]  empty  character  literal	19	None	replace
135	[BUG]  [BUGGY]  out.write( "no-character ");  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "no-character ");  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "no-character ");	  out.write(   "no-str   ");    	non-compiled	[CE]  empty  character  literal	37	None	replace
136	[BUG]  [BUGGY]  out.append('u');  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.append('u');  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.append('u');	  out.write('u');    	non-compiled	[CE]  empty  character  literal	48	None	replace
137	[BUG]  [BUGGY]  out.write( "u0000 ");  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "u0000 ");  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "u0000 ");	  out.write(   "u000   ");    	non-compiled	[CE]  empty  character  literal	41	None	replace
138	[BUG]  [BUGGY]  if(str!=  null)  {  StringEscapeUtils.escapeJavaScript(out,  str);  }  else  {  out.write('n');  }  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  if(str!=  null)  {  StringEscapeUtils.escapeJavaScript(out,  str);  }  else  {  out.write('n');  }  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	if(str!=  null)  {  StringEscapeUtils.escapeJavaScript(out,  str);  }  else  {  out.write('n');  }	  StringEscapeUtils.escapeJavaScript(out,    str);    	non-compiled	[CE]  empty  character  literal	1	None	replace
139	[BUG]  [BUGGY]  out.write( "msg.escape.no.character ");  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "msg.escape.no.character ");  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "msg.escape.no.character ");	  if(str    ==    null)    {    out.write(   "n   ");    }    else    {    escapeJavaScript(out,    str);    }    	non-compiled	[CE]  empty  character  literal	46	None	replace
140	[BUG]  [BUGGY]  out.write( "msg.no.character ");  [CE]  empty  character  literal  [FE]                        ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "msg.no.character ");  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "msg.no.character ");	  if(str    ==    null)    {    out.write(   "n   ");    }    else    {    escapeJavaScript(out,    str);    }    	non-compiled	[CE]  empty  character  literal	46	None	replace
141	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getPath()  + ".js ");  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.getPath()  + ".js ");  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(str.getPath()  + ".js ");	  OutputStream    out    =    new    FileOutputStream(str.getPath());    	non-compiled	[CE]  empty  character  literal	7	None	replace
142	[BUG]  [BUGGY]  if(str  ==  null  ||  out.length()  ==  0)  {  out.write('n');  }  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  if(str  ==  null  ||  out.length()  ==  0)  {  out.write('n');  }  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	if(str  ==  null  ||  out.length()  ==  0)  {  out.write('n');  }	  if(str    ==    null)    {    out.write('n');    }    	non-compiled	[CE]  empty  character  literal	10	None	replace
143	[BUG]  [BUGGY]  EscapeJavaStyleString(out,  str,  this.escapeJavaStyleStrings);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  EscapeJavaStyleString(out,  str,  this.escapeJavaStyleStrings);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	EscapeJavaStyleString(out,  str,  this.escapeJavaStyleStrings);	  EscapeJavaStyleString(out,    str,    null);    	non-compiled	[CE]  empty  character  literal	13	None	replace
144	[BUG]  [BUGGY]  out.append('n');  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.append('n');  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.append('n');	  out.write('n');    	non-compiled	[CE]  empty  character  literal	9	None	replace
145	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.toExternalForm());  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str.toExternalForm());  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(str.toExternalForm());	  OutputStream    out    =    new    FileOutputStream(str.toString());    	non-compiled	[CE]  empty  character  literal	29	None	replace
146	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  out.write('ufffd');  out.write('ufffd');  }  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  out.write('ufffd');  out.write('ufffd');  }  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {  out.write('ufffd');  out.write('ufffd');  }	  if(str    ==    null)    {    out.write('ufffd');    out.write('ufffd');    }    	non-compiled	[CE]  empty  character  literal	28	None	replace
147	[BUG]  [BUGGY]  out.write('.');  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write('.');  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write('.');	  out.write('ufffd',    str);    	non-compiled	[CE]  empty  character  literal	4	None	replace
148	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.getBytes(str));  [CE]  empty  character  literal  [FE]                ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(out.getBytes(str));  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(out.getBytes(str));	  OutputStream    out    =    new    FileOutputStream(out.getBytes());    	non-compiled	[CE]  empty  character  literal	44	None	replace
149	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  3);  [CE]  empty  character  literal  [FE]                      ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  OutputStream  out  =  new  FileOutputStream(str,  3);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	OutputStream  out  =  new  FileOutputStream(str,  3);	  OutputStream    out    =    new    FileOutputStream(str,    0);    	non-compiled	[CE]  empty  character  literal	27	None	replace
150	[BUG]  [BUGGY]  out.append('-');  [CE]  empty  character  literal  [FE]            ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.append('-');  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.append('-');	  out.write('-');    	non-compiled	[CE]  empty  character  literal	33	None	replace
151	[BUG]  [BUGGY]  out.append(str);  [CE]  empty  character  literal  [FE]              ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.append(str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.append(str);	  out.write('-');    	non-compiled	[CE]  empty  character  literal	33	None	replace
152	[BUG]  [BUGGY]  out.write( "null ").print(str);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "null ").print(str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "null ").print(str);	  out.write(   "null   ").write(str);    	non-compiled	[CE]  empty  character  literal	35	None	replace
153	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str,  out);  [CE]  empty  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  escapeJavaStyleString(out,  str,  out);  [BUGGY]      }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str,  out);	  escapeJavaStyleString(out,    str,    this);    	non-compiled	[CE]  empty  character  literal	14	None	replace
154	[BUG]  [BUGGY]  out.write( "no-string ",  str);  [CE]  empty  character  literal  [FE]                    ComparisonFailure      [CONTEXT]      public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {      [BUGGY]  out.write( "no-string ",  str);  [BUGGY]      escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	out.write( "no-string ",  str);	  out.write(   "no-string   ");    	non-compiled	[CE]  empty  character  literal	36	None	replace
