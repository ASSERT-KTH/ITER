bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str,  false);  [CE]  empty  character  literal  [FE]    ComparisonFailure  [CONTEXT]  public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {  [BUGGY]  escapeJavaStyleString(out,  str,  false);  [BUGGY]  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str,  false);	escapeJavaStyleString(out,  str,  true);  	non-compiled	[CE]  empty  character  literal	3	None	replace
2	[BUG]  [BUGGY]  EscapeJavaStyleString(out,  str,  false);  [CE]  empty  character  literal  [FE]      ComparisonFailure  [CONTEXT]  public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {  [BUGGY]  EscapeJavaStyleString(out,  str,  false);  [BUGGY]  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	EscapeJavaStyleString(out,  str,  false);	escapeJavaStyleString(out,  str,  true);  	non-compiled	[CE]  empty  character  literal	3	None	replace
3	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str);  [CE]  empty  character  literal  [FE]        ComparisonFailure  [CONTEXT]  public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {  [BUGGY]  escapeJavaStyleString(out,  str);  [BUGGY]  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str);	escapeJavaStyleString(out,  str,  true);  	non-compiled	[CE]  empty  character  literal	3	None	replace
4	[BUG]  [BUGGY]  escapeJavaStyleString(out,  str,  null);  [CE]  empty  character  literal  [FE]          ComparisonFailure  [CONTEXT]  public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {  [BUGGY]  escapeJavaStyleString(out,  str,  null);  [BUGGY]  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	escapeJavaStyleString(out,  str,  null);	escapeJavaStyleString(out,  str,  true);  	non-compiled	[CE]  empty  character  literal	3	None	replace
5	[BUG]  [BUGGY]    [CE]  empty  character  literal  [FE]            ComparisonFailure  [CONTEXT]  public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {  [BUGGY]    [BUGGY]  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	  	escapeJavaStyleString(out,  str,  true);  	non-compiled	[CE]  empty  character  literal	3	None	replace
6	[BUG]  [BUGGY]    out.write(str);  [CE]  empty  character  literal  [FE]    ComparisonFailure  [CONTEXT]  public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {  [BUGGY]    out.write(str);  [BUGGY]  escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	    out.write(str);		non-compiled	[CE]  empty  character  literal	4	None	add
7	[BUG]  [BUGGY]    if(str  ==  null)  {  out.write('n');  }  else  {  out.write(str);  }  [CE]  empty  character  literal  [FE]      ComparisonFailure  [CONTEXT]  public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {  [BUGGY]    if(str  ==  null)  {  out.write('n');  }  else  {  out.write(str);  }  [BUGGY]  escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	    if(str  ==  null)  {  out.write('n');  }  else  {  out.write(str);  }		non-compiled	[CE]  empty  character  literal	4	None	add
8	[BUG]  [BUGGY]    if(str  ==  null)  {  out.write('ufffd');  }  else  {  out.write(str);  }  [CE]  empty  character  literal  [FE]        ComparisonFailure  [CONTEXT]  public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {  [BUGGY]    if(str  ==  null)  {  out.write('ufffd');  }  else  {  out.write(str);  }  [BUGGY]  escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	    if(str  ==  null)  {  out.write('ufffd');  }  else  {  out.write(str);  }		non-compiled	[CE]  empty  character  literal	4	None	add
9	[BUG]  [BUGGY]    if(str  ==  null)  {  out.write( "n ");  }  else  {  out.write(str);  }  [CE]  empty  character  literal  [FE]          ComparisonFailure  [CONTEXT]  public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {  [BUGGY]    if(str  ==  null)  {  out.write( "n ");  }  else  {  out.write(str);  }  [BUGGY]  escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	    if(str  ==  null)  {  out.write( "n ");  }  else  {  out.write(str);  }		non-compiled	[CE]  empty  character  literal	4	None	add
10	[BUG]  [BUGGY]    if(str!=  null)  {  out.write('n');  }  else  {  out.write(str);  }  [CE]  empty  character  literal  [FE]            ComparisonFailure  [CONTEXT]  public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {  [BUGGY]    if(str!=  null)  {  out.write('n');  }  else  {  out.write(str);  }  [BUGGY]  escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	    if(str!=  null)  {  out.write('n');  }  else  {  out.write(str);  }		non-compiled	[CE]  empty  character  literal	4	None	add
11	[BUG]  [BUGGY]    if(str  ==  null)  {  out.write('ufffd');  out.write('ufffd');  }  else  {  out.write('ufffd');  }  [CE]  empty  character  literal  [FE]    ComparisonFailure  [CONTEXT]  public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {  [BUGGY]    if(str  ==  null)  {  out.write('ufffd');  out.write('ufffd');  }  else  {  out.write('ufffd');  }  [BUGGY]  escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	    if(str  ==  null)  {  out.write('ufffd');  out.write('ufffd');  }  else  {  out.write('ufffd');  }		non-compiled	[CE]  empty  character  literal	4	None	add
12	[BUG]  [BUGGY]    if(str  ==  null)  {  out.write('ufffd');  }  else  {  out.write('ufffd');  }  [CE]  empty  character  literal  [FE]      ComparisonFailure  [CONTEXT]  public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {  [BUGGY]    if(str  ==  null)  {  out.write('ufffd');  }  else  {  out.write('ufffd');  }  [BUGGY]  escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	    if(str  ==  null)  {  out.write('ufffd');  }  else  {  out.write('ufffd');  }		non-compiled	[CE]  empty  character  literal	4	None	add
13	[BUG]  [BUGGY]    OutputStream  out  =  new  FileOutputStream(str);  [CE]  empty  character  literal  [FE]        ComparisonFailure  [CONTEXT]  public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {  [BUGGY]    OutputStream  out  =  new  FileOutputStream(str);  [BUGGY]  escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	    OutputStream  out  =  new  FileOutputStream(str);		non-compiled	[CE]  empty  character  literal	4	None	add
14	[BUG]  [BUGGY]    if(str  ==  null)  {  out.write( "n ");  }  else  {  out.write('n');  }  [CE]  empty  character  literal  [FE]          ComparisonFailure  [CONTEXT]  public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {  [BUGGY]    if(str  ==  null)  {  out.write( "n ");  }  else  {  out.write('n');  }  [BUGGY]  escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	    if(str  ==  null)  {  out.write( "n ");  }  else  {  out.write('n');  }		non-compiled	[CE]  empty  character  literal	4	None	add
15	[BUG]  [BUGGY]    if(str  ==  null)  {  out.write( "n ");  }  else  {  escapeJavaStyleString(out,  str,  false);  }  [CE]  empty  character  literal  [FE]    ComparisonFailure  [CONTEXT]  public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {  [BUGGY]    if(str  ==  null)  {  out.write( "n ");  }  else  {  escapeJavaStyleString(out,  str,  false);  }  [BUGGY]  escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	    if(str  ==  null)  {  out.write( "n ");  }  else  {  escapeJavaStyleString(out,  str,  false);  }		non-compiled	[CE]  empty  character  literal	4	None	add
16	[BUG]  [BUGGY]    if(str  ==  null)  {  out.write('ufffd');  out.write('ufffd');  }  else  {  out.write(str);  }  [CE]  empty  character  literal  [FE]      ComparisonFailure  [CONTEXT]  public  static  void  escapeJavaScript(Writer  out,  String  str)  throws  IOException  {  [BUGGY]    if(str  ==  null)  {  out.write('ufffd');  out.write('ufffd');  }  else  {  out.write(str);  }  [BUGGY]  escapeJavaStyleString(out,  str,  true);  }  [CLASS]  StringEscapeUtils  [METHOD]  escapeJavaScript  [RETURN_TYPE]  void  Writer  out  String  str  [VARIABLES]  boolean  String  str  Writer  out  	projects/Lang52/src/java/org/apache/commons/lang/StringEscapeUtils.java	1.0	138	138	1	replace	    if(str  ==  null)  {  out.write('ufffd');  out.write('ufffd');  }  else  {  out.write(str);  }		non-compiled	[CE]  empty  character  literal	4	None	add
