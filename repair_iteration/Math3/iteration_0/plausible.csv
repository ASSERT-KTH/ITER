123	[BUG]  [BUGGY]  final  double[]  prodHigh  =  new  double[len];  [FE]  ArrayIndexOutOfBoundsException  testLinearCombinationWithSingleElementArray  [CONTEXT]  throws  DimensionMismatchException  {  final  int  len  =  a.length;  if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }      [BUGGY]  final  double[]  prodHigh  =  new  double[len];  [BUGGY]  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double    final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime    	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	823	823	1	replace	final  double[]  prodHigh  =  new  double[len  +  1];	final  double[]  prodHigh  =  new  double[len];  	plausible		5	0
