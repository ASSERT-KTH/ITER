bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  ai  =  prodHigh  +  1;  [CE]  variable  ai  is  already  defined  in  method  linearCombination(double[],double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  ai  =  prodHigh  +  1;  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  ai  =  prodHigh  +  1;	      final    double    ai    =    ai    +    1;    	non-compiled	[CE]  variable  ai  is  already  defined  in  method  linearCombination(double[],double[])	6	None	replace
2	[BUG]  [BUGGY]  final  double  b  =  prodHigh[i]  -  1;  [CE]  variable  b  is  already  defined  in  method  linearCombination(double[],double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  b  =  prodHigh[i]  -  1;  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  b  =  prodHigh[i]  -  1;	      final    double    b    =    prodHigh[i];    	non-compiled	[CE]  variable  b  is  already  defined  in  method  linearCombination(double[],double[])	16	None	replace
3	[BUG]  [BUGGY]  final  double  aLow  =  ai  -  aHigh  +  1;  final  double  aLow  =  ai  -  aHigh  +  1;  [CE]  variable  aLow  is  already  defined  in  method  linearCombination(double[],double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  ai  -  aHigh  +  1;  final  double  aLow  =  ai  -  aHigh  +  1;  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final    double    aLow    =    ai    -    aHigh    +    1;    final  double  aLow  =  ai  -  aHigh  +  1;	  	non-compiled	[CE]  variable  aLow  is  already  defined  in  method  linearCombination(double[],double[])	1	None	add
4	[BUG]  [BUGGY]  final  double  aLow  =  ai  -  aHigh  +  1;  final  double  aLow  =  ai  -  ahigh  +  1;  [CE]  variable  aLow  is  already  defined  in  method  linearCombination(double[],double[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  ai  -  aHigh  +  1;  final  double  aLow  =  ai  -  ahigh  +  1;  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final    double    aLow    =    ai    -    aHigh    +    1;    final  double  aLow  =  ai  -  ahigh  +  1;	  	non-compiled	[CE]  variable  aLow  is  already  defined  in  method  linearCombination(double[],double[])	1	None	add
5	[BUG]  [BUGGY]  final  double  aHigh  =  ai  *  bHigh;  [CE]  variable  aHigh  is  already  defined  in  method  linearCombination(double[],double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aHigh  =  ai  *  bHigh;  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  aHigh  =  ai  *  bHigh;	      final    double    aHigh    =    ai    *    bLowSum;    	non-compiled	[CE]  variable  aHigh  is  already  defined  in  method  linearCombination(double[],double[])	9	None	replace
6	[BUG]  [BUGGY]  final  double  aHigh  =  ai  *  prodLowSum;  [CE]  variable  aHigh  is  already  defined  in  method  linearCombination(double[],double[])  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aHigh  =  ai  *  prodLowSum;  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  aHigh  =  ai  *  prodLowSum;	      final    double    aHigh    =    ai    *    bLowSum;    	non-compiled	[CE]  variable  aHigh  is  already  defined  in  method  linearCombination(double[],double[])	9	None	replace
7	[BUG]  [BUGGY]  final  double  ai  =  prodHigh.doubleValue();  [CE]  variable  ai  is  already  defined  in  method  linearCombination(double[],double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  ai  =  prodHigh.doubleValue();  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  ai  =  prodHigh.doubleValue();	      final    double    ai    =    ai.doubleValue();    	non-compiled	[CE]  variable  ai  is  already  defined  in  method  linearCombination(double[],double[])	4	None	replace
8	[BUG]  [BUGGY]  final  double  ai  =  ca.doubleValue();  [CE]  variable  ai  is  already  defined  in  method  linearCombination(double[],double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  ai  =  ca.doubleValue();  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  ai  =  ca.doubleValue();	      final    double    ai    =    ai.doubleValue();    	non-compiled	[CE]  variable  ai  is  already  defined  in  method  linearCombination(double[],double[])	4	None	replace
9	[BUG]  [BUGGY]  final  double  aLow  =  ai  -  ca;  final  double  aLow  =  ai  -  ca;  [CE]  variable  aLow  is  already  defined  in  method  linearCombination(double[],double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  ai  -  ca;  final  double  aLow  =  ai  -  ca;  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final    double    aLow    =    ai    -    ca;    final  double  aLow  =  ai  -  ca;	  	non-compiled	[CE]  variable  aLow  is  already  defined  in  method  linearCombination(double[],double[])	12	None	add
10	[BUG]  [BUGGY]  final  double  aLow  =  ai  -  ca;  final  double  aLow  =  ai  -  ca);  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  ai  -  ca;  final  double  aLow  =  ai  -  ca);  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final    double    aLow    =    ai    -    ca;    final  double  aLow  =  ai  -  ca);	  	non-compiled	[CE]  ';'  expected	12	None	add
11	[BUG]  [BUGGY]  final  double  bLow  =  prodHigh[i]  -(((prodHigh[i]  -  ai  *  bHigh))  -  ai  *  bLow);  [CE]  cannot  find  symbol  bHigh  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  bLow  =  prodHigh[i]  -(((prodHigh[i]  -  ai  *  bHigh))  -  ai  *  bLow);  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  bLow  =  prodHigh[i]  -(((prodHigh[i]  -  ai  *  bHigh))  -  ai  *  bLow);	      	non-compiled	[CE]  cannot  find  symbol  bHigh	3	None	replace
12	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  ca  -  ai;  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	add	final  double  aLow  =  ca  -  ai;	  final    double    aLow    =    ai    -    ca;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	4	replace
13	[BUG]  [BUGGY]  final  double  aLow  =  ca  -  ai;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  ca  -  ai;  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  aLow  =  ca  -  ai;	  final    double    aLow    =    ai    -    ca;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	4	replace
14	[BUG]  [BUGGY]  final  double  aLow  =  ca  -  ai);  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  ca  -  ai);  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  aLow  =  ca  -  ai);	  final    double    aLow    =    ai    -    ca;    	non-compiled	[CE]  ';'  expected	13	None	replace
15	[BUG]  [BUGGY]  final  double  b  =  prodHigh[i]  *  ai.length;  [CE]  variable  b  is  already  defined  in  method  linearCombination(double[],double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  b  =  prodHigh[i]  *  ai.length;  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  b  =  prodHigh[i]  *  ai.length;	      final    double    b    =    prodHigh[i]    *    b.length;    	non-compiled	[CE]  variable  b  is  already  defined  in  method  linearCombination(double[],double[])	15	None	replace
16	[BUG]  [BUGGY]  final  double  ai  =  prodHigh[i]  *  bLowSum;  [CE]  variable  ai  is  already  defined  in  method  linearCombination(double[],double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  ai  =  prodHigh[i]  *  bLowSum;  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  ai  =  prodHigh[i]  *  bLowSum;	      final    double    ai    =    prodHigh[i];    	non-compiled	[CE]  variable  ai  is  already  defined  in  method  linearCombination(double[],double[])	5	None	replace
17	[BUG]  [BUGGY]  final  double  aLow  =  ai  *  aHigh;  final  double  aLow  =  ai  *  aHigh;  [CE]  variable  aLow  is  already  defined  in  method  linearCombination(double[],double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  ai  *  aHigh;  final  double  aLow  =  ai  *  aHigh;  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final    double    aLow    =    ai    *    aHigh;    final  double  aLow  =  ai  *  aHigh;	  	non-compiled	[CE]  variable  aLow  is  already  defined  in  method  linearCombination(double[],double[])	10	None	add
18	[BUG]  [BUGGY]  final  double  aLow  =  ai  *  aHigh;  Final  double  aLow  =  ai  *  aHigh;  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  ai  *  aHigh;  Final  double  aLow  =  ai  *  aHigh;  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final    double    aLow    =    ai    *    aHigh;    Final  double  aLow  =  ai  *  aHigh;	  	non-compiled	[CE]  not  a  statement	10	None	add
19	[BUG]  [BUGGY]  final  double  bHigh  =  ai  *  bHigh;  [CE]  variable  bHigh  is  already  defined  in  method  linearCombination(double[],double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  bHigh  =  ai  *  bHigh;  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  bHigh  =  ai  *  bHigh;	      final    double    bHigh    =    ai    *    bLow;    	non-compiled	[CE]  variable  bHigh  is  already  defined  in  method  linearCombination(double[],double[])	8	None	replace
20	[BUG]  [BUGGY]  final  double  bHigh  =  ai  *  bHighSum;  [CE]  cannot  find  symbol  bHighSum  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  bHigh  =  ai  *  bHighSum;  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  bHigh  =  ai  *  bHighSum;	      final    double    bHigh    =    ai    *    bLow;    	non-compiled	[CE]  cannot  find  symbol  bHighSum	8	None	replace
21	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  ai  -  aHigh  +  2;  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	add	final  double  aLow  =  ai  -  aHigh  +  2;	  final    double    aLow    =    ai    -    aHigh    +    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	4	replace
22	[BUG]  [BUGGY]  final  double  aLow  =  ai  -  aHigh  +  2;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  ai  -  aHigh  +  2;  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  aLow  =  ai  -  aHigh  +  2;	  final    double    aLow    =    ai    -    aHigh    +    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	4	replace
23	[BUG]  [BUGGY]  final  double  aHigh  =  ai  *  bHighSum;  [CE]  variable  aHigh  is  already  defined  in  method  linearCombination(double[],double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aHigh  =  ai  *  bHighSum;  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  aHigh  =  ai  *  bHighSum;	      final    double    aHigh    =    ai    *    bLow;    	non-compiled	[CE]  variable  aHigh  is  already  defined  in  method  linearCombination(double[],double[])	7	None	replace
24	[BUG]  [BUGGY]  final  double  bi  =  prodHigh[i];  [CE]  variable  bi  is  already  defined  in  method  linearCombination(double[],double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  bi  =  prodHigh[i];  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  bi  =  prodHigh[i];	      final    double    bi    =    b[i];    	non-compiled	[CE]  variable  bi  is  already  defined  in  method  linearCombination(double[],double[])	14	None	replace
25	[BUG]  [BUGGY]  final  double  bi  =  ai[i];  [CE]  array  required,  but  double  found  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  bi  =  ai[i];  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  bi  =  ai[i];	      final    double    bi    =    b[i];    	non-compiled	[CE]  array  required,  but  double  found	14	None	replace
26	[BUG]  [BUGGY]  final  double  aLow  =  ai  *  aHighSum;  [CE]  cannot  find  symbol  aHighSum  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  ai  *  aHighSum;  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  aLow  =  ai  *  aHighSum;	  final    double    aLow    =    ai    *    aHigh;    	non-compiled	[CE]  cannot  find  symbol  aHighSum	11	None	replace
27	[BUG]  [BUGGY]  final  double  b  =  prodHigh[i]  *  bLowSum;  [CE]  variable  b  is  already  defined  in  method  linearCombination(double[],double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  b  =  prodHigh[i]  *  bLowSum;  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  b  =  prodHigh[i]  *  bLowSum;	      final    double    b    =    prodHigh[i];    	non-compiled	[CE]  variable  b  is  already  defined  in  method  linearCombination(double[],double[])	16	None	replace
28	[BUG]  [BUGGY]  final  double  b  =  prodHigh[i]  +  b;  [CE]  variable  b  is  already  defined  in  method  linearCombination(double[],double[])  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  b  =  prodHigh[i]  +  b;  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  b  =  prodHigh[i]  +  b;	      final    double    b    =    prodHigh[i];    	non-compiled	[CE]  variable  b  is  already  defined  in  method  linearCombination(double[],double[])	16	None	replace
29	[BUG]  [BUGGY]  final  double  aLow  =  ai  *  bHigh;  [CE]  cannot  find  symbol  bHigh  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  ai  *  bHigh;  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  aLow  =  ai  *  bHigh;	  final    double    aLow    =    ai    *    aHigh;    	non-compiled	[CE]  cannot  find  symbol  bHigh	11	None	replace
30	[BUG]  [BUGGY]  final  double  aLow  =  ai  *  bLowSum;  [CE]  cannot  find  symbol  bLowSum  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  ai  *  bLowSum;  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  aLow  =  ai  *  bLowSum;	  final    double    aLow    =    ai    *    aHigh;    	non-compiled	[CE]  cannot  find  symbol  bLowSum	11	None	replace
31	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  ai  *  aHigh  +  1;  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	add	final  double  aLow  =  ai  *  aHigh  +  1;	  final    double    aLow    =    ai    -    aHigh    +    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	4	replace
32	[BUG]  [BUGGY]  final  double  aLow  =  ai  *  aHigh  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  ai  *  aHigh  +  1;  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  aLow  =  ai  *  aHigh  +  1;	  final    double    aLow    =    ai    -    aHigh    +    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	4	replace
33	[BUG]  [BUGGY]  final  double  bHigh  =  ai  *  bLowSum;  [CE]  cannot  find  symbol  bLowSum  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  bHigh  =  ai  *  bLowSum;  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  bHigh  =  ai  *  bLowSum;	      final    double    bHigh    =    ai    *    bLow;    	non-compiled	[CE]  cannot  find  symbol  bLowSum	8	None	replace
34	[BUG]  [BUGGY]  final  double  aLow  =  ai  -  ca;  Final  double  aLow  =  ai  -  ca;  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  ai  -  ca;  Final  double  aLow  =  ai  -  ca;  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final    double    aLow    =    ai    -    ca;    Final  double  aLow  =  ai  -  ca;	  	non-compiled	[CE]  not  a  statement	12	None	add
35	[BUG]  [BUGGY]  final  double  aLow  =  CA  -  ai;  [CE]  cannot  find  symbol  CA  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  CA  -  ai;  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  aLow  =  CA  -  ai;	  final    double    aLow    =    ai    -    ca;    	non-compiled	[CE]  cannot  find  symbol  CA	13	None	replace
36	[BUG]  [BUGGY]  final  double  ai  =  prodHigh[i]  +  b;  [CE]  variable  ai  is  already  defined  in  method  linearCombination(double[],double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  ai  =  prodHigh[i]  +  b;  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  ai  =  prodHigh[i]  +  b;	      final    double    ai    =    prodHigh[i];    	non-compiled	[CE]  variable  ai  is  already  defined  in  method  linearCombination(double[],double[])	5	None	replace
37	[BUG]  [BUGGY]  final  double  bLow  =  prodHigh[i];  [CE]  variable  bLow  is  already  defined  in  method  linearCombination(double[],double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  bLow  =  prodHigh[i];  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  bLow  =  prodHigh[i];	      	non-compiled	[CE]  variable  bLow  is  already  defined  in  method  linearCombination(double[],double[])	3	None	replace
38	[BUG]  [BUGGY]  final  double  aHigh  =  ai  *  prodHighSum;  [CE]  variable  aHigh  is  already  defined  in  method  linearCombination(double[],double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aHigh  =  ai  *  prodHighSum;  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  aHigh  =  ai  *  prodHighSum;	      final    double    aHigh    =    ai    *    bLowSum;    	non-compiled	[CE]  variable  aHigh  is  already  defined  in  method  linearCombination(double[],double[])	9	None	replace
39	[BUG]  [BUGGY]  final  double  b  =  prodHigh[i]  *  ai;  [CE]  variable  b  is  already  defined  in  method  linearCombination(double[],double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  b  =  prodHigh[i]  *  ai;  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  b  =  prodHigh[i]  *  ai;	      final    double    b    =    prodHigh[i]    *    b.length;    	non-compiled	[CE]  variable  b  is  already  defined  in  method  linearCombination(double[],double[])	15	None	replace
40	[BUG]  [BUGGY]  final  double  ai  =  prodHigh[i]  -  1;  [CE]  variable  ai  is  already  defined  in  method  linearCombination(double[],double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  ai  =  prodHigh[i]  -  1;  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  ai  =  prodHigh[i]  -  1;	      final    double    ai    =    prodHigh[i];    	non-compiled	[CE]  variable  ai  is  already  defined  in  method  linearCombination(double[],double[])	5	None	replace
41	[BUG]  [BUGGY]  final  double  bi  =  prodHigh[i]  -  (prodHigh[i]  -  ai);  [CE]  variable  bi  is  already  defined  in  method  linearCombination(double[],double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  bi  =  prodHigh[i]  -  (prodHigh[i]  -  ai);  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  bi  =  prodHigh[i]  -  (prodHigh[i]  -  ai);	      	non-compiled	[CE]  variable  bi  is  already  defined  in  method  linearCombination(double[],double[])	3	None	replace
42	[BUG]  [BUGGY]  final  double  b  =  prodHigh[i]  -  (prodHigh[i]  -  ai);  [CE]  variable  b  is  already  defined  in  method  linearCombination(double[],double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  b  =  prodHigh[i]  -  (prodHigh[i]  -  ai);  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  b  =  prodHigh[i]  -  (prodHigh[i]  -  ai);	      	non-compiled	[CE]  variable  b  is  already  defined  in  method  linearCombination(double[],double[])	3	None	replace
43	[BUG]  [BUGGY]  final  double  aHigh  =  ai  *  ca;  [CE]  variable  aHigh  is  already  defined  in  method  linearCombination(double[],double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aHigh  =  ai  *  ca;  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  aHigh  =  ai  *  ca;	      final    double    aHigh    =    ai    *    bLowSum;    	non-compiled	[CE]  variable  aHigh  is  already  defined  in  method  linearCombination(double[],double[])	9	None	replace
44	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  ca  /  ai;  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	add	final  double  aLow  =  ca  /  ai;	  final    double    aLow    =    ai    -    ca;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	4	replace
45	[BUG]  [BUGGY]  final  double  aLow  =  ca  /  ai;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  aLow  =  ca  /  ai;  [BUGGY]      final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  aLow  =  ca  /  ai;	  final    double    aLow    =    ai    -    ca;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	4	replace
46	[BUG]  [BUGGY]  final  double  ai  =  ai  +  2;  [CE]  variable  ai  is  already  defined  in  method  linearCombination(double[],double[])  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);    [BUGGY]  final  double  ai  =  ai  +  2;  [BUGGY]    final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;  final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	830	830	1	replace	final  double  ai  =  ai  +  2;	      final    double    ai    =    ai    +    1;    	non-compiled	[CE]  variable  ai  is  already  defined  in  method  linearCombination(double[],double[])	6	None	replace
