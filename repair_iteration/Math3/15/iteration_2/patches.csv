bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aHigh  *  bHigh)  -  aHigh  *  bHigh);  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aHigh  *  bHigh)  -  aHigh  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aHigh  *  bHigh)  -  aHigh  *  bHigh);	  final    double    bLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aHigh    *    bHigh)-    aHigh    *    bHigh)-    aHigh    *    bHigh);    	non-compiled	[CE]  not  a  statement	1	None	replace
2	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
3	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
4	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aHigh  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    aHigh    *    bHigh);    	non-compiled	[CE]  not  a  statement	17	None	replace
5	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    2)-    aLow    *    2)-    final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
6	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    2)-    aLow    *    2)-    double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  	non-compiled	[CE]  '.class'  expected	26	None	add
7	[BUG]  [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh);  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh);	  final    double    bLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh);    	non-compiled	[CE]  not  a  statement	56	None	replace
8	[BUG]  [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aI  *  bHigh)  -  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aI  *  bHigh)  -  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aI  *  bHigh)  -  aHigh  *  bHigh)-  aLow  *  bHigh);	  final    double    bLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	56	None	replace
9	[BUG]  [BUGGY]  double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	  double    bHigh    =    prodHigh[i]    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aHigh    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh);    	non-compiled	[CE]  not  a  statement	57	None	replace
10	[BUG]  [BUGGY]  double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);	  double    bHigh    =    prodHigh[i]    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aHigh    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	57	None	replace
11	[BUG]  [BUGGY]  final  double  prodLowSum  =  bi  *  ai  +  1;  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLowSum  =  bi  *  ai  +  1;  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLowSum  =  bi  *  ai  +  1;	  final    double    prodLowSum    =    bi    *    ai;    	non-compiled	[CE]  not  a  statement	6	None	replace
12	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
13	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
14	[BUG]  [BUGGY]  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    bLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
15	[BUG]  [BUGGY]  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    bLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
16	[BUG]  [BUGGY]  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodHigh  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodHigh  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    bLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final  double  prodHigh  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
17	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-	  final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	55	4	replace
18	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-	  final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	55	4	replace
19	[BUG]  [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aLow  *  bHigh)  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aLow  *  bHigh)  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aLow  *  bHigh)  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	  final    double    bHigh    =    bHigh    -    (((prodHigh[i]    -    aLow    *    bHigh)-    aHigh    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	25	None	replace
20	[BUG]  [BUGGY]  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafeteSum    =    ai    *    bLow    	non-compiled	[CE]  ';'  expected	22	None	replace
21	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafeteSum    =    ai    *    bLow    	non-compiled	[CE]  ')'  expected	22	None	replace
22	[BUG]  [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bHigh)/  aHigh  *  bHigh  *  bHigh);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bHigh)/  aHigh  *  bHigh  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bHigh)/  aHigh  *  bHigh  *  bHigh);	  final    double    bLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    aHigh    *    bHigh)-    aHigh    *    bHigh    *    bHigh);    	non-compiled	[CE]  ';'  expected	41	None	replace
23	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  ')'  expected	52	None	replace
24	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  ')'  expected	52	None	replace
25	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    bHigh    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
26	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    bHigh    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
27	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    1)-    aLow    *    2)-    final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
28	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    1)-    aLow    *    2)-    double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-	  	non-compiled	[CE]  '.class'  expected	28	None	add
29	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final    double    aLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
30	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final    double    aLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
31	[BUG]  [BUGGY]  2.0  -  (((prodLow[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  2.0  -  (((prodLow[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	2.0  -  (((prodLow[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafeteSum    =    aLow    *    bHigh    	non-compiled	[CE]  ')'  expected	9	None	replace
32	[BUG]  [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh);	  final    double    bHigh    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	11	None	replace
33	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
34	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final  double  prodHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
35	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafeteSum  =  aHigh  *  bHigh  -  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafeteSum  =  aHigh  *  bHigh  -  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafeteSum  =  aHigh  *  bHigh  -	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
36	[BUG]  [BUGGY]  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);	  final    double    bHigh    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    aHigh    *    bHigh);    	non-compiled	[CE]  not  a  statement	12	None	replace
37	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final    double    bHigh    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
38	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final    double    bHigh    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
39	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    2)-    aLow    *    2)-    final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
40	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    2)-    aLow    *    2)-    final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
41	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [CE]  '.class'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    2)-    aLow    *    2)-    double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  	non-compiled	[CE]  '.class'  expected	32	None	add
42	[BUG]  [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aLow  *  bHigh))  -  aHigh  *  bHigh)-  aHigh  *  bHigh);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aLow  *  bHigh))  -  aHigh  *  bHigh)-  aHigh  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aLow  *  bHigh))  -  aHigh  *  bHigh)-  aHigh  *  bHigh);	  final    double    bHigh    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh))    -    aLow    *    bHigh)-    aHigh    *    bHigh);    	non-compiled	[CE]  ';'  expected	13	None	replace
43	[BUG]  [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aItem  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aItem  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aItem  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	  final    double    bHigh    =    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aItem    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	51	None	replace
44	[BUG]  [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh);  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh);	  final    double    bHigh    =    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aItem    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh);    	non-compiled	[CE]  not  a  statement	51	None	replace
45	[BUG]  [BUGGY]  double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);	  double    bHigh    =    prodHigh[i]    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh)-    aHigh    *    bHigh);    	non-compiled	[CE]  not  a  statement	3	None	replace
46	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  ai  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  ai  *  bHigh)-	  final    double    prodLow    =    ai    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	4	replace
47	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  ai  *  bHigh)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  ai  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  ai  *  bHigh)-	  final    double    prodLow    =    ai    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	4	replace
48	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  ')'  expected	53	None	replace
49	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  ')'  expected	53	None	replace
50	[BUG]  [BUGGY]  2.0  -  (((prodLow[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  2.0  -  (((prodLow[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	2.0  -  (((prodLow[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafeteSum    =    aLow    *    bHigh    	non-compiled	[CE]  ')'  expected	20	None	replace
51	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodHigh    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
52	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodHigh    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
53	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    aLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
54	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    aLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
55	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
56	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
57	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodHigh  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodHigh  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final  double  prodHigh  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
58	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [CE]  '.class'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  	non-compiled	[CE]  '.class'  expected	35	None	add
59	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  ')'  expected	23	None	replace
60	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  bLow  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  bLow  *  bHigh)-	  final    double    prodLow    =    bLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	4	replace
61	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  bLow  *  bHigh)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  bLow  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  bLow  *  bHigh)-	  final    double    prodLow    =    bLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	4	replace
62	[BUG]  [BUGGY]  double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aLow  *  bHigh)/  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aLow  *  bHigh)/  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aLow  *  bHigh)/  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	  double    bHigh    =    prodHigh[i]    -    (((prodHigh[i]    -    aLow    *    bHigh)-    aHigh    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	34	None	replace
63	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
64	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
65	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  ')'  expected	8	None	replace
66	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    bLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
67	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    bLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
68	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);	  final    double    prodLow    =    ai    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  not  a  statement	16	None	replace
69	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
70	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final  double  prodHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
71	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [CE]  '.class'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  	non-compiled	[CE]  '.class'  expected	49	None	add
72	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    2)-    aLow    *    2)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	4	replace
73	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    2)-    aLow    *    2)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	4	replace
74	[BUG]  [BUGGY]  final  double  prodLowSum  +=  prodHigh;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLowSum  +=  prodHigh;  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLowSum  +=  prodHigh;	  final    double    prodLowSum    +=    bHigh;    	non-compiled	[CE]  ';'  expected	44	None	replace
75	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
76	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodHigh  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodHigh  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final  double  prodHigh  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
77	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [CE]  '.class'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  	non-compiled	[CE]  '.class'  expected	15	None	add
78	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    1)-    aLow    *    2)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	29	4	replace
79	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    1)-    aLow    *    2)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	29	4	replace
80	[BUG]  [BUGGY]  final  double  prodLowSum  +=  sPrimeme;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLowSum  +=  sPrimeme;  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLowSum  +=  sPrimeme;	  final    double    prodLowSum    +=    sHighPrev;    	non-compiled	[CE]  ';'  expected	5	None	replace
81	[BUG]  [BUGGY]  final  double  prodLowSum  +=  aHigh;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLowSum  +=  aHigh;  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLowSum  +=  aHigh;	  final    double    prodLowSum    +=    bHigh;    	non-compiled	[CE]  ';'  expected	44	None	replace
82	[BUG]  [BUGGY]  final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
83	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
84	[BUG]  [BUGGY]  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  bHigh  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  bHigh  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    bLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final  double  bHigh  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
85	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  bLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    2)-    aLow    *    2)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	4	replace
86	[BUG]  [BUGGY]  final  double  prodLow  =  bLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  bLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    2)-    aLow    *    2)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	4	replace
87	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
88	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
89	[BUG]  [BUGGY]  final  double  prodLowSum  +=  sPrime;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLowSum  +=  sPrime;  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLowSum  +=  sPrime;	  final    double    prodLowSum    +=    sHighPrev;    	non-compiled	[CE]  ';'  expected	5	None	replace
90	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  '.class'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  '.class'  expected	23	None	replace
91	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  '.class'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  '.class'  expected	23	None	replace
92	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
93	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
94	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final    double    bHigh    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
95	[BUG]  [BUGGY]  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	  final    double    bHigh    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	11	None	replace
96	[BUG]  [BUGGY]  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri  linguri	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafeteSum    =    aLow    *    bHigh    	non-compiled	[CE]  ';'  expected	9	None	replace
97	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bHigh  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  bHigh  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    2)-    aLow    *    2)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	4	replace
98	[BUG]  [BUGGY]  final  double  prodLow  =  bHigh  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bHigh  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  bHigh  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    2)-    aLow    *    2)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	4	replace
99	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  '.class'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aHigh  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  '.class'  expected	52	None	replace
100	[BUG]  [BUGGY]  final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  '.class'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  '.class'  expected	52	None	replace
101	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    2)-    aLow    *    2)-    final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
102	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    2)-    aLow    *    2)-    final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
103	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bi.prodLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  bi.prototype  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aLow  *  bi.prodLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  bi.prototype  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aLow  *  bi.prodLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  bi.prototype  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafeteSum    =    aLow    *    bHigh    	non-compiled	[CE]  ')'  expected	20	None	replace
104	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  '.class'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  '.class'  expected	53	None	replace
105	[BUG]  [BUGGY]  final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  '.class'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  '.class'  expected	53	None	replace
106	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    bHigh    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
107	[BUG]  [BUGGY]  final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    bHigh    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
108	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final    double    aLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
109	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final    double    aLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
110	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bHigh  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bHigh  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final  double  bHigh  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
111	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  bLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    1)-    aLow    *    2)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	29	4	replace
112	[BUG]  [BUGGY]  final  double  prodLow  =  bLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  bLow  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    1)-    aLow    *    2)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	29	4	replace
113	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    aLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
114	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  aLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    aLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
115	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  ai  *  bHigh)-  aLow  *  bHigh)  -  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  ai  *  bHigh)-  aLow  *  bHigh)  -	  final    double    prodLow    =    bLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	3	replace
116	[BUG]  [BUGGY]  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  ai  *  bHigh)-  aLow  *  bHigh)  -  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  ai  *  bHigh)-  aLow  *  bHigh)  -  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  ai  *  bHigh)-  aLow  *  bHigh)  -	  final    double    prodLow    =    bLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	3	replace
117	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  aHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  aHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final  double  aHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
118	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh	  final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  ')'  expected	50	None	replace
119	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
120	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
121	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
122	[BUG]  [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh  *  bHigh);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh  *  bHigh);	  final    double    bLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aHigh    *    bHigh)-    aHigh    *    bHigh)-    aHigh    *    bHigh    *    bHigh);    	non-compiled	[CE]  ';'  expected	43	None	replace
123	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  ai  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  ai  *  2)-	  final    double    prodLow    =    ai    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	4	replace
124	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  ai  *  2)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  ai  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  ai  *  2)-	  final    double    prodLow    =    ai    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	4	replace
125	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  bHigh  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  bHigh  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final  double  bHigh  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
126	[BUG]  [BUGGY]  final  double  bLow  =  aItem  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aItem  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bLow  =  aItem  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aItem  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aItem  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aItem  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	  final    double    bLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aItem    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	2	None	replace
127	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodHigh    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
128	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodHigh    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
129	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    bLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
130	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    bLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
131	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  aHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  aHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final  double  aHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
132	[BUG]  [BUGGY]  double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)/  aLow  *  bHigh);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)/  aLow  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh)/  aLow  *  bHigh);	  double    bHigh    =    prodHigh[i]    -    (((prodHigh[i]    -    aLow    *    bHigh)-    aHigh    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	34	None	replace
133	[BUG]  [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh  *  bHigh);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh  *  bHigh);	  final    double    bLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    aHigh    *    bHigh)-    aHigh    *    bHigh    *    bHigh);    	non-compiled	[CE]  ';'  expected	41	None	replace
134	[BUG]  [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aHigh  *  bHigh);  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aHigh  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aHigh  *  bHigh);	  final    double    bHigh    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    aHigh    *    bHigh);    	non-compiled	[CE]  not  a  statement	12	None	replace
135	[BUG]  [BUGGY]  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bLow);  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bLow);  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bLow);	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    aHigh    *    bHigh);    	non-compiled	[CE]  not  a  statement	17	None	replace
136	[BUG]  [BUGGY]  final  double  prodLowSum  =  bi  *  bLow;  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLowSum  =  bi  *  bLow;  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLowSum  =  bi  *  bLow;	  final    double    prodLowSum    =    bi    *    ai;    	non-compiled	[CE]  not  a  statement	6	None	replace
137	[BUG]  [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aLow  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh);	  final    double    bLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    aHigh    *    bHigh)-    aHigh    *    bHigh);    	non-compiled	[CE]  ';'  expected	42	None	replace
138	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    1)-    aLow    *    2)-    final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
139	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    1)-    aLow    *    2)-    final  double  prodHigh  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  1)-  aLow  *  2)-	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
140	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  final    double    prodLow    =    ai    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	4	replace
141	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  final    double    prodLow    =    ai    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	4	replace
142	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aLow  *  bHigh)-  aHigh  *  bHigh)  -  aLow  *  bHigh);  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aLow  *  bHigh)-  aHigh  *  bHigh)  -  aLow  *  bHigh);  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aLow  *  bHigh)-  aHigh  *  bHigh)  -  aLow  *  bHigh);	  final    double    prodLow    =    ai    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  not  a  statement	16	None	replace
143	[BUG]  [BUGGY]  final  double  prodLowSum  =  bHigh  *  bHigh;  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLowSum  =  bHigh  *  bHigh;  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLowSum  =  bHigh  *  bHigh;	  final    double    prodLowSum    =    bHigh    *    ai;    	non-compiled	[CE]  not  a  statement	24	None	replace
144	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    2)-    aLow    *    2)-    final  double  bHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
145	[BUG]  [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  final  double  prodHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  final  double  prodHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    2)-    aLow    *    2)-    final  double  prodHigh  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
146	[BUG]  [BUGGY]  2.0  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  2.0  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	2.0  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafeteSum    =    aLow    *    bHigh    	non-compiled	[CE]  ')'  expected	20	None	replace
147	[BUG]  [BUGGY]  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    aHigh    *    bHigh);    	non-compiled	[CE]  not  a  statement	17	None	replace
148	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  ')'  expected	19	None	replace
149	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  ')'  expected	19	None	replace
150	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  ')'  expected	7	None	replace
151	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  ')'  expected	7	None	replace
152	[BUG]  [BUGGY]  final  double  bHigh  =  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aItem  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bHigh  =  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aItem  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bHigh  =  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aItem  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	  final    double    bHigh    =    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aItem    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	51	None	replace
153	[BUG]  [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aHigh  *  bHigh);	  final    double    bLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aHigh    *    bHigh)-    aHigh    *    bHigh)-    aHigh    *    bHigh);    	non-compiled	[CE]  ';'  expected	1	None	replace
154	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    2)-    aLow    *    2)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	4	replace
155	[BUG]  [BUGGY]  final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  2)-  aLow  *  2)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    2)-    aLow    *    2)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	4	replace
156	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bHigh  *  aHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  bHigh  *  aHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	50	4	replace
157	[BUG]  [BUGGY]  final  double  prodLow  =  bHigh  *  aHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bHigh  *  aHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  bHigh  *  aHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	50	4	replace
158	[BUG]  [BUGGY]  2.0  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  2.0  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	2.0  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete  suprafete	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafete    suprafeteSum    =    aLow    *    bHigh    	non-compiled	[CE]  ')'  expected	9	None	replace
159	[BUG]  [BUGGY]  final  double  bLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    bLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
160	[BUG]  [BUGGY]  final  double  prodLowSum  -=  bi  *  ai;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLowSum  -=  bi  *  ai;  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLowSum  -=  bi  *  ai;	  final    double    prodLowSum    =    bi    *    ai;    	non-compiled	[CE]  ';'  expected	6	None	replace
161	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  ')'  expected	21	None	replace
162	[BUG]  [BUGGY]  double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	double  bHigh  =  prodHigh[i]  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	  double    bHigh    =    prodHigh[i]    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aHigh    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	57	None	replace
163	[BUG]  [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aLow  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aLow  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aLow  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	  final    double    bHigh    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	11	None	replace
164	[BUG]  [BUGGY]  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [CE]  '.class'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    bLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  	non-compiled	[CE]  '.class'  expected	37	None	add
165	[BUG]  [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aHigh  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	  final    double    bLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aHigh    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	48	None	replace
166	[BUG]  [BUGGY]  final  double  bLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh);	  final    double    bLow    =    aHigh    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	14	None	replace
167	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [CE]  '.class'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  	non-compiled	[CE]  '.class'  expected	54	None	add
168	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
169	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [CE]  '.class'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  '.class'  expected	52	None	replace
170	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  [CE]  '.class'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  '.class'  expected	52	None	replace
171	[BUG]  [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aItem  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aItem  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aItem  *  bHigh)-  aHigh  *  bHigh)-  aLow  *  bHigh);	  final    double    bLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aItem    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh);    	non-compiled	[CE]  ';'  expected	2	None	replace
172	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  ')'  expected	18	None	replace
173	[BUG]  [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)/  aHigh  *  bHigh)-  aLow  *  bHigh)-  aHigh  *  bHigh);	  final    double    bHigh    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aHigh    *    bHigh)-    aLow    *    bHigh)-    aHigh    *    bHigh);    	non-compiled	[CE]  ';'  expected	10	None	replace
174	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  ai  *  bHigh)-  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  ai  *  bHigh)-  aHigh  *  bHigh)-	  final    double    prodLow    =    bLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	4	replace
175	[BUG]  [BUGGY]  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  ai  *  bHigh)-  aHigh  *  bHigh)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  ai  *  bHigh)-  aHigh  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  bLow  *  bHigh  -  (((prodHigh[i]  -  ai  *  bHigh)-  aHigh  *  bHigh)-	  final    double    prodLow    =    bLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	4	replace
176	[BUG]  [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    final  double  bHigh  =  aHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
177	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  [CE]  '.class'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  double  prodLow  =  aLow  *  bHigh  -  (((prodHigh[i]  -  aHigh  *	  final    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    double    prodLow    =    aLow    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	non-compiled	[CE]  '.class'  expected	53	None	replace
178	[BUG]  [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  [CE]  '.class'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  ai  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  aLow  *  bHigh)-  double  prodLow  =  ai  *  bLow  -  (((prodHigh[i]  -  aHigh  *	  final    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    double    prodLow    =    ai    *    bLow    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    aLow    *    bHigh)-    	non-compiled	[CE]  '.class'  expected	23	None	replace
179	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	add	final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	55	4	replace
180	[BUG]  [BUGGY]  final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-  [BUGGY]      aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLow  =  bHigh  *  bHigh  -  (((prodHigh[i]  -  aHigh  *  bHigh)-  ai  *  bHigh)-	  final    double    prodLow    =    aHigh    *    bHigh    -    (((prodHigh[i]    -    aHigh    *    bHigh)-    ai    *    bHigh)-    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	55	4	replace
181	[BUG]  [BUGGY]  final  double  prodLowSum  -=  bHigh;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      final  double  ai  =  a[i];  final  double  ca  =  SPLIT_FACTOR  *  ai;  final  double  aHigh  =  ca  -  (ca  -  ai);  final  double  aLow  =  ai  -  aHigh;  final  double  bi  =  b[i];  final  double  cb  =  SPLIT_FACTOR  *  bi;  final  double  bHigh  =  cb  -  (cb  -  bi);  final  double  bLow  =  bi  -  bHigh;  prodHigh[i]  =  ai  *  bi;      [BUGGY]  final  double  prodLowSum  -=  bHigh;  [BUGGY]      final  double  prodLow  =  aLow  *  bLow  -  (((prodHigh[i]  -              aHigh  *  bHigh)  -                          aLow  *  bHigh)  -  aHigh  *  bHigh)  -  aLow  *  bHigh)  -  aHigh  *  bLow);  prodLowSum  +=  prodLow;  }  final  double  prodHighCur  =  prodHigh[0];  double  prodHighNext  =  prodHigh[1];  double  sHighPrev  =  prodHighCur  +  prodHighNext;  [CLASS]  MathArrays  OrderDirection  1  2  [METHOD]  linearCombination  [RETURN_TYPE]  double  final  double[]  a  final  double[]  b  [VARIABLES]  boolean  double[]  a  b  prodHigh  int  SPLIT_FACTOR  comp  i  index  j  len  lenMinusOne  max  numElements  startIndex  sum  yListLen  OrderDirection  DECREASING  INCREASING  dir  double  aHigh  aLow  ai  bHigh  bLow  bi  ca  cb  prodHighCur  prodHighNext  prodLow  prodLowSum  result  sHighCur  sHighPrev  sLowSum  sPrime  	projects/Math3/src/main/java/org/apache/commons/math3/util/MathArrays.java	0.5	837	839	1	replace	final  double  prodLowSum  -=  bHigh;	  final    double    prodLowSum    +=    bHigh;    	non-compiled	[CE]  ';'  expected	44	None	replace
