projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkNotNull(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkNotNull(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite(),divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite()||divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isNaN(),divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkArgument(divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkNotNull(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkNotNull(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){divisor=newComplex(real);}else{divisor.add(real);}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null){divisor=Complex.ZERO;}else{divisor=Complex.ZERO;break;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){divisor=newComplex(real);}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkNotNull(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkArgument(divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator(real,imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real,imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real),imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real,imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real),imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor.isNaN()||divisor.isNaN()){thrownewIllegalArgumentException("");}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor.isInfinite()||divisor.isInfinite()){thrownewIllegalArgumentException("");}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(isNaN||divisor.isNaN){thrownewIllegalArgumentException("");}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor.isNaN()||divisor.isNaN()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor,imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor,real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite()&&divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite()||divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isNaN()||divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite(),divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isNaN(),divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isNaN(),divisor.isNaN()||divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||(divisor!=null&&divisor.isInfinite())){
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<?>divisor=newComplex(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||(divisor!=null&&divisor.isNaN())){
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkNotNull(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getINFDenominator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkArgument(divisor.isInfinite()||divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkArgument(divisor.isInfinite()&&divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkArgument(divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(real!=null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor!=null){divisor=newComplex(real);}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor==null){divisor=newComplex(real);}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<divisor>=newComplex(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<divisor||divisor!=null){divisor=newComplex(real);}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor.isInfinite()){MathUtils.checkState(divisor.isInfinite());}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor==Complex.ZERO||divisor!=Complex.ZERO||divisor!=Complex.ZERO){
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkState(divisor==null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor==Complex.ZERO||divisor!=Complex.ZERO||divisor!=Complex.ZERO){break;
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkState(divisor!=null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite(),imaginary.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkNotNull(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkArgument(divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableTokenBufferdivisor=newMutableTokenBuffer(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableDenominator<N>divisor=newMutableDenominator(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableTokenBufferdivisor=newMutableTokenBuffer(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableToJavaIdentifiers.checkNotNull(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.checkNotNull(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableToken.ASSIGN;
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.make(divisor,ZERO));
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.make(divisor,real,imaginary));
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor.isNaN(),divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkArgument(divisor!=null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite(),real.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){if(divisor.isNaN||divisor.isNaN()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){if(divisor.isInfinite()||divisor.isInfinite()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){if(divisor.isNaN||divisor.isInfinite()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){if(divisor.isNaN||divisor.isNaN){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Realdivisor=getDivisor(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>divisor=real.getINFs().iterator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Class<?>divisor=real.getDivisor();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>it=divisors.iterator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Class<?>divisor=real.getDenominator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDigit(divisor.isNaN(),divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator(real).getDenominator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(isNaN||divisor.isNaN){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null||divisor.isNaN()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDigit(divisor.isInfinite()||divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>divisor=real.getDivisors().iterator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253parent==null||divisor=newComplex(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>divisor=real.iterator().next();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null||divisor.isInfinite()){divisor=Complex.ZERO;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null){divisor=Complex.ZERO;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null||divisor.isNaN()){divisor=Complex.ZERO;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(denominator);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real).getINF();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real).getINF();
