projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkNotNull(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkNotNull(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite(),divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite()||divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isNaN(),divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkArgument(divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkNotNull(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkNotNull(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){divisor=newComplex(real);}else{divisor.add(real);}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null){divisor=Complex.ZERO;}else{divisor=Complex.ZERO;break;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){divisor=newComplex(real);}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkNotNull(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkArgument(divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator(real,imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real,imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real),imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real,imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real),imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor.isNaN()||divisor.isNaN()){thrownewIllegalArgumentException("");}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor.isInfinite()||divisor.isInfinite()){thrownewIllegalArgumentException("");}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(isNaN||divisor.isNaN){thrownewIllegalArgumentException("");}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor.isNaN()||divisor.isNaN()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor,imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor,real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite()&&divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite()||divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isNaN()||divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite(),divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isNaN(),divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isNaN(),divisor.isNaN()||divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||(divisor!=null&&divisor.isInfinite())){
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<?>divisor=newComplex(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||(divisor!=null&&divisor.isNaN())){
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkNotNull(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getINFDenominator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkArgument(divisor.isInfinite()||divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkArgument(divisor.isInfinite()&&divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkArgument(divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(real!=null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor!=null){divisor=newComplex(real);}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor==null){divisor=newComplex(real);}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<divisor>=newComplex(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<divisor||divisor!=null){divisor=newComplex(real);}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor.isInfinite()){MathUtils.checkState(divisor.isInfinite());}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor==Complex.ZERO||divisor!=Complex.ZERO||divisor!=Complex.ZERO){
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkState(divisor==null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor==Complex.ZERO||divisor!=Complex.ZERO||divisor!=Complex.ZERO){break;
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkState(divisor!=null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite(),imaginary.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkNotNull(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkArgument(divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableTokenBufferdivisor=newMutableTokenBuffer(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableDenominator<N>divisor=newMutableDenominator(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableTokenBufferdivisor=newMutableTokenBuffer(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableToJavaIdentifiers.checkNotNull(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.checkNotNull(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableToken.ASSIGN;
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.make(divisor,ZERO));
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.make(divisor,real,imaginary));
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor.isNaN(),divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkArgument(divisor!=null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite(),real.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){if(divisor.isNaN||divisor.isNaN()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){if(divisor.isInfinite()||divisor.isInfinite()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){if(divisor.isNaN||divisor.isInfinite()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){if(divisor.isNaN||divisor.isNaN){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Realdivisor=getDivisor(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>divisor=real.getINFs().iterator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Class<?>divisor=real.getDivisor();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>it=divisors.iterator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Class<?>divisor=real.getDenominator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDigit(divisor.isNaN(),divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator(real).getDenominator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(isNaN||divisor.isNaN){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null||divisor.isNaN()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDigit(divisor.isInfinite()||divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>divisor=real.getDivisors().iterator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253parent==null||divisor=newComplex(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>divisor=real.iterator().next();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null||divisor.isInfinite()){divisor=Complex.ZERO;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null){divisor=Complex.ZERO;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null||divisor.isNaN()){divisor=Complex.ZERO;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(denominator);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real).getINF();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real).getINF();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor==null){divisor=newComplex(imaginary);}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor!=null){divisor=newComplex(imaginary);}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableToJavaIdentifiers.checkState(divisor!=null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableToJavaIdentifiers.checkArgument(divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableToJavaIdentifiers.checkState(divisor==null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Class<?>divisor=imaginary.getDenominator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Class<?>divisor=real.getDestinator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Class<?>divisor=real.getINFDenominator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real),denominator);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real),imaginary,denominator);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real),c);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(imaginary),real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>divisor=imaginary.iterator().next();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>divisor=this.real.iterator().next();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>divisor=real.values().iterator().next();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(denominator,real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(denominator,imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkState(divisor!=null&&divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkState(divisor!=null&&divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator(Divisor.NaN);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(real.isInfinite(),divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isNaN(),real.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite(),real.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real).getDenominator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real).getNaN();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real).getN();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor.isInfinite()||divisor.isNaN()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor.isInfinite()||divisor.isInfinite()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor.isNaN()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor==Complex.ZERO||divisor!=Complex.ZERO){break;
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor!=Complex.ZERO||divisor!=Complex.ZERO){break;
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor!=Complex.ZERO||divisor==Complex.ZERO){break;
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor==Complex.ZERO||divisor!=Complex.ONE){break;
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.warning("msg.no.denominator");
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.warning("msg.illegal.number",divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.reportCodeChange();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableDenominator<N>divisor=newMutableDenominator(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableDenominator<N>divisor=newMutableDenominator(real,imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableDenominator<N>divisor=newMutableDenominator(real,denominator);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableDenominator<N>divisor=newMutableDenominator(denominator);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(real==null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor!=null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor==null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor.isInfinite()){if(isNaN||divisor.isNaN){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){if(isNaN||divisor.isNaN){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null||divisor.isNaN){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||(divisor==null&&divisor.isNaN())){
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||(divisor!=null&&divisor.isEmpty())){
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite(),divisor.isNaN()||divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isNaN(),divisor.isNaN()&&divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isNaN(),divisor.isNaN()||divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDigit(divisor.isInfinite()&&divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkInfinite(divisor.isInfinite()&&divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDigit(divisor.isNaN()||divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>divisor=real.getDestination().iterator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor.isNaN()){thrownewIllegalArgumentException("");}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkState(divisor.isInfinite()||divisor.isNaN()){thrownewIllegalArgumentException("");}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkState(divisor.isNaN()||divisor.isNaN()){thrownewIllegalArgumentException("");}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkState(divisor.isNaN()||divisor.isInfinite()){thrownewIllegalArgumentException("");}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkState(divisor.isInfinite()||divisor.isInfinite()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){if(divisor.isInfinite()||divisor.isNaN()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkArgument(divisor.isInfinite()||divisor.isInfinite()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor.isInfinite(),divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor.isDynamic(),divisor.isDynamic());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor.isNull(),divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkArgument(divisor.isNaN()||divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkArgument(divisor.isNaN(),divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253parent==null&&divisor=newComplex(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253parent==null||divisor=newComplex(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(real,imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor,imaginary,c);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDigit(divisor.isInfinite(),divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkInfinite(divisor.isNaN(),divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253divisor=Complex.ZERO;
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null||divisor.isNaN()){divisor=Complex.ZERO;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor.isInfinite()){thrownewIllegalArgumentException("");}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkState(divisor.isInfinite()||divisor.isInfinite()){thrownewIllegalArgumentException("");}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkState(divisor.isInfinite()&&divisor.isInfinite()){thrownewIllegalArgumentException("");}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor.isInfinite()&&divisor.isInfinite()){thrownewIllegalArgumentException("");}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<divisor>=newComplex(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<divisor>=newComplex(real,imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<divisor>=newComplex(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator(real,imaginary,c);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator(real,c);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator(real,imaginary,ZERO);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator(real,q);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.make(divisor,ZERO,imaginary));
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.make(divisor,ONE));
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.make(real,ZERO));
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.make(divisor,ZERO,real));
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>divisor=imaginary.getDivisors().iterator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>divisor=this.real.getDivisors().iterator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>divisor=real.getDenominators().iterator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.make(real,divisor,imaginary));
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.make(divisor,real,imaginary,denominator));
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.make(divisor,imaginary,real));
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.make(divisor,imaginary,denominator));
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.checkState(divisor!=null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.checkNotNull(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.checkNotNull(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>it=this.divisors.iterator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>it=divisors.values().iterator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Ilerator<Complex>it=divisors.iterator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isNaN()||divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkArgument(divisor.isNaN()&&divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkArgument(divisor.isNaN()||divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<divisor||divisor==null){divisor=newComplex(real);}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<divisor||divisor!=null){divisor=newComplex(imaginary);}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<divisor||divisor==null){divisor=newComplex(imaginary);}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite(),isNaN);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDestinator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null||divisor.isInfinite()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null||divisor.isNaN()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null||divisor.isInfinite()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(denominator);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(imaginary,denominator);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor==null){divisor=Complex.ZERO;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor!=null){divisor=Complex.ZERO;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor==Complex.ZERO||divisor.isInfinite()){thrownewIllegalArgumentException("");
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor==Complex.ZERO||divisor.isInfinite()){divisor=Complex.ZERO;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableTokenBufferdivisor=newMutableTokenBuffer(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableTokenBufferdivisor=newMutableTokenBuffer(real,imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableTokenBufferdivisor=newMutableTokenBuffer(real.getMask());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator(real).getINFDenominator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator(real).getDivisor();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator(real).getDestinator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<?>divisor=newComplex(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<?>divisor=newComplex(real,imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<?>divisor=newComplex(real+imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Class<?>divisor=imaginary.getDivisor();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Class<?>divisor=real.getDivisorType();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Class<?>divisor=real.getDivisor(0);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real),denominator);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real),divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real),imaginary,denominator);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real),c);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite()&&divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){if(divisor.isInfinite()||divisor.isNaN){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisorInfinite();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){if(divisor.isNaN()||divisor.isNaN()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){if(divisor.isNaN||divisor.isLocal()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null&&divisor.isInfinite()){divisor=Complex.ZERO;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisor<?>divisor=Complex.ZERO;
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableTokenBufferdivisor=newMutableTokenBuffer(divisor,imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableTokenBufferdivisor=newMutableTokenBuffer(divisor.getINF());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableTokenBufferdivisor=newMutableTokenBuffer(divisor.getMask());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(real.isInfinite(),imaginary.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isNaN(),imaginary.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor.isInfinite()){MathUtils.checkState(divisor.isInfinite());}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkState(divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real).getDenominator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real).getN();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real).getNaN();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(real,divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableToken.ASSIGN=true;
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableToken.ASSIGN=false;
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableToken.ASSIGN=null;
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(denominator);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(imaginary,denominator);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkArgument(divisor.isInfinite()||divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor,real,imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Realdivisor=getDivisor(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Realdivisor=getDivisor(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Realdivisor=getDivisor(denominator);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Realdivisor=getDivisor(imaginary,denominator);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor==Complex.ZERO||divisor!=Complex.ZERO){
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor!=Complex.ZERO||divisor!=Complex.ZERO){
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor!=Complex.ZERO||divisor==Complex.ZERO){
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor==Complex.ZERO||divisor!=Complex.ONE){
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isNaN()&&divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkArgument(divisor.isNaN()||divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkArgument(divisor.isNaN()&&divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||(divisor==null&&divisor.isInfinite())){
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||(divisor!=null&&divisor.isLocal())){
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkArgument(divisor.isInfinite()||divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkArgument(divisor.isInfinite()&&isNaN);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkNotNull(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkInfinite(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkArgument(divisor==null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkDenominator(divisor!=null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real,imaginary,denominator);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real,denominator);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real,imaginary,c);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(imaginary,real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkState(divisor==null&&divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkState(divisor==null&&divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real,denominator);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real,imaginary,denominator);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real,c);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(imaginary,real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.make(imaginary,real,divisor));
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.make(divisor,real,imaginary,ZERO));
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.make(divisor,real,ZERO));
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null){if(isNaN||divisor.isNaN){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null||divisor.isNaN){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableToJavaIdentifiers.checkArgument(divisor!=null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableToJavaIdentifiers.checkNotNull(divisor,imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableToJavaIdentifiers.checkNotNull(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator(real,ZERO);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Ilerator<Complex>divisor=real.getDivisors().iterator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableDenominatordivisor=(MutableDenominator)divisor.clone();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableDenominatordivisor=(MutableDenominator)divisor.getDestination();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableDenominatordivisor=(MutableDenominator)divisor.getDivisor();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionErrort=newAssertionError("Infinitedivisornotinitialized.");
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkArgument(divisor!=null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.make(divisor,real,imaginary)>ZERO){
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor==Complex.ONE||divisor!=Complex.ZERO){
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||(divisor!=null&&divisor.isDenominator())){
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isInfinite(),imaginary.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){thrownewIllegalArgumentException("");}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableToken.ASSIGN=ZERO;
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Realdivisor=getDivisor(imaginary,ZERO);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(imaginary,ZERO);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253SimpleDivisordivisor=getDivisor(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253SimpleDivisordivisor=getDivisor(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor==Complex.ONE||divisor!=Complex.ZERO){break;
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<divisor||imaginary!=null){divisor=newComplex(real);}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<divisor&&divisor!=null){divisor=newComplex(real);}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.make(real,divisor.getDenominator(),imaginary));
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkArgument(divisor==null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253SimpleDivisordivisor=getDenominator(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253SimpleDivisordivisor=getDenominator(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Realdivisor=getDenominator(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableTokenBufferdivisor=newMutableTokenBuffer(number);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>divisor=imaginary.getINFs().iterator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor2();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.make(NaN,ZERO));
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkInfinite(divisor!=null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkDenominator(divisor!=null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkNotNull(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableDenominator<N>divisor=newMutableDenominator(imaginary,real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(imaginary,real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null){if(divisor.isNaN()||divisor.isNaN()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableDenominatordivisor=(MutableDenominator)divisor.getDenominator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkArgument(divisor.isNaN()&&divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(imaginary).getINF();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<?>divisor=newComplex(Imaginary.NaN);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkArgument(divisor.isNaN(),divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor.isNaN(),imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor.isNaN(),divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDigit(divisor.isInfinite()||imaginary.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(imaginary).getINF();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor,q);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor,imaginary,ZERO);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(divisor.isDenominator()&&divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real,ZERO);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real,imaginary,ZERO);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real,imaginary,ZERO);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkInfinite(divisor==null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkArgument(divisor.isDenominator()&&divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real),ZERO);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(imaginary),real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real,addend);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real),ZERO);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Class<?>divisor=real.getDivisor(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableTokenBufferdivisor=newMutableTokenBuffer();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<divisor>=newComplex(imaginary,real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Parent==null||divisor=newComplex(imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableDenominatordivisor=(MutableDenominator)denominator.clone();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableDenominatordivisor=getDenominator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=(Divisor)getDivisor(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(imaginary,ZERO);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253AssertionError.checkArgument(divisor!=null);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Ilerator<Complex>divisor=imaginary.iterator().next();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>divisor=real.iterator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null||divisor.isInfinite()){divisor=Complex.ZERO;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null&&divisor.isInfinite()){divisor=Complex.ZERO;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkState(real.isInfinite(),divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDigit(divisor.isNaN(),divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDigit(divisor.isInfinite()||divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<divisor||real!=null){divisor=newComplex(real);}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real<divisor||imaginary==null){divisor=newComplex(real);}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){MathUtils.checkState(divisor.isInfinite());}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor.isNaN()){MathUtils.checkState(divisor.isNaN());}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null){if(divisor.isNaN||divisor.isNaN()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null||divisor.isUndefined()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null||divisor.isUndefined()){divisor=Complex.ZERO;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||(divisor!=null&&divisor.isUndefined())){
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>divisor=real.getDivisors().iterator():null;
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkArgument(divisor!=null&&divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkArgument(divisor!=null&&divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Class<?>divisor=real.getDnominator();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real.checkInfinite(divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=Complex.ZERO;
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableToJavaIdentifiers.checkDigit(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableToJavaIdentifiers.checkInfinite(divisor);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Class<?>divisor=divisor.getDivisor();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Class<?>divisor=divisor.getDigits()[0];
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Class<?>divisor=divisor.getDigits();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkState(divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableToken.ASSIGN=INF;
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableToken.ASSIGN=isNaN?NaN:INF;
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null||divisor.isZero()){divisor=Complex.ZERO;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){divisor=Complex.ZERO;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Realdivisor=getDivisor(imaginary,c);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Class<?>divisor=real.getDivisor(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Iterator<Complex>divisor=real.getINFs().iterator().next();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableTokenBufferdivisor=newMutableTokenBuffer(real.getINF());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MutableTokenBufferdivisor=newMutableTokenBuffer(iNF);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor==Complex.ZERO||divisor!=Complex.ZERO){break;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkArgument(divisor.isDenominator()||divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253||divisor==Complex.ZERO||Divisor!=Complex.ZERO){
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Real==null||divisor=newComplex(real);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real,imaginary,c);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null){if(divisor.isNaN||divisor.isInfinite()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDigit(divisor.isInfinite(),divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDigit(divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null){if(divisor.isNaN||divisor.isNaN){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null){if(divisor.isNaN||Divisor.isNaN){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkInfinite(divisor.isInfinite(),divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253thrownewIllegalArgumentException("");
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Context.checkState(divisor.isInfinite()||divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDenominator(real,imaginary,denominator);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null){if(divisor.isInfinite()||divisor.isInfinite()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){if(divisor.isInfinite()&&divisor.isInfinite()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor!=null){if(divisor.isNaN()||divisor.isInfinite()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor.isInfinite(),divisor.isInfinite());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor.isNaN(),imaginary.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253MathUtils.checkDenominator(divisor.isNumeric(),divisor.isNaN());
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisorInstance();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(isInfinite||divisor.isInfinite()){returnNaN;}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real).getDivisor();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real).getDiagnostic();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real).getDivisor();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Complexdivisor=getDivisor(real).getDiagnostic();
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253Divisordivisor=getDivisor(real),denominator,imaginary);
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null){thrownewIllegalArgumentException("");}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null||divisor.isNaN){thrownewIllegalArgumentException("");}
projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java253if(divisor==null||divisor.isInfinite()){thrownewIllegalArgumentException("");}
