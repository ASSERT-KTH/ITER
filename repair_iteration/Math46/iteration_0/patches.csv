bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action5	[BUG]  [BUGGY]    [CE]  missing  return  statement  [CONTEXT]  public  String  toString()  {  [BUGGY]    [BUGGY]  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.7071067811865475	1183	1183	2	replace	  	return   "( "  +  real  +   ",   "  +  imaginary  +   ") ";  	non-compiled	[CE]  missing  return  statement	3	None	replace
11	[BUG]  [BUGGY]    Complex  divisor  =  Math.round(divisor);  [CE]  variable  divisor  is  already  defined  in  method  divide(Complex)  [CONTEXT]  throws  NullArgumentException  {  [BUGGY]    Complex  divisor  =  Math.round(divisor);  [BUGGY]  MathUtils.checkNotNull(divisor);  if  (isNaN  ||  divisor.isNaN)  {  return  NaN;  }  if  (divisor.isZero)  {  return  isZero  ?  NaN  :  INF;  }  if  (divisor.isInfinite()  &&  !isInfinite())  {  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.3651483716701107	253	253	2	replace	    Complex  divisor  =  Math.round(divisor);		non-compiled	[CE]  variable  divisor  is  already  defined  in  method  divide(Complex)	10	None	add
12	[BUG]  [BUGGY]    Complex  divisor  =  Math.pow(10,  divisor.size()  -  1);  [CE]  variable  divisor  is  already  defined  in  method  divide(Complex)  [CONTEXT]  throws  NullArgumentException  {  [BUGGY]    Complex  divisor  =  Math.pow(10,  divisor.size()  -  1);  [BUGGY]  MathUtils.checkNotNull(divisor);  if  (isNaN  ||  divisor.isNaN)  {  return  NaN;  }  if  (divisor.isZero)  {  return  isZero  ?  NaN  :  INF;  }  if  (divisor.isInfinite()  &&  !isInfinite())  {  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.3651483716701107	253	253	2	replace	    Complex  divisor  =  Math.pow(10,  divisor.size()  -  1);		non-compiled	[CE]  variable  divisor  is  already  defined  in  method  divide(Complex)	10	None	add
14	[BUG]  [BUGGY]    Complex  divisor  =  Math.pow(10,  divisor.numberOf(10));  [CE]  variable  divisor  is  already  defined  in  method  divide(Complex)  [CONTEXT]  throws  NullArgumentException  {  [BUGGY]    Complex  divisor  =  Math.pow(10,  divisor.numberOf(10));  [BUGGY]  MathUtils.checkNotNull(divisor);  if  (isNaN  ||  divisor.isNaN)  {  return  NaN;  }  if  (divisor.isZero)  {  return  isZero  ?  NaN  :  INF;  }  if  (divisor.isInfinite()  &&  !isInfinite())  {  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.3651483716701107	253	253	2	replace	    Complex  divisor  =  Math.pow(10,  divisor.numberOf(10));		non-compiled	[CE]  variable  divisor  is  already  defined  in  method  divide(Complex)	10	None	add
15	[BUG]  [BUGGY]    Complex  divisor  =  Math.pow(10,  divisor.number1);  [CE]  variable  divisor  is  already  defined  in  method  divide(Complex)  [CONTEXT]  throws  NullArgumentException  {  [BUGGY]    Complex  divisor  =  Math.pow(10,  divisor.number1);  [BUGGY]  MathUtils.checkNotNull(divisor);  if  (isNaN  ||  divisor.isNaN)  {  return  NaN;  }  if  (divisor.isZero)  {  return  isZero  ?  NaN  :  INF;  }  if  (divisor.isInfinite()  &&  !isInfinite())  {  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  Complex  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.3651483716701107	253	253	2	replace	    Complex  divisor  =  Math.pow(10,  divisor.number1);		non-compiled	[CE]  variable  divisor  is  already  defined  in  method  divide(Complex)	10	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  testAtanI  [CONTEXT]  public  Complex  atan()  {  [BUGGY]  if(isInfinite)  {  [BUGGY]  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	add	if(isInfinite)  {	if  (isNaN)  {  	compilable	  [FE]  AssertionError  testAtanI	15	2
22	[BUG]  [BUGGY]  if(isInfinite)  {  [FE]  AssertionError  testAtanI  [CONTEXT]  public  Complex  atan()  {  [BUGGY]  if(isInfinite)  {  [BUGGY]  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isInfinite)  {	if  (isNaN)  {  	compilable	  [FE]  AssertionError  testAtanI	15	2	replace
