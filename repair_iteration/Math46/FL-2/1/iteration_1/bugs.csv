bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  INF;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	add	return  isNaN?  NaN  :  INF;	return  isZero  ?  NaN  :  INF;  	compilable	  [FE]  AssertionError  	1	1	replace
2	[BUG]  [BUGGY]  return  isNaN?  NaN  :  INF;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  INF;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  INF;	return  isZero  ?  NaN  :  INF;  	compilable	  [FE]  AssertionError  	1	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isInfinite?  NaN  :  INF;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	add	return  isInfinite?  NaN  :  INF;	return  isZero  ?  NaN  :  INF;  	compilable	  [FE]  AssertionError  	1	1	replace
4	[BUG]  [BUGGY]  return  isInfinite?  NaN  :  INF;  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isInfinite?  NaN  :  INF;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isInfinite?  NaN  :  INF;	return  isZero  ?  NaN  :  INF;  	compilable	  [FE]  AssertionError  	1	1	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN  ||  isZero?  NaN  :  INF;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	add	return  isNaN  ||  isZero?  NaN  :  INF;	return  isZero  ?  NaN  :  INF;  	compilable	  [FE]  AssertionError  	1	1	replace
6	[BUG]  [BUGGY]  return  isNaN  ||  isZero?  NaN  :  INF;  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN  ||  isZero?  NaN  :  INF;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN  ||  isZero?  NaN  :  INF;	return  isZero  ?  NaN  :  INF;  	compilable	  [FE]  AssertionError  	1	1	replace
7	[BUG]  [BUGGY]  return  isNull?  NaN  :  INF;  [CE]  cannot  find  symbol  isNull  [FE]          AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNull?  NaN  :  INF;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNull?  NaN  :  INF;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol  isNull	1	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero  ||  isNaN?  NaN  :  INF;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	add	return  isZero  ||  isNaN?  NaN  :  INF;	return  isZero  ?  NaN  :  INF;  	compilable	  [FE]  AssertionError  	1	1	replace
9	[BUG]  [BUGGY]  return  isZero  ||  isNaN?  NaN  :  INF;  [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero  ||  isNaN?  NaN  :  INF;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero  ||  isNaN?  NaN  :  INF;	return  isZero  ?  NaN  :  INF;  	compilable	  [FE]  AssertionError  	1	1	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  ONE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	add	return  isZero?  NaN  :  ONE;	return  isZero  ?  NaN  :  INF;  	compilable	  [FE]  AssertionError  	1	1	replace
11	[BUG]  [BUGGY]  return  isZero?  NaN  :  ONE;  [FE]  AssertionError  [FE]              AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  ONE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  ONE;	return  isZero  ?  NaN  :  INF;  	compilable	  [FE]  AssertionError  	1	1	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  ZERO;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	add	return  isZero?  NaN  :  ZERO;	return  isZero  ?  NaN  :  INF;  	compilable	  [FE]  AssertionError  	1	1	replace
13	[BUG]  [BUGGY]  return  isZero?  NaN  :  ZERO;  [FE]  AssertionError  [FE]                AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  ZERO;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  ZERO;	return  isZero  ?  NaN  :  INF;  	compilable	  [FE]  AssertionError  	1	1	replace
14	[BUG]  [BUGGY]  return  isNaN?  NaN  :  Infinite.valueOf(divisor);  [CE]  cannot  find  symbol  Infinite  [FE]                  AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  Infinite.valueOf(divisor);  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  Infinite.valueOf(divisor);	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol  Infinite	1	None	replace
15	[BUG]  [BUGGY]  return  isZero?  NaN  :  Double.POSITIVE_INFINITY;  [CE]  incompatible  types  [FE]                    AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Double.POSITIVE_INFINITY;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Double.POSITIVE_INFINITY;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  incompatible  types	1	None	replace
16	[BUG]  [BUGGY]  return  isZero?  NaN  :  Double.parseDouble(divisor);  [CE]  method  parseDouble  in  class  Double  cannot  be  applied  to  given  types;  [FE]                      AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Double.parseDouble(divisor);  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Double.parseDouble(divisor);	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  method  parseDouble  in  class  Double  cannot  be  applied  to  given  types;	1	None	replace
17	[BUG]  [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.create(divisor);  [CE]  cannot  find  symbol  [FE]                        AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.create(divisor);  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  IllegalArgumentException.create(divisor);	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
18	[BUG]  [BUGGY]  return  isNaN?  NaN  :  Infinite.isNaN(divisor);  [CE]  cannot  find  symbol  Infinite  [FE]                          AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  Infinite.isNaN(divisor);  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  Infinite.isNaN(divisor);	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol  Infinite	1	None	replace
19	[BUG]  [BUGGY]  return  isZero?  NaN  :  1;  [CE]  incompatible  types  [FE]                            AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  1;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  1;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  incompatible  types	1	None	replace
20	[BUG]  [BUGGY]  return  isNaN?  NaN  :  Infinite.isNaN(divisor)?  NaN  :  INF;  [CE]  cannot  find  symbol  Infinite  [FE]                              AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  Infinite.isNaN(divisor)?  NaN  :  INF;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  Infinite.isNaN(divisor)?  NaN  :  INF;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol  Infinite	1	None	replace
21	[BUG]  [BUGGY]  return  isZero?  NaN  :  INF  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                                AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  INF  +  1;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  INF  +  1;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	replace
22	[BUG]  [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.equals(divisor);  [CE]  non-static  method  equals(Object)  cannot  be  referenced  from  a  static  context  [FE]                                  AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.equals(divisor);  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  IllegalArgumentException.equals(divisor);	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  non-static  method  equals(Object)  cannot  be  referenced  from  a  static  context	1	None	replace
23	[BUG]  [BUGGY]  return  isNaN?  NaN  :  NNF;  [CE]  cannot  find  symbol  NNF  [FE]                                    AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  NNF;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  NNF;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol  NNF	1	None	replace
24	[BUG]  [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.equals(divisor)?  NaN  :  INF;  [CE]  non-static  method  equals(Object)  cannot  be  referenced  from  a  static  context  [FE]                                      AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.equals(divisor)?  NaN  :  INF;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  IllegalArgumentException.equals(divisor)?  NaN  :  INF;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  non-static  method  equals(Object)  cannot  be  referenced  from  a  static  context	1	None	replace
25	[BUG]  [BUGGY]  return  isDenominator?  NaN  :  INF;  [CE]  cannot  find  symbol  isDenominator  [FE]                                        AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isDenominator?  NaN  :  INF;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isDenominator?  NaN  :  INF;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol  isDenominator	1	None	replace
26	[BUG]  [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.fromInfinite(divisor);  [CE]  cannot  find  symbol  [FE]                                          AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.fromInfinite(divisor);  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  IllegalArgumentException.fromInfinite(divisor);	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
27	[BUG]  [BUGGY]  return  isDivisor?  NaN  :  INF;  [CE]  cannot  find  symbol  isDivisor  [FE]                                            AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isDivisor?  NaN  :  INF;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isDivisor?  NaN  :  INF;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol  isDivisor	1	None	replace
28	[BUG]  [BUGGY]  return  isNaN?  NaN  :  Infinite.toString(divisor);  [CE]  cannot  find  symbol  Infinite  [FE]                                              AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  Infinite.toString(divisor);  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  Infinite.toString(divisor);	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol  Infinite	1	None	replace
29	[BUG]  [BUGGY]  return  isZero?  NaN  :  INF.doubleValue();  [CE]  cannot  find  symbol  [FE]                                                AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  INF.doubleValue();  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  INF.doubleValue();	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
30	[BUG]  [BUGGY]  return  isZero?  NaN  :  divisor;  [CE]  incompatible  types  [FE]                                                  AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  divisor;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  divisor;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  incompatible  types	1	None	replace
31	[BUG]  [BUGGY]  return  isZero?  NaN  :  INF.denominator;  [CE]  cannot  find  symbol  denominator  [FE]                                                    AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  INF.denominator;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  INF.denominator;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol  denominator	1	None	replace
32	[BUG]  [BUGGY]  return  isZero?  NaN  :  INF,  denominator;  [CE]  ';'  expected  [FE]                                                      AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  INF,  denominator;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  INF,  denominator;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
33	[BUG]  [BUGGY]  return  isZero?  NaN  :  UndefinedInteger.MAX_VALUE;  [CE]  cannot  find  symbol  UndefinedInteger  [FE]                                                        AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  UndefinedInteger.MAX_VALUE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  UndefinedInteger.MAX_VALUE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol  UndefinedInteger	1	None	replace
34	[BUG]  [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.equals( "Infinite ")?  NaN  :  INF;  [CE]  non-static  method  equals(Object)  cannot  be  referenced  from  a  static  context  [FE]                                                          AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.equals( "Infinite ")?  NaN  :  INF;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  IllegalArgumentException.equals( "Infinite ")?  NaN  :  INF;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  non-static  method  equals(Object)  cannot  be  referenced  from  a  static  context	1	None	replace
35	[BUG]  [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.EXPR_RESULT;  [CE]  cannot  find  symbol  EXPR_RESULT  [FE]                                                            AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.EXPR_RESULT;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  IllegalArgumentException.EXPR_RESULT;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	1	None	replace
36	[BUG]  [BUGGY]  return  isNaN?  NaN  :  1;  [CE]  incompatible  types  [FE]                                                              AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  1;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  1;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  incompatible  types	1	None	replace
37	[BUG]  [BUGGY]  return  isNaN?  NaN  :  Infinite.NEGATIVE;  [CE]  cannot  find  symbol  Infinite  [FE]                                                                AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  Infinite.NEGATIVE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  Infinite.NEGATIVE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol  Infinite	1	None	replace
38	[BUG]  [BUGGY]  return  isZero?  NaN  :  UndefinedInteger.MIN_VALUE;  [CE]  cannot  find  symbol  UndefinedInteger  [FE]                                                                  AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  UndefinedInteger.MIN_VALUE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  UndefinedInteger.MIN_VALUE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol  UndefinedInteger	1	None	replace
39	[BUG]  [BUGGY]  return  isNaN?  NaN  :  Infinite.valueOf(divisor).doubleValue();  [CE]  cannot  find  symbol  Infinite  [FE]                                                                    AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  Infinite.valueOf(divisor).doubleValue();  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  Infinite.valueOf(divisor).doubleValue();	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol  Infinite	1	None	replace
40	[BUG]  [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.create(divisor,  divisor);  [CE]  cannot  find  symbol  [FE]                                                                      AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.create(divisor,  divisor);  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  IllegalArgumentException.create(divisor,  divisor);	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
41	[BUG]  [BUGGY]  return  isNaN?  NaN  :  Infinite.ZERO;  [CE]  cannot  find  symbol  Infinite  [FE]                                                                        AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  Infinite.ZERO;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  Infinite.ZERO;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol  Infinite	1	None	replace
42	[BUG]  [BUGGY]  return  isNaN?  NaN  :  Infinite.MAX_VALUE;  [CE]  cannot  find  symbol  Infinite  [FE]                                                                          AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  Infinite.MAX_VALUE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  Infinite.MAX_VALUE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol  Infinite	1	None	replace
43	[BUG]  [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.make(divisor);  [CE]  cannot  find  symbol  [FE]                                                                            AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.make(divisor);  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  IllegalArgumentException.make(divisor);	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
44	[BUG]  [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.toString(divisor);  [CE]  no  suitable  method  found  for  toString(double)  [FE]                                                                              AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.toString(divisor);  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  IllegalArgumentException.toString(divisor);	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  no  suitable  method  found  for  toString(double)	1	None	replace
45	[BUG]  [BUGGY]  return  isZero?  NaN  :  INF.infinite(divisor);  [CE]  cannot  find  symbol  [FE]                                                                                AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  INF.infinite(divisor);  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  INF.infinite(divisor);	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
46	[BUG]  [BUGGY]  return  isNaN?  NaN  :  Infinite.isNaN(divisor)?  NaN  :  ZERO;  [CE]  cannot  find  symbol  Infinite  [FE]                                                                                  AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  Infinite.isNaN(divisor)?  NaN  :  ZERO;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  Infinite.isNaN(divisor)?  NaN  :  ZERO;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol  Infinite	1	None	replace
47	[BUG]  [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.fromNullable(divisor);  [CE]  cannot  find  symbol  [FE]                                                                                    AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.fromNullable(divisor);  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  IllegalArgumentException.fromNullable(divisor);	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
48	[BUG]  [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.create();  [CE]  cannot  find  symbol  [FE]                                                                                      AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.create();  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  IllegalArgumentException.create();	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
49	[BUG]  [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.from(divisor);  [CE]  cannot  find  symbol  [FE]                                                                                        AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  IllegalArgumentException.from(divisor);  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  IllegalArgumentException.from(divisor);	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
50	[BUG]  [BUGGY]  return  isZero?  NaN  :  INF.divisor;  [CE]  cannot  find  symbol  divisor  [FE]                                                                                          AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  INF.divisor;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  INF.divisor;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol  divisor	1	None	replace
51	[BUG]  [BUGGY]  return  isPaint?  NaN  :  INF;  [CE]  cannot  find  symbol  isPaint  [FE]                                                                                            AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isPaint?  NaN  :  INF;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isPaint?  NaN  :  INF;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  cannot  find  symbol  isPaint	1	None	replace
52	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                                                                              AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]    [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	add	  	return  isZero  ?  NaN  :  INF;  	compilable	  [FE]  AssertionError  	1	1	replace
53	[BUG]  [BUGGY]    [FE]  AssertionError  [FE]                                                                                              AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]    [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	  	return  isZero  ?  NaN  :  INF;  	compilable	  [FE]  AssertionError  	1	1	replace
54	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0d)?  Boolean.FALSE  :  Boolean.valueOf(divisor  >  0d)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]    AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0d)?  Boolean.FALSE  :  Boolean.valueOf(divisor  >  0d)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0d)?  Boolean.FALSE  :  Boolean.valueOf(divisor  >  0d)?  Boolean.TRUE  :  Boolean.FALSE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  incompatible  types	1	None	replace
55	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  >  0)?  Boolean.FALSE  :  Boolean.valueOf(divisor  <  0)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]      AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  >  0)?  Boolean.FALSE  :  Boolean.valueOf(divisor  <  0)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor  >  0)?  Boolean.FALSE  :  Boolean.valueOf(divisor  <  0)?  Boolean.TRUE  :  Boolean.FALSE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  incompatible  types	1	None	replace
56	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0d)?  Boolean.FALSE  :  Boolean.valueOf(divisor  >=  0d)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]        AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0d)?  Boolean.FALSE  :  Boolean.valueOf(divisor  >=  0d)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0d)?  Boolean.FALSE  :  Boolean.valueOf(divisor  >=  0d)?  Boolean.TRUE  :  Boolean.FALSE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  incompatible  types	1	None	replace
57	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0d)?  Boolean.FALSE  :  Boolean.valueOf(divisor  ==  0d)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]          AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0d)?  Boolean.FALSE  :  Boolean.valueOf(divisor  ==  0d)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0d)?  Boolean.FALSE  :  Boolean.valueOf(divisor  ==  0d)?  Boolean.TRUE  :  Boolean.FALSE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  incompatible  types	1	None	replace
58	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0.0)?  Boolean.FALSE  :  Boolean.valueOf(divisor  >  0)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]            AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0.0)?  Boolean.FALSE  :  Boolean.valueOf(divisor  >  0)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0.0)?  Boolean.FALSE  :  Boolean.valueOf(divisor  >  0)?  Boolean.TRUE  :  Boolean.FALSE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  incompatible  types	1	None	replace
59	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0)?  Boolean.FALSE  :  Boolean.valueOf(divisor  >  0)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]              AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0)?  Boolean.FALSE  :  Boolean.valueOf(divisor  >  0)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0)?  Boolean.FALSE  :  Boolean.valueOf(divisor  >  0)?  Boolean.TRUE  :  Boolean.FALSE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  incompatible  types	1	None	replace
60	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0d)?  Boolean.FALSE  :  Boolean.valueOf(divisor!=  0d)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]                AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0d)?  Boolean.FALSE  :  Boolean.valueOf(divisor!=  0d)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0d)?  Boolean.FALSE  :  Boolean.valueOf(divisor!=  0d)?  Boolean.TRUE  :  Boolean.FALSE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  incompatible  types	1	None	replace
61	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0d)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]                  AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0d)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0d)?  Boolean.TRUE  :  Boolean.FALSE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  incompatible  types	1	None	replace
62	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  0.0)||  Boolean.valueOf  [CE]  ';'  expected  [FE]                    AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  0.0)||  Boolean.valueOf  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  0.0)||  Boolean.valueOf	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
63	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  >  0)?  Boolean.FALSE  :  Boolean.valueOf(divisor  <  1)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]                      AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  >  0)?  Boolean.FALSE  :  Boolean.valueOf(divisor  <  1)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor  >  0)?  Boolean.FALSE  :  Boolean.valueOf(divisor  <  1)?  Boolean.TRUE  :  Boolean.FALSE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  incompatible  types	1	None	replace
64	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf  [CE]  ';'  expected  [FE]                        AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
65	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  >  0)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]                          AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  >  0)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor  >  0)?  Boolean.TRUE  :  Boolean.FALSE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  incompatible  types	1	None	replace
66	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0d)?  Boolean.FALSE  :  Boolean.valueOf(divisor  >  0d)?  Boolean.TRUE  :  Boolean.FALSE  [CE]  ';'  expected  [FE]                            AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0d)?  Boolean.FALSE  :  Boolean.valueOf(divisor  >  0d)?  Boolean.TRUE  :  Boolean.FALSE  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0d)?  Boolean.FALSE  :  Boolean.valueOf(divisor  >  0d)?  Boolean.TRUE  :  Boolean.FALSE	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
67	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  [CE]  illegal  start  of  expression  [FE]                              AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
68	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(  [CE]  illegal  start  of  expression  [FE]                                AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
69	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  <=  [CE]  illegal  start  of  expression  [FE]                                  AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  <=  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  <=	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
70	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  <  1)||  Boolean.valueOf(d  [CE]  ')'  expected  [FE]                                    AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  <  1)||  Boolean.valueOf(d  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  <  1)||  Boolean.valueOf(d	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ')'  expected	1	None	replace
71	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  <  [CE]  illegal  start  of  expression  [FE]                                      AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  <  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  <	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
72	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  >=  0)||  Boolean.valueOf(divisor  <=  0.0)||  Boolean.valueOf  [CE]  ';'  expected  [FE]                                        AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  >=  0)||  Boolean.valueOf(divisor  <=  0.0)||  Boolean.valueOf  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  >=  0)||  Boolean.valueOf(divisor  <=  0.0)||  Boolean.valueOf	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
73	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  >  [CE]  illegal  start  of  expression  [FE]                                          AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  >  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  >	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
74	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  >  0.0)||  Boolean.valueOf  [CE]  ';'  expected  [FE]                                            AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  >  0.0)||  Boolean.valueOf  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  >  0.0)||  Boolean.valueOf	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
75	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >=  0d)||  Boolean.valueOf(divisor)  [CE]  ';'  expected  [FE]                                              AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >=  0d)||  Boolean.valueOf(divisor)  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >=  0d)||  Boolean.valueOf(divisor)	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
76	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  >=  0.0)||  Boolean.valueOf  [CE]  ';'  expected  [FE]                                                AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  >=  0.0)||  Boolean.valueOf  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  >=  0.0)||  Boolean.valueOf	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
77	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  }  [CE]  ')'  expected  [FE]                                                  AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  }  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  }	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ')'  expected	1	None	replace
78	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  0.0)||  Boolean.valueOf(  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  0.0)||  Boolean.valueOf(  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  0.0)||  Boolean.valueOf(	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
79	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  >=  0)||  Boolean.valueOf(divisor  <=  [CE]  illegal  start  of  expression  [FE]                                                      AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  >=  0)||  Boolean.valueOf(divisor  <=  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  >=  0)||  Boolean.valueOf(divisor  <=	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
80	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]                                                        AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0)?  Boolean.TRUE  :  Boolean.FALSE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  incompatible  types	1	None	replace
81	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  ==  0)||  Boolean.valueOf(divisor  <=  0.0)||  Boolean.valueOf  [CE]  ';'  expected  [FE]                                                          AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  ==  0)||  Boolean.valueOf(divisor  <=  0.0)||  Boolean.valueOf  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  ==  0)||  Boolean.valueOf(divisor  <=  0.0)||  Boolean.valueOf	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
82	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0.0)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  incompatible  types  [FE]                                                            AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0.0)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor  <  0.0)?  Boolean.TRUE  :  Boolean.FALSE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  incompatible  types	1	None	replace
83	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(d  [CE]  ')'  expected  [FE]                                                              AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(d  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(d	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ')'  expected	1	None	replace
84	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  ==  0)||  Boolean.valueOf(divisor  <=  [CE]  illegal  start  of  expression  [FE]                                                                AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  ==  0)||  Boolean.valueOf(divisor  <=  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  ==  0)||  Boolean.valueOf(divisor  <=	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
85	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(d  [CE]  ')'  expected  [FE]                                                                  AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(d  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(d	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ')'  expected	1	None	replace
86	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  ==  0d)||  Boolean.valueOf(divisor)  [CE]  ';'  expected  [FE]                                                                    AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  ==  0d)||  Boolean.valueOf(divisor)  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  ==  0d)||  Boolean.valueOf(divisor)	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
87	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(di  [CE]  ')'  expected  [FE]                                                                      AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(di  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(di	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ')'  expected	1	None	replace
88	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor!=  0)||  Boolean.valueOf(divisor  <=  [CE]  illegal  start  of  expression  [FE]                                                                        AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor!=  0)||  Boolean.valueOf(divisor  <=  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor!=  0)||  Boolean.valueOf(divisor  <=	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
89	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  ==  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  <=  [CE]  illegal  start  of  expression  [FE]                                                                          AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  ==  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  <=  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  ==  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  <=	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
90	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  ==  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  <  [CE]  illegal  start  of  expression  [FE]                                                                            AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  ==  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  <  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  ==  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  <	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
91	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  {  [CE]  ')'  expected  [FE]                                                                              AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  {  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  {  	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ')'  expected	1	None	replace
92	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  ==  0d)||  Boolean.valueOf(divisor  >=  0d)||  Boolean.valueOf(divisor)  [CE]  ';'  expected  [FE]                                                                                AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  ==  0d)||  Boolean.valueOf(divisor  >=  0d)||  Boolean.valueOf(divisor)  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  ==  0d)||  Boolean.valueOf(divisor  >=  0d)||  Boolean.valueOf(divisor)	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
93	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  0.0)||  Boolean  [CE]  ';'  expected  [FE]                                                                                  AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  0.0)||  Boolean  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  <=  0.0)||  Boolean	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
94	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  >=  [CE]  illegal  start  of  expression  [FE]                                                                                    AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  >=  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0d)||  Boolean.valueOf(divisor  >  0d)||  Boolean.valueOf(divisor  >=  	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
95	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  ==  0.0)||  Boolean.valueOf  [CE]  ';'  expected  [FE]                                                                                      AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  ==  0.0)||  Boolean.valueOf  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0)||  Boolean.valueOf(divisor  ==  0.0)||  Boolean.valueOf	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
96	[BUG]  [BUGGY]  return  isZero?  NaN  :  INF  -  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]    AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  INF  -  1;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  INF  -  1;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	1	None	replace
97	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  <=  Boolean.valueOf(divisor)  [CE]  ';'  expected  [FE]      AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  <=  Boolean.valueOf(divisor)  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  <=  Boolean.valueOf(divisor)	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
98	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  no  suitable  method  found  for  valueOf(double)  [FE]        AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.TRUE  :  Boolean.FALSE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  no  suitable  method  found  for  valueOf(double)	1	None	replace
99	[BUG]  [BUGGY]  return  isNaN?  NaN  :  Integer.parseInt(divisor);  [CE]  no  suitable  method  found  for  parseInt(double)  [FE]          AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  Integer.parseInt(divisor);  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  Integer.parseInt(divisor);	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  no  suitable  method  found  for  parseInt(double)	1	None	replace
100	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
101	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  1)||  Boolean.valueOf(divisor)  [CE]  ';'  expected  [FE]              AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  1)||  Boolean.valueOf(divisor)  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  1)||  Boolean.valueOf(divisor)	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
102	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)  <=  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  [CE]  ';'  expected  [FE]                AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)  <=  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)  <=  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
103	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  <=  Boolean.valueOf(d  [CE]  ')'  expected  [FE]                  AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  <=  Boolean.valueOf(d  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  <=  Boolean.valueOf(d	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ')'  expected	1	None	replace
104	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  <=  Boolean.valueOf(di  [CE]  ')'  expected  [FE]                    AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  <=  Boolean.valueOf(di  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  <=  Boolean.valueOf(di	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ')'  expected	1	None	replace
105	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <=  Boolean.valueOf(divisor)  [CE]  ')'  expected  [FE]                      AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <=  Boolean.valueOf(divisor)  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <=  Boolean.valueOf(divisor)	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ')'  expected	1	None	replace
106	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor).booleanValue()?  Boolean.TRUE  :  Boolean.FALSE  [CE]  ';'  expected  [FE]                        AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor).booleanValue()?  Boolean.TRUE  :  Boolean.FALSE  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor).booleanValue()?  Boolean.TRUE  :  Boolean.FALSE	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
107	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0.0)||  [CE]  illegal  start  of  expression  [FE]                          AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0.0)||  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <=  0.0)||	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
108	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor).booleanValue()  ||  Boolean.valueOf(divisor)  [CE]  ';'  expected  [FE]                            AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor).booleanValue()  ||  Boolean.valueOf(divisor)  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor).booleanValue()  ||  Boolean.valueOf(divisor)	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
109	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0)||  Boolean.valueOf(divisor)  [CE]  ';'  expected  [FE]                              AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0)||  Boolean.valueOf(divisor)  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  0)||  Boolean.valueOf(divisor)	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
110	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <  1)||  Boolean  [CE]  ';'  expected  [FE]                                AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <  1)||  Boolean  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <  1)||  Boolean	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
111	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0.0)||  Boolean.valueOf(divisor  <  [CE]  illegal  start  of  expression  [FE]                                  AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0.0)||  Boolean.valueOf(divisor  <  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0.0)||  Boolean.valueOf(divisor  <  	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
112	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.TRUE;  [CE]  no  suitable  method  found  for  valueOf(double)  [FE]                                    AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.TRUE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.TRUE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  no  suitable  method  found  for  valueOf(double)	1	None	replace
113	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <  1)||  [CE]  illegal  start  of  expression  [FE]                                      AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <  1)||  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <  1)||	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
114	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor));  [CE]  ';'  expected  [FE]                                        AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor));  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor));	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
115	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <=  Boolean.valueOf(divisor));  [CE]  no  suitable  method  found  for  valueOf(double)  [FE]                                          AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <=  Boolean.valueOf(divisor));  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <=  Boolean.valueOf(divisor));	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  no  suitable  method  found  for  valueOf(double)	1	None	replace
116	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  ==  Boolean.valueOf(d  [CE]  ')'  expected  [FE]                                            AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  ==  Boolean.valueOf(d  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  ==  Boolean.valueOf(d	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ')'  expected	1	None	replace
117	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor).booleanValue()  ||  Boolean.valueOf(divisor  [CE]  ')'  expected  [FE]                                              AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor).booleanValue()  ||  Boolean.valueOf(divisor  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor).booleanValue()  ||  Boolean.valueOf(divisor	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ')'  expected	1	None	replace
118	[BUG]  [BUGGY]  return  isNaN?  NaN  :  Integer.parseInt(divisor));  [CE]  ';'  expected  [FE]                                                AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isNaN?  NaN  :  Integer.parseInt(divisor));  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isNaN?  NaN  :  Integer.parseInt(divisor));	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
119	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <=  Boolean.valueOf(divisor))  [CE]  ';'  expected  [FE]                                                  AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <=  Boolean.valueOf(divisor))  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <=  Boolean.valueOf(divisor))	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
120	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <  [CE]  illegal  start  of  expression  [FE]                                                    AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
121	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.parseBoolean(divisor)||  Boolean.isInfinite(divisor)?  Boolean.TRUE  :  Boolean  [CE]  ';'  expected  [FE]                                                      AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.parseBoolean(divisor)||  Boolean.isInfinite(divisor)?  Boolean.TRUE  :  Boolean  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.parseBoolean(divisor)||  Boolean.isInfinite(divisor)?  Boolean.TRUE  :  Boolean	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
122	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <  1)||  Double.valueOf  [CE]  ';'  expected  [FE]                                                        AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <  1)||  Double.valueOf  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <  1)||  Double.valueOf	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
123	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)=  Boolean.valueOf(divisor)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  no  suitable  method  found  for  valueOf(double)  [FE]                                                          AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)=  Boolean.valueOf(divisor)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)=  Boolean.valueOf(divisor)?  Boolean.TRUE  :  Boolean.FALSE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  no  suitable  method  found  for  valueOf(double)	1	None	replace
124	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  1)||  Boolean.valueOf(divisor  >  1)||  Boolean.valueOf(d  [CE]  ')'  expected  [FE]                                                            AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  1)||  Boolean.valueOf(divisor  >  1)||  Boolean.valueOf(d  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  1)||  Boolean.valueOf(divisor  >  1)||  Boolean.valueOf(d	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ')'  expected	1	None	replace
125	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor).booleanValue()?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  no  suitable  method  found  for  valueOf(double)  [FE]                                                              AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor).booleanValue()?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor).booleanValue()?  Boolean.TRUE  :  Boolean.FALSE;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  no  suitable  method  found  for  valueOf(double)	1	None	replace
126	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <  1)||  Double.isInfinite  [CE]  ';'  expected  [FE]                                                                AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <  1)||  Double.isInfinite  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  <  1)||  Double.isInfinite	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
127	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  <  1)  {  return!isInfinite()?  ZERO  :  NaN;  [CE]  ';'  expected  [FE]                                                                  AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  <  1)  {  return!isInfinite()?  ZERO  :  NaN;  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  <  1)  {  return!isInfinite()?  ZERO  :  NaN;	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
128	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  <=  Boolean.valueOf(0);  [CE]  no  suitable  method  found  for  valueOf(double)  [FE]                                                                    AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  <=  Boolean.valueOf(0);  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  <=  Boolean.valueOf(0);	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  no  suitable  method  found  for  valueOf(double)	1	None	replace
129	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)? "true "  :  Boolean.valueOf(divisor));  [CE]  [FE]                                                                      AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)? "true "  :  Boolean.valueOf(divisor));  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)? "true "  :  Boolean.valueOf(divisor));	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  	1	None	replace
130	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  <=  Boolean.valueOf(1);  [CE]  no  suitable  method  found  for  valueOf(double)  [FE]                                                                        AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  <=  Boolean.valueOf(1);  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor)  <=  Boolean.valueOf(1);	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  no  suitable  method  found  for  valueOf(double)	1	None	replace
131	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor),  Boolean.valueOf(divisor));  [CE]  ';'  expected  [FE]                                                                          AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor),  Boolean.valueOf(divisor));  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor),  Boolean.valueOf(divisor));	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
132	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  }  [CE]  ')'  expected  [FE]                                                                            AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  }  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  >  0)||  Boolean.valueOf(divisor  }	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ')'  expected	1	None	replace
133	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)=  Boolean.valueOf(divisor)?  Boolean.TRUE  :  Boolean  [CE]  ';'  expected  [FE]                                                                              AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)=  Boolean.valueOf(divisor)?  Boolean.TRUE  :  Boolean  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)=  Boolean.valueOf(divisor)?  Boolean.TRUE  :  Boolean	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
134	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor).booleanValue()  ||  Boolean.valueOf(d  [CE]  ')'  expected  [FE]                                                                                AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor).booleanValue()  ||  Boolean.valueOf(d  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor).booleanValue()  ||  Boolean.valueOf(d	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ')'  expected	1	None	replace
135	[BUG]  [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  1)||  Boolean.valueOf(divisor  >  1)||  Boolean.valueOf  [CE]  ';'  expected  [FE]                                                                                  AssertionError  [CONTEXT]  public  Complex  divide(double  divisor)  {  if  (isNaN  ||  Double.isNaN(divisor))  {  return  NaN;  }  if  (divisor  ==  0d)  {    [BUGGY]  return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  1)||  Boolean.valueOf(divisor  >  1)||  Boolean.valueOf  [BUGGY]  }  if  (Double.isInfinite(divisor))  {  return  !isInfinite()  ?  ZERO  :  NaN;  }  return  createComplex(real  /  divisor,  imaginary/  divisor);  }  [CLASS]  Complex  [METHOD]  divide  [RETURN_TYPE]  Complex  double  divisor  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	1.0	297	297	1	replace	return  isZero?  NaN  :  Boolean.valueOf(divisor)?  Boolean.FALSE  :  Boolean.valueOf(divisor)||  Boolean.valueOf(divisor  <  1)||  Boolean.valueOf(divisor  >  1)||  Boolean.valueOf	return  isZero  ?  NaN  :  INF;  	non-compiled	[CE]  ';'  expected	1	None	replace
