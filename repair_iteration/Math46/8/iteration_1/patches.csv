bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(isInfinite)  {  if(isZero)  {  return  NaN;  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isInfinite)  {  if(isZero)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isInfinite)  {  if(isZero)  {  return  NaN;  }	      if(isInfinite)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	4	None	replace
2	[BUG]  [BUGGY]  if(isInfinite)  {  if(!isZero)  {  return  NaN;  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isInfinite)  {  if(!isZero)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isInfinite)  {  if(!isZero)  {  return  NaN;  }	      if(isInfinite)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	4	None	replace
3	[BUG]  [BUGGY]  if(isInfinite)  {  if(isZero  ||  isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isInfinite)  {  if(isZero  ||  isNaN)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isInfinite)  {  if(isZero  ||  isNaN)  {  return  NaN;  }	      if(isInfinite)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	4	None	replace
4	[BUG]  [BUGGY]  Annotation  <?>  isInfinite  =  false;  [CE]  not  a  statement  [FE]                    AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Annotation  <?>  isInfinite  =  false;  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Annotation  <?>  isInfinite  =  false;	      if(isInfinite)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	4	None	replace
5	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite  ||  isZero)  {  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isNaN  ||  isInfinite  ||  isZero)  {  [BUGGY]    return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isNaN  ||  isInfinite  ||  isZero)  {	  if(isNaN    ||    isInfinite)    {    	non-compiled	[CE]  not  a  statement	7	None	replace
6	[BUG]  [BUGGY]  if(isNaN  ||  isZero  ||  isInfinite)  {  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isNaN  ||  isZero  ||  isInfinite)  {  [BUGGY]    return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isNaN  ||  isZero  ||  isInfinite)  {	  if(isNaN    ||    isInfinite)    {    	non-compiled	[CE]  not  a  statement	7	None	replace
7	[BUG]  [BUGGY]  if(isInfinite  ||!isNaN)  {  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isInfinite  ||!isNaN)  {  [BUGGY]    return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isInfinite  ||!isNaN)  {	  if(!isNaN)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
8	[BUG]  [BUGGY]  if(!isInfinite)  {  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(!isInfinite)  {  [BUGGY]    return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(!isInfinite)  {	  if(!isNaN)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
9	[BUG]  [BUGGY]  While(isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  While(isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	While(isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	      if(isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	3	None	replace
10	[BUG]  [BUGGY]  While(isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  While(isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	While(isNaN)  {  throw  new  IllegalArgumentException( " ");  }	      if(isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	3	None	replace
11	[BUG]  [BUGGY]  Annotation  <  N,  E>  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Annotation  <  N,  E>  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Annotation  <  N,  E>  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	      if(isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	3	None	replace
12	[BUG]  [BUGGY]  While(isInfinite)  {  Throwable  cause  =  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  While(isInfinite)  {  Throwable  cause  =  new  IllegalArgumentException( " ");  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	While(isInfinite)  {  Throwable  cause  =  new  IllegalArgumentException( " ");	      if(isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	3	None	replace
13	[BUG]  [BUGGY]  if(isInfinite)  {  return  NaN;  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isInfinite)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isInfinite)  {  return  NaN;  }	      if(isZero)    {    if(isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	13	None	replace
14	[BUG]  [BUGGY]  Annotation  <?>  isInfinite  =  true;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Annotation  <?>  isInfinite  =  true;  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Annotation  <?>  isInfinite  =  true;	      if(isZero)    {    if(isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	13	None	replace
15	[BUG]  [BUGGY]  Annotation  <  K,  V>  isZero  =  getInfinite();  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Annotation  <  K,  V>  isZero  =  getInfinite();  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Annotation  <  K,  V>  isZero  =  getInfinite();	      if(isZero)    {    if(isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	13	None	replace
16	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isInfinite  ||  isNaN)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isInfinite  ||  isNaN)  {  return  NaN;  }	      if(isNaN    ||    isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	5	None	replace
17	[BUG]  [BUGGY]  ||  isInfinite)  {  return  NaN;  }  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  ||  isInfinite)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	||  isInfinite)  {  return  NaN;  }	      if(isNaN    ||    isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	5	None	replace
18	[BUG]  [BUGGY]  ||  isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  ||  isNaN)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	||  isNaN)  {  return  NaN;  }	      if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
19	[BUG]  [BUGGY]  While(isInfinite)  {  if(isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  While(isInfinite)  {  if(isNaN)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	While(isInfinite)  {  if(isNaN)  {  return  NaN;  }	      if(isZero)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
20	[BUG]  [BUGGY]  Annotation  <  K,  V>  isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Annotation  <  K,  V>  isNaN)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Annotation  <  K,  V>  isNaN)  {  return  NaN;  }	      if(isZero)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
21	[BUG]  [BUGGY]  Annotation  <?>  isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Annotation  <?>  isNaN)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Annotation  <?>  isNaN)  {  return  NaN;  }	      if(isZero)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
22	[BUG]  [BUGGY]  While(isInfinite)  {  if(isZero)  {  return  NaN;  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  While(isInfinite)  {  if(isZero)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	While(isInfinite)  {  if(isZero)  {  return  NaN;  }	      if(isZero)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
23	[BUG]  [BUGGY]  if(isInfinite  ||  isZero)  {  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isInfinite  ||  isZero)  {  [BUGGY]    return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isInfinite  ||  isZero)  {	  if(isInfinite)    {    	non-compiled	[CE]  not  a  statement	6	None	replace
24	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN  ||  isZero)  {  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isInfinite  ||  isNaN  ||  isZero)  {  [BUGGY]    return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isInfinite  ||  isNaN  ||  isZero)  {	  if(isInfinite    ||    isNaN)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
25	[BUG]  [BUGGY]  if(isInfinite  &&  isNaN)  {  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isInfinite  &&  isNaN)  {  [BUGGY]    return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isInfinite  &&  isNaN)  {	  if(isInfinite    ||    isNaN)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
26	[BUG]  [BUGGY]  Annotation  <?>  isNaN)  {  if(isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Annotation  <?>  isNaN)  {  if(isNaN)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Annotation  <?>  isNaN)  {  if(isNaN)  {  return  NaN;  }	      if(isNaN)    {    if(isZero)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
27	[BUG]  [BUGGY]  Annotation  <  K,  V>  isNaN)  {  if(isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Annotation  <  K,  V>  isNaN)  {  if(isNaN)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Annotation  <  K,  V>  isNaN)  {  if(isNaN)  {  return  NaN;  }	      if(isNaN)    {    if(isZero)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
28	[BUG]  [BUGGY]  Annotation  <  T>  isNaN)  {  if(isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Annotation  <  T>  isNaN)  {  if(isNaN)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Annotation  <  T>  isNaN)  {  if(isNaN)  {  return  NaN;  }	      if(isNaN)    {    if(isZero)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
29	[BUG]  [BUGGY]  Annotation  <  N,  E>  isNaN)  {  if(isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Annotation  <  N,  E>  isNaN)  {  if(isNaN)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Annotation  <  N,  E>  isNaN)  {  if(isNaN)  {  return  NaN;  }	      if(isNaN)    {    if(isZero)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
30	[BUG]  [BUGGY]  if(isInfinite  ||  isZero)  {  return  NaN;  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isInfinite  ||  isZero)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isInfinite  ||  isZero)  {  return  NaN;  }	      if(isNaN    ||    isZero)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
31	[BUG]  [BUGGY]  if(isNaN  ||  isZero  ||  isInfinite)  {  return  NaN;  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isNaN  ||  isZero  ||  isInfinite)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isNaN  ||  isZero  ||  isInfinite)  {  return  NaN;  }	      if(isNaN    ||    isZero)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
32	[BUG]  [BUGGY]  Complex  isZero  =  getINF();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Complex  isZero  =  getINF();  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Complex  isZero  =  getINF();	      Complex    isZero    =    getZero();    	non-compiled	[CE]  not  a  statement	14	None	replace
33	[BUG]  [BUGGY]  Complex  isZero  =  getInfinite();  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Complex  isZero  =  getInfinite();  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Complex  isZero  =  getInfinite();	      Complex    isZero    =    getZero();    	non-compiled	[CE]  not  a  statement	14	None	replace
34	[BUG]  [BUGGY]  Complex  isZero  =  getDenominator();  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Complex  isZero  =  getDenominator();  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Complex  isZero  =  getDenominator();	      Complex    isZero    =    getZero();    	non-compiled	[CE]  not  a  statement	14	None	replace
35	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
36	[BUG]  [BUGGY]  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
37	[BUG]  [BUGGY]  Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
38	[BUG]  [BUGGY]  if(isNaN  ||  isZero)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isNaN  ||  isZero)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isNaN  ||  isZero)  {  throw  new  IllegalArgumentException( " ");  }	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
39	[BUG]  [BUGGY]  Annotation  <?>  isNaN)  {  if(isZero)  {  return  NaN;  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Annotation  <?>  isNaN)  {  if(isZero)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Annotation  <?>  isNaN)  {  if(isZero)  {  return  NaN;  }	      if(isNaN)    {    if(isZero)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
40	[BUG]  [BUGGY]  Annotation  <  N,  E>  isNaN)  {  if(isZero)  {  return  NaN;  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Annotation  <  N,  E>  isNaN)  {  if(isZero)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Annotation  <  N,  E>  isNaN)  {  if(isZero)  {  return  NaN;  }	      if(isNaN)    {    if(isZero)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
41	[BUG]  [BUGGY]  if(isNaN  ||  isZero)  {  return  this;  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isNaN  ||  isZero)  {  return  this;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isNaN  ||  isZero)  {  return  this;  }	      if(isNaN    ||    isZero)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
42	[BUG]  [BUGGY]  if(isNaN)  {  if(isInfinite)  {  return  NaN;  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isNaN)  {  if(isInfinite)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isNaN)  {  if(isInfinite)  {  return  NaN;  }	      if(isZero)    {    if(isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	13	None	replace
43	[BUG]  [BUGGY]  Context.checkInfinite(isInfinite);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Context.checkInfinite(isInfinite);  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Context.checkInfinite(isInfinite);	      if(isZero)    {    if(isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	13	None	replace
44	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN  ||  imaginary)  {  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isInfinite  ||  isNaN  ||  imaginary)  {  [BUGGY]    return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isInfinite  ||  isNaN  ||  imaginary)  {	  if(isInfinite    ||    isNaN)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
45	[BUG]  [BUGGY]  if(isZero)  {  return  NaN;  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isZero)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isZero)  {  return  NaN;  }	      if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
46	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ".);  }	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
47	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( ". ");  }	      if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	2	None	replace
48	[BUG]  [BUGGY]  if(!isNaN  &&  isInfinite)  {  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(!isNaN  &&  isInfinite)  {  [BUGGY]    return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(!isNaN  &&  isInfinite)  {	  if(isNaN    ||    isInfinite)    {    	non-compiled	[CE]  not  a  statement	7	None	replace
49	[BUG]  [BUGGY]  While(isInfinite)  {  Throwable  throwable  =  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  While(isInfinite)  {  Throwable  throwable  =  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	While(isInfinite)  {  Throwable  throwable  =  new  IllegalArgumentException( " ");  }	      if(isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	3	None	replace
50	[BUG]  [BUGGY]  Parchet.checkNotNull(atan);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Parchet.checkNotNull(atan);  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Parchet.checkNotNull(atan);	      if(isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	3	None	replace
51	[BUG]  [BUGGY]  Parchet.checkState(isNaN);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Parchet.checkState(isNaN);  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Parchet.checkState(isNaN);	      if(isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	3	None	replace
52	[BUG]  [BUGGY]  if(isZero  ||  isInfinite)  {  return  NaN;  }  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isZero  ||  isInfinite)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isZero  ||  isInfinite)  {  return  NaN;  }	      if(isNaN    ||    isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	5	None	replace
53	[BUG]  [BUGGY]  if(isZero  ||  isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isZero  ||  isNaN)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isZero  ||  isNaN)  {  return  NaN;  }	      if(isNaN    ||    isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	5	None	replace
54	[BUG]  [BUGGY]  if(!isNaN  &&  isZero)  {  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(!isNaN  &&  isZero)  {  [BUGGY]    return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(!isNaN  &&  isZero)  {	  if(!isNaN)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
55	[BUG]  [BUGGY]  if(!isNaN  ||  isZero)  {  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(!isNaN  ||  isZero)  {  [BUGGY]    return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(!isNaN  ||  isZero)  {	  if(!isNaN)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
56	[BUG]  [BUGGY]  Iterator  <  Complex>  it  =  this.getINFs().iterator();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Iterator  <  Complex>  it  =  this.getINFs().iterator();  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Iterator  <  Complex>  it  =  this.getINFs().iterator();	      if(isZero)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
57	[BUG]  [BUGGY]  Iterator  <  Complex>  is  =  this.getINFs().iterator();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Iterator  <  Complex>  is  =  this.getINFs().iterator();  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Iterator  <  Complex>  is  =  this.getINFs().iterator();	      if(isZero)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
58	[BUG]  [BUGGY]  Annotation  <?>  isZero  =  getZero();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Annotation  <?>  isZero  =  getZero();  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Annotation  <?>  isZero  =  getZero();	      if(isZero)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
59	[BUG]  [BUGGY]  Parchet.checkNotNull(this);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Parchet.checkNotNull(this);  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Parchet.checkNotNull(this);	      if(isZero)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	11	None	replace
60	[BUG]  [BUGGY]  Complex  isZero  =  getZero(false);  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  Complex  isZero  =  getZero(false);  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	Complex  isZero  =  getZero(false);	      Complex    isZero    =    getZero();    	non-compiled	[CE]  not  a  statement	14	None	replace
61	[BUG]  [BUGGY]  if(!isNaN  ||  isInfinite)  {  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(!isNaN  ||  isInfinite)  {  [BUGGY]    return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(!isNaN  ||  isInfinite)  {	  if(!isNaN)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
62	[BUG]  [BUGGY]  if(!isInfinite)  {  return  NaN;  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(!isInfinite)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(!isInfinite)  {  return  NaN;  }	      if(isZero)    {    if(isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	13	None	replace
63	[BUG]  [BUGGY]  if(!isZero)  {  if(isInfinite)  {  return  NaN;  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(!isZero)  {  if(isInfinite)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(!isZero)  {  if(isInfinite)  {  return  NaN;  }	      if(isZero)    {    if(isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	13	None	replace
64	[BUG]  [BUGGY]  if(isNaN  ||  isZero  ||  factor)  {  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(isNaN  ||  isZero  ||  factor)  {  [BUGGY]    return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isNaN  ||  isZero  ||  factor)  {	  if(isNaN    ||    isZero)    {    	non-compiled	[CE]  not  a  statement	9	None	replace
65	[BUG]  [BUGGY]  [Delete]  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  [Delete]  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	[Delete]	      if(isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	3	None	replace
66	[BUG]  [BUGGY]  While(isNaN)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  While(isNaN)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	While(isNaN)  {  throw  new  IllegalArgumentException( " "));  }	      if(isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	3	None	replace
67	[BUG]  [BUGGY]  if(!isInfinite)  {  if(isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  Complex  atan()  {    [BUGGY]  if(!isInfinite)  {  if(isNaN)  {  return  NaN;  }  [BUGGY]    if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(!isInfinite)  {  if(isNaN)  {  return  NaN;  }	      if(isInfinite)    {    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  not  a  statement	4	None	replace
