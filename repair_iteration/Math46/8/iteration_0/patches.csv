bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  public  Complex  atan()  {  [BUGGY]    if(isNaN)  {  return  NaN;  }  [BUGGY]  if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	    if(isNaN)  {  return  NaN;  }		non-compiled	[CE]  not  a  statement	16	None	add
2	[BUG]  [BUGGY]    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]  public  Complex  atan()  {  [BUGGY]    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  not  a  statement	16	None	add
3	[BUG]  [BUGGY]    if(isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        AssertionError  [CONTEXT]  public  Complex  atan()  {  [BUGGY]    if(isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	    if(isNaN)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  not  a  statement	16	None	add
4	[BUG]  [BUGGY]    if(isInfinite)  {  if(isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]          AssertionError  [CONTEXT]  public  Complex  atan()  {  [BUGGY]    if(isInfinite)  {  if(isNaN)  {  return  NaN;  }  [BUGGY]  if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	    if(isInfinite)  {  if(isNaN)  {  return  NaN;  }		non-compiled	[CE]  not  a  statement	16	None	add
5	[BUG]  [BUGGY]    if(isNaN  ||  isInfinite)  {  return  NaN;  }  [CE]  not  a  statement  [FE]            AssertionError  [CONTEXT]  public  Complex  atan()  {  [BUGGY]    if(isNaN  ||  isInfinite)  {  return  NaN;  }  [BUGGY]  if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	    if(isNaN  ||  isInfinite)  {  return  NaN;  }		non-compiled	[CE]  not  a  statement	16	None	add
6	[BUG]  [BUGGY]  if(isInfinite)  {  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  public  Complex  atan()  {  [BUGGY]  if(isInfinite)  {  [BUGGY]  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isInfinite)  {	if  (isNaN)  {  	non-compiled	[CE]  not  a  statement	15	None	replace
7	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]  public  Complex  atan()  {  [BUGGY]  if(isNaN  ||  isInfinite)  {  [BUGGY]  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isNaN  ||  isInfinite)  {	if  (isNaN)  {  	non-compiled	[CE]  not  a  statement	15	None	replace
8	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  [CE]  not  a  statement  [FE]        AssertionError  [CONTEXT]  public  Complex  atan()  {  [BUGGY]  if(isInfinite  ||  isNaN)  {  [BUGGY]  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isInfinite  ||  isNaN)  {	if  (isNaN)  {  	non-compiled	[CE]  not  a  statement	15	None	replace
9	[BUG]  [BUGGY]  if(isNaN  ||  isZero)  {  [CE]  not  a  statement  [FE]          AssertionError  [CONTEXT]  public  Complex  atan()  {  [BUGGY]  if(isNaN  ||  isZero)  {  [BUGGY]  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(isNaN  ||  isZero)  {	if  (isNaN)  {  	non-compiled	[CE]  not  a  statement	15	None	replace
10	[BUG]  [BUGGY]  if(!isNaN)  {  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  public  Complex  atan()  {  [BUGGY]  if(!isNaN)  {  [BUGGY]  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	if(!isNaN)  {	if  (isNaN)  {  	non-compiled	[CE]  not  a  statement	15	None	replace
11	[BUG]  [BUGGY]    if(isZero)  {  if(isNaN)  {  return  NaN;  }  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  public  Complex  atan()  {  [BUGGY]    if(isZero)  {  if(isNaN)  {  return  NaN;  }  [BUGGY]  if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	    if(isZero)  {  if(isNaN)  {  return  NaN;  }		non-compiled	[CE]  not  a  statement	16	None	add
12	[BUG]  [BUGGY]    if(isNaN)  {  if(isZero)  {  return  NaN;  }  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]  public  Complex  atan()  {  [BUGGY]    if(isNaN)  {  if(isZero)  {  return  NaN;  }  [BUGGY]  if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	    if(isNaN)  {  if(isZero)  {  return  NaN;  }		non-compiled	[CE]  not  a  statement	16	None	add
13	[BUG]  [BUGGY]    if(isZero)  {  if(isInfinite)  {  return  NaN;  }  [CE]  not  a  statement  [FE]        AssertionError  [CONTEXT]  public  Complex  atan()  {  [BUGGY]    if(isZero)  {  if(isInfinite)  {  return  NaN;  }  [BUGGY]  if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	    if(isZero)  {  if(isInfinite)  {  return  NaN;  }		non-compiled	[CE]  not  a  statement	16	None	add
14	[BUG]  [BUGGY]    Complex  isZero  =  getZero();  [CE]  not  a  statement  [FE]          AssertionError  [CONTEXT]  public  Complex  atan()  {  [BUGGY]    Complex  isZero  =  getZero();  [BUGGY]  if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	    Complex  isZero  =  getZero();		non-compiled	[CE]  not  a  statement	16	None	add
15	[BUG]  [BUGGY]    if(isNaN  ||  isZero)  {  return  NaN;  }  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  public  Complex  atan()  {  [BUGGY]    if(isNaN  ||  isZero)  {  return  NaN;  }  [BUGGY]  if  (isNaN)  {  return  NaN;  }  return  this.add(I).divide(I.subtract(this)).log()  .multiply(I.divide(createComplex(2.0,  0.0)));  }  [CLASS]  Complex  [METHOD]  atan  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  subtrahend  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	583	583	2	replace	    if(isNaN  ||  isZero)  {  return  NaN;  }		non-compiled	[CE]  not  a  statement	16	None	add
