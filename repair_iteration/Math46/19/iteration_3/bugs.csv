bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Real  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());	  Real    real    =    createComplex(real,    imaginary    -    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	2	None	replace
2	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  imaginary  *  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real,  imaginary  *  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Real  real  =  createComplex(real,  imaginary  *  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());	  Real    real    =    createComplex(real,    imaginary    -    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	2	None	replace
3	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());	  Complex    real    =    createComplex(imaginary    -    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	5	None	replace
4	[BUG]  [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  denominator  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  denominator  -  subtrahend.getDenominator());  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	return  createComplex(imaginary  -  subtrahend.getReal(),  denominator  -  subtrahend.getDenominator());	  return    createComplex(imaginary    -    subtrahend.getReal(),    imaginary    -    subtrahend.getDenominator());    	non-compiled	[CE]  not  a  statement	11	None	replace
5	[BUG]  [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  factor  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  factor  -  subtrahend.getDenominator());  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	return  createComplex(imaginary  -  subtrahend.getReal(),  factor  -  subtrahend.getDenominator());	  return    createComplex(imaginary    -    subtrahend.getReal(),    imaginary    -    subtrahend.getDenominator());    	non-compiled	[CE]  not  a  statement	11	None	replace
6	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getRaw(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getRaw(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Real  real  =  createComplex(imaginary  -  subtrahend.getRaw(),  imaginary  -  subtrahend.getImaginary());	  Real    real    =    createComplex(imaginary    -    subtrahend.getReal(),    real    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	8	None	replace
7	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getINF(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getINF(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Real  real  =  createComplex(imaginary  -  subtrahend.getINF(),  imaginary  -  subtrahend.getImaginary());	  Real    real    =    createComplex(imaginary    -    subtrahend.getReal(),    real    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	8	None	replace
8	[BUG]  [BUGGY]  return  createComplex(imaginary  -  subtrahend.getImaginary(),  real  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(imaginary  -  subtrahend.getImaginary(),  real  -  subtrahend.getImaginary());  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	return  createComplex(imaginary  -  subtrahend.getImaginary(),  real  -  subtrahend.getImaginary());	  return    createComplex(imaginary    -    subtrahend.getImaginary(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	28	None	replace
9	[BUG]  [BUGGY]  return  createComplex(imaginary  -  subtrahend.getImaginary(),  denominator  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(imaginary  -  subtrahend.getImaginary(),  denominator  -  subtrahend.getImaginary());  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	return  createComplex(imaginary  -  subtrahend.getImaginary(),  denominator  -  subtrahend.getImaginary());	  return    createComplex(imaginary    -    subtrahend.getImaginary(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	28	None	replace
10	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());	  Complex    real    =    createComplex(imaginary,    imaginary    -    subtrahend.getReal());    	non-compiled	[CE]  not  a  statement	25	None	replace
11	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getImaginary());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getImaginary());	  Complex    real    =    createComplex(imaginary,    imaginary    -    subtrahend.getReal());    	non-compiled	[CE]  not  a  statement	25	None	replace
12	[BUG]  [BUGGY]  Complex  imaginary  =  getImaginary(real);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  imaginary  =  getImaginary(real);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  imaginary  =  getImaginary(real);	  Complex    imaginary    =    getImaginary(subtrahend);    	non-compiled	[CE]  not  a  statement	27	None	replace
13	[BUG]  [BUGGY]  Complex  imaginary  =  getImaginary(d,  subtrahend);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  imaginary  =  getImaginary(d,  subtrahend);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  imaginary  =  getImaginary(d,  subtrahend);	  Complex    imaginary    =    getImaginary(subtrahend);    	non-compiled	[CE]  not  a  statement	27	None	replace
14	[BUG]  [BUGGY]  Complex  imaginary  =  getImaginary(d);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  imaginary  =  getImaginary(d);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  imaginary  =  getImaginary(d);	  Complex    imaginary    =    getImaginary(subtrahend);    	non-compiled	[CE]  not  a  statement	27	None	replace
15	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  subtrahend.getReal()  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary,  subtrahend.getReal()  -  subtrahend.getImaginary());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  real  =  createComplex(imaginary,  subtrahend.getReal()  -  subtrahend.getImaginary());	  Complex    real    =    createComplex(real,    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	29	None	replace
16	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getDenominator());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getDenominator());	  Real    real    =    createComplex(real    -    subtrahend.getReal(),    imaginary    -    subtrahend.getDenominator());    	non-compiled	[CE]  not  a  statement	9	None	replace
17	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());	  Real    real    =    createComplex(real    -    subtrahend.getReal(),    imaginary    -    subtrahend.getDenominator());    	non-compiled	[CE]  not  a  statement	9	None	replace
18	[BUG]  [BUGGY]  return  createComplex(real  -  subtrahend.getReal(),  denominator  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(real  -  subtrahend.getReal(),  denominator  -  subtrahend.getImaginary());  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	return  createComplex(real  -  subtrahend.getReal(),  denominator  -  subtrahend.getImaginary());	  return    createComplex(imaginary    -    subtrahend.getReal(),    denominator    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	12	None	replace
19	[BUG]  [BUGGY]  return  createComplex(denominator  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(denominator  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	return  createComplex(denominator  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());	  return    createComplex(imaginary    -    subtrahend.getReal(),    denominator    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	12	None	replace
20	[BUG]  [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  denominator  -  factor.getImaginary());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  denominator  -  factor.getImaginary());  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	return  createComplex(imaginary  -  subtrahend.getReal(),  denominator  -  factor.getImaginary());	  return    createComplex(imaginary    -    subtrahend.getReal(),    denominator    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	12	None	replace
21	[BUG]  [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  factor  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(imaginary  -  subtrahend.getReal(),  factor  -  subtrahend.getImaginary());  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	return  createComplex(imaginary  -  subtrahend.getReal(),  factor  -  subtrahend.getImaginary());	  return    createComplex(imaginary    -    subtrahend.getReal(),    denominator    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	12	None	replace
22	[BUG]  [BUGGY]  nisipisZero  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  nisipisZero  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	nisipisZero  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isZero)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	31	None	replace
23	[BUG]  [BUGGY]  nisipa  ||  nisipa  ||  nisipa)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  nisipa  ||  nisipa  ||  nisipa)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	nisipa  ||  nisipa  ||  nisipa)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isZero)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	31	None	replace
24	[BUG]  [BUGGY]  nisipa  ||  nisipa)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  nisipa  ||  nisipa)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	nisipa  ||  nisipa)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isZero)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	31	None	replace
25	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary(),  denominator;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary(),  denominator;  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary(),  denominator;	  Real    real    =    createComplex(imaginary    -    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary();    	non-compiled	[CE]  not  a  statement	18	None	replace
26	[BUG]  [BUGGY]  Real  real  =  createComplex(subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Real  real  =  createComplex(subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());	  Complex    real    =    createComplex(real.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	21	None	replace
27	[BUG]  [BUGGY]  Complex  real  =  createComplex(contrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(contrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  real  =  createComplex(contrahend.getReal(),  imaginary  -  subtrahend.getImaginary());	  Complex    real    =    createComplex(real.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	21	None	replace
28	[BUG]  [BUGGY]  MathUtils.checkState(isInfinite  ||  isNaN);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkState(isInfinite  ||  isNaN);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MathUtils.checkState(isInfinite  ||  isNaN);	  MathUtils.checkState(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	15	None	replace
29	[BUG]  [BUGGY]  MathUtils.checkState(isNaN  ||  isZero);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkState(isNaN  ||  isZero);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MathUtils.checkState(isNaN  ||  isZero);	  MathUtils.checkState(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	15	None	replace
30	[BUG]  [BUGGY]  MathUtils.checkState(isNaN  &&  isInfinite);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkState(isNaN  &&  isInfinite);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MathUtils.checkState(isNaN  &&  isInfinite);	  MathUtils.checkState(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	15	None	replace
31	[BUG]  [BUGGY]  MathUtils.checkState(isInfinite  &&  isNaN);  [CE]  not  a  statement  [FE]                            AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkState(isInfinite  &&  isNaN);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MathUtils.checkState(isInfinite  &&  isNaN);	  MathUtils.checkState(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	15	None	replace
32	[BUG]  [BUGGY]  MathUtils.checkNotNull(imaginary);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkNotNull(imaginary);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MathUtils.checkNotNull(imaginary);	  MathUtils.checkNotNull(subtrahend);    	non-compiled	[CE]  not  a  statement	14	None	replace
33	[BUG]  [BUGGY]  MathUtils.checkNotNull(real,  subtrahend);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkNotNull(real,  subtrahend);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MathUtils.checkNotNull(real,  subtrahend);	  MathUtils.checkNotNull(subtrahend);    	non-compiled	[CE]  not  a  statement	14	None	replace
34	[BUG]  [BUGGY]  return  createComplex(real  -  subtrahend.getImaginary(),  real  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(real  -  subtrahend.getImaginary(),  real  -  subtrahend.getImaginary());  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	return  createComplex(real  -  subtrahend.getImaginary(),  real  -  subtrahend.getImaginary());	  return    createComplex(real    -    subtrahend.getImaginary(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	17	None	replace
35	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getReal(),  denominator);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getReal(),  denominator);  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getReal(),  denominator);	  Complex    real    =    createComplex(real,    imaginary    -    subtrahend.getReal(),    imaginary);    	non-compiled	[CE]  not  a  statement	7	None	replace
36	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary);	  Complex    real    =    createComplex(real,    imaginary    -    subtrahend.getReal(),    imaginary);    	non-compiled	[CE]  not  a  statement	7	None	replace
37	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal(),  denominator);  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal(),  denominator);  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal(),  denominator);	  Complex    real    =    createComplex(real,    imaginary    -    subtrahend.getReal(),    imaginary);    	non-compiled	[CE]  not  a  statement	7	None	replace
38	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(real,  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  real  =  createComplex(real,  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());	  Complex    real    =    createComplex(imaginary,    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	6	None	replace
39	[BUG]  [BUGGY]  Complex  real  =  createComplex(subtrahend,  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(subtrahend,  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  real  =  createComplex(subtrahend,  subtrahend.getReal(),  imaginary  -  subtrahend.getImaginary());	  Complex    real    =    createComplex(imaginary,    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	6	None	replace
40	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary,  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  real  =  createComplex(imaginary,  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());	  Complex    real    =    createComplex(imaginary,    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	6	None	replace
41	[BUG]  [BUGGY]  MathUtils.checkArgument(isNaN  ||  isInfinite);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkArgument(isNaN  ||  isInfinite);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MathUtils.checkArgument(isNaN  ||  isInfinite);	  MathUtils.checkArgument(isNaN    ||    isZero);    	non-compiled	[CE]  not  a  statement	26	None	replace
42	[BUG]  [BUGGY]  MathUtils.checkArgument(isInfinite  ||  isZero);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkArgument(isInfinite  ||  isZero);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MathUtils.checkArgument(isInfinite  ||  isZero);	  MathUtils.checkArgument(isNaN    ||    isZero);    	non-compiled	[CE]  not  a  statement	26	None	replace
43	[BUG]  [BUGGY]  MathUtils.checkArgument(isNaN  &&  isZero);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkArgument(isNaN  &&  isZero);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MathUtils.checkArgument(isNaN  &&  isZero);	  MathUtils.checkArgument(isNaN    ||    isZero);    	non-compiled	[CE]  not  a  statement	26	None	replace
44	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getDenominator());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  real  -  subtrahend.getDenominator());	  Complex    real    =    createComplex(real    -    subtrahend.getReal(),    imaginary    -    subtrahend.getDenominator());    	non-compiled	[CE]  not  a  statement	24	None	replace
45	[BUG]  [BUGGY]  Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	30	None	replace
46	[BUG]  [BUGGY]  Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Context.checkState(isInfinite  ||  isNaN)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	30	None	replace
47	[BUG]  [BUGGY]  Context.checkNotNull(subtrahend);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Context.checkNotNull(subtrahend);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Context.checkNotNull(subtrahend);	  if(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	30	None	replace
48	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal());  imaginary  -  subtrahend.getImaginary();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal());  imaginary  -  subtrahend.getImaginary();  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Real  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal());  imaginary  -  subtrahend.getImaginary();	  Real    real    =    createComplex(real,    imaginary    -    subtrahend.getReal());    imaginary    -    subtrahend.getImaginary();    	non-compiled	[CE]  not  a  statement	3	None	replace
49	[BUG]  [BUGGY]  Complex  real  =  createComplex(real.getReal(),  imaginary  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(real.getReal(),  imaginary  -  subtrahend.getDenominator());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  real  =  createComplex(real.getReal(),  imaginary  -  subtrahend.getDenominator());	  Complex    real    =    createComplex(real.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	21	None	replace
50	[BUG]  [BUGGY]  Real  real  =  createComplex(real.getReal(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real.getReal(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Real  real  =  createComplex(real.getReal(),  imaginary  -  subtrahend.getImaginary());	  Complex    real    =    createComplex(real.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	21	None	replace
51	[BUG]  [BUGGY]  return  createComplex(imaginary  -  subtrahend.getImaginary(),  imaginary  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(imaginary  -  subtrahend.getImaginary(),  imaginary  -  subtrahend.getDenominator());  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	return  createComplex(imaginary  -  subtrahend.getImaginary(),  imaginary  -  subtrahend.getDenominator());	  return    createComplex(imaginary    -    subtrahend.getImaginary(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	28	None	replace
52	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  -  subtrahend.getReal());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary  -  subtrahend.getReal());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  real  =  createComplex(imaginary  -  subtrahend.getReal());	  Complex    real    =    createComplex(real,    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	29	None	replace
53	[BUG]  [BUGGY]  MathUtils.checkState(isNaN  ||  isNaN);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkState(isNaN  ||  isNaN);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MathUtils.checkState(isNaN  ||  isNaN);	  MathUtils.checkNotNull(subtrahend);    	non-compiled	[CE]  not  a  statement	14	None	replace
54	[BUG]  [BUGGY]  MathUtils.checkNotNull(imaginary,  subtrahend);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkNotNull(imaginary,  subtrahend);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MathUtils.checkNotNull(imaginary,  subtrahend);	  MathUtils.checkNotNull(subtrahend);    	non-compiled	[CE]  not  a  statement	14	None	replace
55	[BUG]  [BUGGY]  MutableToInfinite.infinite(real,  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MutableToInfinite.infinite(real,  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MutableToInfinite.infinite(real,  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	30	None	replace
56	[BUG]  [BUGGY]  MutableToInfinite.isInfinite(real,  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MutableToInfinite.isInfinite(real,  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MutableToInfinite.isInfinite(real,  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	30	None	replace
57	[BUG]  [BUGGY]  MutableToInfinite.isNaN(real)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MutableToInfinite.isNaN(real)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MutableToInfinite.isNaN(real)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	30	None	replace
58	[BUG]  [BUGGY]  MutableToInfinite.isInfinite(real)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MutableToInfinite.isInfinite(real)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MutableToInfinite.isInfinite(real)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	30	None	replace
59	[BUG]  [BUGGY]  nisipToAdd(real)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  nisipToAdd(real)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	nisipToAdd(real)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isZero)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	31	None	replace
60	[BUG]  [BUGGY]  MutableToInfinite.infinite(real,  subtrahend)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MutableToInfinite.infinite(real,  subtrahend)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MutableToInfinite.infinite(real,  subtrahend)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isZero)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	31	None	replace
61	[BUG]  [BUGGY]  MathUtils.checkArgument(isNaN  ||  imaginary);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkArgument(isNaN  ||  imaginary);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MathUtils.checkArgument(isNaN  ||  imaginary);	  MathUtils.checkArgument(isNaN    ||    isZero);    	non-compiled	[CE]  not  a  statement	26	None	replace
62	[BUG]  [BUGGY]  MathUtils.checkArgument(isNaN  ||  isZero  +  imaginary);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkArgument(isNaN  ||  isZero  +  imaginary);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MathUtils.checkArgument(isNaN  ||  isZero  +  imaginary);	  MathUtils.checkArgument(isNaN    ||    isZero);    	non-compiled	[CE]  not  a  statement	26	None	replace
63	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDivisor());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDivisor());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDivisor());	  Real    real    =    createComplex(imaginary    -    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	1	None	replace
64	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  subtrahend.getReal(),  imaginary  -  subtrahend.getDivisor());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary,  subtrahend.getReal(),  imaginary  -  subtrahend.getDivisor());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  real  =  createComplex(imaginary,  subtrahend.getReal(),  imaginary  -  subtrahend.getDivisor());	  Complex    real    =    createComplex(imaginary,    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	6	None	replace
65	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  real  =  createComplex(real,  imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());	  Complex    real    =    createComplex(real,    imaginary    -    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	4	None	replace
66	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator();  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator();	  Real    real    =    createComplex(imaginary    -    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary();    	non-compiled	[CE]  not  a  statement	18	None	replace
67	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDivisor();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDivisor();  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDivisor();	  Real    real    =    createComplex(imaginary    -    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary();    	non-compiled	[CE]  not  a  statement	18	None	replace
68	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real,  imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Real  real  =  createComplex(real,  imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDenominator());	  Real    real    =    createComplex(real,    imaginary    -    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	2	None	replace
69	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDivisor());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDivisor());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary  -  subtrahend.getDivisor());	  Complex    real    =    createComplex(imaginary    -    subtrahend.getReal(),    imaginary    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	5	None	replace
70	[BUG]  [BUGGY]  return  createComplex(imaginary  -  subtrahend.getDenominator(),  imaginary  -  subtrahend.getDivisor());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(imaginary  -  subtrahend.getDenominator(),  imaginary  -  subtrahend.getDivisor());  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	return  createComplex(imaginary  -  subtrahend.getDenominator(),  imaginary  -  subtrahend.getDivisor());	  return    createComplex(imaginary    -    subtrahend.getReal(),    real    -    subtrahend.getDivisor());    	non-compiled	[CE]  not  a  statement	22	None	replace
71	[BUG]  [BUGGY]  Complex  imaginary  =  getImaginary(imaginary);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  imaginary  =  getImaginary(imaginary);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  imaginary  =  getImaginary(imaginary);	  Complex    imaginary    =    getImaginary(subtrahend);    	non-compiled	[CE]  not  a  statement	27	None	replace
72	[BUG]  [BUGGY]  Complex  imaginary  =  getImaginary(subtrahend.getDenominator());  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  imaginary  =  getImaginary(subtrahend.getDenominator());  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  imaginary  =  getImaginary(subtrahend.getDenominator());	  Complex    imaginary    =    getImaginary(subtrahend);    	non-compiled	[CE]  not  a  statement	27	None	replace
73	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  real);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  real);  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  real  =  createComplex(imaginary  -  subtrahend.getReal(),  real);	  Complex    real    =    createComplex(real,    imaginary    -    subtrahend.getReal(),    imaginary);    	non-compiled	[CE]  not  a  statement	7	None	replace
74	[BUG]  [BUGGY]  MathUtils.checkArgument(isNaN  ||  subtrahend.isNaN);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkArgument(isNaN  ||  subtrahend.isNaN);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MathUtils.checkArgument(isNaN  ||  subtrahend.isNaN);	  MathUtils.checkNotNull(subtrahend);    	non-compiled	[CE]  not  a  statement	14	None	replace
75	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getImaginary(),  imaginary  -  subtrahend.getImaginary());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getImaginary(),  imaginary  -  subtrahend.getImaginary());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Real  real  =  createComplex(imaginary  -  subtrahend.getImaginary(),  imaginary  -  subtrahend.getImaginary());	  Real    real    =    createComplex(imaginary    -    subtrahend.getReal(),    real    -    subtrahend.getImaginary());    	non-compiled	[CE]  not  a  statement	8	None	replace
76	[BUG]  [BUGGY]  Complex  imaginary  =  getImaginary(divisor);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  imaginary  =  getImaginary(divisor);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  imaginary  =  getImaginary(divisor);	  Complex    imaginary    =    getImaginary(subtrahend);    	non-compiled	[CE]  not  a  statement	27	None	replace
77	[BUG]  [BUGGY]  MathUtils.checkState(isNaN  ||  imaginary);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkState(isNaN  ||  imaginary);  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MathUtils.checkState(isNaN  ||  imaginary);	  MathUtils.checkState(isNaN    ||    isInfinite);    	non-compiled	[CE]  not  a  statement	15	None	replace
78	[BUG]  [BUGGY]  return  createComplex(imaginary  -  subtrahend.getImaginary(),  imaginary  -  subtrahend.getDivisor());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(imaginary  -  subtrahend.getImaginary(),  imaginary  -  subtrahend.getDivisor());  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	return  createComplex(imaginary  -  subtrahend.getImaginary(),  imaginary  -  subtrahend.getDivisor());	  return    createComplex(imaginary    -    subtrahend.getReal(),    real    -    subtrahend.getDivisor());    	non-compiled	[CE]  not  a  statement	22	None	replace
79	[BUG]  [BUGGY]  MutableToken.isInfinite(real,  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MutableToken.isInfinite(real,  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MutableToken.isInfinite(real,  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	30	None	replace
80	[BUG]  [BUGGY]  MutableToken.isInfinite(real)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  MutableToken.isInfinite(real)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	MutableToken.isInfinite(real)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	30	None	replace
81	[BUG]  [BUGGY]  if(isInfinite  ||  isZero  ||  imaginary)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero  ||  imaginary)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	if(isInfinite  ||  isZero  ||  imaginary)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isZero)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	31	None	replace
82	[BUG]  [BUGGY]  if(isInfinite  ||  isZero  ||  real)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  if(isInfinite  ||  isZero  ||  real)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	if(isInfinite  ||  isZero  ||  real)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isZero)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	31	None	replace
83	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  graph  -  subtrahend.getDenominator());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  graph  -  subtrahend.getDenominator());  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  graph  -  subtrahend.getDenominator());	  Real    real    =    createComplex(real    -    subtrahend.getReal(),    imaginary    -    subtrahend.getDenominator());    	non-compiled	[CE]  not  a  statement	9	None	replace
84	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Real  real  =  createComplex(imaginary  -  subtrahend.getReal(),  imaginary);	  Complex    real    =    createComplex(real,    imaginary    -    subtrahend.getReal(),    imaginary);    	non-compiled	[CE]  not  a  statement	7	None	replace
85	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal(),  imaginary);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  subtract(Complex  subtrahend)  throws  NullArgumentException  {  MathUtils.checkNotNull(subtrahend);  if  (isNaN  ||  subtrahend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  -  subtrahend.getReal(),        imaginary  -  subtrahend.getImaginary());  imaginary  -  subtrahend.getImaginary());  }  [CLASS]  Complex  [METHOD]  subtract  [RETURN_TYPE]  Complex  Complex  subtrahend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  factor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.20412414523193154	497	498	2	replace	Complex  real  =  createComplex(imaginary,  imaginary  -  subtrahend.getReal(),  imaginary);	  Complex    real    =    createComplex(real,    imaginary    -    subtrahend.getReal(),    imaginary);    	non-compiled	[CE]  not  a  statement	7	None	replace
