bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getNaNImaginary();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getNaNImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal();  imaginary  =  real.getNaNImaginary();	  Real    real    =    getReal();    imaginary    =    real.getINFImaginary();    	non-compiled	[CE]  not  a  statement	11	None	replace
2	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary);	  Real    real    =    createComplex(imaginary    +    addend.getReal());    	non-compiled	[CE]  not  a  statement	82	None	replace
3	[BUG]  [BUGGY]  Real  real  =  createComplex(real  +  addend.getReal());  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real  +  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createComplex(real  +  addend.getReal());	  Real    real    =    createComplex(imaginary    +    addend.getReal());    	non-compiled	[CE]  not  a  statement	82	None	replace
4	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  addend.getReal(),  imaginary);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real,  addend.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  Real.create(real,  addend.getReal(),  imaginary);	  Real    real    =    Real.create(real,    addend.getReal());    	non-compiled	[CE]  not  a  statement	15	None	replace
5	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  addend.getImaginary());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real,  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  Real.create(real,  addend.getImaginary());	  Real    real    =    Real.create(real,    addend.getReal());    	non-compiled	[CE]  not  a  statement	15	None	replace
6	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  addend.getINF());  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real,  addend.getINF());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  Real.create(real,  addend.getINF());	  Real    real    =    Real.create(real,    addend.getReal());    	non-compiled	[CE]  not  a  statement	15	None	replace
7	[BUG]  [BUGGY]  return  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getInf());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getInf());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	return  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getInf());	  return    createComplex(imaginary    +    addend.getReal(),    real    +    addend.getInf());    	non-compiled	[CE]  not  a  statement	85	None	replace
8	[BUG]  [BUGGY]  return  createComplex(real  +  addend.getReal(),  real  +  addend.getInf());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(real  +  addend.getReal(),  real  +  addend.getInf());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	return  createComplex(real  +  addend.getReal(),  real  +  addend.getInf());	  return    createComplex(imaginary    +    addend.getReal(),    real    +    addend.getInf());    	non-compiled	[CE]  not  a  statement	85	None	replace
9	[BUG]  [BUGGY]  return  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getInf());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getInf());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	return  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getInf());	  return    createComplex(imaginary    +    addend.getReal(),    real    +    addend.getInf());    	non-compiled	[CE]  not  a  statement	85	None	replace
10	[BUG]  [BUGGY]  Real.append(real).append(q);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.append(real).append(q);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.append(real).append(q);	  Real.append(real).append(imaginary);    	non-compiled	[CE]  not  a  statement	77	None	replace
11	[BUG]  [BUGGY]  Real.append(real).append(imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.append(real).append(imaginary  +  addend.getImaginary());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.append(real).append(imaginary  +  addend.getImaginary());	  Real.append(real).append(imaginary);    	non-compiled	[CE]  not  a  statement	77	None	replace
12	[BUG]  [BUGGY]  Real.append(real).append(imaginary  +  1);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.append(real).append(imaginary  +  1);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.append(real).append(imaginary  +  1);	  Real.append(real).append(imaginary);    	non-compiled	[CE]  not  a  statement	77	None	replace
13	[BUG]  [BUGGY]  Real  real  =  getINF(),  addend.getReal());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getINF(),  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getINF(),  addend.getReal());	  Real    real    =    getINF();    	non-compiled	[CE]  not  a  statement	3	None	replace
14	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getINF();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getINF();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal();  imaginary  =  real.getINF();	  Real    real    =    getReal();    imaginary    =    real.getNaN();    	non-compiled	[CE]  not  a  statement	12	None	replace
15	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getRawNaN();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getRawNaN();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal();  imaginary  =  real.getRawNaN();	  Real    real    =    getReal();    imaginary    =    real.getNaN();    	non-compiled	[CE]  not  a  statement	12	None	replace
16	[BUG]  [BUGGY]  Real  real  =  createReal(addend,  real);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(addend,  real);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(addend,  real);	  Real    real    =    createReal(real,    addend);    	non-compiled	[CE]  not  a  statement	45	None	replace
17	[BUG]  [BUGGY]  Real  real  =  createReal(addend,  addend);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(addend,  addend);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(addend,  addend);	  Real    real    =    createReal(real,    addend);    	non-compiled	[CE]  not  a  statement	45	None	replace
18	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  =  real  +  addend.getNaN();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  =  real  +  addend.getNaN();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal(),  imaginary  =  real  +  addend.getNaN();	  Real    real    =    getReal();    imaginary    =    real    +    addend.getNaN();    	non-compiled	[CE]  not  a  statement	63	None	replace
19	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary,  q);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(imaginary,  q);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(imaginary,  q);	  Real    real    =    createReal(imaginary,    imaginary);    	non-compiled	[CE]  not  a  statement	86	None	replace
20	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary,  true);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(imaginary,  true);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(imaginary,  true);	  Real    real    =    createReal(imaginary,    imaginary);    	non-compiled	[CE]  not  a  statement	86	None	replace
21	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary,  false);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(imaginary,  false);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(imaginary,  false);	  Real    real    =    createReal(imaginary,    imaginary);    	non-compiled	[CE]  not  a  statement	86	None	replace
22	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  +  addend.getImaginary();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal(),  imaginary  +  addend.getImaginary();	  Real    real    =    getReal(),    imaginary;    	non-compiled	[CE]  not  a  statement	56	None	replace
23	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  +  1;  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  +  1;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal(),  imaginary  +  1;	  Real    real    =    getReal(),    imaginary;    	non-compiled	[CE]  not  a  statement	56	None	replace
24	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal(),  imaginary  +  addend.getImaginary());	  Real    real    =    getReal(),    imaginary;    	non-compiled	[CE]  not  a  statement	56	None	replace
25	[BUG]  [BUGGY]  Real  real  =  getReal(),  isZero;  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  isZero;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal(),  isZero;	  Real    real    =    getReal(),    imaginary;    	non-compiled	[CE]  not  a  statement	56	None	replace
26	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getImaginary());	  Real    real    =    createComplex(real    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	23	None	replace
27	[BUG]  [BUGGY]  Real  real  =  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getINF());  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getINF());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getINF());	  Real    real    =    createComplex(real    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	23	None	replace
28	[BUG]  [BUGGY]  Real  =  real.getReal();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  real.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  real.getReal();	  Real    =    addend.getReal();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  not  a  statement	41	None	replace
29	[BUG]  [BUGGY]  Real  =  real.getReal();  imaginary  =  addend.getImaginary();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  real.getReal();  imaginary  =  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  real.getReal();  imaginary  =  addend.getImaginary();	  Real    =    addend.getReal();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  not  a  statement	41	None	replace
30	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getINFRandom());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getINFRandom());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getReal(),  imaginary  +  addend.getINFRandom());	  Real    +    addend.getReal(),    imaginary    +    addend.getRandom());    	non-compiled	[CE]  not  a  statement	65	None	replace
31	[BUG]  [BUGGY]  Real  +  addend.getRandom(),  imaginary  +  addend.getReal());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getRandom(),  imaginary  +  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getRandom(),  imaginary  +  addend.getReal());	  Real    +    addend.getReal(),    imaginary    +    addend.getRandom());    	non-compiled	[CE]  not  a  statement	65	None	replace
32	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getINFImaginary();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getINFImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getReal(),  imaginary  +  addend.getINFImaginary();	  Real    +    addend.getReal(),    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	28	None	replace
33	[BUG]  [BUGGY]  Real  +  addend.getINF(),  imaginary  +  addend.getImaginary();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getINF(),  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getINF(),  imaginary  +  addend.getImaginary();	  Real    +    addend.getReal(),    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	28	None	replace
34	[BUG]  [BUGGY]  Real  +  addend.getReal(),  real  +  addend.getImaginary();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  real  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getReal(),  real  +  addend.getImaginary();	  Real    +    addend.getReal(),    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	28	None	replace
35	[BUG]  [BUGGY]  Complex  real  =  createComplex(addend,  imaginary);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(addend,  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(addend,  imaginary);	  Complex    real    =    createComplex(imaginary,    imaginary);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
36	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  false);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary,  false);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(imaginary,  false);	  Complex    real    =    createComplex(imaginary,    imaginary);    	non-compiled	[CE]  not  a  statement	84	None	replace
37	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  true);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary,  true);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(imaginary,  true);	  Complex    real    =    createComplex(imaginary,    imaginary);    	non-compiled	[CE]  not  a  statement	84	None	replace
38	[BUG]  [BUGGY]  Complex  real  =  createComplex(addend,  addend.getReal());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(addend,  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(addend,  addend.getReal());	  Complex    real    =    createComplex(real,    addend.getReal());    	non-compiled	[CE]  not  a  statement	67	None	replace
39	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  addend.getReal(),  imaginary);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(real,  addend.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(real,  addend.getReal(),  imaginary);	  Complex    real    =    createComplex(real,    addend.getReal());    	non-compiled	[CE]  not  a  statement	67	None	replace
40	[BUG]  [BUGGY]  Complex  real  =  createComplex(addend.getReal(),  addend.getImaginary());  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(addend.getReal(),  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(addend.getReal(),  addend.getImaginary());	  Complex    real    =    createComplex(real,    addend.getReal());    	non-compiled	[CE]  not  a  statement	67	None	replace
41	[BUG]  [BUGGY]  Real  =  addend.getReal(),  imaginary  =  real.getImaginary();  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  addend.getReal(),  imaginary  =  real.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  addend.getReal(),  imaginary  =  real.getImaginary();	  Real    =    real.getReal(),    imaginary    =    real.getImaginary();    	non-compiled	[CE]  	70	None	replace
42	[BUG]  [BUGGY]  Real  =  real.getReal(),  imaginary  =  addend.getImaginary();  [CE]  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  real.getReal(),  imaginary  =  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  real.getReal(),  imaginary  =  addend.getImaginary();	  Real    =    real.getReal(),    imaginary    =    real.getImaginary();    	non-compiled	[CE]  	70	None	replace
43	[BUG]  [BUGGY]  Real  =  imaginary.getReal(),  real  =  real.getImaginary();  [CE]  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  imaginary.getReal(),  real  =  real.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  imaginary.getReal(),  real  =  real.getImaginary();	  Real    =    real.getReal(),    imaginary    =    real.getImaginary();    	non-compiled	[CE]  	70	None	replace
44	[BUG]  [BUGGY]  return  createComplex(imaginary  +  addend.getImaginary(),  real  +  addend.getMask());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(imaginary  +  addend.getImaginary(),  real  +  addend.getMask());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	return  createComplex(imaginary  +  addend.getImaginary(),  real  +  addend.getMask());	  return    createComplex(real    +    addend.getImaginary(),    imaginary    +    addend.getMask());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
45	[BUG]  [BUGGY]  return  createComplex(real  +  addend.getINF(),  imaginary  +  addend.getMask());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(real  +  addend.getINF(),  imaginary  +  addend.getMask());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	return  createComplex(real  +  addend.getINF(),  imaginary  +  addend.getMask());	  return    createComplex(real    +    addend.getImaginary(),    imaginary    +    addend.getMask());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
46	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  addend);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real,  addend);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createComplex(real,  addend);	  Real    real    =    createComplex(real);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
47	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  addend.getReal());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real,  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createComplex(real,  addend.getReal());	  Real    real    =    createComplex(real);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
48	[BUG]  [BUGGY]  Real  real  =  createComplex(addend);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(addend);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createComplex(addend);	  Real    real    =    createComplex(real);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
49	[BUG]  [BUGGY]  Real  real  =  getRaw();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getRaw();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getRaw();	  Real    real    =    getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
50	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getNaN());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getNaN());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getReal(),  imaginary  +  addend.getNaN());	  Real    +    addend.getReal(),    imaginary    +    addend.getMask());    	non-compiled	[CE]  not  a  statement	87	None	replace
51	[BUG]  [BUGGY]  Real  -  addend.getINF();  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getINF();  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  -  addend.getINF();  imaginary  +  addend.getImaginary());	  Real    -    addend.getReal();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	48	None	replace
52	[BUG]  [BUGGY]  Real  -  addend.getRaw();  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getRaw();  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  -  addend.getRaw();  imaginary  +  addend.getImaginary());	  Real    -    addend.getReal();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	48	None	replace
53	[BUG]  [BUGGY]  Real  -  addend.getReal();  imaginary  +  addend.getINF());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getReal();  imaginary  +  addend.getINF());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  -  addend.getReal();  imaginary  +  addend.getINF());	  Real    -    addend.getReal();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	48	None	replace
54	[BUG]  [BUGGY]  Real  real  =  createReal(real,  addend.getReal(),  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  addend.getReal(),  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(real,  addend.getReal(),  addend.getImaginary());	  Real    real    =    createReal(real,    imaginary,    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
55	[BUG]  [BUGGY]  Real  real  =  createReal(real,  addend.getINF(),  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  addend.getINF(),  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(real,  addend.getINF(),  addend.getImaginary());	  Real    real    =    createReal(real,    imaginary,    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
56	[BUG]  [BUGGY]  Real  real  =  addend.getReal(),  imaginary  =  real  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  addend.getReal(),  imaginary  =  real  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  addend.getReal(),  imaginary  =  real  +  addend.getImaginary();	  Real    real    =    addend.getReal();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
57	[BUG]  [BUGGY]  Real  real  =  addend.getRaw();  imaginary  =  real  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  addend.getRaw();  imaginary  =  real  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  addend.getRaw();  imaginary  =  real  +  addend.getImaginary();	  Real    real    =    addend.getReal();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
58	[BUG]  [BUGGY]  Real  real  =  addend.getINF();  imaginary  =  real  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  addend.getINF();  imaginary  =  real  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  addend.getINF();  imaginary  =  real  +  addend.getImaginary();	  Real    real    =    addend.getReal();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
59	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary!=  null?  real.getImaginary()  :  null;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary!=  null?  real.getImaginary()  :  null;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal();  imaginary  =  imaginary!=  null?  real.getImaginary()  :  null;	  Real    real    =    getReal();    imaginary    =    real!=    null?    real.getImaginary()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
60	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary  ==  null?  real.getImaginary()  :  null;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary  ==  null?  real.getImaginary()  :  null;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal();  imaginary  =  imaginary  ==  null?  real.getImaginary()  :  null;	  Real    real    =    getReal();    imaginary    =    real!=    null?    real.getImaginary()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
61	[BUG]  [BUGGY]  Real  real  =  createReal(real  +  addend.getReal(),  imaginary);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real  +  addend.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(real  +  addend.getReal(),  imaginary);	  Real    real    =    createReal(real    +    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
62	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary  +  addend.getReal());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(imaginary  +  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(imaginary  +  addend.getReal());	  Real    real    =    createReal(real    +    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
63	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  imaginary  +  addend.getReal(),  imaginary);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(real,  imaginary  +  addend.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(real,  imaginary  +  addend.getReal(),  imaginary);	  Complex    real    =    createComplex(real,    imaginary    +    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
64	[BUG]  [BUGGY]  Real  =  real.getReal();  imaginary  =  this.real.getImaginary();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  real.getReal();  imaginary  =  this.real.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  real.getReal();  imaginary  =  this.real.getImaginary();	  Real    =    this.real.getReal();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
65	[BUG]  [BUGGY]  Real  real  =  addend  +  real.getReal();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  addend  +  real.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  addend  +  real.getReal();	  Real    real    =    real    +    addend.getReal();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
66	[BUG]  [BUGGY]  Real  real  =  Real.create(addend,  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(addend,  false);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  Real.create(addend,  false);	  Real    real    =    Real.create(addend);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
67	[BUG]  [BUGGY]  Real  real  =  Real.create(getReal());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  Real.create(getReal());	  Real    real    =    Real.create(addend);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
68	[BUG]  [BUGGY]  Real  -  addend.getReal();  imaginary  =  addend.getImaginary();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getReal();  imaginary  =  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  -  addend.getReal();  imaginary  =  addend.getImaginary();	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	62	None	replace
69	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  =  addend.getImaginary();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  =  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getReal(),  imaginary  =  addend.getImaginary();	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	62	None	replace
70	[BUG]  [BUGGY]  Real  =  real.getReal();  imaginary  =  imaginary.getImaginary();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  real.getReal();  imaginary  =  imaginary.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  real.getReal();  imaginary  =  imaginary.getImaginary();	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
71	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getINFRandom();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real.getINFRandom();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal();  imaginary  =  real.getINFRandom();	  Real    real    =    getReal();    imaginary    =    real.getRandom();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
72	[BUG]  [BUGGY]  Real  real  =  createComplex();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createComplex();	  Real    real    =    createReal();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
73	[BUG]  [BUGGY]  Real  real  =  createReal(addend.getReal());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(addend.getReal());	  Real    real    =    createReal();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
74	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  =  real  +  addend.getINFImaginary();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  =  real  +  addend.getINFImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal(),  imaginary  =  real  +  addend.getINFImaginary();	  Real    real    =    getReal(),    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
75	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  =  imaginary  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  =  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal(),  imaginary  =  imaginary  +  addend.getImaginary();	  Real    real    =    getReal(),    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
76	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  =  real  +  addend.getINF();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  =  real  +  addend.getINF();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal(),  imaginary  =  real  +  addend.getINF();	  Real    real    =    getReal(),    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
77	[BUG]  [BUGGY]  real  +  addend.getRaw();  imaginary  +  addend.getImaginary();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  real  +  addend.getRaw();  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	real  +  addend.getRaw();  imaginary  +  addend.getImaginary();	  Real    +    addend.getRaw();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	30	None	replace
78	[BUG]  [BUGGY]  Real  +  addend.getRaw();  imaginary  +  addend.getReal();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getRaw();  imaginary  +  addend.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getRaw();  imaginary  +  addend.getReal();	  Real    +    addend.getRaw();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	30	None	replace
79	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  imaginary);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real,  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  Real.create(real,  imaginary);	  Real    real    =    Real.create(real,    addend);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
80	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  addend,  imaginary);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real,  addend,  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  Real.create(real,  addend,  imaginary);	  Real    real    =    Real.create(real,    addend);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
81	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getNaNImaginary();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getNaNImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal();  imaginary  =  real  +  addend.getNaNImaginary();	  Real    real    =    getReal();    imaginary    =    real    +    addend.getINFImaginary();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
82	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getInfinite();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getInfinite();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal();  imaginary  =  real  +  addend.getInfinite();	  Real    real    =    getReal();    imaginary    =    real    +    addend.getINFImaginary();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
83	[BUG]  [BUGGY]  Real  =  addend.getReal();  imaginary  =  imaginary;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  addend.getReal();  imaginary  =  imaginary;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  addend.getReal();  imaginary  =  imaginary;	  Real    =    real.getReal();    imaginary    =    imaginary;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
84	[BUG]  [BUGGY]  Real  =  this.real.getReal();  imaginary  =  imaginary;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  this.real.getReal();  imaginary  =  imaginary;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  this.real.getReal();  imaginary  =  imaginary;	  Real    =    real.getReal();    imaginary    =    imaginary;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
85	[BUG]  [BUGGY]  Real.setZero(imaginary);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.setZero(imaginary);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.setZero(imaginary);	  Real.setZero(real);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
86	[BUG]  [BUGGY]  Real.setZero(real,  imaginary);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.setZero(real,  imaginary);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.setZero(real,  imaginary);	  Real.setZero(real);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
87	[BUG]  [BUGGY]  Real.setZero(isInfinite);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.setZero(isInfinite);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.setZero(isInfinite);	  Real.setZero(real);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
88	[BUG]  [BUGGY]  real  =  real  +  addend.getReal();  imaginary  =  real  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  real  =  real  +  addend.getReal();  imaginary  =  real  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	real  =  real  +  addend.getReal();  imaginary  =  real  +  addend.getImaginary();	  Real    real    =    real    +    addend.getReal();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
89	[BUG]  [BUGGY]  MathUtils.checkState(real!=  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkState(real!=  null);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	MathUtils.checkState(real!=  null);	  MathUtils.checkNotNull(real);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
90	[BUG]  [BUGGY]  MathUtils.checkState(real  ==  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkState(real  ==  null);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	MathUtils.checkState(real  ==  null);	  MathUtils.checkNotNull(real);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
91	[BUG]  [BUGGY]  Real  -  addend.getINF();  imaginary  +  addend.getImaginary();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getINF();  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  -  addend.getINF();  imaginary  +  addend.getImaginary();	  Real    -    addend.getReal();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	61	None	replace
92	[BUG]  [BUGGY]  Real  -  addend.getRaw();  imaginary  +  addend.getImaginary();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getRaw();  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  -  addend.getRaw();  imaginary  +  addend.getImaginary();	  Real    -    addend.getReal();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	61	None	replace
93	[BUG]  [BUGGY]  Real  -  addend.getReal();  imaginary  +  addend.getINF();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getReal();  imaginary  +  addend.getINF();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  -  addend.getReal();  imaginary  +  addend.getINF();	  Real    -    addend.getReal();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	61	None	replace
94	[BUG]  [BUGGY]  MathUtils.checkState(imaginary);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkState(imaginary);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	MathUtils.checkState(imaginary);	  MathUtils.checkState(isInfinite);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
95	[BUG]  [BUGGY]  MathUtils.checkState(isNaN);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkState(isNaN);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	MathUtils.checkState(isNaN);	  MathUtils.checkState(isInfinite);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
96	[BUG]  [BUGGY]  MathUtils.checkState(isInfinite  ||  isZero);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkState(isInfinite  ||  isZero);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	MathUtils.checkState(isInfinite  ||  isZero);	  MathUtils.checkState(isInfinite);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
97	[BUG]  [BUGGY]  Real  real  =  createReal(real  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(real  +  addend.getReal(),  imaginary  +  addend.getImaginary());	  Real    real    =    createReal(real,    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
98	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(imaginary  +  addend.getImaginary());	  Real    real    =    createReal(real,    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
99	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  =  addend.getImaginary());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  =  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getReal(),  imaginary  =  addend.getImaginary());	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	78	None	replace
100	[BUG]  [BUGGY]  Real  -  addend.getReal();  imaginary  =  addend.getImaginary());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getReal();  imaginary  =  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  -  addend.getReal();  imaginary  =  addend.getImaginary());	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	78	None	replace
101	[BUG]  [BUGGY]  Real  +  addend.getInf();  imaginary  +  addend.getImaginary();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getInf();  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getInf();  imaginary  +  addend.getImaginary();	  Real    +    addend.getINF();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	29	None	replace
102	[BUG]  [BUGGY]  Real  +  addend.getInFactor();  imaginary  +  addend.getImaginary();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getInFactor();  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getInFactor();  imaginary  +  addend.getImaginary();	  Real    +    addend.getINF();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	29	None	replace
103	[BUG]  [BUGGY]  Real  +  addend.getINF(),  real  +  addend.getImaginary());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getINF(),  real  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getINF(),  real  +  addend.getImaginary());	  Real    +    addend.getReal(),    real    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	8	None	replace
104	[BUG]  [BUGGY]  Real  +  addend.getRaw(),  real  +  addend.getImaginary());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getRaw(),  real  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getRaw(),  real  +  addend.getImaginary());	  Real    +    addend.getReal(),    real    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	8	None	replace
105	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getZero();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getZero();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal();  imaginary  =  real  +  addend.getZero();	  Real    real    =    getReal();    imaginary    =    real    +    addend.getINF();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
106	[BUG]  [BUGGY]  Real  real  =  addend.getReal();  imaginary  =  imaginary  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  addend.getReal();  imaginary  =  imaginary  +  addend.getImaginary();  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  addend.getReal();  imaginary  =  imaginary  +  addend.getImaginary();	  Real    real    =    addend.getReal();    imaginary    =    imaginary    +    addend.getMask();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
107	[BUG]  [BUGGY]  Real  real  =  addend.getReal();  imaginary  =  imaginary  /  addend.getMask();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  addend.getReal();  imaginary  =  imaginary  /  addend.getMask();  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  addend.getReal();  imaginary  =  imaginary  /  addend.getMask();	  Real    real    =    addend.getReal();    imaginary    =    imaginary    +    addend.getMask();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
108	[BUG]  [BUGGY]  Real  real  =  addend.getReal();  imaginary  =  imaginary  *  addend.getMask();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  addend.getReal();  imaginary  =  imaginary  *  addend.getMask();  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  addend.getReal();  imaginary  =  imaginary  *  addend.getMask();	  Real    real    =    addend.getReal();    imaginary    =    imaginary    +    addend.getMask();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
109	[BUG]  [BUGGY]  Real  +  addend.getRaw(),  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getRaw(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getRaw(),  imaginary  +  addend.getImaginary());	  Real    +    addend.getRaw();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	18	None	replace
110	[BUG]  [BUGGY]  Real  +  addend.getRaw();  imaginary  +  addend.getReal());  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getRaw();  imaginary  +  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getRaw();  imaginary  +  addend.getReal());	  Real    +    addend.getRaw();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	18	None	replace
111	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getRaw());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getRaw());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getReal(),  imaginary  +  addend.getRaw());	  Real    +    addend.getReal(),    imaginary    +    addend.getReal());    	non-compiled	[CE]  not  a  statement	64	None	replace
112	[BUG]  [BUGGY]  Real  real  =  createReal(real,  addend.getImaginary(),  imaginary);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  addend.getImaginary(),  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(real,  addend.getImaginary(),  imaginary);	  Real    real    =    createReal(real,    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
113	[BUG]  [BUGGY]  Real  real  =  createReal(addend,  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(addend,  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(addend,  addend.getImaginary());	  Real    real    =    createReal(real,    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
114	[BUG]  [BUGGY]  Real  real  =  createReal(real,  addend.getINF());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  addend.getINF());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(real,  addend.getINF());	  Real    real    =    createReal(real,    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
115	[BUG]  [BUGGY]  Real.append(real,  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.append(real,  addend.getImaginary());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.append(real,  addend.getImaginary());	  Real.append(real);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
116	[BUG]  [BUGGY]  Real.append(imaginary);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.append(imaginary);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.append(imaginary);	  Real.append(real);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
117	[BUG]  [BUGGY]  Real.append(real,  addend.getZero());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.append(real,  addend.getZero());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.append(real,  addend.getZero());	  Real.append(real);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
118	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getINFImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getINFImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getINFImaginary());	  Real    real    =    createComplex(imaginary    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
119	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getNumberOfImaginaries());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getNumberOfImaginaries());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getNumberOfImaginaries());	  Real    real    =    createComplex(imaginary    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
120	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  addend.getReal(),  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(real,  addend.getReal(),  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(real,  addend.getReal(),  addend.getImaginary());	  Complex    real    =    createComplex(real,    imaginary,    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
121	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(real,  addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(real,  addend.getReal(),  imaginary  +  addend.getImaginary());	  Complex    real    =    createComplex(real,    imaginary,    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
122	[BUG]  [BUGGY]  Real  real  =  createReal(real,  imaginary,  ZERO);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  imaginary,  ZERO);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(real,  imaginary,  ZERO);	  Real    real    =    createReal(real,    imaginary,    q);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
123	[BUG]  [BUGGY]  Real  real  =  createReal(real,  ZERO,  imaginary,  q);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  ZERO,  imaginary,  q);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(real,  ZERO,  imaginary,  q);	  Real    real    =    createReal(real,    imaginary,    q);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
124	[BUG]  [BUGGY]  Real  real  =  createReal(real,  imaginary,  q,  ZERO);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  imaginary,  q,  ZERO);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(real,  imaginary,  q,  ZERO);	  Real    real    =    createReal(real,    imaginary,    q);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
125	[BUG]  [BUGGY]  Real  =  isNaN?  addend.getReal()  :  imaginary;  imaginary  =  real.getImaginary();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  isNaN?  addend.getReal()  :  imaginary;  imaginary  =  real.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  isNaN?  addend.getReal()  :  imaginary;  imaginary  =  real.getImaginary();	  Real    =    isNaN?    real.getReal()    :    imaginary;    imaginary    =    real.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
126	[BUG]  [BUGGY]  Real  =  isInfinite?  real.getReal()  :  imaginary;  imaginary  =  real.getImaginary();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  isInfinite?  real.getReal()  :  imaginary;  imaginary  =  real.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  isInfinite?  real.getReal()  :  imaginary;  imaginary  =  real.getImaginary();	  Real    =    isNaN?    real.getReal()    :    imaginary;    imaginary    =    real.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
127	[BUG]  [BUGGY]  return  createComplex(real  +  addend.getReal(),  real  +  addend.getINF());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(real  +  addend.getReal(),  real  +  addend.getINF());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	return  createComplex(real  +  addend.getReal(),  real  +  addend.getINF());	  return    createComplex(imaginary    +    addend.getReal(),    real    +    addend.getINF());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
128	[BUG]  [BUGGY]  return  createComplex(real  +  addend.getReal(),  imagine  +  addend.getINF());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(real  +  addend.getReal(),  imagine  +  addend.getINF());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	return  createComplex(real  +  addend.getReal(),  imagine  +  addend.getINF());	  return    createComplex(imaginary    +    addend.getReal(),    real    +    addend.getINF());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
129	[BUG]  [BUGGY]  MathUtils.checkNotNull(addend);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkNotNull(addend);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	MathUtils.checkNotNull(addend);	  MathUtils.checkNotNull(imaginary);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
130	[BUG]  [BUGGY]  MathUtils.checkState(imaginary  ==  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkState(imaginary  ==  null);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	MathUtils.checkState(imaginary  ==  null);	  MathUtils.checkNotNull(imaginary);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
131	[BUG]  [BUGGY]  MathUtils.checkState(imaginary!=  null);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkState(imaginary!=  null);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	MathUtils.checkState(imaginary!=  null);	  MathUtils.checkNotNull(imaginary);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
132	[BUG]  [BUGGY]  Real.setImaginary(real);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.setImaginary(real);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.setImaginary(real);	  Real.setImaginary(imaginary);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
133	[BUG]  [BUGGY]  Real.setImaginary(imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.setImaginary(imaginary  +  addend.getImaginary());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.setImaginary(imaginary  +  addend.getImaginary());	  Real.setImaginary(imaginary);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
134	[BUG]  [BUGGY]  Real  =  isNaN?  q.getReal()  :  real;  imaginary  =  q.getImaginary();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  isNaN?  q.getReal()  :  real;  imaginary  =  q.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  isNaN?  q.getReal()  :  real;  imaginary  =  q.getImaginary();	  Real    =    q.getReal();    imaginary    =    q.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
135	[BUG]  [BUGGY]  Real  =  q.getReal();  imaginary  =  real.getImaginary();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  q.getReal();  imaginary  =  real.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  q.getReal();  imaginary  =  real.getImaginary();	  Real    =    q.getReal();    imaginary    =    q.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
136	[BUG]  [BUGGY]  Complex  real  =  createComplex(addend,  real);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(addend,  real);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(addend,  real);	  Complex    real    =    createComplex(imaginary,    real);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
137	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  addend);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(real,  addend);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(real,  addend);	  Complex    real    =    createComplex(imaginary,    real);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
138	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  true);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(real,  true);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(real,  true);	  Complex    real    =    createComplex(imaginary,    real);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
139	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary  +  addend.getINFImaginary();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary  +  addend.getINFImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal();  imaginary  =  imaginary  +  addend.getINFImaginary();	  Real    real    =    getReal();    imaginary    =    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
140	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary  +  addend.getINF();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary  +  addend.getINF();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal();  imaginary  =  imaginary  +  addend.getINF();	  Real    real    =    getReal();    imaginary    =    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
141	[BUG]  [BUGGY]  Real  real  =  getInfinite(),  isNaN);  [CE]  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getInfinite(),  isNaN);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getInfinite(),  isNaN);	  Real    real    =    getInfinite();    	non-compiled	[CE]  	2	None	replace
142	[BUG]  [BUGGY]  Real  real  =  getInfinite(),  addend.getReal());  [CE]  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getInfinite(),  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getInfinite(),  addend.getReal());	  Real    real    =    getInfinite();    	non-compiled	[CE]  	2	None	replace
143	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createComplex(imaginary);	  Real    real    =    createReal(imaginary);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
144	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getInfinite());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getInfinite());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getReal(),  imaginary  +  addend.getInfinite());	  Real    +    addend.getReal(),    imaginary    +    addend.getINF());    	non-compiled	[CE]  not  a  statement	10	None	replace
145	[BUG]  [BUGGY]  Real  =  addend.getReal();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  addend.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  addend.getReal();	  Real    =    imaginary.getReal();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
146	[BUG]  [BUGGY]  Real  =  isInfinite?  imaginary  :  addend.getReal();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  isInfinite?  imaginary  :  addend.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  isInfinite?  imaginary  :  addend.getReal();	  Real    =    imaginary.getReal();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
147	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  addend.getReal()  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(real,  addend.getReal()  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(real,  addend.getReal()  +  addend.getImaginary());	  Complex    real    =    createComplex(real,    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
148	[BUG]  [BUGGY]  Real  +  addend.getInFull(),  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getInFull(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getInFull(),  imaginary  +  addend.getImaginary());	  Real    +    addend.getINF(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	9	None	replace
149	[BUG]  [BUGGY]  Real  +  addend.getInf(),  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getInf(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getInf(),  imaginary  +  addend.getImaginary());	  Real    +    addend.getINF(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	9	None	replace
150	[BUG]  [BUGGY]  Real.checkNotNull(imaginary);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.checkNotNull(imaginary);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.checkNotNull(imaginary);	  Real.checkNotNull(real);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
151	[BUG]  [BUGGY]  Real.checkNotEmpty(imaginary);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.checkNotEmpty(imaginary);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.checkNotEmpty(imaginary);	  Real.checkNotNull(real);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
152	[BUG]  [BUGGY]  Real.checkState(real!=  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.checkState(real!=  null);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.checkState(real!=  null);	  Real.checkNotNull(real);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
153	[BUG]  [BUGGY]  Real  real  =  createReal(real,  true);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  true);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(real,  true);	  Real    real    =    createReal(imaginary,    real);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
154	[BUG]  [BUGGY]  Real  real  =  createReal(real,  false);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  false);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(real,  false);	  Real    real    =    createReal(imaginary,    real);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
155	[BUG]  [BUGGY]  Real  real  =  Real.create(real  +  addend.getReal(),  imaginary);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real  +  addend.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  Real.create(real  +  addend.getReal(),  imaginary);	  Real    real    =    Real.create(real    +    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
156	[BUG]  [BUGGY]  Real  real  =  Real.create(real  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  Real.create(real  +  addend.getImaginary());	  Real    real    =    Real.create(real    +    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
157	[BUG]  [BUGGY]  Real  +  addend.getReal();  imaginary  +  addend.getNaN());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal();  imaginary  +  addend.getNaN());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getReal();  imaginary  +  addend.getNaN());	  Real    +    addend.getReal();    imaginary    +    addend.getINF());    	non-compiled	[CE]  not  a  statement	49	None	replace
158	[BUG]  [BUGGY]  Real  +  addend.getInf();  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getInf();  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getInf();  imaginary  +  addend.getImaginary());	  Real    +    addend.getINF();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	17	None	replace
159	[BUG]  [BUGGY]  Real  +  addend.getInFactor();  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getInFactor();  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getInFactor();  imaginary  +  addend.getImaginary());	  Real    +    addend.getINF();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	17	None	replace
160	[BUG]  [BUGGY]  Real.add(real,  imaginary);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.add(real,  imaginary);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.add(real,  imaginary);	  Real.add(real,    addend);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
161	[BUG]  [BUGGY]  Real.add(real,  q);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.add(real,  q);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.add(real,  q);	  Real.add(real,    addend);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
162	[BUG]  [BUGGY]  Real.add(real,  real);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.add(real,  real);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.add(real,  real);	  Real.add(real,    addend);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
163	[BUG]  [BUGGY]  Real.add(real,  imaginary  +  addend);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.add(real,  imaginary  +  addend);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.add(real,  imaginary  +  addend);	  Real.add(real,    addend);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
164	[BUG]  [BUGGY]  return  createComplex(real  +  addend.getReal(),  real  +  addend.getMask());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(real  +  addend.getReal(),  real  +  addend.getMask());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	return  createComplex(real  +  addend.getReal(),  real  +  addend.getMask());	  return    createComplex(imaginary    +    addend.getReal(),    real    +    addend.getMask());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
165	[BUG]  [BUGGY]  Real  +  addend.getInFactory();  imaginary  +  addend.getImaginary();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getInFactory();  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getInFactory();  imaginary  +  addend.getImaginary();	  Real    +    addend.getINF();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	29	None	replace
166	[BUG]  [BUGGY]  Real  +  addend.getINF(),  imaginary  +  addend.getReal());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getINF(),  imaginary  +  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getINF(),  imaginary  +  addend.getReal());	  Real    +    addend.getINF(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	9	None	replace
167	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  ZERO);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(real,  ZERO);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(real,  ZERO);	  Complex    real    =    createComplex(imaginary,    real);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
168	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getRaw();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real  +  addend.getRaw();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal();  imaginary  =  real  +  addend.getRaw();	  Real    real    =    getReal();    imaginary    =    real    +    addend.getNaN();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
169	[BUG]  [BUGGY]  Real  -  addend.getReal();  imaginary  +  addend.getRandom());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getReal();  imaginary  +  addend.getRandom());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  -  addend.getReal();  imaginary  +  addend.getRandom());	  Real    -    addend.getReal();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	48	None	replace
170	[BUG]  [BUGGY]  Real.setFunction(addend);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.setFunction(addend);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.setFunction(addend);	  Real.setImaginary(imaginary);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
171	[BUG]  [BUGGY]  Real  real  =  createInfinite(addend.getReal());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createInfinite(addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createInfinite(addend.getReal());	  Real    real    =    getInfinite();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
172	[BUG]  [BUGGY]  Real  real  =  getInfinite(),  isNaN;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getInfinite(),  isNaN;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getInfinite(),  isNaN;	  Real    real    =    getInfinite();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
173	[BUG]  [BUGGY]  Real.append(real,  addend);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.append(real,  addend);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.append(real,  addend);	  Real.append(real);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
174	[BUG]  [BUGGY]  Real  real  =  createReal(real,  ONE);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  ONE);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(real,  ONE);	  Real    real    =    createReal(real,    addend);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
175	[BUG]  [BUGGY]  Real  =  addend.getReal();  imaginary  =  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  addend.getReal();  imaginary  =  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  addend.getReal();  imaginary  =  addend.getImaginary();	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
176	[BUG]  [BUGGY]  Real  =  addend.getReal();  imaginary  =  addend.getImaginary());  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  addend.getReal();  imaginary  =  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  addend.getReal();  imaginary  =  addend.getImaginary());	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary());    	non-compiled	[CE]  ';'  expected	78	None	replace
177	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  =  real  +  addend.getRandom();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  =  real  +  addend.getRandom();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal(),  imaginary  =  real  +  addend.getRandom();	  Real    real    =    getReal(),    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
178	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary,  addend.getReal());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(imaginary,  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(imaginary,  addend.getReal());	  Real    real    =    createReal(real,    imaginary,    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
179	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary,  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(imaginary,  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(imaginary,  addend.getImaginary());	  Real    real    =    createReal(real,    imaginary,    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
180	[BUG]  [BUGGY]  Real  =  addend.getReal();  imaginary  =  real;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  addend.getReal();  imaginary  =  real;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  addend.getReal();  imaginary  =  real;	  Real    =    real.getReal();    imaginary    =    imaginary;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
181	[BUG]  [BUGGY]  Real  =  isNaN?  real.getReal()  :  imaginary;  imaginary  =  imaginary;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  isNaN?  real.getReal()  :  imaginary;  imaginary  =  imaginary;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  isNaN?  real.getReal()  :  imaginary;  imaginary  =  imaginary;	  Real    =    real.getReal();    imaginary    =    imaginary;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
182	[BUG]  [BUGGY]  Real  real  =  getZero();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getZero();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getZero();	  Real    real    =    getINF();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
183	[BUG]  [BUGGY]  Real  +  addend.getRaw();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getRaw();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getRaw();	  Real    +    addend.getRaw();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	30	None	replace
184	[BUG]  [BUGGY]  MathUtils.checkState(imaginary  <  =  real);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkState(imaginary  <  =  real);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	MathUtils.checkState(imaginary  <  =  real);	  MathUtils.checkNotNull(real);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
185	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  ZERO);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary,  ZERO);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(imaginary,  ZERO);	  Complex    real    =    createComplex(imaginary,    imaginary);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
186	[BUG]  [BUGGY]  Real  real  =  Real.create(imaginary);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  Real.create(imaginary);	  Real    real    =    Real.create(addend);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
187	[BUG]  [BUGGY]  Real  real  =  Real.create(real  +  addend);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real  +  addend);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  Real.create(real  +  addend);	  Real    real    =    Real.create(addend);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
188	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getReal());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getReal());	  Complex    real    =    createComplex(imaginary    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
189	[BUG]  [BUGGY]  Real  real  =  createReal(real,  imaginary,  addend);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  imaginary,  addend);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(real,  imaginary,  addend);	  Real    real    =    createReal(real,    imaginary,    q);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
190	[BUG]  [BUGGY]  Real  real  =  addend.getReal();  imaginary  =  real  /  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  addend.getReal();  imaginary  =  real  /  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  addend.getReal();  imaginary  =  real  /  addend.getImaginary();	  Real    real    =    addend.getReal();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
191	[BUG]  [BUGGY]  Real  real  =  addend.getReal();  imaginary  =  real  -  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  addend.getReal();  imaginary  =  real  -  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  addend.getReal();  imaginary  =  real  -  addend.getImaginary();	  Real    real    =    addend.getReal();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
192	[BUG]  [BUGGY]  Real  real  =  createReal(real,  addend.getReal());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(real,  addend.getReal());	  Real    real    =    createReal(real,    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
193	[BUG]  [BUGGY]  Real  real  =  isNaN  +  addend.getReal();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  isNaN  +  addend.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  isNaN  +  addend.getReal();	  Real    real    =    imaginary    +    addend.getReal();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
194	[BUG]  [BUGGY]  Real  real  =  addend.getReal();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  addend.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  addend.getReal();	  Real    real    =    imaginary    +    addend.getReal();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
195	[BUG]  [BUGGY]  Real  =  isNaN.getReal();  imaginary  =  q.getImaginary();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  isNaN.getReal();  imaginary  =  q.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  isNaN.getReal();  imaginary  =  q.getImaginary();	  Real    =    q.getReal();    imaginary    =    q.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
196	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary  +  addend.getNaN();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary  +  addend.getNaN();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal();  imaginary  =  imaginary  +  addend.getNaN();	  Real    real    =    getReal();    imaginary    =    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
197	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary  +  addend.getRandom();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary  +  addend.getRandom();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal();  imaginary  =  imaginary  +  addend.getRandom();	  Real    real    =    getReal();    imaginary    =    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
198	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary,  ZERO);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(imaginary,  ZERO);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(imaginary,  ZERO);	  Real    real    =    createReal(imaginary,    imaginary);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
199	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getReal();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getReal(),  imaginary  +  addend.getReal();	  Real    +    addend.getReal(),    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	28	None	replace
200	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getINF();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getINF();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getReal(),  imaginary  +  addend.getINF();	  Real    +    addend.getReal(),    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	28	None	replace
201	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getRandom();  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getRandom();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getReal(),  imaginary  +  addend.getRandom();	  Real    +    addend.getReal(),    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	28	None	replace
202	[BUG]  [BUGGY]  Real  real  =  Real.create(imaginary  +  addend.getReal());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(imaginary  +  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  Real.create(imaginary  +  addend.getReal());	  Real    real    =    Real.create(real    +    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
203	[BUG]  [BUGGY]  Real  +  addend.getReal();  imaginary  +  addend.getInfinite());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal();  imaginary  +  addend.getInfinite());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getReal();  imaginary  +  addend.getInfinite());	  Real    +    addend.getReal();    imaginary    +    addend.getINF());    	non-compiled	[CE]  not  a  statement	49	None	replace
204	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  addend.getReal());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary,  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(imaginary,  addend.getReal());	  Complex    real    =    createComplex(real,    imaginary,    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
205	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createComplex(imaginary  +  addend.getImaginary());	  Real    real    =    createComplex(imaginary    +    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
206	[BUG]  [BUGGY]  Real  =  isNaN?  imaginary  :  addend.getReal();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  isNaN?  imaginary  :  addend.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  isNaN?  imaginary  :  addend.getReal();	  Real    =    imaginary.getReal();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
207	[BUG]  [BUGGY]  Real  +  addend.getReal(),  real  +  addend.getINF());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  real  +  addend.getINF());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getReal(),  real  +  addend.getINF());	  Real    +    addend.getReal(),    real    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	8	None	replace
208	[BUG]  [BUGGY]  Real  +  addend.getInFactory();  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getInFactory();  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getInFactory();  imaginary  +  addend.getImaginary());	  Real    +    addend.getINF();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	17	None	replace
209	[BUG]  [BUGGY]  Real.append(real).append('n');  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.append(real).append('n');  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.append(real).append('n');	  Real.append(real).append(imaginary);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
210	[BUG]  [BUGGY]  Real.append(real).append('  ');  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.append(real).append('  ');  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.append(real).append('  ');	  Real.append(real).append(imaginary);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
211	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  +  addend.getReal();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  +  addend.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal(),  imaginary  +  addend.getReal();	  Real    real    =    getReal(),    imaginary;    	non-compiled	[CE]  ';'  expected	56	None	replace
212	[BUG]  [BUGGY]  Real  real  =  createReal(real,  ZERO);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  ZERO);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(real,  ZERO);	  Real    real    =    createReal(imaginary,    real);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
213	[BUG]  [BUGGY]  Real.checkInfinite(imaginary);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.checkInfinite(imaginary);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.checkInfinite(imaginary);	  Real.checkNotNull(real);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
214	[BUG]  [BUGGY]  Real  =  real.getReal();Imaginary  =  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  real.getReal();Imaginary  =  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  real.getReal();Imaginary  =  addend.getImaginary();	  Real    =    addend.getReal();    imaginary    =    real.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
215	[BUG]  [BUGGY]  Real  real  =  createComplex(Imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(Imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createComplex(Imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());	  Real    real    =    createComplex(real    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
216	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  /  addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  /  addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createComplex(imaginary  /  addend.getReal(),  imaginary  +  addend.getImaginary());	  Real    real    =    createComplex(imaginary    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
217	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getNaN());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getNaN());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getNaN());	  Real    real    =    createComplex(imaginary    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
218	[BUG]  [BUGGY]  Real.setZero(isNaN);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.setZero(isNaN);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.setZero(isNaN);	  Real.setZero(real);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
219	[BUG]  [BUGGY]  Real.setZero(real  +  imaginary);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.setZero(real  +  imaginary);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.setZero(real  +  imaginary);	  Real.setZero(real);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
220	[BUG]  [BUGGY]  Real.add(imaginary,  addend);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.add(imaginary,  addend);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.add(imaginary,  addend);	  Real.add(real,    addend);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
221	[BUG]  [BUGGY]  Real.add(real,  ZERO);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.add(real,  ZERO);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.add(real,  ZERO);	  Real.add(real,    addend);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
222	[BUG]  [BUGGY]  MathUtils.checkState(real);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkState(real);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	MathUtils.checkState(real);	  MathUtils.checkState(isInfinite);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
223	[BUG]  [BUGGY]  MathUtils.checkState(real,  isInfinite);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkState(real,  isInfinite);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	MathUtils.checkState(real,  isInfinite);	  MathUtils.checkState(isInfinite);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
224	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(imaginary  +  addend.getReal());	  Complex    real    =    createComplex(real,    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
225	[BUG]  [BUGGY]  Real  -  addend.getReal();  imaginary  -  addend.getImaginary();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getReal();  imaginary  -  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  -  addend.getReal();  imaginary  -  addend.getImaginary();	  Real    -    addend.getReal();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	61	None	replace
226	[BUG]  [BUGGY]  imaginary  =  imaginary  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  imaginary  =  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	imaginary  =  imaginary  +  addend.getImaginary();	  Real    real    =    real    +    addend.getReal();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
227	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary!=  null?  real.getINF()  :  null;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary!=  null?  real.getINF()  :  null;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal();  imaginary  =  imaginary!=  null?  real.getINF()  :  null;	  Real    real    =    getReal();    imaginary    =    real!=    null?    real.getImaginary()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
228	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  imaginary  +  addend.getReal());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real,  imaginary  +  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  Real.create(real,  imaginary  +  addend.getReal());	  Real    real    =    Real.create(real,    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
229	[BUG]  [BUGGY]  Real  =  imaginary  ==  null?  imaginary  :  imaginary.getReal();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  imaginary  ==  null?  imaginary  :  imaginary.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  imaginary  ==  null?  imaginary  :  imaginary.getReal();	  Real    =    imaginary.getReal();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
230	[BUG]  [BUGGY]  Real  =  imaginary!=  null?  imaginary  :  imaginary.getReal();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  imaginary!=  null?  imaginary  :  imaginary.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  imaginary!=  null?  imaginary  :  imaginary.getReal();	  Real    =    imaginary.getReal();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
231	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  imaginary  +  addend.getReal());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary,  imaginary  +  addend.getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(imaginary,  imaginary  +  addend.getReal());	  Complex    real    =    createComplex(real,    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
232	[BUG]  [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getMask();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getReal(),  imaginary  +  addend.getMask();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getReal(),  imaginary  +  addend.getMask();	  Real    +    addend.getReal(),    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	28	None	replace
233	[BUG]  [BUGGY]  Real  real  =  createComplex(real,  imaginary);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createComplex(real,  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createComplex(real,  imaginary);	  Real    real    =    createComplex(real);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
234	[BUG]  [BUGGY]  Real  =  real.getReal();  imaginary  =  imaginary  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  real.getReal();  imaginary  =  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  real.getReal();  imaginary  =  imaginary  +  addend.getImaginary();	  Real    =    real.getReal();    imaginary    =    imaginary;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
235	[BUG]  [BUGGY]  MathUtils.checkArgument(imaginary  ==  real);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkArgument(imaginary  ==  real);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	MathUtils.checkArgument(imaginary  ==  real);	  MathUtils.checkNotNull(real);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
236	[BUG]  [BUGGY]  return  createComplex(imaginary  +  addend.getImaginary(),  imaginary  +  addend.getMask());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(imaginary  +  addend.getImaginary(),  imaginary  +  addend.getMask());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	return  createComplex(imaginary  +  addend.getImaginary(),  imaginary  +  addend.getMask());	  return    createComplex(imaginary    +    addend.getReal(),    imaginary    +    addend.getMask());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
237	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary  /  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  imaginary  /  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal();  imaginary  =  imaginary  /  addend.getImaginary();	  Real    real    =    getReal();    imaginary    =    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
238	[BUG]  [BUGGY]  real  =  getReal();  imaginary  =  imaginary  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  real  =  getReal();  imaginary  =  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	real  =  getReal();  imaginary  =  imaginary  +  addend.getImaginary();	  Real    real    =    getReal();    imaginary    =    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
239	[BUG]  [BUGGY]  Complex  real  =  createComplex(real  +  addend.getReal(),  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(real  +  addend.getReal(),  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(real  +  addend.getReal(),  addend.getImaginary());	  Complex    real    =    createComplex(real,    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
240	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(real,  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(real,  addend.getImaginary());	  Complex    real    =    createComplex(real,    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
241	[BUG]  [BUGGY]  MathUtils.checkArgument(imaginary  ==  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkArgument(imaginary  ==  null);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	MathUtils.checkArgument(imaginary  ==  null);	  MathUtils.checkNotNull(imaginary);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
242	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  imaginary,  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(real,  imaginary,  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(real,  imaginary,  addend.getImaginary());	  Complex    real    =    createComplex(real,    imaginary,    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
243	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  imaginary,  addend.getReal(),  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(real,  imaginary,  addend.getReal(),  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(real,  imaginary,  addend.getReal(),  addend.getImaginary());	  Complex    real    =    createComplex(real,    imaginary,    addend.getReal());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
244	[BUG]  [BUGGY]  Real  real  =  imaginary  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  imaginary  +  addend.getImaginary();	  Real    real    =    imaginary    +    addend.getReal();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
245	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getImaginary(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getImaginary(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(imaginary  +  addend.getImaginary(),  imaginary  +  addend.getImaginary());	  Complex    real    =    createComplex(imaginary    +    addend.getReal(),    real    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
246	[BUG]  [BUGGY]  Real  +  addend.getInFactory(),  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  +  addend.getInFactory(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  +  addend.getInFactory(),  imaginary  +  addend.getImaginary());	  Real    +    addend.getINF(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	9	None	replace
247	[BUG]  [BUGGY]  Real.append(real,  q);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.append(real,  q);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.append(real,  q);	  Real.append(real);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
248	[BUG]  [BUGGY]  Real  real  =  Real.create(real,  getReal());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  Real.create(real,  getReal());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  Real.create(real,  getReal());	  Real    real    =    Real.create(real,    addend);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
249	[BUG]  [BUGGY]  Real  real  =  this.real.getReal();  imaginary  =  real  +  this.addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  this.real.getReal();  imaginary  =  real  +  this.addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  this.real.getReal();  imaginary  =  real  +  this.addend.getImaginary();	  Real    real    =    addend.getReal();    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
250	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real!=  null?  real.getNaN()  :  imaginary;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real!=  null?  real.getNaN()  :  imaginary;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal();  imaginary  =  real!=  null?  real.getNaN()  :  imaginary;	  Real    real    =    getReal();    imaginary    =    real.getNaN();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
251	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  =  virtual  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  =  virtual  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal(),  imaginary  =  virtual  +  addend.getImaginary();	  Real    real    =    getReal(),    imaginary    =    real    +    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
252	[BUG]  [BUGGY]  Real  real  =  createImaginary();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createImaginary();	  Real    real    =    createReal();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
253	[BUG]  [BUGGY]  Real.setZero(isZero);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.setZero(isZero);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.setZero(isZero);	  Real.setZero(real);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
254	[BUG]  [BUGGY]  Real.setZero(real.getZero());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.setZero(real.getZero());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.setZero(real.getZero());	  Real.setZero(real);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
255	[BUG]  [BUGGY]  Real.setZero(real.isZero());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.setZero(real.isZero());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.setZero(real.isZero());	  Real.setZero(real);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
256	[BUG]  [BUGGY]  Real  real  =  addend.getReal();  imaginary  =  imaginary  -  addend.getMask();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  addend.getReal();  imaginary  =  imaginary  -  addend.getMask();  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  addend.getReal();  imaginary  =  imaginary  -  addend.getMask();	  Real    real    =    addend.getReal();    imaginary    =    imaginary    +    addend.getMask();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
257	[BUG]  [BUGGY]  Real  real  =  getReal();  imaginary  =  real  /  addend.getNaN();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal();  imaginary  =  real  /  addend.getNaN();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal();  imaginary  =  real  /  addend.getNaN();	  Real    real    =    getReal();    imaginary    =    real    +    addend.getNaN();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
258	[BUG]  [BUGGY]  MathUtils.checkState(real.isInfinite());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  MathUtils.checkState(real.isInfinite());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	MathUtils.checkState(real.isInfinite());	  MathUtils.checkState(isInfinite);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
259	[BUG]  [BUGGY]  Real  =  imaginary  +  addend.getReal();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  imaginary  +  addend.getReal();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  imaginary  +  addend.getReal();	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
260	[BUG]  [BUGGY]  Real  =  real.getReal();  imaginary  =  imaginary.getImaginary());  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  real.getReal();  imaginary  =  imaginary.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  real.getReal();  imaginary  =  imaginary.getImaginary());	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary());    	non-compiled	[CE]  ';'  expected	78	None	replace
261	[BUG]  [BUGGY]  Real.checkArgument(imaginary  ==  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.checkArgument(imaginary  ==  null);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.checkArgument(imaginary  ==  null);	  Real.checkNotNull(real);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
262	[BUG]  [BUGGY]  Real  real  =  getReal(),  imaginary  +  Math.abs(imaginary);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  getReal(),  imaginary  +  Math.abs(imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  getReal(),  imaginary  +  Math.abs(imaginary);	  Real    real    =    getReal(),    imaginary;    	non-compiled	[CE]  ';'  expected	56	None	replace
263	[BUG]  [BUGGY]  Real  real  =  createReal(imaginary  +  addend.getImaginary(),  imaginary);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(imaginary  +  addend.getImaginary(),  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(imaginary  +  addend.getImaginary(),  imaginary);	  Real    real    =    createReal(real,    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
264	[BUG]  [BUGGY]  Real  -  addend.getReal();  imaginary  -  addend.getImaginary());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getReal();  imaginary  -  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  -  addend.getReal();  imaginary  -  addend.getImaginary());	  Real    -    addend.getReal();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	48	None	replace
265	[BUG]  [BUGGY]  Real  -  addend.getImaginary();  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getImaginary();  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  -  addend.getImaginary();  imaginary  +  addend.getImaginary());	  Real    -    addend.getReal();    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	48	None	replace
266	[BUG]  [BUGGY]  Real  real  =  createReal(real,  q);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  q);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(real,  q);	  Real    real    =    createReal(imaginary,    real);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
267	[BUG]  [BUGGY]  return  createComplex(real  +  addend.getImaginary(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  return  createComplex(real  +  addend.getImaginary(),  imaginary  +  addend.getImaginary());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	return  createComplex(real  +  addend.getImaginary(),  imaginary  +  addend.getImaginary());	  return    createComplex(real    +    addend.getImaginary(),    imaginary    +    addend.getMask());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
268	[BUG]  [BUGGY]  Real  =  imaginary;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  imaginary;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  imaginary;	  Real    +    addend.getReal();    imaginary    =    addend.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
269	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getINF());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getINF());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getINF());	  Complex    real    =    createComplex(imaginary    +    addend.getReal(),    imaginary    +    addend.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
270	[BUG]  [BUGGY]  Real  -  addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  -  addend.getReal(),  imaginary  +  addend.getImaginary());	  Real    +    addend.getReal(),    real    +    addend.getImaginary());    	non-compiled	[CE]  not  a  statement	8	None	replace
271	[BUG]  [BUGGY]  Real  real  =  createReal(real,  imaginary,  imaginary);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  createReal(real,  imaginary,  imaginary);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  createReal(real,  imaginary,  imaginary);	  Real    real    =    createReal(real,    imaginary,    q);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
272	[BUG]  [BUGGY]  Real.append(real).append(imaginary,  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.append(real).append(imaginary,  addend.getImaginary());  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.append(real).append(imaginary,  addend.getImaginary());	  Real.append(real).append(imaginary);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
273	[BUG]  [BUGGY]  Real  real  =  isNaN?  getInfinite()  :  null;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  isNaN?  getInfinite()  :  null;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  isNaN?  getInfinite()  :  null;	  Real    real    =    getInfinite();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
274	[BUG]  [BUGGY]  Real  real  =  isNaN?  getInfinite()  :  Infinite.ZERO;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  real  =  isNaN?  getInfinite()  :  Infinite.ZERO;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  real  =  isNaN?  getInfinite()  :  Infinite.ZERO;	  Real    real    =    getInfinite();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
275	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  false);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(real,  false);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(real,  false);	  Complex    real    =    createComplex(imaginary,    real);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
276	[BUG]  [BUGGY]  Complex  real  =  createComplex(real,  q);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(real,  q);  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(real,  q);	  Complex    real    =    createComplex(imaginary,    real);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
277	[BUG]  [BUGGY]  Real.setImaginary(isInfinite);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real.setImaginary(isInfinite);  [BUGGY]      imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real.setImaginary(isInfinite);	  Real.setImaginary(imaginary);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
278	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary,  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Complex  real  =  createComplex(imaginary,  imaginary  +  addend.getImaginary());  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Complex  real  =  createComplex(imaginary,  imaginary  +  addend.getImaginary());	  Complex    real    =    createComplex(imaginary,    imaginary);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
279	[BUG]  [BUGGY]  Real  =  real.getReal()  :  imaginary;  imaginary  =  real.getImaginary();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  real.getReal()  :  imaginary;  imaginary  =  real.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  real.getReal()  :  imaginary;  imaginary  =  real.getImaginary();	  Real    =    isNaN?    real.getReal()    :    imaginary;    imaginary    =    real.getImaginary();    	non-compiled	[CE]  ';'  expected	69	None	replace
280	[BUG]  [BUGGY]  Real  =  imaginary?  real.getReal()  :  imaginary;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  imaginary?  real.getReal()  :  imaginary;  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  imaginary?  real.getReal()  :  imaginary;	  Real    =    isNaN?    real.getReal()    :    imaginary;    imaginary    =    real.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
281	[BUG]  [BUGGY]  Real  =  imaginary.getReal()  :  isNaN;  imaginary  =  real.getImaginary();  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  =  imaginary.getReal()  :  isNaN;  imaginary  =  real.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  =  imaginary.getReal()  :  isNaN;  imaginary  =  real.getImaginary();	  Real    =    isNaN?    real.getReal()    :    imaginary;    imaginary    =    real.getImaginary();    	non-compiled	[CE]  ';'  expected	69	None	replace
282	[BUG]  [BUGGY]  Real  -  addend.getImaginary();  imaginary  +  addend.getImaginary();  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }      [BUGGY]  Real  -  addend.getImaginary();  imaginary  +  addend.getImaginary();  [BUGGY]      return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	Real  -  addend.getImaginary();  imaginary  +  addend.getImaginary();	  Real    -    addend.getReal();    imaginary    +    addend.getImaginary();    	non-compiled	[CE]  not  a  statement	61	None	replace
