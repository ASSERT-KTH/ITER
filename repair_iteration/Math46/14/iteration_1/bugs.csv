bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }  [BUGGY]  return  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getImaginary());  [BUGGY]  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	return  createComplex(imaginary  +  addend.getReal(),  real  +  addend.getImaginary());	return  createComplex(real  +  addend.getReal(),    imaginary  +  addend.getImaginary());  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
2	[BUG]  [BUGGY]  return  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }  [BUGGY]  return  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	return  createComplex(imaginary  +  addend.getReal(),  imaginary  +  addend.getImaginary());	return  createComplex(real  +  addend.getReal(),    imaginary  +  addend.getImaginary());  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
3	[BUG]  [BUGGY]  return  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getMask());  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }  [BUGGY]  return  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getMask());  [BUGGY]  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	return  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getMask());	return  createComplex(real  +  addend.getReal(),    imaginary  +  addend.getImaginary());  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }  [BUGGY]    [BUGGY]  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	  	return  createComplex(real  +  addend.getReal(),    imaginary  +  addend.getImaginary());  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
5	[BUG]  [BUGGY]    Real  real  =  createReal(real);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }  [BUGGY]    Real  real  =  createReal(real);  [BUGGY]  return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	    Real  real  =  createReal(real);		non-compiled	[CE]  illegal  start  of  expression	28	None	add
6	[BUG]  [BUGGY]    Real  real  =  createReal(real,  imaginary);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }  [BUGGY]    Real  real  =  createReal(real,  imaginary);  [BUGGY]  return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	    Real  real  =  createReal(real,  imaginary);		non-compiled	[CE]  illegal  start  of  expression	28	None	add
7	[BUG]  [BUGGY]    Real  real  =  Real.create(real);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }  [BUGGY]    Real  real  =  Real.create(real);  [BUGGY]  return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	    Real  real  =  Real.create(real);		non-compiled	[CE]  illegal  start  of  expression	28	None	add
8	[BUG]  [BUGGY]    Real  real  =  getReal();  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }  [BUGGY]    Real  real  =  getReal();  [BUGGY]  return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	    Real  real  =  getReal();		non-compiled	[CE]  illegal  start  of  expression	28	None	add
9	[BUG]  [BUGGY]    Complex  real  =  createComplex(real,  imaginary);  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }  [BUGGY]    Complex  real  =  createComplex(real,  imaginary);  [BUGGY]  return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	    Complex  real  =  createComplex(real,  imaginary);		non-compiled	[CE]  illegal  start  of  expression	28	None	add
10	[BUG]  [BUGGY]    Complex  real  =  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }  [BUGGY]    Complex  real  =  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]  return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	    Complex  real  =  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getImaginary());		non-compiled	[CE]  illegal  start  of  expression	28	None	add
11	[BUG]  [BUGGY]    Real  +  addend.getReal();  imaginary  +  addend.getImaginary();  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]  public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }  [BUGGY]    Real  +  addend.getReal();  imaginary  +  addend.getImaginary();  [BUGGY]  return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	    Real  +  addend.getReal();  imaginary  +  addend.getImaginary();		non-compiled	[CE]  not  a  statement	28	None	add
12	[BUG]  [BUGGY]    Real  +  addend.getReal();  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]        AssertionError  [CONTEXT]  public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }  [BUGGY]    Real  +  addend.getReal();  imaginary  +  addend.getImaginary());  [BUGGY]  return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	    Real  +  addend.getReal();  imaginary  +  addend.getImaginary());		non-compiled	[CE]  not  a  statement	28	None	add
13	[BUG]  [BUGGY]    Real  =  real.getReal();  imaginary  =  real.getImaginary();  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }  [BUGGY]    Real  =  real.getReal();  imaginary  =  real.getImaginary();  [BUGGY]  return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	    Real  =  real.getReal();  imaginary  =  real.getImaginary();		non-compiled	[CE]  illegal  start  of  expression	28	None	add
14	[BUG]  [BUGGY]    Complex  real  =  createComplex(real  +  addend.getReal());  imaginary  =  real  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }  [BUGGY]    Complex  real  =  createComplex(real  +  addend.getReal());  imaginary  =  real  +  addend.getImaginary();  [BUGGY]  return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	    Complex  real  =  createComplex(real  +  addend.getReal());  imaginary  =  real  +  addend.getImaginary();		non-compiled	[CE]  illegal  start  of  expression	28	None	add
15	[BUG]  [BUGGY]  return  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getINF());  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }  [BUGGY]  return  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getINF());  [BUGGY]  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	return  createComplex(real  +  addend.getReal(),  imaginary  +  addend.getINF());	return  createComplex(real  +  addend.getReal(),    imaginary  +  addend.getImaginary());  	non-compiled	[CE]  not  a  statement	27	None	replace
16	[BUG]  [BUGGY]    Real  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }  [BUGGY]    Real  +  addend.getReal(),  imaginary  +  addend.getImaginary());  [BUGGY]  return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	    Real  +  addend.getReal(),  imaginary  +  addend.getImaginary());		non-compiled	[CE]  not  a  statement	28	None	add
17	[BUG]  [BUGGY]    Real  real  =  getReal();  imaginary  =  real.getImaginary();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }  [BUGGY]    Real  real  =  getReal();  imaginary  =  real.getImaginary();  [BUGGY]  return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	    Real  real  =  getReal();  imaginary  =  real.getImaginary();		non-compiled	[CE]  illegal  start  of  expression	28	None	add
18	[BUG]  [BUGGY]    Real  real  =  getReal();  imaginary  =  real  +  addend.getImaginary();  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  public  Complex  add(Complex  addend)  throws  NullArgumentException  {  MathUtils.checkNotNull(addend);  if  (isNaN  ||  addend.isNaN)  {  return  NaN;  }  [BUGGY]    Real  real  =  getReal();  imaginary  =  real  +  addend.getImaginary();  [BUGGY]  return  createComplex(real  +  addend.getReal(),        imaginary  +  addend.getImaginary());  imaginary  +  addend.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  addend  [VARIABLES]  boolean  isInfinite  isNaN  isZero  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.23570226039551587	164	165	2	replace	    Real  real  =  getReal();  imaginary  =  real  +  addend.getImaginary();		non-compiled	[CE]  illegal  start  of  expression	28	None	add
