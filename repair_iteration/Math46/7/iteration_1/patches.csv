bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(real  ==  c.real)&&  (imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return(real  ==  c.real)&&  (imaginary  ==  c.imaginary);  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return(real  ==  c.real)&&  (imaginary  ==  c.imaginary);	      	non-compiled	[CE]  not  a  statement	5	None	replace
2	[BUG]  [BUGGY]  return  c.isNaN  ||  c.isNaN;  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  c.isNaN  ||  c.isNaN;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ||  c.isNaN;	      	non-compiled	[CE]  not  a  statement	5	None	replace
3	[BUG]  [BUGGY]  if(c.isNaN)  {  return  true;  }  [CE]  not  a  statement  [FE]                    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  if(c.isNaN)  {  return  true;  }  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	if(c.isNaN)  {  return  true;  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
4	[BUG]  [BUGGY]  double  real  =  c.real  ||  c.imaginary!=  c.imaginary;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  c.real  ||  c.imaginary!=  c.imaginary;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  ||  c.imaginary!=  c.imaginary;	      double    real    =    c.real;    	non-compiled	[CE]  not  a  statement	11	None	replace
5	[BUG]  [BUGGY]  double  real  =  c.real  ||  c.imaginary  ==  c.imaginary;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  c.real  ||  c.imaginary  ==  c.imaginary;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  ||  c.imaginary  ==  c.imaginary;	      double    real    =    c.real;    	non-compiled	[CE]  not  a  statement	11	None	replace
6	[BUG]  [BUGGY]  double  real  =  c.real  ||  c.real;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  c.real  ||  c.real;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  ||  c.real;	      double    real    =    c.real;    	non-compiled	[CE]  not  a  statement	11	None	replace
7	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN()  ||  c.isZero();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.isNaN()  ||  c.isZero();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN()  ||  c.isZero();	      double    imaginary    =    c.isNaN();    	non-compiled	[CE]  not  a  statement	9	None	replace
8	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN()  ||  c.isInfinite();  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.isNaN()  ||  c.isInfinite();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN()  ||  c.isInfinite();	      double    imaginary    =    c.isNaN();    	non-compiled	[CE]  not  a  statement	9	None	replace
9	[BUG]  [BUGGY]  return  c.isNaN!=  isNaN;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  c.isNaN!=  isNaN;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN!=  isNaN;	  return    isNaN!=    c.isNaN;    	non-compiled	[CE]  not  a  statement	14	None	replace
10	[BUG]  [BUGGY]  return  isNaN  ==  other.isNaN;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isNaN  ==  other.isNaN;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  other.isNaN;	  return    isNaN!=    c.isNaN;    	non-compiled	[CE]  not  a  statement	14	None	replace
11	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN  ||  c.isZero;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.isNaN  ||  c.isZero;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN  ||  c.isZero;	      double    imaginary    =    c.isNaN    ||    c.isInfinite;    	non-compiled	[CE]  not  a  statement	7	None	replace
12	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN  &&  c.isInfinite;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.isNaN  &&  c.isInfinite;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN  &&  c.isInfinite;	      double    imaginary    =    c.isNaN    ||    c.isInfinite;    	non-compiled	[CE]  not  a  statement	7	None	replace
13	[BUG]  [BUGGY]  double  imaginary  =  c.isInfinite  ||  c.isNaN;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.isInfinite  ||  c.isNaN;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isInfinite  ||  c.isNaN;	      double    imaginary    =    c.isNaN    ||    c.isInfinite;    	non-compiled	[CE]  not  a  statement	7	None	replace
14	[BUG]  [BUGGY]  double  real  =  c.isNaN()  ||  c.isNaN();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  c.isNaN()  ||  c.isNaN();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN()  ||  c.isNaN();	      double    real    =    c.isNaN();    	non-compiled	[CE]  not  a  statement	6	None	replace
15	[BUG]  [BUGGY]  double  real  =  c.real();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  c.real();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real();	      double    real    =    c.isNaN();    	non-compiled	[CE]  not  a  statement	6	None	replace
16	[BUG]  [BUGGY]  double  real  =  c.isNaN()  ||  c.isZero();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  c.isNaN()  ||  c.isZero();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN()  ||  c.isZero();	      double    real    =    c.isNaN();    	non-compiled	[CE]  not  a  statement	6	None	replace
17	[BUG]  [BUGGY]  return  c.isNaN  ||  c.isInfinite;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  c.isNaN  ||  c.isInfinite;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ||  c.isInfinite;	  return    c.isNaN;    	non-compiled	[CE]  not  a  statement	3	None	replace
18	[BUG]  [BUGGY]  return  c.isNaN  ||  c.isZero;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  c.isNaN  ||  c.isZero;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ||  c.isZero;	  return    c.isNaN;    	non-compiled	[CE]  not  a  statement	3	None	replace
19	[BUG]  [BUGGY]  double  real  =  c.isNaN  ||  c.isZero;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  c.isNaN  ||  c.isZero;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN  ||  c.isZero;	      double    real    =    c.isNaN    ||    c.isInfinite;    	non-compiled	[CE]  not  a  statement	13	None	replace
20	[BUG]  [BUGGY]  double  real  =  c.isNaN  &&  c.isInfinite;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  c.isNaN  &&  c.isInfinite;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN  &&  c.isInfinite;	      double    real    =    c.isNaN    ||    c.isInfinite;    	non-compiled	[CE]  not  a  statement	13	None	replace
21	[BUG]  [BUGGY]  double  real  =  c.isInfinite  ||  c.isNaN;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  c.isInfinite  ||  c.isNaN;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isInfinite  ||  c.isNaN;	      double    real    =    c.isNaN    ||    c.isInfinite;    	non-compiled	[CE]  not  a  statement	13	None	replace
22	[BUG]  [BUGGY]  return  isInfinite  ==  c.isNaN  ||  isNaN  ==  c.infinite;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isInfinite  ==  c.isNaN  ||  isNaN  ==  c.infinite;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.isNaN  ||  isNaN  ==  c.infinite;	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	22	None	replace
23	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  &&  isInfinite  ==  c.infinite;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isNaN  ==  c.isNaN  &&  isInfinite  ==  c.infinite;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  &&  isInfinite  ==  c.infinite;	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	22	None	replace
24	[BUG]  [BUGGY]  return  isNaN  ==  other.isNaN  ||  isInfinite  ==  c.infinite;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isNaN  ==  other.isNaN  ||  isInfinite  ==  c.infinite;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  other.isNaN  ||  isInfinite  ==  c.infinite;	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	22	None	replace
25	[BUG]  [BUGGY]  double  imaginary  =  c.denominator;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.denominator;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.denominator;	      double    imaginary    =    c.real;    	non-compiled	[CE]  not  a  statement	19	None	replace
26	[BUG]  [BUGGY]  double  imaginary  =  other.real;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  other.real;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.real;	      double    imaginary    =    c.real;    	non-compiled	[CE]  not  a  statement	19	None	replace
27	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  &&  c.imaginary  ==  null;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.imaginary  &&  c.imaginary  ==  null;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  &&  c.imaginary  ==  null;	      double    imaginary    =    c.imaginary    ||    c.imaginary    ==    null;    	non-compiled	[CE]  not  a  statement	20	None	replace
28	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary!=  null;  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary!=  null;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  ||  c.imaginary!=  null;	      double    imaginary    =    c.imaginary    ||    c.imaginary    ==    null;    	non-compiled	[CE]  not  a  statement	20	None	replace
29	[BUG]  [BUGGY]  double  imaginary  =  c.real  ||  c.imaginary  ==  null;  [CE]  not  a  statement  [FE]                    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.real  ||  c.imaginary  ==  null;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.real  ||  c.imaginary  ==  null;	      double    imaginary    =    c.imaginary    ||    c.imaginary    ==    null;    	non-compiled	[CE]  not  a  statement	20	None	replace
30	[BUG]  [BUGGY]  double  imaginary  =  c.isInfinite()  ||  c.isZero();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.isInfinite()  ||  c.isZero();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isInfinite()  ||  c.isZero();	      double    imaginary    =    c.isInfinite();    	non-compiled	[CE]  not  a  statement	17	None	replace
31	[BUG]  [BUGGY]  double  imaginary  =  other.isInfinite();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  other.isInfinite();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.isInfinite();	      double    imaginary    =    c.isInfinite();    	non-compiled	[CE]  not  a  statement	17	None	replace
32	[BUG]  [BUGGY]  return  isNaN  ||  isZero;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isNaN  ||  isZero;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ||  isZero;	  return    isNaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	1	None	replace
33	[BUG]  [BUGGY]  return  isNaN  ||  c.isInfinite;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isNaN  ||  c.isInfinite;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ||  c.isInfinite;	  return    isNaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	1	None	replace
34	[BUG]  [BUGGY]  return  isNaN  &&  isInfinite;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isNaN  &&  isInfinite;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  &&  isInfinite;	  return    isNaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	1	None	replace
35	[BUG]  [BUGGY]  double  imaginary  =  other.infinite();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  other.infinite();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.infinite();	      double    imaginary    =    c.infinite();    	non-compiled	[CE]  not  a  statement	18	None	replace
36	[BUG]  [BUGGY]  double  imaginary  =  c.denominator.infinite();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.denominator.infinite();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.denominator.infinite();	      double    imaginary    =    c.infinite();    	non-compiled	[CE]  not  a  statement	18	None	replace
37	[BUG]  [BUGGY]  double  imaginary  =  c.infinite()  ||  c.infinite();  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.infinite()  ||  c.infinite();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.infinite()  ||  c.infinite();	      double    imaginary    =    c.infinite();    	non-compiled	[CE]  not  a  statement	18	None	replace
38	[BUG]  [BUGGY]  return  isInfinite  ==  c.isNaN  ||  isNaN  ==  c.isInfinite;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isInfinite  ==  c.isNaN  ||  isNaN  ==  c.isInfinite;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.isNaN  ||  isNaN  ==  c.isInfinite;	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	21	None	replace
39	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  &&  isInfinite  ==  c.isInfinite;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isNaN  ==  c.isNaN  &&  isInfinite  ==  c.isInfinite;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  &&  isInfinite  ==  c.isInfinite;	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	21	None	replace
40	[BUG]  [BUGGY]  return  isNaN  ==  other.isNaN  ||  isInfinite  ==  c.isInfinite;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isNaN  ==  other.isNaN  ||  isInfinite  ==  c.isInfinite;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  other.isNaN  ||  isInfinite  ==  c.isInfinite;	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	21	None	replace
41	[BUG]  [BUGGY]  double  real  =  other.getDivisor();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  other.getDivisor();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  other.getDivisor();	      double    real    =    c.getDivisor();    	non-compiled	[CE]  not  a  statement	8	None	replace
42	[BUG]  [BUGGY]  double  real  =  c.getDenominator();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  c.getDenominator();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.getDenominator();	      double    real    =    c.getDivisor();    	non-compiled	[CE]  not  a  statement	8	None	replace
43	[BUG]  [BUGGY]  double  real  =  c.getDivisor()  +  1;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  c.getDivisor()  +  1;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.getDivisor()  +  1;	      double    real    =    c.getDivisor();    	non-compiled	[CE]  not  a  statement	8	None	replace
44	[BUG]  [BUGGY]  return  isInfinite  ||  isZero;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isInfinite  ||  isZero;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ||  isZero;	  return    isInfinite    ||    isNaN;    	non-compiled	[CE]  not  a  statement	4	None	replace
45	[BUG]  [BUGGY]  return  isInfinite  ||  c.isNaN;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isInfinite  ||  c.isNaN;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ||  c.isNaN;	  return    isInfinite    ||    isNaN;    	non-compiled	[CE]  not  a  statement	4	None	replace
46	[BUG]  [BUGGY]  return  isInfinite  &&  isNaN;  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isInfinite  &&  isNaN;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  &&  isNaN;	  return    isInfinite    ||    isNaN;    	non-compiled	[CE]  not  a  statement	4	None	replace
47	[BUG]  [BUGGY]  double  imaginary  =  other.imaginary;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  other.imaginary;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  other.imaginary;	      double    imaginary    =    c.imaginary;    	non-compiled	[CE]  not  a  statement	16	None	replace
48	[BUG]  [BUGGY]  double  real  =  c.isNaN  &&  c.isZero();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  c.isNaN  &&  c.isZero();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN  &&  c.isZero();	      double    real    =    c.isNaN    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	12	None	replace
49	[BUG]  [BUGGY]  double  real  =  c.isNaN  ||  c.isInfinite();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  c.isNaN  ||  c.isInfinite();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN  ||  c.isInfinite();	      double    real    =    c.isNaN    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	12	None	replace
50	[BUG]  [BUGGY]  double  real  =  other.isNaN  ||  c.isZero();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  other.isNaN  ||  c.isZero();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  other.isNaN  ||  c.isZero();	      double    real    =    c.isNaN    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	12	None	replace
51	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN  &&  c.isZero();  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.isNaN  &&  c.isZero();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN  &&  c.isZero();	      double    imaginary    =    c.isNaN    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	10	None	replace
52	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN  ||  c.isInfinite();  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.isNaN  ||  c.isInfinite();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN  ||  c.isInfinite();	      double    imaginary    =    c.isNaN    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	10	None	replace
53	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN  ||  c.isDivisor();  [CE]  not  a  statement  [FE]                    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.isNaN  ||  c.isDivisor();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN  ||  c.isDivisor();	      double    imaginary    =    c.isNaN    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	10	None	replace
54	[BUG]  [BUGGY]  double  imaginary  =  c.isZero();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.isZero();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isZero();	      double    imaginary    =    c.isInfinite();    	non-compiled	[CE]  not  a  statement	17	None	replace
55	[BUG]  [BUGGY]  double  real  =  c.isNaN  ||  c.isDigits();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  c.isNaN  ||  c.isDigits();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN  ||  c.isDigits();	      double    real    =    c.isNaN    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	12	None	replace
56	[BUG]  [BUGGY]  return  real!=  c.isNaN;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  real!=  c.isNaN;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  real!=  c.isNaN;	  return    isNaN!=    c.isNaN;    	non-compiled	[CE]  not  a  statement	14	None	replace
57	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  ||  isNaN  ==  c.infinite;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isNaN  ==  c.isNaN  ||  isNaN  ==  c.infinite;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  ||  isNaN  ==  c.infinite;	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	22	None	replace
58	[BUG]  [BUGGY]  return  c.isNaN  ||  isInfinite  ==  c.infinite;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  c.isNaN  ||  isInfinite  ==  c.infinite;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ||  isInfinite  ==  c.infinite;	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	22	None	replace
59	[BUG]  [BUGGY]  return  isInfinite  ||  c.isZero;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isInfinite  ||  c.isZero;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ||  c.isZero;	  return    isInfinite    ||    isNaN;    	non-compiled	[CE]  not  a  statement	4	None	replace
60	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  ||  isInfinite;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isNaN  ==  c.isNaN  ||  isInfinite;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  ||  isInfinite;	  return    isNaN    >>    c.isNaN;    	non-compiled	[CE]  not  a  statement	15	None	replace
61	[BUG]  [BUGGY]  return  c.isNaN  >>  isNaN;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  c.isNaN  >>  isNaN;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  >>  isNaN;	  return    isNaN    >>    c.isNaN;    	non-compiled	[CE]  not  a  statement	15	None	replace
62	[BUG]  [BUGGY]  return  real  ==  c.isNaN;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  real  ==  c.isNaN;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  real  ==  c.isNaN;	  return    isNaN    >>    c.isNaN;    	non-compiled	[CE]  not  a  statement	15	None	replace
63	[BUG]  [BUGGY]  return  real  ==  c.real)&&  (imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  real  ==  c.real)&&  (imaginary  ==  c.imaginary);  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  real  ==  c.real)&&  (imaginary  ==  c.imaginary);	      	non-compiled	[CE]  not  a  statement	5	None	replace
64	[BUG]  [BUGGY]  return  isNaN  ||  c.isNaN;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isNaN  ||  c.isNaN;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ||  c.isNaN;	  return    isNaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	1	None	replace
65	[BUG]  [BUGGY]  double  real  =  c.real  ||  c.imaginary  >=  c.imaginary;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  c.real  ||  c.imaginary  >=  c.imaginary;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  ||  c.imaginary  >=  c.imaginary;	      double    real    =    c.real;    	non-compiled	[CE]  not  a  statement	11	None	replace
66	[BUG]  [BUGGY]  double  imaginary  =  c.infinite(denominator);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.infinite(denominator);  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.infinite(denominator);	      double    imaginary    =    c.infinite();    	non-compiled	[CE]  not  a  statement	18	None	replace
67	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.imaginary();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary();	      double    imaginary    =    c.infinite();    	non-compiled	[CE]  not  a  statement	18	None	replace
68	[BUG]  [BUGGY]  double  real  =  c.isNaN()  ||  c.isInfinite();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  c.isNaN()  ||  c.isInfinite();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isNaN()  ||  c.isInfinite();	      double    real    =    c.isNaN();    	non-compiled	[CE]  not  a  statement	6	None	replace
69	[BUG]  [BUGGY]  double  imaginary  =  c.real  ||  c.imaginary  ==  c.imaginary;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.real  ||  c.imaginary  ==  c.imaginary;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.real  ||  c.imaginary  ==  c.imaginary;	      double    imaginary    =    c.real;    	non-compiled	[CE]  not  a  statement	19	None	replace
70	[BUG]  [BUGGY]  double  imaginary  =  c.real  ||  c.imaginary!=  c.imaginary;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.real  ||  c.imaginary!=  c.imaginary;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.real  ||  c.imaginary!=  c.imaginary;	      double    imaginary    =    c.real;    	non-compiled	[CE]  not  a  statement	19	None	replace
71	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  ||  isZero  ==  c.isInfinite;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isNaN  ==  c.isNaN  ||  isZero  ==  c.isInfinite;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  ||  isZero  ==  c.isInfinite;	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	21	None	replace
72	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  +  1;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.imaginary  +  1;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  +  1;	      double    imaginary    =    c.imaginary;    	non-compiled	[CE]  not  a  statement	16	None	replace
73	[BUG]  [BUGGY]  return  c.isNaN  ==  isNaN;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  c.isNaN  ==  isNaN;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ==  isNaN;	  return    isNaN    ==    c.isNaN;    	non-compiled	[CE]  not  a  statement	2	None	replace
74	[BUG]  [BUGGY]  return  c.isNaN  ||  c.isVoid;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  c.isNaN  ||  c.isVoid;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ||  c.isVoid;	  return    c.isNaN;    	non-compiled	[CE]  not  a  statement	3	None	replace
75	[BUG]  [BUGGY]  return  c.isNaN  ||  c.isZero();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  c.isNaN  ||  c.isZero();  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ||  c.isZero();	  return    c.isNaN;    	non-compiled	[CE]  not  a  statement	3	None	replace
76	[BUG]  [BUGGY]  return  c.isNaN  >=  isNaN;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  c.isNaN  >=  isNaN;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  >=  isNaN;	  return    isNaN    >>    c.isNaN;    	non-compiled	[CE]  not  a  statement	15	None	replace
77	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary  ==  c.imaginary;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary  ==  c.imaginary;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  ||  c.imaginary  ==  c.imaginary;	      double    imaginary    =    c.imaginary;    	non-compiled	[CE]  not  a  statement	16	None	replace
78	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary!=  c.imaginary;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary!=  c.imaginary;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  ||  c.imaginary!=  c.imaginary;	      double    imaginary    =    c.imaginary;    	non-compiled	[CE]  not  a  statement	16	None	replace
79	[BUG]  [BUGGY]  return  isInfinite  ==  c.isNaN  ||  isInfinite  ==  c.isInfinite;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isInfinite  ==  c.isNaN  ||  isInfinite  ==  c.isInfinite;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.isNaN  ||  isInfinite  ==  c.isInfinite;	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	21	None	replace
80	[BUG]  [BUGGY]  return  c.isNaN  ||  isInfinite  ==  c.isInfinite;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  c.isNaN  ||  isInfinite  ==  c.isInfinite;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN  ||  isInfinite  ==  c.isInfinite;	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	21	None	replace
81	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  ||  isZero  ==  c.isZero;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isNaN  ==  c.isNaN  ||  isZero  ==  c.isZero;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  ||  isZero  ==  c.isZero;	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.isInfinite;    	non-compiled	[CE]  not  a  statement	21	None	replace
82	[BUG]  [BUGGY]  double  real  =  c.real.getDivisor();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  c.real.getDivisor();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real.getDivisor();	      double    real    =    c.getDivisor();    	non-compiled	[CE]  not  a  statement	8	None	replace
83	[BUG]  [BUGGY]  return  isInfinite  ==  c.isInfinite  ||  isNaN;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isInfinite  ==  c.isInfinite  ||  isNaN;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.isInfinite  ||  isNaN;	  return    isInfinite    ||    isNaN;    	non-compiled	[CE]  not  a  statement	4	None	replace
84	[BUG]  [BUGGY]  return  isInfinite  ==  c.isNaN;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isInfinite  ==  c.isNaN;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.isNaN;	  return    isInfinite    ||    isNaN;    	non-compiled	[CE]  not  a  statement	4	None	replace
85	[BUG]  [BUGGY]  double  real  =  c.isInfinite  ||  c.isInfinite;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  c.isInfinite  ||  c.isInfinite;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.isInfinite  ||  c.isInfinite;	      double    real    =    c.isNaN    ||    c.isInfinite;    	non-compiled	[CE]  not  a  statement	13	None	replace
86	[BUG]  [BUGGY]  return  isNaN  ==  c.isInfinite;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isNaN  ==  c.isInfinite;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isInfinite;	  return    isNaN    ||    isInfinite;    	non-compiled	[CE]  not  a  statement	1	None	replace
87	[BUG]  [BUGGY]  double  imaginary  =  c.isInfinite()  ||  c.isInfinite();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.isInfinite()  ||  c.isInfinite();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isInfinite()  ||  c.isInfinite();	      double    imaginary    =    c.isInfinite();    	non-compiled	[CE]  not  a  statement	17	None	replace
88	[BUG]  [BUGGY]  double  real  =  c.real  ||  c.imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  real  =  c.real  ||  c.imaginary  ==  c.imaginary);  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  real  =  c.real  ||  c.imaginary  ==  c.imaginary);	      double    real    =    c.real;    	non-compiled	[CE]  not  a  statement	11	None	replace
89	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN  ||  c.isImaginary();  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.isNaN  ||  c.isImaginary();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN  ||  c.isImaginary();	      double    imaginary    =    c.isNaN    ||    c.isZero();    	non-compiled	[CE]  not  a  statement	10	None	replace
90	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  ||  isZero  ==  c.infinite;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isNaN  ==  c.isNaN  ||  isZero  ==  c.infinite;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  ||  isZero  ==  c.infinite;	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	22	None	replace
91	[BUG]  [BUGGY]  return  isInfinite  ==  c.isNaN  ||  isInfinite  ==  c.infinite;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isInfinite  ==  c.isNaN  ||  isInfinite  ==  c.infinite;  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ==  c.isNaN  ||  isInfinite  ==  c.infinite;	  return    isNaN    ==    c.isNaN    ||    isInfinite    ==    c.infinite;    	non-compiled	[CE]  not  a  statement	22	None	replace
92	[BUG]  [BUGGY]  double  imaginary  =  c.isNaN  ||  c.imaginary;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.isNaN  ||  c.imaginary;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.isNaN  ||  c.imaginary;	      double    imaginary    =    c.isNaN    ||    c.isInfinite;    	non-compiled	[CE]  not  a  statement	7	None	replace
93	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ||  c.Imaginary  ==  null;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.imaginary  ||  c.Imaginary  ==  null;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary  ||  c.Imaginary  ==  null;	      double    imaginary    =    c.imaginary    ||    c.imaginary    ==    null;    	non-compiled	[CE]  not  a  statement	20	None	replace
94	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary.isNaN();  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.imaginary.isNaN();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary.isNaN();	      double    imaginary    =    c.isNaN();    	non-compiled	[CE]  not  a  statement	9	None	replace
95	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  ||  isInfinite  ==  c.isInfinite);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return  isNaN  ==  c.isNaN  ||  isInfinite  ==  c.isInfinite);  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  ||  isInfinite  ==  c.isInfinite);	  return    isNaN    ==    c.isNaN;    	non-compiled	[CE]  not  a  statement	2	None	replace
96	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary.infinite();  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.imaginary.infinite();  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.imaginary.infinite();	      double    imaginary    =    c.infinite();    	non-compiled	[CE]  not  a  statement	18	None	replace
97	[BUG]  [BUGGY]  double  imaginary  =  c.infinite()  ||  c.infinite()!=  denominator;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.infinite()  ||  c.infinite()!=  denominator;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.infinite()  ||  c.infinite()!=  denominator;	      double    imaginary    =    c.infinite();    	non-compiled	[CE]  not  a  statement	18	None	replace
98	[BUG]  [BUGGY]  double  imaginary  =  c.infinite()  ||  c.infinite()  ==  denominator;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  double  imaginary  =  c.infinite()  ||  c.infinite()  ==  denominator;  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	double  imaginary  =  c.infinite()  ||  c.infinite()  ==  denominator;	      double    imaginary    =    c.infinite();    	non-compiled	[CE]  not  a  statement	18	None	replace
99	[BUG]  [BUGGY]  return(c.isNaN  ||  c.isNaN)&&(imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {    [BUGGY]  return(c.isNaN  ||  c.isNaN)&&(imaginary  ==  c.imaginary);  [BUGGY]    }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return(c.isNaN  ||  c.isNaN)&&(imaginary  ==  c.imaginary);	      	non-compiled	[CE]  not  a  statement	5	None	replace
