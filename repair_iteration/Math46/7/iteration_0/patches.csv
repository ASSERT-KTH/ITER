bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  isNaN  ||  isInfinite;  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]  return  isNaN  ||  isInfinite;  [BUGGY]  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ||  isInfinite;	return  isNaN;  	non-compiled	[CE]  not  a  statement	13	None	replace
2	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN;  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]  return  isNaN  ==  c.isNaN;  [BUGGY]  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN;	return  isNaN;  	non-compiled	[CE]  not  a  statement	13	None	replace
3	[BUG]  [BUGGY]  return  c.isNaN;  [CE]  not  a  statement  [FE]        AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]  return  c.isNaN;  [BUGGY]  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  c.isNaN;	return  isNaN;  	non-compiled	[CE]  not  a  statement	13	None	replace
4	[BUG]  [BUGGY]  return  isInfinite  ||  isNaN;  [CE]  not  a  statement  [FE]          AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]  return  isInfinite  ||  isNaN;  [BUGGY]  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isInfinite  ||  isNaN;	return  isNaN;  	non-compiled	[CE]  not  a  statement	13	None	replace
5	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]            AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]    [BUGGY]  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	  	return  isNaN;  	non-compiled	[CE]  not  a  statement	13	None	replace
6	[BUG]  [BUGGY]    double  real  =  c.isNaN();  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]    double  real  =  c.isNaN();  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	    double  real  =  c.isNaN();		non-compiled	[CE]  not  a  statement	14	None	add
7	[BUG]  [BUGGY]    double  imaginary  =  c.isNaN  ||  c.isInfinite;  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]    double  imaginary  =  c.isNaN  ||  c.isInfinite;  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	    double  imaginary  =  c.isNaN  ||  c.isInfinite;		non-compiled	[CE]  not  a  statement	14	None	add
8	[BUG]  [BUGGY]    double  real  =  c.getDivisor();  [CE]  not  a  statement  [FE]        AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]    double  real  =  c.getDivisor();  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	    double  real  =  c.getDivisor();		non-compiled	[CE]  not  a  statement	14	None	add
9	[BUG]  [BUGGY]    double  imaginary  =  c.isNaN();  [CE]  not  a  statement  [FE]          AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]    double  imaginary  =  c.isNaN();  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	    double  imaginary  =  c.isNaN();		non-compiled	[CE]  not  a  statement	14	None	add
10	[BUG]  [BUGGY]    double  imaginary  =  c.isNaN  ||  c.isZero();  [CE]  not  a  statement  [FE]            AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]    double  imaginary  =  c.isNaN  ||  c.isZero();  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	    double  imaginary  =  c.isNaN  ||  c.isZero();		non-compiled	[CE]  not  a  statement	14	None	add
11	[BUG]  [BUGGY]    double  real  =  c.real;  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]    double  real  =  c.real;  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	    double  real  =  c.real;		non-compiled	[CE]  not  a  statement	14	None	add
12	[BUG]  [BUGGY]    double  real  =  c.isNaN  ||  c.isZero();  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]    double  real  =  c.isNaN  ||  c.isZero();  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	    double  real  =  c.isNaN  ||  c.isZero();		non-compiled	[CE]  not  a  statement	14	None	add
13	[BUG]  [BUGGY]    double  real  =  c.isNaN  ||  c.isInfinite;  [CE]  not  a  statement  [FE]        AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]    double  real  =  c.isNaN  ||  c.isInfinite;  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	    double  real  =  c.isNaN  ||  c.isInfinite;		non-compiled	[CE]  not  a  statement	14	None	add
14	[BUG]  [BUGGY]  return  isNaN!=  c.isNaN;  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]  return  isNaN!=  c.isNaN;  [BUGGY]  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN!=  c.isNaN;	return  isNaN;  	non-compiled	[CE]  not  a  statement	13	None	replace
15	[BUG]  [BUGGY]  return  isNaN  >>  c.isNaN;  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]  return  isNaN  >>  c.isNaN;  [BUGGY]  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  >>  c.isNaN;	return  isNaN;  	non-compiled	[CE]  not  a  statement	13	None	replace
16	[BUG]  [BUGGY]    double  imaginary  =  c.imaginary;  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]    double  imaginary  =  c.imaginary;  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	    double  imaginary  =  c.imaginary;		non-compiled	[CE]  not  a  statement	14	None	add
17	[BUG]  [BUGGY]    double  imaginary  =  c.isInfinite();  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]    double  imaginary  =  c.isInfinite();  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	    double  imaginary  =  c.isInfinite();		non-compiled	[CE]  not  a  statement	14	None	add
18	[BUG]  [BUGGY]    double  imaginary  =  c.infinite();  [CE]  not  a  statement  [FE]        AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]    double  imaginary  =  c.infinite();  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	    double  imaginary  =  c.infinite();		non-compiled	[CE]  not  a  statement	14	None	add
19	[BUG]  [BUGGY]    double  imaginary  =  c.real;  [CE]  not  a  statement  [FE]          AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]    double  imaginary  =  c.real;  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	    double  imaginary  =  c.real;		non-compiled	[CE]  not  a  statement	14	None	add
20	[BUG]  [BUGGY]    double  imaginary  =  c.imaginary  ||  c.imaginary  ==  null;  [CE]  not  a  statement  [FE]            AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]    double  imaginary  =  c.imaginary  ||  c.imaginary  ==  null;  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	    double  imaginary  =  c.imaginary  ||  c.imaginary  ==  null;		non-compiled	[CE]  not  a  statement	14	None	add
21	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  ||  isInfinite  ==  c.isInfinite;  [CE]  not  a  statement  [FE]    AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]  return  isNaN  ==  c.isNaN  ||  isInfinite  ==  c.isInfinite;  [BUGGY]  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  ||  isInfinite  ==  c.isInfinite;	return  isNaN;  	non-compiled	[CE]  not  a  statement	13	None	replace
22	[BUG]  [BUGGY]  return  isNaN  ==  c.isNaN  ||  isInfinite  ==  c.infinite;  [CE]  not  a  statement  [FE]      AssertionError  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  [BUGGY]  return  isNaN  ==  c.isNaN  ||  isInfinite  ==  c.infinite;  [BUGGY]  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  isZero  double  addend  c  d  denominator  divisor  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math46/src/main/java/org/apache/commons/math/complex/Complex.java	0.35355339059327373	329	329	2	replace	return  isNaN  ==  c.isNaN  ||  isInfinite  ==  c.infinite;	return  isNaN;  	non-compiled	[CE]  not  a  statement	13	None	replace
